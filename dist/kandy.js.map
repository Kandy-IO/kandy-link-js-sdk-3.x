{"version":3,"sources":["webpack://Kandy/webpack/universalModuleDefinition","webpack://Kandy/webpack/bootstrap","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/io-6de156f3.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/is/dist/redux-saga-is.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/helpers/extends.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_core.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/json/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isFunction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isSymbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isEmpty.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/toString.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isString.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/combineActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/identity.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isNull.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isPlainObject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isArray.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isNil.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/getLastElement.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/camelCase.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/arrayToObject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/ownKeys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/get.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenWhenNode.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenActionMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/unflattenActionCreators.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createCurriedAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isUndefined.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/handleAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/reduce-reducers/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/hasGeneratorInterface.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenReducerMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/handleActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_export.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_global.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/errors/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_descriptors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/invariant/browser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-dp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/effects.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_ctx.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_hide.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_an-object.js","webpack://Kandy/(webpack)/buildin/global.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_fails.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_has.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-iobject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/validation/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/errors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_a-function.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_property-desc.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_cof.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_library.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-pie.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iterators.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-to-string-tag.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_for-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-length.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_uid.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.string.iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/version.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_meta.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/model/webRtcAdaptorModel.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/node_modules/redux/es/redux.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_dom-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-primitive.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iobject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_defined.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-integer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_shared-key.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_shared.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gops.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/helpers/objectWithoutProperties.js","webpack://Kandy/(webpack)/buildin/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/web.dom.iterable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_classof.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_an-instance.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_new-promise-capability.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_redefine-all.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-sap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks-ext.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/validation.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/rng.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/regex.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/validate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v1.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/parse.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v35.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/md5.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v3.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v4.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/sha1.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v5.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/nil.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/version.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/symbol-observable/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-camel-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-keys-internal.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/compose/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/function.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_redefine.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-dps.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_html.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gpo.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-step.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-array-iter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/core.get-iterator-method.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_species-constructor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_task.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_perform.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_promise-resolve.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-species.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-detect.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/symbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopn.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logFormatter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/config.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_validate-collection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/name.js","webpack://Kandy/(webpack)/buildin/amd-options.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_Symbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/lib/base64.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/grammar.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actions/calls.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/requests.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux/es/redux.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/symbol-observable/es/ponyfill.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/just-curry-it/index.js","webpack://Kandy/./index.js","webpack://Kandy/../core/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/factory.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-includes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-absolute-index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-devtools-extension/index.js","webpack://Kandy/(webpack)/buildin/harmony-module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/lodash.min.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/_baseConvert.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/_mapping.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/placeholder.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/stamp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/composable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/core/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/core/merge.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/plain-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_string-at.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.array.iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_add-to-unscopables.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_invoke.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_microtask.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_user-agent.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.promise.finally.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.promise.try.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/query-string/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/strict-uri-encode/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/decode-uri-component/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/split-on-first/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/filter-obj/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.object.values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-to-array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/symbol/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.symbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_enum-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopn-ext.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopd.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.symbol.observable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/timer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logHandler.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/actionHandler.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/json/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/v8n/dist/v8n.esm.js","webpack://Kandy/../core/basePlugins.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/plugin.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-space-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-no-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection-strong.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-methods.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-species-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-species-constructor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection-to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-from-iterable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-collection-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-collection-from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/transformers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-logger/dist/redux-logger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/array/from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/array/from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.array.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_create-property.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/symbol/iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/symbol/iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/docs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/configs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/eventEmitter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/oldLink/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/jwt-decode/build/jwt-decode.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/oldLink/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/errors/codes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/subscription/requests.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/subscription/services.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/effects.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/base-64/base64.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/utf8/utf8.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/oldLink/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/oldLink/callShim.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/next.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/bottlejs/dist/bottle.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/loadModule.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/logmanager/logManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/config.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/cache.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdpparser/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/challenge.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/once.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/before.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/toInteger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/toFinite.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/toNumber.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_baseTrim.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_trimmedEndIndex.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/isObject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/isSymbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_baseGetTag.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_root.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_freeGlobal.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_getRawTag.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/_objectToString.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/isObjectLike.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/promiscuous/promiscuous.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/timers-browserify/main.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/setimmediate/setImmediate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/process/browser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/core.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/locale.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/http/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/http/http.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/http/xhr.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/globalbroadcaster/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/globalbroadcaster/globalBroadcaster.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/turncredentials/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/turncredentials/turnCredentialsManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdp/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdp/pipeline.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdp/parser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/parser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/writer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdp/logger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdp/bundleHandler.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/rcc/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/rcc/rccFsm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/rcc/rccManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/rcc/wamrcc.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/wam/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/wam/callFsm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/wam/callManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/wam/wamcall.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/call/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcAdaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcChromeAdaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcContainerAdaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcFirefoxAdaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcFirefoxEsrAdaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcPluginAdaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcPluginv22Adaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/adaptor/webRtcPluginv31Adaptor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/decorator/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/decorator/webRtcLibraryDecorator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/decorator/webRtcLibraryChromeDecorator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/decorator/webRtcLibraryFirefoxDecorator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/model/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/utils/map.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/model/webRtcChromeAdaptorModel.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/model/webRtcFirefoxAdaptorModel.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/model/webRtcPluginAdaptorModel.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/webRtcManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/webrtc/webRtcAdaptorFactory.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/oldLink/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actions/localVideo.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actions/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actions/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/actions/audioBridge.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/mediaDevices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/normalization.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/reducers/calls.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/reducers/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/reducers/localVideo.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/reducers/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/reducers/audioBridges.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/sagas/server.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/sagas/client.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callHistory/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/clickToCall/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/base.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/websocket.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/link/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actions/messages.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/actions/conversations.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/predicates.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/interface/mixins.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/mwi/link/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/sagas/pushRegistration.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/link/sagas/notification.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/node_modules/pako/dist/pako.esm.mjs","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/link/requests.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/reducer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/sipEvents/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/link.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/configs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/makeRequest.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/authorization.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/docs/docs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/fcs/src/js/sdp/codecRemover.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@kandy-io/sdp-handlers/src/codecRemover.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@kandy-io/sdp-handlers/src/index.js"],"names":["API_LOG_TAG","manager","defaultOptions","logManager","getAuthConfig","getSubscriptionInfo","getConnectionInfo","getDomain","getIdentity","getUserInfo","getAuthScenario","getServices","getPlatform","getRequestInfo","state","config","authentication","platform","subscription","undefined","connection","username","identity","domain","split","userInfo","isSSO","servicesInfo","requested","received","missing","status","SUBSCRIPTION_STATE","NONE","services","clientCorrelator","server","protocol","base","port","version","requestInfo","platforms","CPAAS","baseURL","token","accessToken","options","headers","Accept","Authorization","UC","LINK","setPlatform","connInfo","requestOptions","notificationTypes","WEBSOCKET","PUSH","connCheckResponsibility","CLIENT","SERVER","connCheckMethods","KEEP_ALIVE","PING_PONG","mapEvents","on","off","subscribe","unsubscribe","emitEvent","aliasEvent","actionTypes","mapping","type","MAP_EVENTS","payload","listener","EVENTS_ON","eventType","EVENTS_OFF","EVENTS_SUBSCRIBE","EVENTS_UNSUBSCRIBE","args","Error","EVENTS_EMIT","alias","EVENTS_ALIAS","getProperty","compose","getTimestamp","parseAddress","getInteger","Queue","serialize","extend","always","Utils","makeSafeForCSS","obj","property","extendme","prop","bind","Date","getTime","address","contact","displayName","indexOf","replace","firstName","lastName","val","isNaN","parseInt","items","enqueue","item","push","dequeue","shift","peek","size","length","object","encodedString","hasOwnProperty","encodeURI","target","promise","handler","then","param","resolve","error","LogManager","_logManager","logger","callFunctionIfExist","getLogger","Array","prototype","slice","call","arguments","func","apply","e","message","stack","name","s","c","charCodeAt","toLowerCase","toString","mergeValues","toQueryString","autoRestart","forwardAction","normalizeServices","defer","objects","leftValue","rightValue","params","stringifiedParams","paramParser","stringify","saga","autoRestarting","shouldRestart","console","log","action","map","service","d","reject","authCodes","callCodes","callHistoryCodes","groupsCodes","messagingCodes","mwiCodes","sipEventCodes","clickToCallCodes","bridgeCodes","subscriptionCodes","presenceCodes","usersCodes","webrtcCodes","BasicError","constructor","code","NOT_FOUND","SEND_RECEIVE","SEND_ONLY","RECEIVE_ONLY","INACTIVE","STABLE","HAVE_LOCAL_OFFER","HAVE_REMOTE_OFFER","HAVE_LOCAL_PRANSWER","HAVE_REMOTE_PRANSWER","CLOSED","SDP","TYPE","OPERATION","STEP","BUNDLE_POLICY","MAX_COMPAT","MAX_BUNDLE","BALANCED","DISABLED","PREFIX","MAKE_CALL","MAKE_CALL_FINISH","CALL_INCOMING","ANSWER_CALL","ANSWER_CALL_FINISH","IGNORE_CALL","IGNORE_CALL_FINISH","REJECT_CALL","REJECT_CALL_FINISH","END_CALL","END_CALL_FINISH","CALL_STATE_CHANGE","CALL_MEDIA_STATE_CHANGE","START_LOCAL_VIDEO","START_LOCAL_VIDEO_FINISH","STOP_LOCAL_VIDEO","STOP_LOCAL_VIDEO_FINISH","MUTE_CALL","MUTE_CALL_FINISH","UNMUTE_CALL","UNMUTE_CALL_FINISH","SILENCE_CALL","SILENCE_CALL_FINISH","UNSILENCE_CALL","UNSILENCE_CALL_FINISH","SET_CUSTOM_PARAMETERS","START_VIDEO","START_VIDEO_FINISH","STOP_VIDEO","STOP_VIDEO_FINISH","HOLD_CALL","HOLD_CALL_FINISH","UNHOLD_CALL","UNHOLD_CALL_FINISH","START_SCREENSHARE","START_SCREENSHARE_FINISH","STOP_SCREENSHARE","STOP_SCREENSHARE_FINISH","FORWARD_CALL","FORWARD_CALL_FINISH","DIRECT_TRANSFER","DIRECT_TRANSFER_FINISH","CONSULTATIVE_TRANSFER","CONSULTATIVE_TRANSFER_FINISH","JOIN_CALL","JOIN_CALL_FINISH","SEND_CUSTOM_PARAMETERS","SEND_CUSTOM_PARAMETERS_FINISH","SEND_DTMF","SEND_DTMF_FINISH","CHECK_DEVICES","CHECK_DEVICES_FINISH","SET_DEFAULT_DEVICES","SET_DEFAULT_DEVICES_FINISH","PROMPT_USER_MEDIA","PROMPT_USER_MEDIA_FINISH","CHANGE_SPEAKER","CHANGE_SPEAKER_FINISH","CHANGE_INPUT_DEVICES","CHANGE_INPUT_DEVICES_FINISH","INIT_MEDIA","INIT_MEDIA_FINISH","MAKE_CALL_ANONYMOUS","CREATE_AUDIO_BRIDGE","CREATE_AUDIO_BRIDGE_FINISH","CLOSE_AUDIO_BRIDGE","CLOSE_AUDIO_BRIDGE_FINISH","BRIDGE_ADD_CALL","BRIDGE_ADD_CALL_FINISH","BRIDGE_REMOVE_CALL","BRIDGE_REMOVE_CALL_FINISH","MUTE_AUDIO_BRIDGE","MUTE_AUDIO_BRIDGE_FINISH","UNMUTE_AUDIO_BRIDGE","UNMUTE_AUDIO_BRIDGE_FINISH","SILENCE_AUDIO_BRIDGE","SILENCE_AUDIO_BRIDGE_FINISH","UNSILENCE_AUDIO_BRIDGE","UNSILENCE_AUDIO_BRIDGE_FINISH","UPDATE_AUDIO_BRIDGE_CALLS","prefix","PROCESS_NOTIFICATION","PROCESS_NOTIFICATION_FINISH","NOTIFICATION_RECEIVED","ENABLE_NOTIFICATION_CHANNEL","ENABLE_NOTIFICATION_CHANNEL_FINISH","REGISTER_APPLE_PUSH_NOTIFICATION","REGISTER_ANDROID_PUSH_NOTIFICATION","UNREGISTER_APPLE_PUSH_NOTIFICATION","UNREGISTER_ANDROID_PUSH_NOTIFICATION","request","requestSaga","actions","commonOptions","manualOptions","getCommonOptions","url","requestAction","responseAction","RESPONSE","meta","requestId","update","setSdpHandlers","values","pluginName","CONFIG_UPDATE","sdpHandlers","removeH264Codecs","sanitizeSdesFromSdp","modifySdpBandwidth","SET_SDP_HANDLERS","WS_ATTEMPT_CONNECT","WS_CONNECT_FINISHED","WS_DISCONNECT","WS_DISCONNECT_FINISHED","WS_RECONNECT_FAILED","WS_CLOSED","WS_ERROR","LOST_CONNECTION","RECEIVE_SERVER_PING","RECEIVE_SERVER_PONG","CHANGE_CONNECTIVITY_CHECKING","CHANGE_PING_INTERVAL","CallImpl","mediaErrors","NOT_ALLOWED","OPTIONS","WRONG_VERSION","NOT_INITIALIZED","NEW_VERSION_WARNING","INVALID_PARAMETER","NO_SCREENSHARING_WARNING","CallManager","_callManager","RccManager","_rccManager","localVideoState","remoteVideoState","onReceived","onCallReplaceReceived","onOutgoingCall","setOnMonitorSessionLost","callback","initMedia","onSuccess","onFailure","startCall","from","to","isVideoEnabled","sendInitialVideo","videoResolution","serviceName","start","startMonitorDevice","deviceID","stopMonitorDevice","getRCCDeviceList","getDeviceList","set_logSeverityLevel","level","enable_logCallback","disable_logCallback","get_audioInDeviceCount","get_audioOutDeviceCount","get_videoDeviceCount","hasVideoDevice","hasAudioDevice","getUserMedia","privateStream","showSettingsWindow","getLocalVideoResolutions","getRemoteVideoResolutions","isPluginEnabled","hasGotCalls","getIncomingCallById","id","callid","createStreamRenderer","stream","container","disposeStreamRenderer","createLocalAudioBridge","States","IN_CALL","ON_HOLD","RINGING","ENDED","REJECTED","OUTGOING","INCOMING","ANSWERING","JOINED","RENEGOTIATION","TRANSFERRED","ON_REMOTE_HOLD","CALL_IN_PROGRESS","EARLY_MEDIA","TRANSFER_FAILURE","REPLACING","MediaStates","NEW","CHECKING","CONNECTED","COMPLETED","FAILED","DISCONNECTED","HoldStates","LOCAL_HOLD","REMOTE_HOLD","BOTH_HOLD","LOCAL_STATUS_CODES","STATUS_CODE_NOT_PROVIDED","ENDED_BY_LOCAL","REJECTED_BY_LOCAL","IGNORED_BY_LOCAL","RESPONDED_FROM_ANOTHER_DEVICE","SESSION_COMPLETED","LOCAL_REASON_TEXTS","MediaErrors","clickToCall","callingParty","calledParty","getIMRN","realm","source","destination","getStreamById","streamId","removeStreamById","setSelectedMicrophoneId","microphoneId","setSelectedCameraId","cameraId","setSelectedSpeakerId","speakerId","getCameraList","getMicrophoneList","getSpeakerList","changeDevices","changeSpeaker","setOnMonitorSessionRefreshed","setOnMonitorSessionTerminated","IncomingCall","OutgoingCall","LocalAudioBridge","ADD_CONTACT","ADD_CONTACT_FINISH","REFRESH_CONTACTS","REFRESH_CONTACTS_FINISH","REMOVE_CONTACT","REMOVE_CONTACT_FINISH","UPDATE_CONTACT","UPDATE_CONTACT_FINISH","FETCH_CONTACT","FETCH_CONTACT_FINISH","FETCH_USER","FETCH_USER_FINISH","FETCH_SELF_INFO","FETCH_SELF_INFO_FINISH","SEARCH_DIRECTORY","SEARCH_DIRECTORY_FINISH","v8n","function","value","validation","enums","v8nExact","exact","exactValues","passesAnyOf","errorMessages","v8nRule","input","validationErrorMessages","validationResults","testAll","parse","errors","info","prettyPrint","validationError","startingPath","validationErrorMessageHelper","acc","cause","rule","path","newVEM","ruleMessage","enumName","join","aOrAn","arg","chain","__","string","test","NETWORK","AUTH","STATE","PRIV","UNKNOWN","LOGIN_LIMIT_CLIENT","INCORRECT_LOGIN_PASS","INVALID_LOGIN","FORCE_LOGOUT_ERROR","LOGIN_LIMIT_TABLET","TOKEN_NOT_FOUND","SESSION_EXPIRED","VIDEO_SESSION_NOT_AVAILABLE","PENDING_REQUEST","NOT_ALLOWED_SERVICE","NOT_ALLOWED_METHOD","NOT_ALLOWED_INSTANCE","CONNECTION_ISSUE","MEDIA_NOT_FOUND","MEDIA_NOT_ALLOWED","CALL_FAILED","CALL_ENDED","MAXIMUM_ENTRIES","ENTRY_ALREADY_EXISTS","SERVICE_NOT_AUTHORIZED","DB_EXCEPTION","INSUFFICIENT_INFO","INTERNAL_SERVER_ERROR","SERVICE_UNAVAILABLE","SESSION_NOT_FOUND","CANNOT_SUBSCRIBE","MEDIA_REQUIRED","mapValuesToKeys","FCS_CALL_STATES","CALL_STATES_FCS","CALL_STATES","INITIATING","INITIATED","CANCELLED","CALL_MEDIA_STATES","DUAL_HOLD","CALL_MEDIA_CONNECTION_STATES","OPERATIONS","CHANGE_MEDIA","HOLD_MEDIA","UNHOLD_MEDIA","MUSIC_ON_HOLD","COMPLEX_OPERATIONS","JOIN","COMPLEX_OPERATION_MESSAGES","DIRECT_TRANSFER_SUCCESS","CONSULTATIVE_TRANSFER_SUCCESS","JOIN_SUCCESS","DIRECT_TRANSFER_FAILURE","CONSULTATIVE_TRANSFER_FAILURE","JOIN_FAILURE","STATUS_CODES","CALL_DIRECTION","WEBRTC_DEVICE_KINDS","audioinput","videoinput","audiooutput","FCS_ICE_MEDIA_STATES","ICE_MEDIA_STATES","logLevels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","levelValues","logMethods","trace","debug","warn","group","groupEnd","groupCollapsed","timeLevel","CONNECT","SET_CONNECTION_INFO","CONNECTION_OCCURRED","CONNECT_FINISHED","GET_USER_DETAILS","USER_DETAILS_RECEIVED","DISCONNECT","DISCONNECT_FINISHED","RESUBSCRIPTION_FINISHED","REFRESH_TOKENS","REFRESH_TOKENS_FINISHED","UPDATE_SUBSCRIPTION","UPDATE_SUBSCRIPTION_FINISH","SET_TOKEN","SET_CREDENTIALS","SET_CREDENTIALS_FINISH","AUTHORIZATION_ERROR","UPDATE_HMAC_TOKEN","CREATE_CONVERSATION","SEND_MESSAGE","SEND_MESSAGE_FINISH","MESSAGE_RECEIVED","INCOMING_MESSAGE_READ","SEND_MESSAGE_READ","SEND_MESSAGE_READ_FINISH","CLEAR_MESSAGES","CLEAR_MESSAGES_FINISH","DELETE_CONVERSATION","DELETE_CONVERSATION_FINISH","DELETE_MESSAGE","DELETE_MESSAGE_FINISH","FETCH_CONVERSATIONS","FETCH_CONVERSATIONS_FINISHED","UPDATE_CONVERSATION","FETCH_MESSAGES","FETCH_MESSAGES_FINISHED","FILE_UPLOAD_FAIL","getVersion","FULL","PARTIAL","DISCONNECT_REASONS","GONE","REQUEST","getCpaasAgentHeaderValue","sanitizeRequest","fetchResource","useCustomHeader","injectAgentVersionHeader","customSuffix","customAgentVersionHeaderSuffix","headerValue","includes","logOptions","authHeader","substring","body","JSON","resource","module","charAt","queryParams","queryString","response","fetch","createWsAction","isReconnect","wsAttemptConnect","wsDisconnect","wsConnectFinished","wsDisconnectFinished","wsReconnectFailed","wsClosed","wsError","lostConnection","receiveServerPing","receiveServerPong","changeConnectivityChecking","changePingInterval","getConnectionState","getConnectivityConfig","getPingInterval","getCheckConnectivity","pingInterval","checkConnectivity","WebRtcAdaptorModel","self","dtlsEnabled","dscpEnabled","iceServerUrl","containers","video","localVideo","remoteVideo","defaultVideo","mediaSources","available","audio","screen","width","height","rate","stats","initialized","rtcLibrary","language","logLevel","peerCount","pluginEnabled","h264Enabled","screenStream","localStreamMap","Map","privateStreamMap","localMedia","selectedMicrophoneId","selectedSpeakerId","selectedCameraId","mediaSourceList","getLocalMedia","setLocalMedia","media","getLocalStreamMap","getScreenStream","setScreenStream","isH264Enabled","setH264Enabled","enabled","getIceServerUrl","setIceServerUrl","isDtlsEnabled","setDtlsEnabled","isDscpEnabled","setDscpEnabled","getVideoContainer","setVideoContainer","getLocalVideoContainer","setLocalVideoContainer","getRemoteVideoContainer","setRemoteVideoContainer","getDefaultVideoContainer","setDefaultVideoContainer","isInitialized","setInitialized","getRtcLibrary","setRtcLibrary","library","getLogLevel","setLogLevel","getLanguage","setLanguage","lang","getVideoWidth","setVideoWidth","_videoWidth","getVideoHeight","setVideoHeight","_videoHeight","getVideoSourceAvailable","setVideoSourceAvailable","_videoSourceAvailable","getAudioSourceAvailable","setAudioSourceAvailable","_audioSourceAvailable","setMediaSources","mediaSourceInfo","videoSourceAvailable","audioSourceAvailable","setScreenSourceAvailable","screenSourceAvailable","setMediaSourceList","sourceList","getScreenSourceAvailable","getScreenWidth","setScreenWidth","_screenWidth","getScreenHeight","setScreenHeight","_screenHeight","getScreenFrameRate","setScreenFrameRate","_screenRate","getPeerCount","setPeerCount","_peerCount","setPluginEnabled","_isPluginEnabled","_selectedMicrophoneId","getSelectedMicrophoneId","_selectedSpeakerId","getSelectedSpeakerId","_selectedCameraId","getSelectedCameraId","get","removeStreamFromMap","remove","getPrivateStreamMap","_mediaSourceList","getMediaSourceList","getStats","setStats","_stats","getUserMediaContraints","FETCH_CALL_HISTORY","FETCH_CALL_HISTORY_FINISH","DELETE_CALL_HISTORY","DELETE_CALL_HISTORY_FINISH","ADD_CALL_HISTORY_ENTRY","SET_CACHE","CLICK_TO_CALL","CLICK_TO_CALL_FINISH","MWI_UPDATE","FETCH_MWI","UPDATE","UPDATE_FINISH","GET","GET_FINISH","SUBSCRIBE","SUBSCRIBE_FINISH","UNSUBSCRIBE","UNSUBSCRIBE_FINISH","RECEIVED","CREATE_PRESENCE_LIST","CREATE_PRESENCE_LIST_FINISH","DELETE_PRESENCE_LIST","GET_PRESENCE_LIST","SIP_EVENT_SUBSCRIBE","SIP_EVENT_SUBSCRIBE_FINISH","SIP_EVENT_UPDATE","SIP_EVENT_UPDATE_FINISH","SIP_EVENT_UNSUBSCRIBE","SIP_EVENT_UNSUBSCRIBE_FINISH","SIP_EVENT_RECEIVED","checkLevel","checkHandler","upperLevel","toUpperCase","setLevel","levelsChanged","setHandler","handlersChanged","SET_LEVEL","levelMap","LEVELS_CHANGE","SET_HANDLER","handlerMap","HANDLERS_CHANGE","localVideoActionsImport","mediaActionsImport","devicesActionsImport","callsActionsImport","audioBridgeActionsImport","localVideoActions","mediaActions","devicesActions","callsActions","audioBridgeActions","getCallConfig","getCalls","getCallById","getCustomParametersById","getDevices","getMediaInfo","getAudioBridges","getBridgeCalls","calls","callId","customParameters","devices","audioBridges","bridgeId","bridge","retrieveCallLogs","retrieveCallLogsFinish","removeCallLogs","removeCallLogsFinish","addCallLogEntry","setCache","amount","offset","logs","recordId","logEntry","data","websocketNotification","externalNotification","notificationReceived","processNotificationFinish","enableNotificationChannel","registerApplePushNotification","registerAndroidPushNotification","unregisterApplePushNotification","unregisterAndroidPushNotification","enableNotificationChannelFinish","notificationHelper","channel","notification","deferred","pushProvider","registration","channelEnabled","messageActionsImport","convoActionsImport","messageActions","convoActions","getMessagingConfig","getConversations","getMessages","findConversation","findMember","messaging","conversations","conversationId","messages","find","conversation","conv","members","member","createManager","levelImport","logFormatter","defaultLogFormatter","entry","timestamp","shortId","shortName","logInfo","enableFcsLogs","logActions","partialDefaultLogActions","defaultActionHandler","actionOnly","collapsed","diff","exposePayloads","getConfiguration","connect","setConnectionInfo","connectionOccurred","connectFinished","getUserDetails","userDetailsReceived","disconnect","disconnectFinished","resubscribeFinished","refreshTokens","refreshTokensFinished","updateSubscription","updateSubscriptionFinished","setTokens","setCredentials","setCredentialsFinished","updateHmacToken","credentials","isSensitive","userDetailsResponse","user_first_name","user_last_name","photoURL","emailAddress","user_email","reason","retryAfter","attemptNum","idToken","password","authname","hmacToken","bearerAccessToken","authorizationError","nextRequestId","generateRequestId","result","base64_encode","base64_decode","b64","o1","o2","o3","h1","h2","h3","h4","bits","i","ac","enc","tmp_arr","utf8_encode","dec","String","fromCharCode","utf8_decode","argString","utftext","end","stringl","n","c1","str_data","c2","c3","callActionHelper","makeCall","makeCallFinish","callIncoming","answerCall","answerCallFinish","ignoreCall","ignoreCallFinish","rejectCall","rejectCallFinish","endCall","endCallFinish","callStateChange","callMediaStateChange","muteCall","muteCallFinish","unMuteCall","unMuteCallFinish","silenceCall","silenceCallFinish","unSilenceCall","unSilenceCallFinish","setCustomParameters","startVideo","startVideoFinish","stopVideo","stopVideoFinish","holdCall","holdCallFinish","unHoldCall","unHoldCallFinish","startScreenshare","startScreenshareFinish","stopScreenshare","stopScreenshareFinish","sendDTMF","sendDTMFFinish","sendCustomParameters","sendCustomParametersFinish","forwardCall","forwardCallFinish","directTransfer","directTransferFinish","consultativeTransfer","consultativeTransferFinish","joinCall","joinCallFinish","makeAnonymousCall","callInfo","callee","transition","mediaState","screenshareOptions","tone","joinedCalls","callPrefix","PENDING_MAKE_CALL","SESSION_CREATED","MAKE_ANONYMOUS_CALL","MAKE_ANONYMOUS_CALL_FINISH","SEND_RINGING_FEEDBACK","SEND_RINGING_FEEDBACK_FINISH","CALL_RINGING","SESSION_PROGRESS","CALL_CANCELLED","CALL_ACCEPTED","PENDING_OPERATION","UPDATE_CALL","CALL_HOLD","CALL_HOLD_FINISH","CALL_UNHOLD","CALL_UNHOLD_FINISH","ADD_MEDIA","ADD_MEDIA_FINISH","ADD_BASIC_MEDIA","REMOVE_MEDIA","REMOVE_MEDIA_FINISH","REMOVE_BASIC_MEDIA","RENEGOTIATE","RENEGOTIATE_FINISH","GET_STATS","GET_STATS_FINISH","PENDING_CONSULTATIVE_TRANSFER","PENDING_JOIN","JOIN_FINISH","REPLACE_TRACK","REPLACE_TRACK_FINISH","MEDIA_RESTART","MEDIA_RESTART_FINISH","CUSTOM_PARAMETERS_RECEIVED","GET_AVAILABLE_CODECS","AVAILABLE_CODECS_RETRIEVED","CALL_REMOTE_HOLD_FINISH","CALL_REMOTE_UNHOLD_FINISH","REMOTE_ADD_MEDIA_FINISH","REMOTE_REMOVE_MEDIA_FINISH","REMOTE_START_MOH_FINISH","REMOTE_STOP_MOH_FINISH","REMOTE_SLOW_START","turnPrefix","TURN_CHANGED","trackPrefix","TRACK_ADDED","TRACK_REMOVED","getActiveCalls","getCallByWrtcsSessionId","getCallByWebrtcSessionId","getOptions","getTurnInfo","addTracksToCall","callState","session","webrtcSessionId","localTracks","remoteTracks","endedStates","filter","wrtcsSessionId","turn","clickToCallFinish","caller","requestTime","getSubscriptionConfig","getRegisteredServices","getNotificationChannels","getSubscribedServices","getSubscriptions","getSubscriptionExpiry","getWebsocketConfig","registeredServices","notificationChannels","subscriptions","isArray","channelType","reduce","currentSub","concat","subConfig","authConfig","expires","websocket","CONVERSATIONS_NEW","CONVERSATIONS_CHANGE","MESSAGES_CHANGE","MESSAGES_ERROR","mwiUpdate","fetchMwi","mwiData","getNotificationsInfo","getNotificationConfig","notifications","pushNotificationsRegistration","pushNotificationsDeRegistration","fetchSDP","bundleId","deviceToken","voipDeviceToken","standardDeviceToken","isProduction","method","bundleID","registrationResponse","responseName","statusCode","text","statuscode","responseType","partialUrl","updatePresence","updatePresenceFinish","getPresence","getPresenceFinish","subscribePresence","subscribePresenceFinish","unsubscribePresence","unsubscribePresenceFinish","createPresenceList","deletePresenceList","getPresenceList","createListFinish","presenceReceived","activity","note","users","presentityUserId","presenceListId","presence","getAllPresence","getSelfPresence","user","userId","STATUS","OPEN","ACTIVITY","ACTIVE","IDLE","AWAY","LUNCH","OTHER","BUSY","VACATION","ON_THE_PHONE","getSipEventInfo","sipEvents","sipEventSubscribe","sipEventSubscribeFinish","sipEventUpdate","sipEventUpdateFinish","sipEventUnsubscribe","sipEventUnsubscribeFinish","sipEventReceived","finishActionHelper","actionType","subscribeUserList","userLists","isResub","unsubscribeUserList","sipEvent","event","fetchSelfInfo","fetchSelfInfoFinish","fetchUser","fetchUserFinish","searchDirectory","searchDirectoryFinish","Boolean","filters","refreshContacts","refreshContactsFinish","addContact","addContactFinish","fetchContact","fetchContactFinish","removeContact","removeContactFinish","updateContact","updateContactFinish","contacts","contactId","getContacts","getContact","getUsers","getUser","allUsers","CONTACTS_NEW","CONTACTS_ERROR","CONTACTS_CHANGE","DIRECTORY_CHANGE","DIRECTORY_ERROR","USERS_CHANGE","USERS_ERROR","defaultPlugins","basePlugins","fn","auth","callHistory","connectivity","mwi","root","plugins","create","createCodecRemover","exports","commonIndex","_","noConflict","factory","factoryDefaults","enableReduxDevTools","reduxDevToolsName","allowProxy","v8nValidation","schema","boolean","parseOptions","pluginFactories","sdkOptions","clonedOptions","common","pluginOptions","sagas","store","middlewares","apis","reducers","initSagas","taskDescriptor","shared","context","capabilities","api","primitives","getState","destroyedSDK","dispatch","loggerMiddleware","destroyedSDKMiddleware","next","plugin","forEach","reducer","middleware","init","mixins","baseStamp","propertyDescriptors","objName","key","rootSaga","composeMiddleware","composeWithoutDevTools","sagaMiddleware","run","apiFactory","publicAPI","getCapabilities","destroy","_destroy","cancel","destroyStateReducer","replaceReducer","immediately","setTimeout","defaultType","loggers","settings","defaultLogHandler","loggerName","getLevel","getHandler","getLoggers","createLogger","logFunc","injectables","shouldLog","now","timeLog","timer","timeWarn","createTimer","timers","time","timeEnd","elapsed","formattedString","tail","styleLog","logType","style","events","logPlugin","Object","webRTC","webRTCLogManager","managers","components","setLevelEntry","setHandlerEntry","levels","getTypes","clonedState","setLogHandler","getLevelMap","getHandlerMap","err","types","handlers","createActionLogger","actionOptions","prevState","nextState","excludeActions","predicate","titleFormatter","colors","transformers","setupTransformers","actionPipeline","transformer","actionTransformers","removePayloads","passwordHider","actionTransformer","isSafe","took","parts","toFixed","t","super_","enumerable","writable","configurable","r","defineProperty","o","a","f","u","N","Math","l","p","g","prefilter","normalize","h","y","v","b","lhs","m","rhs","w","x","S","kind","index","F","color","P","duration","started","startedTime","k","j","D","E","title","A","O","C","L","T","M","stateTransformer","errorTransformer","logErrors","diffPredicate","getHours","getMinutes","getSeconds","getMilliseconds","performance","global","window","DeepDiff","observableDiff","applyDiff","applyChange","revertChange","isConflict","defaults","default","changeDtlsRoleTo","generateEndParams","newSdp","originalSdp","mLine","crypto","fingerprint","role","changeDtlsRole","original","setup","generateBandwidthConfigs","limit","bandwidth","currentCallState","isLocal","endParams","remoteParticipant","displayNumber","remoteNumber","remoteName","reasonText","configImplementation","pluginInterface","configApi","getConfig","updateConfig","newConfigValues","configs","parseConfigs","mergeDefaults","defaultPeerConfig","sdpSemantics","iceServers","iceCollectionDelay","maxIceTimeout","serverTurnCredentials","removeBundling","earlyMedia","resyncOnConnect","mediaBrokerOnly","trickleIceMode","normalizeDestination","ringingFeedbackMode","callAuditTimer","mediaConnectionRetryDelay","array","iceCandidatePoolSize","optional","positive","iceTransportPolicy","bundlePolicy","certificates","every","peerIdentity","rtcpMuxPolicy","majorVersion","iceserver","eventsImplementation","emitter","eventMap","emit","mapper","eventReducer","aliases","count","eventEmitter","subscribeMap","strictMode","checkEvent","define","list","splice","setStrictMode","strict","authLink","eventsMap","connectFlow","extendSubscription","onSubscriptionGone","onConnectionLostEntry","eventTypes","authChangedEvent","AUTH_ERROR","AUTH_CHANGE","discEvent","forced","resubEvent","AUTH_RESUB","isFailure","AUTH_CREDENTIALS_SET","isPending","isConnected","throw","refreshToken","idTokenPayload","preferred_username","_removed","removeXtoken","updateToken","updateConnection","getConnection","subscriptionStates","disconnectReasons","jwt","onConnectionLost","connectivityActionTypes","task","finishOrError","disconnectAction","base64","encode","utf8","INVALID_CREDENTIALS","subscriptionParams","sessionId","websocketInfo","notificationChannel","wsOpenOrError","wsState","connected","resubTriggers","isOnSSO","linkConnection","resubDelay","pow","expiry","resubscribe","LINK_UPDATE_SUBSCRIPTION_FAIL","takeGoneNotification","notificationMessage","takeResubGoneSubscription","CONNECT_FAIL_WS_ERROR","LINK_UNSUBSCRIBE_FAIL","LINK_SUBSCRIBE_FAIL","LINK_EXTEND_SUBSCRIPTION_FAIL","UC_SUBSCRIBE_FAIL","UC_REFRESH_TOKEN_FAIL","UC_CREATE_TOKEN_FAIL","UC_EXTEND_SUBSCRIPTION_FAIL","UC_DISCONNECT_FAIL","MISSING_SERVICE","UNKNOWN_ERROR","GENERIC_ERROR","INIT_MEDIA_FAILED","USER_MEDIA_ERROR","NOT_SUPPORTED","INVALID_STATE","INVALID_PARAM","STATE_DESYNC","INVALID_OFFER","NO_ICE_CANDIDATES","SESSION_MISMATCH","BAD_REQUEST","NOT_AUTHENTICATED","FORBIDDEN","MISSING_ARGS","RESPONSE_ERROR","MISSING_PARAMETERS","CREATE_GROUP_FAIL","MARK_READ_FAIL","REMOVE_MEMBERS_FAIL","ADD_MEMBERS_FAIL","SEND_MESSAGE_FAIL","FETCH_MESSAGES_FAIL","FETCH_CONVERSATIONS_FAIL","INVALID_DESTINATION","INVALID_FILE_PARTS","SET_IS_TYPING_FAIL","FETCH_MWI_FAIL","NOT_PROVISIONED","NOT_SUBSCRIBED","INVALID_INPUT","ALREADY_EXISTS","WS_CONNECTION_ERROR","CPAAS_WSREQUEST_FAIL","CPAAS_WSREVOKE_FAIL","CPAAS_WSREFRESH_FAIL","CPAAS_SERVICE_SUB_FAIL","CPAAS_SERVICE_UNSUB_FAIL","CPAAS_UNSUBSCRIBE_FAIL","INVALID_STATUS","INVALID_ACTIVITY","REFRESH_CONTACTS_FAIL","DIRECTORY_REQUEST_FAIL","extras","subscribeType","isAnonymous","subscribeRequest","localization","useTurn","notificationType","supported","forceLogOut","authorizationResponse","subscribeResponse","subscribedServices","parseSpidrServices","subscriptionURL","errorCode","resubResponse","upperReceived","reqService","requests","connectWebsocket","disconnectWebsocket","waitForReconnect","timeout","reconnected","disconnected","UNSUBSCRIBE_FINISHED","SUBSCRIBE_FINISHED","REGISTER_SUB_SERVICE","PLUGIN_SUBSCRIPTION","PLUGIN_SUBSCRIPTION_FINISHED","PLUGIN_UNSUBSCRIPTION","PLUGIN_UNSUBSCRIPTION_FINISHED","CHANNEL_OPENED","CHANNEL_CLOSED","callsLink","authActionTypes","notiActionTypes","connActionTypes","logMgr","fcsLog","callDefaults","isAudioEnabled","remoteVideoContainer","localVideoContainer","webrtcdtls","chromeExtensionId","serverProvidedTurnCredentials","recordCallStats","checkMediaDevices","watchCheckMediaDevices","onDeviceChange","shimContext","getUsername","callShim","fcsLogger","logObject","msg","onIncomingCall","onCallStateChange","prevCallState","newState","startTime","endTime","onMediaStateChange","onBridgeCallsChanged","updateAudioBridgeCalls","setDefaultDevices","setDevices","setDefaultDevicesFinish","catch","promptUserMedia","promptUserMediaFinish","basicError","changeSpeakerFinish","changeInputDevices","changeInputDevicesFinish","logHandler","initLogging","setUserAuth","connectionInfo","restUrl","restPort","websocketProtocol","websocketIP","websocketPort","callResyncOnConnect","ajaxHook","xhr","unusedWindow","cpaasAgentHeaderValue","customHeaders","oauthToken","tokenString","hasCallService","setTokenAuth","setKandyUAT","fcsConfig","turnCredentials","iceInfo","credential","screenSharing","setupVars","anonymous","setRealm","toLog","onScreenshareStop","joinedCallId","joinedCallTo","participants","isJoinedCall","muted","videoContainer","startLocalVideo","startLocalVideoFinish","stopLocalVideo","stopLocalVideoFinish","mediaResults","initMediaFinish","createAudioBridgeFinish","closeAudioBridge","closeAudioBridgeFinish","addCallToBridge","addCallToBridgeFinish","removeCallFromBridge","removeCallFromBridgeFinish","muteAudioBridge","muteAudioBridgeFinish","unmuteAudioBridge","unmuteAudioBridgeFinish","silenceAudioBridge","silenceAudioBridgeFinish","unsilenceAudioBridge","unsilenceAudioBridgeFinish","callbacks","getNotificationCallbacks","globalBroadcaster","getGlobalBroadcaster","publish","shim","fcs","ongoingCalls","localStream","getUnifiedSdkCalls","fcsCalls","callIds","getId","processMediaError","pluginUrls","urlWin32bit","urlWin64bit","urlMacUnix","initializeMedia","initMediaSuccess","initMediaFailure","getInternalCall","getInternalBridge","onStateChange","localStatusAndReason","localStatusCode","localReasonText","isVideoNegotiationAvailable","callerNumber","calleeNumber","callerName","calleeName","getJoin","getRemoteVideoState","onCallMediaStateChange","NotificationCallbacks","GlobalBroadcaster","startCallSuccess","fcsCall","startCallFailure","mediaSuccess","sendScreenShare","mediaSourceId","mediaOptions","answerSuccess","answerFailure","answer","mediaFailure","ignoreSuccess","ignoreFailure","ignore","rejectSuccess","rejectFailure","endSuccess","endFailure","mute","unmute","silence","unsilence","getCustomParameters","startVideoSuccess","startVideoFailure","videoStart","stopVideoSuccess","stopVideoFailure","videoStop","holdSuccess","holdFailure","hold","unHoldSuccess","unHoldFailure","unhold","screensharingStopped","startScreenshareSuccess","startScreenshareFailure","screenSharingStart","stopScreenshareSuccess","stopScreenshareFailure","screenSharingStop","sendCustomParametersSuccess","sendCustomParametersFailure","forwardSuccess","forwardFailure","forward","transferSuccess","transferFailure","dest","joinSuccess","joinedCall","joinFailure","withVideo","onSpeakerSuccess","speaker","camera","microphone","onSpeakerFailure","device","deviceId","promptUserMediaSuccess","promptUserMediaFailure","changeSpeakerSuccess","changeSpeakerFailure","changeDevicesSuccess","changeDevicesFailure","fcsError","getUserMediaSuccess","streamInfo","getUserMediaFailure","createBridgeSuccess","onCallsChange","createBridgeFailure","close","addCallSuccess","addCallFailure","errCode","add","removeCallSuccess","removeCallFailure","muteLocalAudio","unmuteLocalAudio","silenceRemoteAudio","unsilenceRemoteAudio","createFcs","modules","coreModule","callModule","rccCallModule","wamCallModule","webRtcModule","bottle","Bottle","loadModule","Core","Notification","Call","httpModule","globalBroadcasterModule","turnCredentialsModule","sdpModule","Config","LogManagerImpl","Cache","SdpParser","SdpParserImpl","LocaleService","ChallengeManager","ChallengeManagerFactory","CoreImpl","Navigator","navigator","Global","_core","Level","OFF","FATAL","ALL","_logHandler","enableDebug","isEnabled","Logger","getName","argument","fatal","_loggerName","trim","polling","iceCandidateCollectionTimeoutInterval","pluginMode","mode","h264","constants","WEBRTC","_fcs","_config","_global","getPrefix","cachePrefix","setItem","keyName","keyValue","localStorage","getItem","removeItem","clear","fullKeyName","_fcsConfig","nl","lf","sdpData","sessionDescription","mediaDescriptions","sdp","parseSDP","setSessionDescriptionAttributes","setMediaDescriptionsAttributes","descriptions","mediaDescription","line","sessionDescriptions","connectionData","match","email","ip","mediaDescriptionIndex","mediaDescriptionAttributes","mediaData","direction","isHold","isRemote","media_index","mediaDesc","isRemoteHold","isLocalHold","getSessionDescription","getMediaDescriptions","isSdpHas","pSdp","M_LINE","isSdpHasAudio","STRING","AUDIO","isSdpHasVideo","VIDEO","isSdpHasUfrag","A_LINE","ICE_UFRAG","isSdpHasMediaWithExpectedPort","isSdpHasAudioWithZeroPort","isSdpHasVideoWithZeroPort","isSdpHasAudioWithOnePort","isSdpHasVideoWithOnePort","isSdpHasAudioWithNinePort","isSdpHasVideoWithNinePort","replaceZeroVideoPortWithOne","getSdpDirection","substr","MEDIA_STATE","logmsg","getAudioSdpDirection","getVideoSdpDirection","isAudioSdpDirectionInactive","isAudioSdpDirectionSendrecv","isAudioSdpDirectionSendonly","isAudioSdpDirectionRecvonly","isSdpContainsAudioDirection","isVideoSdpDirectionInactive","isVideoSdpDirectionSendrecv","isVideoSdpDirectionSendonly","isVideoSdpDirectionRecvonly","isSdpContainsVideoDirection","changeDirection","directionBefore","directionAfter","updateSdpDirection","beforeDirection","updateAudioSdpDirection","updateVideoSdpDirection","updateAudioSdpDirectionToInactive","updateVideoSdpDirectionToInactive","isSdpHasDirection","sr_indx","so_indx","ro_indx","in_indx","isSdpEnabled","isAudioSdpEnabled","isVideoSdpEnabled","isSdpVideoReceiveEnabled","updateH264Level","reg","video_arr","new_substr","elm","elm_array","CARRIAGE_RETURN","NEW_LINE","updateH264LevelTo42E01F","isSdpVideoCandidateEnabled","deleteFingerprintFromSdp","getFingerprintFromSdp","exec","deleteCryptoFromSdp","deleteCryptoZeroFromSdp","updateAudioCodec","audio_arr","attrLine","partialMLine","remcodec","regExpCodec","codecsToRemove","RegExp","updateVideoCodec","codecsToRemoveForVideo","removeAudioCodec","codecToRemove","elm2","removeRTXCodec","rtxPayloadType","vp8SSRC","rtxSSRC","getVp8Ssrc","getRtxSsrc","removeSsrcId","getRTXPayloadType","removeVideoCodec","splitArray","ssrcGroupArray","ssrcArray","ssrcId","ssrc_arr","removeG722Codec","getPayloadTypeOf","codecString","rtpMapNumber","rtpMapArray","payloadTypeArray","search","replaceTelephoneEventPayloadType","oldCode","newCode","finalsdp","regex","matches","tempAudioLine","partialsdp","number","replaceOpusCodec","oldCodecNumber","defaultCodecNumber","updateOpusConfig","opusConfig","opusBandwidthLine","opusPayload","getOpusPayloadType","searchParam","untilFtmpLine","opusFmtpLine","aFmtp","maxPlaybackRate","maxAverageBitrate","fec","dtx","ptime","createControlText","BANDWIDTH","MAXPLAYBACKRATE","MAXAVERAGEBITRATE","FEC","DTX","lastIndexOf","isValidOpusControl","PTIME","ptimeSearchParam","ptimeAndRest","ptimeLine","audioControlPropertyName","audioControlPropertyValue","controlLine","controlName","controlValue","getG7228000PayloadType","getVP8PayloadType","getG72216000PayloadType","getH264PayloadType","isSdpHasTelephoneEventWithRate","isSdpHasTelephoneEvent","isSdpHasVP8Codec","isSdpHasH264Codec","checkSupportedVideoCodecs","localOfferSdp","isVideoCodecsSupported","removeAllVideoCodecs","addVP8Codec","updateSdpVideoPort","performVideoPortZeroWorkaround","removeVideoDescription","codecs","offerSdp","vp8PayloadType","codecType","videoUFRAGParam","videoPWDParam","ice_ufrag","ice_pwd","removeSdpLineContainingText","checkICEParams","getICEParams","restoreICEParams","ICE_PWD","containing_text","r_sdp","port_text","addSdpMissingCryptoLine","mediaSplit","audioLines","cryptLine","CRYPTO","FINGERPRINT","mediaType","parse1","parse2","isVideo","parse3","new_value","updateICEParams","subsdp","num","checkIceParamsLengths","oldSdp","isSdpVideoSendEnabled","getSdpDirectionLogging","logging","deleteInactiveVideoSsrc","videoSdp","deleteSsrcFromSdp","getTcpSetupAttribute","SETUP_ACTIVE","SETUP_PASSIVE","SETUP_ACTPASS","setTcpSetupAttribute","newSetupAttribute","checkAndRestoreICEParams","oSdp","audioUFRAGParam","audioPWDParam","incrementVersion","oLineAsArray","newoLine","actualoLine","escalateSdpDirection","deescalateSdpDirection","isIceLite","getSessionIdFromSdp","oLine","updateVersion","fromSdp","toSdp","fromOline","toOline","actualtoOline","copyCandidatesToTheNewLocalSdp","oldSplitSdp","newSplitSdp","oldVideoSdp","newVideoSdp","oldAudioSdp","newAudioSdp","copyCandidates","mediaLines","getSdpFromObject","deleteGoogleIceFromSdp","respondToRemoteSdpDirections","localSdp","remoteSdp","respondToRemoteMediaSdpDirection","remoteDirection","hasZeroConnectionIP","hasCandidates","relayCandidateCycle","relayCandidateConfigCycle","checkRelayCandidateCollectionTimeout","candidateParser","getCandidateType","mLines","mline","deleteFingerprintOrCrypto","addRtpmapForCodec","rtpmapString","audioCodecList","addRtpmapForPCMU","addRtpmapForPCMA","deleteCurlyBracketsSDP","deleteBandwidthLineFromSdp","setOpusCodecToLowerCase","replaceAudioMlineOfCodec","prevValue","newValue","replaceMlineOfCodec","replaceVideoMlineOfCodec","option","prevMline","newMline","mLineRegex","replaceRTPMapOfCodec","replaceRTCPOfCodec","replaceFMTPOfCodec","replaceCodecValue","codec","payloadType","replaceCodecs","codecMap","removeH264Codec","h264PayloadType","findZeroConnectionIPandModify","hasCodecPayloadChanged","oldTEPayloadCodec","newTEPayloadCodec","isVideoHasSsrc","videoLine","checkandReplaceAPTValue","substr_arr","numOfAPT","APTIndex","sdpMline","APTValue","isSdpHasTrickle","setTrickleOption","addTrickle","compareSDPForEarlyMedia","sdp1","sdp2","lineIndex","originalLines","newLines","isRemoteEndFirefox","challengeManager","setChallengeHandler","TypeError","challengeHandler","setAnswerHandler","challengeAnswerHandler","challenge","challengeSuspensions","Promise","currentChallenge","retry","suspendChallenges","waitOn","_globalBroadcaster","dev","pluginVer","un","tkn","authorizationName","tokenRealm","kandyUAT","DEFAULT_SUBSCRIPTION_EXPIRY_VALUE","MIN_SUBSCRIPTION_EXPIRY_VALUE","isAsync","setAsync","getAuthUser","getDevice","EVENT","BASIC_AUTH_STARTED","TOKEN_AUTH_STARTED","getTokenAuth","setDeviceAuth","getRealm","uat","getKandyUAT","AuthenticationType","USER","DEVICE","Errors","configParams","delayInitMedia","codecsToReplaceDefaultFound","paramFields","handleValidSubscriptionExpiryTimerValue","trickleIceSupport","TRICKLE","FCS_SETUP_COMPLETED","connectionParams","SDP_CONSTANTS","setPluginVersion","getPluginVersion","setServices","serviceParam","callDisplay","callDisposition","restfulClient","callControl","remoteCallControl","callMe","directory","history","custom","IM","routes","dataChannel","setConnected","connectionStatus","Http","_server","_utils","getUserLocale","sendGetRequest","getWAMUrl","XHR","XHRImpl","HttpImpl","_xhr","REQUEST_TYPE_PUT","REQUEST_TYPE_POST","REQUEST_TYPE_GET","REQUEST_TYPE_DELETE","onSubscriptionStarted","onSubscriptionEnded","onTokenAuth","onBasicAuth","manipulateHeader","header","sendRequest","callParams","successHandler","errorHandler","successParser","errorParser","failureHandler","CONSTANTS","sendPostRequestTokenAuth","sendPostRequest","sendDeleteRequest","sendPutRequest","getUrl","authNeeded","DEVICE_SUBSCRIPTION_STARTED","DEVICE_SUBSCRIPTION_ENDED","setSession","setUsernamePassword","pass","_challenger","GoneNotifier","_goneNotifier","DEFAULT_LONGPOLLING_TOLERANCE","DEFAULT_AJAX_TIMEOUT","XHR_READY_STATE","REQUEST_NOT_INITIALIZED","REQUEST_DONE","composeAjaxRequestResponseLog","errorThrown","responseLog","statusText","responseText","readyState","parseError","returnResult","parseErrorStatusCode","origHeaders","urlWithoutRestVersion","resourceString","finalHeaders","headerKey","responseLogContext","handleSuccess","handleError","isSuccess","modValues","longpollingTolerans","imRequest","XMLHttpRequest","onload","onabort","onerror","open","withCredentials","cors","setRequestHeader","send","dataType","async","jsonp","crossDomain","checkIE9HackForAbortedAjaxRequest","description","responseURL","SyntaxError","reportError","onGoneReceived","XHR_REQUEST_NOT_INITIALIZED","enableAuthChallenge","newUAT","onreadystatechange","MAX_PRIORITY","MIN_PRIORITY","topics","subUid","unsubscribeFromTopic","subscribeToTopic","topic","priority","temporary","prio","temp","sort","parseFloat","publishTopic","subscribers","len","_args","_topic","TurnCredentialsManager","TurnCredentialsManagerImpl","_cache","CREDENTIALS_CACHE_KEY","save","onCredentialsReceived","SdpPipeline","builtinHandlers","createSdpPipeline","createConvertedSdpPipeline","getHandlers","sdpLogger","operation","step","nextCalled","callHandler","currentSdp","pipeline","sdpString","sdpObject","sdpParse","sdpWrite","transform","write","createSdpLogger","createBundleHandler","bundleHandler","groups","RccFSM","RccFSMImpl","RccManagerImpl","RccControlService","RccControlServiceImpl","CallFSMState","INIT","MAKING_CALL","ANSWERED","CALL_RECEIVED","DEFLECTING_CALL","ENDING_CALL","HOLDING_CALL","RETRIEVING_CALL","BLIND_TRANSFERING","ANSWERING_CALL","MAKING_CONSULTATIVE_TRANSFER","CONFERENCING_CALL","CONFERENCED_CALL","TransferEvent","unknownNotification_fsm","makeCall_fsm","callInProgress_fsm","ringing_fsm","answered_fsm","callReceived_fsm","callFailed_fsm","callEnded_fsm","endCall_fsm","blind_transfering_fsm","holdCall_fsm","callHeldLocally_fsm","callRetrievedLocally_fsm","callHeldRemotely_fsm","callRetrievedRemotely_fsm","callHeldBoth_fsm","answerCall_fsm","deflectCall_fsm","consultativeTransfer_fsm","redirected_fsm","callBlindTransferred_fsm","callConsultativeTransferred_fsm","callTransferred_fsm","conferencing_fsm","conferenced_fsm","blindTransferFailed_fsm","consultativeTransferFailed_fsm","conferenceCallFailed_fsm","NotificationEvent","unknowNotify","callInProgress","ringing","answered","callHeldRemotely","callRetrievedRemotely","callHeldLocally","callRetrievedLocally","callTransferred","callReceived","redirected","callFailed","callEnded","makeCall_GUI","deflectCall_GUI","endCall_GUI","holdCall_GUI","blind_transfering_GUI","retrieveCall_GUI","answerCall_GUI","consultativeTransfer_GUI","conferenceCall_GUI","conferenced","blindTransferFailed","consultativeTransferFailed","conferenceCallFailed","FSM","getCurrentState","currentState","previousState","retrieveCall_fsm","handleEvent","initialCallState","transferEvent","_rccFSM","_rccControlService","_notificationCallbacks","fsmNotificationEvent","fsmState","CALL_HOLD_STATES","extendMonitorDeviceTimer","isMonitorStarted","isSubscription","sessionParam","onMonitorSessionLost","monitorSessionLostNotification","monitorSessionRefreshed","monitorSessionTerminated","onMonitorSessionRefreshed","onMonitorSessionTerminated","opts","sendVideo","isJoin","buttonDisabler","btnTimeout","auditTimer","notificationQueue","onLocalStreamAdded","onStreamAdded","canReject","canForward","canAnswer","canSendVideo","canOriginatorSendLocalVideo","canReceiveVideo","canOriginatorReceiveRemoteVideo","getHoldState","getHoldStateOfCall","getCalledParty","getCallingParty","transferredCallId","currentCallId","targetCallId","isVideoStart","videoStopStart","anotherCall","callid1","callid2","sendIntraFrame","sendBlackFrame","refreshVideoRenderer","setJoin","getButtonDisabler","setButtonDisabler","disable","clearBtnTimeout","clearTimeout","setAuditTimer","audit","setInterval","clearAuditTimer","clearInterval","isCallMuted","isVideoNegotationAvailable","transfaredCallId","setDeviceID","deviceid","setSessionID","sessionid","sessionID","setExpiryTime","expirytime","expiryTime","setMonitorSessionParam","getMonitorSessionParam","removeMonitorSessionParam","clearResources","clearAllResources","stopExtendMonitorDeviceTimer","extendMonitorDeviceSubscription","extendMonitor","startExtendMonitorDeviceTimer","internalCall","isCall","delegateToCallFSM","stateMessage","monitorStarted","isSubscribed","subscriptionStarted","subscriptionStopped","isDeviceMonitor","reponse","rccCallResponse","startMonitor","rccSessionResponse","stopMonitor","answerSuccessCallback","answerFailureCallback","retrieveCall","_currentState","deflectCall","currentInternalCall","targetInternalCall","targetCallState","currentCall","targetCall","conferenceCall","responseData","rccDeviceResponse","deviceList","blindTransfer","onNotificationEvent","sessionParams","triggerCallState","getCallerAndCalleeData","handleCallControlNotification","RemoteCallControl","rccEvent","rccNotificationParams","rccNotifyData","rccNotifySecondData","incomingCall","newOutgoingCall","copyNotifyDataForConferencedDoubleCallID","endedCallId","addCallerAndCalleeToTheCall","genericErrorParser","jqXHR","callRequestPostPutErrorParser","callRequestDeleteErrorParser","getDeviceListRequestErrorParser","sessionRequestPostPutErrorParser","sessionRequestDeleteErrorParser","isUserMonitor","rccToRccDevice","rccToSession","rccToSessionID","rccToCall","rccToCallID","callID","requestData","urlPostfix","CallFSM","CallFSMImpl","CallManagerImpl","CallControlService","CallControlServiceImpl","TRYING","RINGING_SLOW","LOCAL_HOLDING","LOCAL_UNHOLDING","LOCAL_VIDEO_STOP_START","REMOTE_OFFER","REMOTE_HOLDING","REMOTE_UNHOLDING","JOINING","PROVISIONRECEIVED","REFER","TRANSFERING","LOCAL_SLOW_START_OFFER","LOCAL_REOFFER","LOCAL_REJECTING","LOCAL_ENDING","ignoredNotification_fsm","callStart_fsm","answer_fsm","reject_GUI","rejectWithoutClearCallObject_GUI","ignore_GUI","callCompleted_fsm","noAnswer_fsm","localEnding_fsm","localEndingWithoutClearCallObject_fsm","localEnd_fsm","localReject_fsm","remoteEnd_fsm","answeringRingingSlow_fsm","callCompletedAnswering_fsm","localHold_fsm","localHolding_fsm","remoteHold_fsm","remoteHolding_fsm","localUnHold_fsm","localUnHolding_fsm","remoteUnHold_fsm","remoteUnHolding_fsm","localVideoStopStart_fsm","remoteOffer_fsm","joining_fsm","sessionComplete_fsm","joiningSuccess_fsm","sessionFail_fsm","respondCallUpdate_fsm","remoteCallUpdate_fsm","remotePranswer_fsm","forward_fsm","refer_fsm","accepted_fsm","transfering_fsm","transferSuccess_fsm","transferFail_fsm","respondCallHoldUpdate_fsm","remoteOfferDuringLocalHold_fsm","renegotiationCompleted_fsm","slowStartOfferDuringRemoteHold_fsm","slowStartOfferDuringOnCall_fsm","stateReverted_fsm","glareCondition_fsm","slowStartOfferProcessed_fsm","performReconnectWorkaround_fsm","performCreateNewPeerWorkaround_fsm","startCallReplace_fsm","startCallReplaceRejected_fsm","respondedFromAnotherDevice_fsm","deviceChange_fsm","callStart_GUI","callNotify","ringing_Notify","answer_GUI","end_GUI","respondCallUpdate_Notify","respondCallUpdate_Notify_sendOnly","respondCallUpdate_glareCondition_Notify","callEnd_Notify","callNotify_noSDP","startCallUpdate_slowStart_Notify","startCallUpdate_remoteHold_Notify","startCallUpdate_remoteOffer_Notify","joining_Notify","sessionComplete_Notify","joiningSuccess_Notify","sessionFail_Notify","hold_GUI","unhold_GUI","videoStopStart_GUI","sessionProgress","callCancel_Notify","forward_GUI","refer_JSL","accepted_Notify","transfering","requestFailure_JSL","webrtcFailure_JSL","remoteOfferProcessed_JSL","remoteHoldProcessed_JSL","remoteUnHoldProcessed_JSL","slowStartOfferProcessed_JSL","performReconnectWorkaround_JSL","performCreateNewPeerWorkaround_JSL","startCallReplace_Notify","endReject_GUI","endIgnore_GUI","revertState_JSL","deviceChange_GUI","answerRingingSlow_fsm","WebRtcManager","_webRtcManager","_callFSM","_callControlService","_sdpParser","_notificationCallBacks","bridges","AUDIT_KICKOFF_TIMEOUT","isReconnected","isQueueEnabled","startCallInProgress","startCallQueue","NOTIFICATION_STATE","JOIN_COMPLETED","isOutgoing","onMute","isSilenced","getCustomParametersOfCall","customParams","setCustomParametersOfCall","getWebRtcStats","getNativeWebRtcStats","startWebRtcStatsTimer","interval","stopWebRtcStatsTimer","getMediaStream","onStopped","isScreenStart","screenStopStart","bridgedCalls","bridgedCall","muteAudioTrack","silenced","updateSilenceStatus","mergeAudioStream","bridgeIndex","unMergeAudioStream","pop","cleanInternalCall","callIndex","targetAddress","transfer","transferTrigger","preserveCallObject","callStats","isAuditing","pendingRequestTimer","cache","processEnd","clearCallObject","setNotificationStateOfCallToBusy","notificationState","setNotificationStateOfCallToIdle","isNotificationStateOfCallBusy","triggerQueue","notificationObj","callNotificationParams","processStartCallQueue","sessionData","onSubscriptionReEstablished","defaultActiveCallTimeoutMS","activeCallTimeout","activeCallTimeoutMS","callAge","callStateOnConnect","getSession","callControlResponse","mapGetUserMediaErrorToFcsError","privateGetUserMedia","canMergeAudio","setUpdateCandidateCallbackToCall","updateCandidates","candidateArray","updateIceCandidate","iceCandidates","videoNegotiationAvailable","offerToReceiveVideo","getUserMediaSuccessCallback","mediaInfo","isVideoSourceAllowed","storeLocalStreamToCall","createAnswer","createAnswerSuccessCallback","addLocalStream","createAnswerFailureCallback","getUserMediaFailureCallback","createOffer","createOfferSuccessCallback","createOfferFailureCallback","cachedCall","optionReject","optionForward","optionAnswer","canOrigReceiveVideo","primaryContact","cacheCall","callToCache","screenShare","requestScreenShare","isScreenShared","handleFailure","failureEvent","revertRtcState","handleRequestFailure","handleWebrtcFailure","originalStream","lastUpdateRequest","createHoldUpdate","videoUpdate","retryCallback","createUpdate","reinvite","onScreenStop","isStartingScreenMedia","startScreenMedia","updateLocalStreamToCall","stopScreenMedia","internalCall1","internalCall2","newInternalCall","currentCallState1","currentCallState2","onJoin","firstInternalCallId","secondInternalCallId","clientControlled","isReferer","refer1ID","refer2ID","cerateIncomingCallInFSM","continuity","notificationParams","referTo","referredBy","prevRemoteSdp","stableRemoteSdp","supportTrickle","remoteDisplayNumber","callStates","auditTimerDelay","startAuditTimer","doNotTriggerQueue","stateText","stateName","triggerCallStateWithoutQueue","forceNewPeer","replaceCallCompleted_fsm","peer","signalingState","RTC_SIGNALING_STATE","processAnswer","ICE_ICELITE","referCall","replacingCallId","replacingCall","remoteParticipantChanged","remoteEndPointChanged","processHold","respondToRemoteHold","errorStr","processRemoteOfferOnLocalHold","respondCallUpdate","createReOffer","createReOfferSuccessCallback","reInviteSuccessCallback","reInviteFailureCallback","createReOfferFailureCallback","respondToRemoteUnhold","processUpdate","processHoldRespond","processRespond","refer","isVideoSourceAvailable","isAudioSourceAvailable","hasScreenSharing","isScreenSourceAvailable","isAudioMuted","isSendInitialVideoEnabled","cameraList","microphoneList","speakerList","internalCallId","replaceStream","deleteLocalStream","handleIncomingIceCandidate","candidates","addRemoteCandidates","handleIncomingCall","dispositionParams","callDispositionParams","ringingFeedback","rawParameters","handleReplacesFailure","newlyCreatedCall","sendRejectCallReplace","handleReplacesWebrtcFailure","rejectCallReplace","createNewCall","notificationWithSdp","newlyCreatedCallId","handleStartCallReplaceNotification","newlyCreatedSessionParams","replaces","remoteParty","transferredCall","transferredCallState","isSendInitialVideo","successCallback","acceptCallReplace","failureCallback","startCallUpdate","handleStartCallUpdateNotification","getCallerInfo","callerDisplayNumber","getCalleeInfo","calleeDisplayNumber","notificationEvent","remoteCallParams","RemoteDisplayName","RemoteDisplayNumber","onRemoteEndPointChange","currentUser","handleRespondCallUpdateNotification","sessionComplete","handleSssionCompleteNotification","sessionFail","handleSessionFailNotification","callEnd","handleCallEndNotification","trying","handleTryingNotification","trying_Notify","callCancel","handleCallCancelNotification","accepted","handleAcceptedNotification","startCallReplace","IceCandidate","CONNECTION_REESTABLISHED","NOTIFICATION_CHANNEL_LOST","setCalls","_calls","setNotificationState","_notificationState","getStartCallQueue","_sdpPipeline","runSdpPipeline","PRE_SEND_LOCAL","addNotificationChannel","callMeRequest","notifyChannelId","modifiedSdp","START_CALL","OFFER","parseCallStart","callMeResponse","callControlRequest","callReplace","HOLD","UNHOLD","ANSWER","firstSessionData","secondSessionData","parseJoin","endUrl","delimiter","makeRequest","callDispositionRequest","dummy","sessiondataToTransfer","parseIMRNResponse","IMRNdata","receivedIMRN","imrnResponse","callData","parseAcceptCallReplaceData","parseRejectCallReplaceData","adaptorModule","decoratorModule","modelModule","WebRtcAdaptorFactory","WebRtcAdaptorBaseFactory","decorator","model","WebRtcAdaptorImpl","WebRtcChromeAdaptorFactory","WebRtcChromeDecoratorFactory","WebRtcChromeAdaptorModelFactory","WebRtcChromeAdaptorImpl","WebRtcContainerAdaptorFactory","WebRtcContainerAdaptorImpl","WebRtcFirefoxAdaptorFactory","WebRtcFirefoxDecoratorFactory","WebRtcFirefoxAdaptorModelFactory","WebRtcFirefoxAdaptorImpl","WebRtcFirefoxEsrAdaptorFactory","WebRtcFirefoxEsrAdaptorImpl","WebRtcPluginAdaptorFactory","WebRtcDecoratorFactory","WebRtcPluginAdaptorModelFactory","WebRtcPluginAdaptorImpl","WebRtcPluginv22AdaptorFactory","WebRtcPluginv22AdaptorImpl","WebRtcPluginv31AdaptorFactory","WebRtcPluginv31AdaptorImpl","_decorator","_model","zero","peerId","performSdpWorkaroundsBeforeProcessingIncomingSdp","setRemoteDescription","remoteDesc","storeRemoteSdp","PRE_SET_REMOTE","createRTCSessionDescription","isVideoDirectionsSendRecv","isAudioDirectionsSendRecv","isSdpDirectionsSendRecv","isAudioSdpDirectionsSendRecv","oldSolutionNeeded","oldVideoLine","newVideoLine","oldSessionId","newSessionId","telephoneEventPayloadChanged","iceCredentialsChanged","oldVideoUfrag","newVideoUfrag","updateCodecs","codecsToReplace","overrideConfiguredCodecValues","fireEvent","isSendingLocalVideo","useDefaultRenderer","fireOnLocalStreamAddedEvent","lastElementChild","localStreamId","endLocalMedia","usePreviousMediaDirection","localDescObj","localAudioDirection","localVideoDirection","prevLocalSdp","stableLocalSdp","deleteVideoStream","initialVideoState","createNewPeerForCall","createReOfferCreateOfferSuccessCallback","REOFFER","PRE_SET_LOCAL","setLocalDescription","createReOfferSetLocalDescriptionSuccessCallback","createReOfferSetLocalDescriptionFailureCallback","createReOfferCreateOfferFailureCallback","getLocalAudioTrack","audioTracks","getSenders","audioSenders","sender","track","getLocalStreams","streams","getAudioTracks","getLocalVideoTrack","videoTracks","videoSenders","getVideoTracks","getRemoteVideoTrack","getRemoteStreams","userAction","newMuteState","audioMuted","audioGain","gain","localAudioTrack","fcsUserAudioMuteState","muteVideoTrack","localVideoTrack","videoMuted","fcsUserVideoMuteState","remoteStream","safeStreamId","audioRenderer","document","querySelector","videoRenderer","restoreUserMuteStateOfCall","previousMuteStateOfAudio","previousMuteStateOfVideo","muteOnHold","checkMediaSourceAvailability","mediaSourceCallback","initScreenSharing","performVideoStartWorkaround","onFail","remoteAudioState","localDescription","pvswFirstSetRemoteDescriptionSuccessCallback","pvswSecondSetRemoteDescriptionSuccessCallback","pvswCreateAnswerSuccessCallback","dtlsRole","pvswSetLocalDescriptionSuccessCallback","pvswSetLocalDescriptionFailureCallback","pvswCreateAnswerFailureCallback","pvswSecondSetRemoteDescriptionFailureCallback","pvswFirstSetRemoteDescriptionFailureCallback","createAudioContext","AudioContext","webkitAudioContext","mozAudioContext","oAudioContext","msAudioContext","mediaStreamSource","mediaStreamDestination","constraints","audioContext","videoConstraints","audioConstraints","createMediaStreamDestination","createMediaStreamSource","createGain","addTrack","mergedSources","replaceVideoStream","targetStream","sourceStream","targetVideoTracks","removeTrack","sourceVideoTracks","call1","call2","remoteStream1","remoteStream2","source1","source2","onEnded","video_constraints","mandatory","mediaSource","oldStream","onended","stopStream","createDataChannelOffer","localDesc","DATA_CHANNEL","createDataChannelAnswer","processDataChannelAnswer","isAnswer","addStream","createOfferSetLocalDescriptionSuccessCallback","createOfferSetLocalDescriptionFailureCallback","createAnswerSetRemoteDescriptionSuccessCallback","createAnswerSetLocalDescriptionSuccessCallback","createAnswerSetLocalDescriptionFailureCallback","createAnswerSetRemoteDescriptionFailureCallback","needNewPeer","updateStream","createUpdateCreateOfferSuccessCallback","createUpdateCreateOfferSetLocalDescriptionSuccessCallback","iceConnectionState","iceGatheringState","crateUpdateCreateOfferSetLocalDescriptionFailureCallback","createUpdateCrateOfferFailureCallback","rtcState","revertRtcStateLocalDescriptionSuccessCallback","REVERT_RTC_STATE","revertRtcStateRemoteDescriptionSuccessCallback","revertRtcStateRemoteDescriptionFailureCallback","revertRtcStateLocalDescriptionFailureCallback","remote_hold_status","createHoldUpdateCreateOfferSuccessCallback","videoInactiveOnHold","createHoldUpdateSetLocalDescriptionSuccessCallback","createHoldUpdateSetLocalDescriptionFailureCallback","createHoldUpdateCreateOfferFailureCallback","local_hold_status","audioDirection","videoDirection","peerLocalSdp","inactiveRemoteSdp","setOriginatorSendLocalVideo","processHoldSetFirstRemoteDescriptionSuccessCallback","processHoldSetSecondRemoteDescriptionSuccessCallback","processHoldCreateAnswerSuccessCallback","processHoldSetLocalDescriptionSuccessCallback","processHoldSetLocalDescriptionFailureCallback","processHoldCreateAnswerFailureCallback","processHoldSetSecondRemoteDescriptionFailureCallback","processHoldSetFirstRemoteDescriptionFailureCallback","remoteVideoDirection","processUpdateWorkaroundSetRemoteDescriptionSuccessCallback","processUpdateSetRemoteDescriptionSuccessCallback","processUpdateCreateAnswerSuccessCallback","processUpdateSetLocalDescriptionSuccessCallback","processUpdateCreateAnswerFailureCallback","onSuccessAfterWorkarounds","origSdp","callOperation","processPreAnswer","PRANSWER","processPreAnswerSetRemoteDescriptionSuccessCallback","setOriginatorReceiveRemoteVideo","processPreAnswerSetRemoteDescriptionFailureCallback","remoteSdpHasVideo","RESPOND","remoteAudioDirection","onSuccessAfterWorkaround","localHoldFlag","remoteHoldFlag","onRemoteStreamAdded","forceDisableMediaOnHold","processHoldRespondSetRemoteDescriptionSuccessCallback","processHoldRespondSetRemoteDescriptionFailureCallback","removeJslIdFromContainer","removeAttribute","clearLocalMediaProperties","detachWebAudioContextFromLocalMedia","stopLocalMedia","localStreamEntries","clearIceCandidateCollectionTimer","clearUpdateCandidateInterval","clearWebrtcLogCollectionInterval","onRemoteStreamRemoved","entries","onSessionConnecting","onSessionOpened","onSignalingStateChange","local","isVideoTrackAvailable","children","innerHTML","firstElementChild","setSelectedSpeaker","element","setSinkId","renderer","createElement","appendChild","srcObject","autoplay","playPromise","play","addCallIdInPluginContainer","setAttribute","isActiveCallInVideoContainer","getAttribute","remoteVideoTracks","remoteStreamId","onaddtrack","mergedCall","mergedSource","fireOnStreamAddedEvent","updateCandidateInterval","iceCandidateCollectionTimer","onIceCandidate","candidate","relayCandidateCollectionTimeoutCycle","sdpMLineIndex","onIceComplete","onDataChannel","dataChannelWrapperObj","iceCandidateCollectionTimeoutHandler","setupIceCandidateCollectionTimer","results","collectWebRtcStats","accumulatedStats","getAccumulatedWebRtcStats","cacheWebRtcStats","statsList","currentStats","callCache","packetsSent","bytesSent","bytesReceived","peerAddress","packetsLost","jitter","rtt","accumulateStats","accumulatedStatsObj","statsObj","statsSdp","setWebRtcStats","res","names","sdpAudioPort","sdpVideoPort","transportId","googChannelId","googCodecName","alwaysMediaOnBroker","stat","fillStats","sdpRemotePort","remotePort","remoteAddress","webrtcLogCollectionInterval","webrtcLogCollectionTimeoutHandler","statObj","resultLength","namesLength","audioOutputLevel","setupWebrtcLogCollectionTimer","logCollectionInterval","oniceconnectionstatechange","mediaStates","createDataChannel","createPeer","pc","servers","useIceServer","ignoreIceParamsForServices","callConstraints","chrome","useRelayOnly","createRTCPeerConnection","_peerId","onconnecting","onopen","onsignalingstatechange","onaddstream","onremovestream","onicecandidate","onicecomplete","ondatachannel","onicegatheringstatechange","checkFireFox","incomingSDP","isNewPeerCreated","oldPeer","videoTrack","dtmfSender","remoteResolution","remoteVideoHeight","remoteVideoWidth","firstChild","videoHeight","videoWidth","localResolution","localVideoHeight","localVideoWidth","safeId","removeChild","sendInbandDTMF","oscillator1","oscillator2","freq1","freq2","gainNode","createOscillator","frequency","createGainNode","remoteDescription","createDTMFSender","canInsertDTMF","insertDTMF","pluginLogger","tSdp","videoSendEnabled","canOrigSendVideo","setDTLSRoleFromStableLocalSDP","handleDTLSRoleFromRemoteSDP","remote_role","local_role","lastLocalSdp","setDTLSRole","prepareAudioConstraints","mediaConstraints","updateVideoConstraints","max","maxHeight","min","minHeight","maxWidth","minWidth","prepareVideoConstraints","frameRate","maxFrameRate","chromeMediaSourceId","privateMedia","privateGetUserMediaSuccessCallback","privateGetUserMediaFailureCallback","createRTCIceCandidate","addIceCandidate","setContainerSinkId","videoEl","sinkId","_super","getMediaSourceId","callSdpWithNoSsrc","processAnswerSetRemoteDescriptionSuccessCallback","processAnswerSetRemoteDescriptionFailureCallback","hasActiveVideo","processHoldSetRemoteDescriptionSuccessCallback","processHoldSetRemoteDescriptionFailureCallback","processRespondSetRemoteDescriptionSuccessCallback","senders","dtmf","urls","firefox","currentTarget","statsCallback","currentStat","componentId","ipAddress","portNumber","mozRtt","localStreams","remoteStreams","mainContainer","rtcPlugin","verifyPlugin","onloadParam","pluginid","applicationType","configuredPluginVersion","currentPluginVersion","currentPluginVersionString","major","minor","current_revision","pluginLogLevel","onFCSPLoaded","enableH264","setH264CodecStateChangeHandler","onH264CodecStateChangeHandler","getCurrentPluginVersionObject","revision","min_revision","build","min_build","onPluginRequired","current_build","setLang","appName","getElementById","createPeerConnection","getUserMediaCallback","label","OfferToReceiveVideo","mustCreatePeer","setTcpSetupAttiributesOnProcessAnswer","remoteDescriptionMainProcess","processUpdateSetLocalDescriptionFailureCallback","processUpdateWorkaroundSetRemoteDescriptionFailureCallback","sessionIdChanged","isDTLSFingerprintChanged","createPeerSuccessCallback","clearTcpSetupParameters","createPeerFailureCallback","streamUrl","getURLFromStream","webRtcPlugin22Version","webRtcPlugin31Version","webRtcLibraryDecoratorImpl","libraryObjWrapper","createSessionDescription","createIceCandidate","getVideoDeviceNames","getAudioInDeviceNames","getAudioOutDeviceNames","logSeverityLevel","get_logSeverityLevel","logCallback","setType","getType","onh264codecstatechange","splittedPluginVersion","stop","removeStream","webRtcLibraryChromeDecoratorImpl","_window","_navigator","screenShareExtensionLoaded","screenShareExtensionId","getSourceMedia","chromeMediaSource","webkitGetUserMedia","isScreensharing","runtime","sendMessage","screenSharingOpts","RTCSessionDescription","RTCIceCandidate","RTCPeerConnection","webkitRTCPeerConnection","sources","executeCallback","processMediaDevices","groupId","mediaDevices","enumerateDevices","MediaStreamTrack","getSources","numberOfOutputs","tracks","getTracks","webRtcLibraryFirefoxDecoratorImpl","mozGetUserMedia","mozRTCSessionDescription","mozRTCIceCandidate","mozRTCPeerConnection","WebRtcAdaptorModelFactory","WebRtcChromeAdaptorModel","WebRtcFirefoxAdaptorModel","WebRtcPluginAdaptorModel","variableKey","setMediaSourceId","sourceId","pluginVersion","_webRtcAdaptorFactory","_turnCredentialsManager","rtcAdaptor","setSuccessCallbacktoCall","clearSuccessParametersFromCall","addTurnCredentialsToUrl","serverType","onFcsSetupCompleted","getWebRtcAdaptor","returnParams","statsTimer","userAgent","successCallbackWrapper","createDataChannelSuccessCallback","createDataChannelFailureCallback","createDataChannelAnswerFailureCallback","_rtcLibrary","_WebRtcChromeAdaptor","_WebRtcContainerAdaptor","_WebRtcFirefoxAdaptor","_WebRtcFirefoxEsrAdaptor","_WebRtcPluginv22Adaptor","_WebRtcPluginv31Adaptor","NAVIGATOR_TYPES","CHROME","FIREFOX","CONTAINER","PLUGIN_MODES","WEBRTCH264","WEBRTC22","AUTO","AUTO22","AUTOH264","AUTOFIREFOX","DEFAULT_RTC_PLUGIN_MODE","DEFAULT_RTC_ADAPTOR","PLUGIN_MODE_LOOKUP_TABLE","webrtc","autofirefox","autoh264","webrtch264","auto","auto22","ADAPTOR_LOOKUP_TABLE","webrtc22","autoesr","COMPOSIT_PLUGIN_MODES","COMPOSIT_ADAPTOR_LOOKUP_TABLE","getNavigatorType","omniRegex","omniVersion","PLUGIN","identifyPluginMode","getPluginModeForComposition","navigatorType","validPluginMode","pluginModeBrowser","pluginModeBrowserVersion","browserVersion","getPluginMode","adaptorFactory","adaptor","pluginModeAndH264Bundle","getLastPluginMode","getPluginModes","getDefaultRtcPluginMode","getDefaultRtcAdaptor","isSupported","checkDevicesFinish","deviceChangeChannel","recentDeviceChange","ondevicechange","checkDevices","createAudioBridge","convertDevices","convertedDevices","mediaApi","startPreviewVideo","stopPreviewVideo","callApi","getAll","getById","states","make","callOptions","normalizeAddress","destinationCallId","videoTag","childNodes","node","tagName","audioBridgeApi","addCall","removeCall","audioBridge","normalizeSipUri","extractDomainFromAddress","addressString","indexOfAtSymbol","separateAddressAndDomain","defaultDomainString","extractedDomain","extractPrependedData","inputString","prependedDataMatches","extractLeadingSpecialCharacters","potentialLeadingChars","actualLeadingChars","withoutVisualSeparators","isPhoneNumber","cleanNumber","phoneNumberMatch","processAddress","processDomain","domainString","resultingAddressAndDomain","prepend","leadingChars","callReducers","newCall","originalRemoteParticipant","sendingVideo","callReducer","specificCallActions","defaultState","displaying","bridgeReducers","newBridge","bridgeReducer","specificBridgeActions","callErrorEvent","CALL_ERROR","CALL_STARTED","CALL_FORWARDED","CALL_JOIN","CALL_SCREENSHARE_CHANGE","DEVICE_CHANGE","DEVICE_ERROR","DEVICE_DEFAULT_CHANGE","MEDIA_PERMISSIONS","granted","MEDIA_INITIALIZED","LOCAL_VIDEO_ERROR","LOCAL_VIDEO_CHANGE","audioBridgeEvents","BRIDGE_ERROR","BRIDGE_CHANGE","callHistoryApi","getCache","getCallHistory","getCachedHistory","localLogs","localLogsRemoved","resourceLocation","uniqueLogs","some","isSimilar","newLogs","serverLogEntry","startTimePadding","durationPadding","abs","fetchLogs","removeLogs","createLocalLog","oldCallEndedPattern","callEndedPattern","oldStoreCallLogs","storeCallLogs","startIndex","logHistory","logItems","logRecord","oldGetCallById","contactName","newGetCallById","isCaller","getSessions","getSessionById","getTrackById","getMedia","getMediaById","getBrowserDetails","sessions","trackId","mediaId","browser","callHistoryEvent","CALL_HISTORY_CHANGE","CALL_HISTORY_CACHE_CHANGE","CALL_HISTORY_ERROR","clickToCallImplementation","clickToCallSaga","clickToCallApi","conn","clickToCallRequest","clickToCallEvent","CLICK_TO_CALL_STARTED","CLICK_TO_CALL_ERROR","defaultValues","reconnectLimit","reconnectDelay","reconnectTimeMultiplier","reconnectTimeLimit","autoReconnect","maxMissedPings","webSocketOAuthMode","baseConnectivity","responsibleParty","wsConnectFlow","connectivityApi","getSocketState","enableConnectivityChecking","enable","resetConnection","pinging","kandy","WS_CHANGE","websocketLifecycle","serverPingFlow","clientPingFlow","chan","wsConnectAction","wsInfo","disconnectWebsocketPattern","connConfig","lastContact","emitTask","wsEmitter","pingFlow","closeWebsocketPattern","cleanupWebSocket","access_token","ws","timeOfLastPing","configPingInterval","maxIdleDuration","serverPing","pingIntervalMillis","connCheck","connAck","_sendWSMessage","timeOfLastPong","shouldCheck","intervalInSeconds","message_type","shouldCheckConnectivity","delayStartTime","serverPong","timeElapsed","timeUntilNextPing","connectionAttempt","delayTime","safeOpenWs","openWebsocket","wsConnectStart","openWs","attemptDuration","remainingDelay","INITIAL_BUFFER_SIZE","WebSocket","validateWS","onOpen","onError","onclose","onmessage","createWsChannel","END","buffers","expanding","wsChannel","linkMessaging","features","receiveMessage","messageId","newConversation","MESSAGING_ERROR","sendMessageChannel","charset","toUrl","imResponse","sendMessageFinish","receiveMessagePattern","and","link","imnotificationParams","msgText","eventId","convo","messageReceived","mimeType","sendMessageReadFinish","fetchMessages","fetchMessagesFinished","clearMessages","deleteMessage","deleteMessageFinish","sendMessageHelper","read","messageReadHelper","participant","deliveryStatus","incomingMessageRead","sendMessageRead","createConversation","fetchConversations","fetchConversationsFinished","updateConversation","deleteConversation","deleteConversationFinish","isTypingList","operands","or","messagingApi","recipient","Conversation","lastMessage","lastReceived","lastPull","prevConv","sendMessageFinishHelper","conversationBase","initializers","groupIndex","methods","createMessage","part","messageContext","isGroup","Message","markRead","getMessage","deleteMessages","messageIds","delete","subscriber","subscriberWrapper","conversationHistory","messageBase","convoContext","withParts","addPart","validationResponse","validatePart","validTypeFlag","mwiLink","mwiReceived","MWI_ERROR","MWI_CHANGE","lastUpdated","newMessagesWaiting","totalVoice","unheardVoice","voice","fax","multimedia","mwiApi","voicemail","getMwi","mwiEventChannel","mwiNotificationParams","mwiresponse","errMsg","pushRegistrationSagas","idCacheLength","incomingCallNotificationMode","pushRegistration","enableWebsocketChannelEntry","processNotification","newChannelState","notificationApi","process","registerApplePush","deferredResult","registerAndroidPush","unregisterApplePush","registrationInfo","unregisterAndroidPush","enableWebsocket","NOTI_ERROR","NOTI_CHANGE","NOTI_RECEIVED","applePushRegistrationEntry","androidPushRegistrationEntry","applePushUnregisterEntry","androidPushUnregisterEntry","registerPushDeviceToken","unregisterPushDeviceToken","normalizeSDP","enableWebsocketChannel","queue","externalNotifications","notificationId","formattedPayload","ids","duplicate","sdpFormat","sdpCompressedBytes","atob","buf","ArrayBuffer","bufView","Uint8Array","strLen","sdpUnCompressedBytes","eventDataResponse","linkPresence","augmentedApi","newApi","statuses","activities","presenceApi","storedUsers","selectors","getSelf","loading","userIds","presenceContact","presenceObject","person","activityValue","overridingWillingnessValue","other","updatedUsers","presenceUpdateSaga","presenceGetSaga","presenceSubscribeSaga","presenceUnsubscribeSaga","presenceReceivedSaga","receivePresence","updatePresenceRequest","watchPresenceRequest","presenceWatcherResponse","wsAction","presenceWatcherNotificationParams","presenceRequest","presenceResponse","presenceWatcherRequest","userList","presenceError","SELF_CHANGE","getDetails","sip","subscribedUsers","eventInfo","receiveEventNotify","startsWith","eventSubscriptionRequest","eventSubscriptionResponse","finishAction","sipEventResub","shouldResub","unsubAction","receiveEventNotifyPattern","genericNotification","genericNotificationParams","sessiondataType","targetcall","subscriptionChange","change","EVENT_ERROR","EVENT_SUBSCRIPTION_CHANGED","unsubscribedUsers","EVENT_RECEIVED","links","usersLink","contactRequest","getDirectory","fetchUserLocale","userActions","contactActions","contactsEvents","usersEvents","addressBookEntries","localContactFromRemote","contactData","addressBookRequest","remoteContactFromLocal","encodeURIComponent","contactRestObject","searchCriteria","searchType","searchTypeInteger","directoryItems","localUserFromRemote","fetchSelf","userData","userProfile","currentLocale","extraURL","errorMessage","addressBookResponse","criteria","criteriaType","userProfileData","acceptLanguage","nickname","usersAPI","contactsAPI","refresh","objectToUse","contactsReducers","usersReducers","contactsPendingReducer","contactNewEvent","contactsChangeEvent","addContactFinishActions","pluginFactory","linkRequest","ucRequest","cpaasRequest","watchRequests","authorizations","handleRequest","__testonly__","responseTypes","json","blob","none","validateOptions","fetchOptions","makeResponse","ok","parseBody","contentType","responseBody","invalidUrlMessage","invalidResponseType","expectedType","apiResponse","httpResponse","linkAuthorization","ucAuthorization","cpaasAuthorization","authIssues","getStatusCode","REQUEST_ERROR","oldCallstack","codecStringsToRemove","finalRemoveList","filteredRtp","rtp","relevantCodecs","relevantCodec","fmtpParams","fmtp","isNumber","payloads","rtcpFb"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgH;AACtD;AACuE;AACxF;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqE,EAAE,EAQ1E;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,0FAAQ;;AAEV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6lBAA6lB;;AAE7lB;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL,kDAAkD,uEAAW;AAC7D;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,qEAAS;AAC1B;AACA;AACA,iBAAiB,uEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAqC,EAAE,EAI1C;;AAEH;AACA;AACA,gBAAgB,oEAAK;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yEAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,kBAAkB,OAAO,8DAAE;AAC3B;;AAEA;AACA,SAAS,qEAAM;AACf;;AAEA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,0BAA0B,0FAAQ,GAAG;AACrC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAyD,EAAE,EAE9D;;AAEH,MAAM,sEAAO;AACb;AACA;AACA,KAAK;AACL;;AAEA,MAAM,wEAAS,sBAAsB,uEAAQ,sBAAsB,sEAAO;AAC1E;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,sEAAO;AACb;AACA;AACA,KAAK;AACL;;AAEA,MAAM,KAAqC,EAAE,EAE1C;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAQ1C;;AAEH,MAAM,oEAAK;AACX,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,sBAAsB,+DAAQ;;AAE9B,MAAM,mEAAI;AACV;AACA;;AAEA;AACA;;AAEA,MAAM,oEAAK;AACX;AACA;AACA,cAAc,+DAAQ;AACtB,GAAG,UAAU,qEAAM;AACnB;AACA;AACA,cAAc,+DAAQ,oCAAoC,YAAY;AACtE,GAAG;AACH,wBAAwB,2DAAI;AAC5B;AACA;;AAEA,iBAAiB,qEAAM;AACvB,uBAAuB,2DAAI;AAC3B;AACA;;AAEA,YAAY,2DAAI,+DAA+D,YAAY;AAC3F;;AAEA;AACA;AACA;;AAEA,MAAM,mEAAI;AACV;AACA,GAAG;AACH,QAAQ,oEAAK;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,qEAAM,QAAQ,mEAAI;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA,MAAM,KAAqC,EAAE,aAI1C;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAK1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAY1C;;AAEH;AACA;AACA;AACA;AACA,kBAAkB,6EAAiB;AACnC;;AAEA,MAAM,KAAqC,EAAE,EAY1C;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,4FAA4F,eAAe;AAC3G;AACA;;AAEA,MAAM,KAAyD,EAAE,EAG9D;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,MAAM,KAAqC,EAAE,EAO1C;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC;AACjC;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,mEAAM;;AAE26B;;;;;;;;ACzqBj8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAI;AACpB;AACA;AACA,wBAAwB,uEAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qEAAS;AACpC;AACA;AACA,oBAAoB,8DAAE;AACtB;;AAEgM;;;;;;;AC7DhM,QAAQ,mBAAO,CAAC,GAAc;AAC9B,iBAAiB,mBAAO,CAAC,GAAmB;;;;;;;;;;;;;;;ACD5C;;;;AACA;;;;;;AAEA;AACO,MAAMA,oCAAc,eAApB;;AAEP;;;;;AAKA;;;;;AAKA,MAAMC,UAAU,2BAAcC,gBAAd,CAAhB;AACO,MAAMC,kCAAaF,OAAnB,C;;;;;;;ACjBM;;AAEb;;AAEA,cAAc,mBAAO,CAAC,EAA0B;;AAEhD;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtB6B;AACe;AAC6B;AAC+F;AAC0J;AACrS;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,4CAAO;AACb;AACA;;AAEA,MAAM,mDAAc;AACpB;AACA;;AAEA,MAAM,yCAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,iCAAY;AACrB;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,gCAAM;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,WAAW,gCAAa,UAAU,gCAAO;AACzC;;AAEA;AACA;AACA;AACA,aAAa,gCAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA,WAAW,gCAAK;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,wBAAI;AACf;AACA;AACA;AACA,WAAW,gCAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,WAAW,gCAAI;AACf;AACA;AACA;AACA,WAAW,gCAAI;AACf,cAAc,gCAAI;AAClB,gBAAgB,gCAAK;AACrB,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,IAAI,yCAAkB;AACtB,EAAE,gCAAK,mBAAmB,qCAAQ;AAClC,EAAE,gCAAK,SAAS,qCAAQ;AACxB;;AAEA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,wFAAwF,aAAa;AACrG;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAG1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;;AAEkJ;;;AC7bzG;;;;;;;;ACAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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ACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,qBAAY;AACxB;AACA,KAAK;AACL,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,qBAAY;AACvB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,KAAqC,EAAE,uBAM1C;;AAEL;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;;AAEA;AACA,4EAA4E,aAAa;AACzF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,8BAA8B;AAC9B;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAA6G,EAAE,EAElH;;AAE+H;;;ACtpBhI;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;;AAEe,oEAAQ,EAAC;AACG;;;;;;ACnBwH;AACvF;AACF;AAC0C;AACsF;AAC0d;AACvlB;AAC7B;AACY;AACf;;AAE7B,IAAI,yBAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,EAAE,yBAAK;;AAEP;AACA;AACA,IAAI,yBAAK;AACT;AACA;AACA;AACA;AACA;;AAEA;AA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AAG;AACH;AACA;AACA,WAAW,iCAAY;AACvB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,4CAAO;AAC1B;AACA,KAAK;AACL;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,yBAAK;AACb,SAAS,2CAAS;AAClB;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,6CAAQ,YAAY,2BAAO;AACpD,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA,QAAQ,4CAAO;AACf;AACA;AACA;;AAEA,QAAQ,6CAAQ;AAChB;AACA,+CAA+C,gCAAW;AAC1D;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,UAAU,0CAAK;AACf;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,iCAAM;AAC1C;;AAEA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,MAAM,0CAAO;AACb;AACA;AACA;AACA;;AAEA,yBAAyB,gCAA4B;AACrD;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,mDAAiB;AACvC;AACA,GAAG,UAAU,0CAAO;AACpB;AACA,GAAG;AACH;AACA;;AAEA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAAO,mBAAmB;AACjC;AACA;;AAEA,uBAAuB,gCAA4B;AACnD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,0CAAO,YAAY,gCAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iCAAc;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAI;AAC3B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,2BAAO;AACpB,cAAc,2BAAO;;AAErB;AACA,SAAS,yBAAK;AACd;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,gCAAiB;AACnB;AACA;;AAEA,4CAA4C,mBAAmB,wBAAI,oCAAoC,wBAAG,mCAAmC,wBAAG,mCAAmC,wBAAI,oCAAoC,wBAAI,oCAAoC,wBAAG,mCAAmC,wBAAI,oCAAoC,wBAAI,oCAAoC,wBAAQ,sCAAsC,wBAAM,sCAAsC,wBAAc,uCAAuC,wBAAW,yCAAyC,wBAAK,qCAAqC,wBAAW,0CAA0C,wBAAW;;AAEtqB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,iCAAM;AACZ,kBAAkB,yBAAI;;AAEtB;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,yBAAI;AACnB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,iCAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,iCAAO;AAC9B;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,6BAAS;AACb;AACA;AACA,EAAE,6BAAS;AACX;AACA;AACA;AACA,EAAE,6BAAS;AACX,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA,mDAAmD;AACnD,6BAA6B,oCAAoC,GAAG;AACpE,4BAA4B;AAC5B,2BAA2B;AAC3B;;AAEA,IAAI,4BAAQ;AACZ,kBAAkB,6BAAS;AAC3B,mBAAmB,6BAAS;AAC5B;AACA;AACA;AACA;AACA,GAAG,2BAA2B,6BAAS;AACvC;;AAEA;AACA;;AAEA;AACA,WAAW,yBAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB,UAAU,6CAAW;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,6CAAW;AAChC;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,wBAAwB,4BAAQ,GAAG;AACnC;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAE1C;;AAEL,IAAI,gCAAiB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,uBAAQ;;AAE1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,wBAAwB,QAAQ,sCAAI;AACpC;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA,MAAM,KAAwE,EAAE,EAE7E;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,yBAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,6CAAW;AACtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;;;AAGH,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAiD;AAC9D,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA,OAAO,UAAU,iCAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,yCAAI,wCAAwC,6CAAW;AACxE;AACA,iBAAiB,6CAAW;AAC5B;AACA,OAAO,UAAU,iCAAe;AAChC;AACA,iBAAiB,yCAAI;AACrB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAO;AACf;AACA,KAAK,UAAU,6CAAQ;AACvB;AACA;AACA;AACA;AACA,KAAK,2BAA2B,oCAAE;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;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AACA;AACA,+EAA+E;AAC/E;AACA;;AAEA;AACA,sDAAsD,GAAG;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA,uEAAuE;AACvE;;AAEA,2EAA2E;;AAE3E,6DAA6D;;AAE7D;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,sBAAsB;;AAEtB,mCAAmC;;AAEnC,6BAA6B;;AAE7B,iCAAiC;;AAEjC,2BAA2B;;AAE3B,iBAAiB,OAAO;AACxB;AACA;;AAEA,gBAAgB,qBAAS;AACzB;;AAEe,qDAAE,E;;AC9FoB;;AAErC;AACA,OAAO,oBAAQ;AACf;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2DAAK,E;;AClCmB;AACR;;AAE/B;AACA,0CAA0C;;AAE1C;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEO;AACA;AACQ;AACf;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAK;AACvB;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;;AAEA,WAAW,qBAAS;AACpB,GAAG;;;AAGH;AACA,6BAA6B;AAC7B,GAAG,eAAe;;;AAGlB;AACA;AACA;AACA,C;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,uDAAG,E;;ACtNS;AACA;AAC3B,SAAS,GAAG,aAAa,eAAG;AACb,qDAAE,E;;ACHU;AACY;;AAEvC;AACA;AACA,+CAA+C,GAAG,IAAI;;AAEtD;AACA,kCAAkC;;AAElC;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA,SAAS,qBAAS;AAClB;;AAEe,qDAAE,E;;ACvBjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,yDAAI,E;;AC/FQ;AACE;AAC7B,SAAS,GAAG,aAAa,gBAAI;AACd,qDAAE,E;;ACHF,8EAAsC,E;;ACAhB;;AAErC,SAAS,eAAO;AAChB,OAAO,oBAAQ;AACf;AACA;;AAEA;AACA;;AAEe,uEAAO,E;;ACVkB;AACA;AACA;AACA;AACE;AACQ;AACE;AACE;;;;;;;;ACPtD;AAAA;AACqC;;AAErC;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC,UAAU,IAA6B;AACxC;AACA,CAAC,MAAM,EAEN;;AAED,aAAa,oEAAQ;AACN,+DAAM,EAAC;;;;;;;;;ACjBtB,YAAY,mBAAO,CAAC,GAAe;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACpBA,kBAAkB,mBAAO,CAAC,EAAgB,MAAM,mBAAO,CAAC,EAAU;AAClE,+BAA+B,mBAAO,CAAC,EAAe,gBAAgB,mBAAmB,UAAU,EAAE,EAAE;AACvG,CAAC;;;;;;;ACFD,UAAU,mBAAO,CAAC,EAAQ;AAC1B,gBAAgB,mBAAO,CAAC,EAAe;AACvC,mBAAmB,mBAAO,CAAC,GAAmB;AAC9C,eAAe,mBAAO,CAAC,EAAe;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA,cAAc,mBAAO,CAAC,GAAiB;AACvC,iBAAiB,mBAAO,CAAC,GAAoB;AAC7C,eAAe,mBAAO,CAAC,EAAkB;AACzC,cAAc,mBAAO,CAAC,GAAiB;AACvC,mBAAmB,mBAAO,CAAC,GAAsB;;AAEjD,aAAa,mBAAO,CAAC,GAAoB;AACzC,YAAY,mBAAO,CAAC,GAAmB;;AAEvC;;AAEA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;;AAE9C;AACA;AACA,qEAAqE;;AAErE;;AAEA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA,WAAW,0DAA0D;AACrE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW,eAAe;AACrC,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,WAAW;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,MAAM;AACnB,cAAc,OAAO;AACrB,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,EAAE;AACf,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;;;;;;;;AC5LA;;;;;;;ACAA;AACA;AACA;;;;;;;ACFA,iBAAiB,mBAAO,CAAC,EAAS;;;;;;;ACAlC,SAAS,mBAAO,CAAC,EAAc;AAC/B,eAAe,mBAAO,CAAC,EAAc;AACrC,cAAc,mBAAO,CAAC,EAAgB;;AAEtC,iBAAiB,mBAAO,CAAC,EAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA,eAAe,mBAAO,CAAC,EAAW;AAClC;;;;;;;ACDA;AACA,UAAU,mBAAO,CAAC,EAAQ;AAC1B,eAAe,mBAAO,CAAC,EAAc;AACrC,eAAe,mBAAO,CAAC,EAAe;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACZA;AACA,UAAU;AACV;;;;;;;ACFA;AACA,eAAe,mBAAO,CAAC,EAAc;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA,gBAAgB,mBAAO,CAAC,EAAc;AACtC,eAAe,mBAAO,CAAC,EAAQ;AAC/B;;AAEA;AACA;AACA;;;;;;;ACPA,cAAc,mBAAO,CAAC,EAAY;AAClC,eAAe,mBAAO,CAAC,EAAQ;AAC/B,gBAAgB,mBAAO,CAAC,EAAc;AACtC,iBAAiB,mBAAO,CAAC,CAAS;AAClC;AACA;AACA;AACA;;;;;;;ACPA;AACA,eAAe,mBAAO,CAAC,EAAc;AACrC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,cAAc,mBAAO,CAAC,EAAQ;AAC9B;AACA;AACA;AACA;AACA;;;;;;;ACRA,UAAU,mBAAO,CAAC,EAAQ;AAC1B,aAAa,mBAAO,CAAC,GAAW;AAChC,WAAW,mBAAO,CAAC,GAAS;AAC5B,UAAU,mBAAO,CAAC,EAAe;AACjC,aAAa,mBAAO,CAAC,EAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,mBAAO,CAAC,EAAQ;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnFA;AACA;AACA,YAAY;AACZ,GAAG;AACH,YAAY;AACZ;AACA;;;;;;;ACNA,eAAe,mBAAO,CAAC,EAAc;AACrC,eAAe,mBAAO,CAAC,EAAc;AACrC,2BAA2B,mBAAO,CAAC,EAA2B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXa;AACb,aAAa,mBAAO,CAAC,EAAW;AAChC,WAAW,mBAAO,CAAC,CAAS;AAC5B,SAAS,mBAAO,CAAC,EAAc;AAC/B,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,cAAc,mBAAO,CAAC,EAAQ;;AAE9B;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,GAAG;AACH;;;;;;;ACbA,eAAe,mBAAO,CAAC,EAAQ;AAC/B;;AAEA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,iCAAiC,SAAS,EAAE;AAC5C,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS,qBAAqB;AAC3D,iCAAiC,aAAa;AAC9C;AACA,GAAG,YAAY;AACf;AACA;;;;;;;;;;;;;;;ACrBA;;;;AACA;;;;AACA;;;;AAEA;;;;AAIA;kBACewgB,oB;;AAEf;;AACO,MAAM9U,gCAAY+U,oBAAlB;;AAEP;AACO,MAAMC,sCAAeC,sBAArB,C;;;;;;ACfP,kBAAkB,YAAY,mBAAO,CAAC,GAA2B,sB;;;;;;ACAjE;A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AO,cAAc;AACrB,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,OAAO,oBAAoB;AAC3B,OAAO,kBAAkB;AACzB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wCAAwC,UAAU;AAClD,gCAAgC;AAChqCAAqC,eAAe,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC,aAAa;AAC7C,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sCAAsC;AACtC,0BAA0B;AAC1B,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AAC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A;AACA;;AAEA;AACA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA,SAAS,iBAAW;AACpB;;AAEA;AACA,oBAAoB,KAAqC,+BAA+B,SAA4Q;AACpW;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAuF;AACjL;;AAEA,oBAAoB,iBAAW;AAC/B;;AAEA;AACA,oBAAoB,KAAqC,+BAA+B,SAA0F;AAClL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAgN;AAC1S;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAuF;AACjL;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAAgU;AAC1Z;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,KAAqC,+BAA+B,SAA2J;AACvP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAga;AAC1f;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAA4G;AACtM;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAAoC;AAC9H;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;;AAGA;AACA;AACA,sBAAsB,KAAqC,gCAAgC,SAAuF;AAClL;;AAEA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAqC,gCAAgC,SAAsF;AACrL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;;AAEhB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,KAAqC,gCAAgC,SAA0U;AACra;;AAEA;AACA;AACA,KAAK;AACL,sBAAsB,KAAqC,gCAAgC,SAAqd;AAChjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,KAAqC,EAAE,uBAM1C;;AAEL;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,KAAqC,gCAAgC,SAAkV;AAC/a;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,KAAqC,gCAAgC,SAAgN;AACzS;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;;AAEA;AACA,4EAA4E,aAAa;AACzF;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,KAAqC,gCAAgC,SAA6H;AAC1N;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,aAAa,cAAa,CAAC,cAAa,GAAG,YAAY;AACvD;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAA6G,EAAE,EAElH;;AAE+H;;;;;;;;AC3qBhI;AAAe;AACf;AACA;;AAEA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AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;;;;;;ACxjgBAAgB,aAAa;AAC7B,oBAAoB,aAAa;AACjC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,iBAAiB,aAAa;AAC9B,oBAAoB,aAAa;AACjC,eAAe,aAAa;AAC5B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrWA;AACA;AACA;AACA,UAAU;AACV;AACA;;;;;;;ACLA,iBAAiB,mBAAO,CAAC,GAAY;;AAErC;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,EAAU;;;;;;;ACHnC;;;;;;;ACAA,oBAAoB,mBAAO,CAAC,GAAwB;AACpD,eAAe,mBAAO,CAAC,EAAkB;AACzC,cAAc,mBAAO,CAAC,GAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;;;;;;AClDA;AACA;AACA;AACA;;;;;;;ACHA,mBAAO,CAAC,EAAiC;AACzC,mBAAO,CAAC,EAAgC;AACxC,mBAAO,CAAC,EAA6B;AACrC,mBAAO,CAAC,GAAwB;AAChC,mBAAO,CAAC,GAAgC;AACxC,mBAAO,CAAC,GAA4B;AACpC,iBAAiB,mBAAO,CAAC,CAAkB;;;;;;;ACN3C,gBAAgB,mBAAO,CAAC,EAAe;AACvC,cAAc,mBAAO,CAAC,EAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBa;AACb,aAAa,mBAAO,CAAC,EAAkB;AACvC,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,qBAAqB,mBAAO,CAAC,EAAsB;AACnD;;AAEA;AACA,mBAAO,CAAC,EAAS,qBAAqB,mBAAO,CAAC,EAAQ,4BAA4B,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;;ACZa;AACb,uBAAuB,mBAAO,CAAC,GAAuB;AACtD,WAAW,mBAAO,CAAC,GAAc;AACjC,gBAAgB,mBAAO,CAAC,EAAc;AACtC,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,EAAgB;AACzC,gCAAgC;AAChC,cAAc;AACd,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA,8BAA8B;;;;;;;;ACAjB;AACb,cAAc,mBAAO,CAAC,EAAY;AAClC,aAAa,mBAAO,CAAC,EAAW;AAChC,UAAU,mBAAO,CAAC,EAAQ;AAC1B,cAAc,mBAAO,CAAC,EAAY;AAClC,cAAc,mBAAO,CAAC,EAAW;AACjC,eAAe,mBAAO,CAAC,EAAc;AACrC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,iBAAiB,mBAAO,CAAC,EAAgB;AACzC,YAAY,mBAAO,CAAC,EAAW;AAC/B,yBAAyB,mBAAO,CAAC,GAAwB;AACzD,WAAW,mBAAO,CAAC,GAAS;AAC5B,gBAAgB,mBAAO,CAAC,GAAc;AACtC,iCAAiC,mBAAO,CAAC,EAA2B;AACpE,cAAc,mBAAO,CAAC,GAAY;AAClC,gBAAgB,mBAAO,CAAC,GAAe;AACvC,qBAAqB,mBAAO,CAAC,GAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,mBAAO,CAAC,EAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,kCAAkC;AACrD,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,uCAAuC;AACtD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,yBAAyB,KAAK;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB;AACA,uBAAuB,mBAAO,CAAC,EAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,oBAAoB;AAC9E,mBAAO,CAAC,EAAsB;AAC9B,mBAAO,CAAC,GAAgB;AACxB,UAAU,mBAAO,CAAC,CAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gDAAgD,mBAAO,CAAC,GAAgB;AACxE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA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f;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,sBAAsB,uBAAuB,WAAW,IAAI;AAC5D,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,KAAK;AACL;AACA,sBAAsB,mCAAmC;AACzD,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,EAAE,mBAAO,CAAC,GAAgB;AAC1B,EAAE,mBAAO,CAAC,EAAe;AACzB;;AAEA,sBAAsB,mBAAO,CAAC,EAAY;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA,oBAAoB,uBAAuB;;AAE3C,oDAAoD,6BAA6B;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,eAAe,EAAE;AAC3C,0BAA0B,gBAAgB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,8CAA8C,YAAY,EAAE;;AAE5D;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO,QAAQ,iCAAiC;AACpG,CAAC;AACD;AACA;A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AA4B/Q,QAA5B,CAAqC+Q,MAAM+O,MAA3C,CAAJ,EAAwD;AACtDx9B,YAAQyuB,MAAM+O,MAAd,EAAsB,GAAG/O,MAAMV,QAA/B;AACA;AACD,GAHD,MAGO,IAAIU,MAAM+O,MAAN,KAAiB,UAArB,EAAiC;AACtCx9B,YAAQoa,QAAR;AACA;AACD;;AAED,QAAM,EAAExS,MAAF,EAAUyhC,KAAV,EAAiBtvC,OAAjB,KAA6BovC,SAAS1a,KAAT,CAAnC;AACAzuB,UAAQyuB,MAAM+O,MAAd,EAAsB51B,MAAtB,EAA8ByhC,KAA9B,EAAqCtvC,OAArC;AACD,C;;;;;;AC5DD,WAAW,mBAAO,CAAC,CAAqB;AACxC,uCAAuC,4BAA4B;AACnE,yCAAyC;AACzC;AACA;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2FAA2F,aAAa;AACxG;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,0EAA0E,aAAa;AACvF;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;;AC5pBnB;;;;AACA;;;;AACA;;;;;;AAEA;;;;kBAIe,CACb,EAAE2E,MAAM,MAAR,EAAgB4kC,IAAIxX,gBAApB,EADa,EAEb,EAAEptB,MAAM,QAAR,EAAkB4kC,IAAIptC,gBAAtB,EAFa,EAGb,EAAEwI,MAAM,QAAR,EAAkB4kC,IAAIgG,gBAAtB,EAHa,C;;;;;;;;;;;;;;;;;;;;;kBCwBSC,S;;AApBxB;;;;AACA;;;;AACA;;IAAY/gC,O;;AAEZ;;AACA;;AACA;;;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AAGA;;;;;;AANA;;;AAJA;AApBA;;;;;;;;;;;AAWA;AAqBe,SAAS+gC,SAAT,CAAoBrxC,UAAU,EAA9B,EAAkC;AAC/C,QAAMwG,OAAO,MAAb;;AAEA,QAAMb,SAASvI,kBAAWyI,SAAX,CAAqB,MAArB,CAAf;;AAEA;AACA,MAAI7F,QAAQoF,OAAR,IAAmB,OAAOpF,QAAQoF,OAAf,KAA2B,UAAlD,EAA8D;AAC5D,WAAOpF,QAAQoF,OAAf;AACAO,WAAOqc,IAAP,CAAY,oEAAZ;AACD;;AAED;AACA,MAAIhiB,QAAQ8oB,QAAR,IAAoB,CAAC,oBAAYzH,sBAAZ,EAAuBmE,QAAvB,CAAgCxlB,QAAQ8oB,QAAR,CAAiBkI,WAAjB,EAAhC,CAAzB,EAA0F;AACxF,WAAOhxB,QAAQ8oB,QAAf;AACAnjB,WAAOqc,IAAP,CAAY,kEAAZ;AACD;;AAEDhiB,YAAU,wBAAY7C,sBAAZ,EAA4B6C,OAA5B,CAAV;;AAEA;AACA,MAAIA,QAAQ62B,UAAR,KAAuB,KAA3B,EAAkC;AAChC,QAAI72B,QAAQ62B,UAAR,YAA8Bya,MAAlC,EAA0C;AACxCtxC,cAAQ62B,UAAR,GAAqB,wBAAYC,gCAAZ,EAAsC92B,QAAQ62B,UAA9C,CAArB;AACD,KAFD,MAEO;AACL72B,cAAQ62B,UAAR,GAAqBC,gCAArB;AACD;AACF;;AAED;AACA;AACA15B,oBAAW6zB,QAAX,CAAoBjxB,QAAQ8oB,QAA5B;AACA,MAAI9oB,QAAQoF,OAAZ,EAAqB;AACnBhI,sBAAW+zB,UAAX,CAAsBnxB,QAAQoF,OAA9B;AACD;;AAED,wBAAchI,kBAAW6yC,UAAX,EAAd,EAAuC/B,OAAvC,CAA+CvoC,UAAU;AACvDA,WAAOsrB,QAAP,CAAgBjxB,QAAQ8oB,QAAxB;AACA,QAAI9oB,QAAQoF,OAAZ,EAAqB;AACnBO,aAAOwrB,UAAP,CAAkBnxB,QAAQoF,OAA1B;AACD;AACF,GALD;;AAOA,YAAWipC,IAAX,CAAiB,EAAEkD,MAAF,EAAjB,EAA6B;AAC3B;AACA;AACA,UAAM,kBAAI,sBAAavxC,OAAb,EAAsBwG,IAAtB,CAAJ,CAAN;AACA;AACA,UAAM,kBAAI8J,QAAQ4gB,aAAR,CAAsB,wBAAY9zB,iBAAZ,CAAtB,CAAJ,CAAN;;AAEA;AACA,QAAIm0C,MAAJ,EAAY;AACV;AACA;AACA,YAAMC,mBAAmBD,OAAOE,QAAP,CAAgB7d,IAAzC;AACA,UAAI5zB,QAAQoF,OAAZ,EAAqB;AACnBosC,yBAAiBrgB,UAAjB,CAA4BnxB,QAAQoF,OAApC;AACD;AACD,4BAAcosC,iBAAiBvB,UAAjB,EAAd,EAA6C/B,OAA7C,CAAqDvoC,UAAU;AAC7DA,eAAOsrB,QAAP,CAAgBjxB,QAAQ8oB,QAAxB;AACA,YAAI9oB,QAAQoF,OAAZ,EAAqB;AACnBO,iBAAOwrB,UAAP,CAAkBnxB,QAAQoF,OAA1B;AACD;AACF,OALD;AAMD;AACF;;AAED,QAAMssC,aAAa;AACjBlrC,QADiB;AAEjBgnC,kBAAc,CAAC,MAAD,CAFG;AAGjBa,QAHiB;AAIjBZ,sBAJiB;AAKjBU,+BALiB;AAMjBpB,WAAO,CAAC4E,oBAAD,EAAgBC,sBAAhB;AANU,GAAnB;;AASA5xC,UAAQ8oB,QAAR,GAAmB9oB,QAAQ8oB,QAAR,CAAiBkI,WAAjB,EAAnB;AACA,QAAMC,WAAW5P,uBAAUrhB,QAAQ8oB,QAAlB,CAAjB;AACA;AACA;AACA,MAAImI,YAAY5P,uBAAUG,IAAtB,IAA8BxhB,QAAQ62B,UAAR,KAAuB,KAAzD,EAAgE;AAC9D6a,eAAWtD,UAAX,GAAwB,uBAAmBpuC,OAAnB,CAAxB;AACD;;AAED,SAAO0xC,UAAP;AACD;;AAvFD,iC;;;;;;;;;;;;kBCMwBjE,G;;AAlCxB;;AACA;;IAAYn9B,O;;AACZ;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Be,SAASm9B,GAAT,CAAc,EAAEI,QAAF,EAAYF,QAAZ,EAAd,EAAsC;AACnD,QAAM5lC,MAAM3K,kBAAWyI,SAAX,CAAqB,MAArB,CAAZ;;AAEA,QAAM4nC,MAAM;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCAoE,YAAQ;AACNlwB,cAAQ,QADF;AAEND,aAAO,OAFD;AAGND,YAAM,MAHA;AAIND,YAAM,MAJA;AAKND,aAAO;AALD,KAnCE;;AA2CV;;;;;;;;;;;;;;;;;;;AAmBA0P,aAAUtc,KAAV,EAAiBhT,IAAjB,EAAuB;AACrBoG,UAAIga,KAAJ,CAAU9kB,qBAAc,mBAAxB,EAA6C0X,KAA7C,EAAoDhT,IAApD;;AAEAksC,eAASv9B,QAAQ2gB,QAAR,CAAiBtc,KAAjB,EAAwBhT,IAAxB,CAAT;AACD,KAlES;;AAoEV;;;;;;;;;;AAUAouC,aAAUpuC,IAAV,EAAgB;AACdoG,UAAIga,KAAJ,CAAU9kB,qBAAc,mBAAxB,EAA6C0E,IAA7C;;AAEA,aAAO,yBAASgsC,UAAT,EAAqBhsC,IAArB,CAAP;AACD,KAlFS;;AAoFV;;;;;;;;;;;;;;;;;;;;;;;;AAwBAwvB,eAAY/rB,OAAZ,EAAqBzD,IAArB,EAA2B;AACzBoG,UAAIga,KAAJ,CAAU9kB,qBAAc,qBAAxB,EAA+CmI,OAA/C,EAAwDzD,IAAxD;;AAEAksC,eAASv9B,QAAQ6gB,UAAR,CAAmB/rB,OAAnB,EAA4BzD,IAA5B,CAAT;AACD,KAhHS;;AAkHV;;;;;;;;;;;;;;;;;;AAkBAmwC,eAAY;AACV/pC,UAAIga,KAAJ,CAAU9kB,qBAAc,iBAAxB;;AAEA,aAAO,yBAAS0wC,UAAT,CAAP;AACD;AAxIS,GAAZ;;AA2IA,SAAO;AACLhoC,YAAQ8nC;AADH,GAAP;AAGD,C,CApLD,e;;;;;;;;;;;;;;;;;QCUgBsC,Q,GAAAA,Q;QAWA+B,Q,GAAAA,Q;;AApBhB;;;;AAEA;;;;;;;AAOO,SAAS/B,QAAT,CAAmBhyC,KAAnB,EAA0B4D,OAAO,SAAjC,EAA4C;AACjD,QAAMowC,cAAc,mBAAUh0C,KAAV,CAApB;AACA,SAAOg0C,YAAYne,IAAZ,CAAiBjyB,IAAjB,CAAP;AACD;;AAED;;;;;;AAfA;AAqBO,SAASmwC,QAAT,CAAmB/zC,KAAnB,EAA0B;AAC/B,QAAMg0C,cAAc,mBAAUh0C,KAAV,CAApB;AACA,SAAO,oBAAYg0C,YAAYne,IAAxB,CAAP;AACD,C;;;;;;;;;;;;;;;;;ACxBD;;IAAYnyB,W;;AAGZ;;;;;;AAEA;;;;;;;;;;;AAWA,MAAM0rC,WAAW,EAAjB;;AAdA;;;AAgBAA,SAAS1rC,YAAY8vB,aAArB,IAAsC;AACpCyc,OAAMjwC,KAAN,EAAaiK,MAAb,EAAqB;AACnB;AACA,sCACKjK,KADL,EAEKiK,OAAOnG,OAFZ;AAID;AAPmC,CAAtC;;AAUA,MAAMssC,UAAU,iCAAchB,QAAd,EAAwB,EAAxB,CAAhB;kBACegB,O;;;;;;;AC5Bf,YAAY,mBAAO,CAAC,GAAY;;AAEhC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACnBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;QCnDkBwD,a,GAAAA,a;QAQAC,e,GAAAA,e;QAWApmB,W,GAAAA,W;QAuCAwmB,a,GAAAA,a;QAuCFC,W,GAAAA,W;QAuBAC,a,GAAAA,a;;AAtIhB;;IAAYzwC,W;;AACZ;;IAAY6O,O;;AACZ;;AAGA;;;;;;AAEA;AARA;AASA,MAAMo/B,cAAc,SAApB;;AAEA;;;;;;AANA;AAUO,UAAWiC,aAAX,GAA4B;AACjC,QAAM,wBAAUlwC,YAAY4vB,SAAtB,EAAiC7F,WAAjC,CAAN;AACD;;AAED;;;;AAIO,UAAWomB,eAAX,GAA8B;AACnC,QAAM,wBAAUnwC,YAAY+vB,WAAtB,EAAmCwgB,aAAnC,CAAN;AACD;;AAED;;;;;;;AAOO,UAAWxmB,WAAX,CAAwBxjB,MAAxB,EAAgC;AACrC,QAAM,EAAE2M,KAAF,EAAShT,IAAT,KAAkBqG,OAAOnG,OAA/B;;AAEA,MAAI;AACF,QAAI,CAACF,IAAD,IAASA,SAAS+tC,WAAtB,EAAmC;AACjC;AACAtyC,wBAAW6zB,QAAX,CAAoBtc,KAApB;AACA;AACAvX,wBAAW6yC,UAAX,GAAwB/B,OAAxB,CAAgCvoC,UAAU;AACxCA,eAAOsrB,QAAP,CAAgBtc,KAAhB;AACD,OAFD;;AAIA;AACA;AACA,YAAM,kBAAIrE,QAAQ4gB,aAAR,CAAsB+gB,YAAY70C,iBAAZ,CAAtB,CAAJ,CAAN;AACD,KAXD,MAWO;AACL;AACAA,wBAAW6zB,QAAX,CAAoBtvB,IAApB,EAA0BgT,KAA1B;AACA;AACAvX,wBAAW6yC,UAAX,CAAsBtuC,IAAtB,EAA4BusC,OAA5B,CAAoCvoC,UAAU;AAC5CA,eAAOsrB,QAAP,CAAgBtc,KAAhB;AACD,OAFD;;AAIA;AACA,YAAM,kBAAIrE,QAAQ4gB,aAAR,CAAsB,EAAE,CAACvvB,IAAD,GAAQgT,KAAV,EAAtB,CAAJ,CAAN;AACD;AACF,GAvBD,CAuBE,OAAOw9B,GAAP,EAAY;AACZ,UAAMpqC,MAAM3K,kBAAWyI,SAAX,CAAqB,MAArB,CAAZ;AACAkC,QAAIvC,KAAJ,CAAU2sC,IAAI7rC,OAAd;AACD;AACF;;AAED;;;;;;;AAOO,UAAW0rC,aAAX,CAA0BhqC,MAA1B,EAAkC;AACvC,QAAM,EAAE5C,OAAF,EAAWzD,IAAX,KAAoBqG,OAAOnG,OAAjC;;AAEA,MAAI;AACF,QAAI,CAACF,IAAD,IAASA,SAAS+tC,WAAtB,EAAmC;AACjC;AACAtyC,wBAAW+zB,UAAX,CAAsB/rB,OAAtB;AACA;AACAhI,wBAAW6yC,UAAX,GAAwB/B,OAAxB,CAAgCvoC,UAAU;AACxCA,eAAOwrB,UAAP,CAAkB/rB,OAAlB;AACD,OAFD;;AAIA;AACA;AACA;AACA,YAAM,kBAAIkL,QAAQ8gB,eAAR,CAAwB8gB,cAAc90C,iBAAd,CAAxB,CAAJ,CAAN;AACD,KAZD,MAYO;AACL;AACAA,wBAAW+zB,UAAX,CAAsBxvB,IAAtB,EAA4ByD,OAA5B;AACA;AACAhI,wBAAW6yC,UAAX,CAAsBtuC,IAAtB,EAA4BusC,OAA5B,CAAoCvoC,UAAU;AAC5CA,eAAOwrB,UAAP,CAAkB/rB,OAAlB;AACD,OAFD;;AAIA;AACA,YAAM,kBAAIkL,QAAQ8gB,eAAR,CAAwB,EAAE,CAACzvB,IAAD,GAAQyD,OAAV,EAAxB,CAAJ,CAAN;AACD;AACF,GAxBD,CAwBE,OAAO+sC,GAAP,EAAY;AACZ,UAAMpqC,MAAM3K,kBAAWyI,SAAX,CAAqB,MAArB,CAAZ;AACAkC,QAAIvC,KAAJ,CAAU2sC,IAAI7rC,OAAd;AACD;AACF;;AAED;;;;;;AAMO,SAAS2rC,WAAT,CAAsB70C,UAAtB,EAAkC;AACvC;AACA,QAAMuyC,UAAUvyC,WAAW6yC,UAAX,EAAhB;AACA,QAAMmC,QAAQ,CAAC,GAAG,kBAAQzC,QAAQ1nC,GAAR,CAAYtC,UAAUA,OAAOhE,IAA7B,CAAR,CAAJ,CAAd;;AAEA,QAAMkwC,SAAS,EAAf;AACA;AACAA,SAAOnC,WAAP,IAAsBtyC,WAAW2yC,QAAX,EAAtB;;AAEA;AACAqC,QAAMlE,OAAN,CAAcvsC,QAAQ;AACpBkwC,WAAOlwC,IAAP,IAAevE,WAAW2yC,QAAX,CAAoBpuC,IAApB,CAAf;AACD,GAFD;;AAIA,SAAOkwC,MAAP;AACD;;AAED;;;;;;AAMO,SAASK,aAAT,CAAwB90C,UAAxB,EAAoC;AACzC;AACA,QAAMuyC,UAAUvyC,WAAW6yC,UAAX,EAAhB;AACA,QAAMmC,QAAQ,CAAC,GAAG,kBAAQzC,QAAQ1nC,GAAR,CAAYtC,UAAUA,OAAOhE,IAA7B,CAAR,CAAJ,CAAd;;AAEA,QAAM0wC,WAAW,EAAjB;AACA;AACAA,WAAS3C,WAAT,IAAwBtyC,WAAW4yC,UAAX,EAAxB;;AAEA;AACAoC,QAAMlE,OAAN,CAAcvsC,QAAQ;AACpB0wC,aAAS1wC,IAAT,IAAiBvE,WAAW4yC,UAAX,CAAsBruC,IAAtB,CAAjB;AACD,GAFD;;AAIA,SAAO0wC,QAAP;AACD,C;;;;;;ACtJD,kBAAkB,YAAY,mBAAO,CAAC,GAAwB,sB;;;;;;ACA9D,mBAAO,CAAC,EAAiC;AACzC,mBAAO,CAAC,EAAgC;AACxC,mBAAO,CAAC,EAA6B;AACrC,mBAAO,CAAC,GAAoB;AAC5B,mBAAO,CAAC,GAA4B;AACpC,mBAAO,CAAC,GAAuB;AAC/B,mBAAO,CAAC,GAAyB;AACjC,iBAAiB,mBAAO,CAAC,CAAkB;;;;;;;;ACP9B;AACb,aAAa,mBAAO,CAAC,GAAsB;AAC3C,eAAe,mBAAO,CAAC,GAAwB;AAC/C;;AAEA;AACA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,yBAAyB,mEAAmE;AAC5F,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACbY;AACb,SAAS,mBAAO,CAAC,EAAc;AAC/B,aAAa,mBAAO,CAAC,EAAkB;AACvC,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,UAAU,mBAAO,CAAC,EAAQ;AAC1B,iBAAiB,mBAAO,CAAC,EAAgB;AACzC,YAAY,mBAAO,CAAC,EAAW;AAC/B,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,WAAW,mBAAO,CAAC,GAAc;AACjC,iBAAiB,mBAAO,CAAC,GAAgB;AACzC,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,cAAc,mBAAO,CAAC,EAAS;AAC/B,eAAe,mBAAO,CAAC,GAAwB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6BAA6B;AAC7B,0BAA0B;AAC1B,0BAA0B;AAC1B,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,0BAA0B;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;AC/Ia;AACb,aAAa,mBAAO,CAAC,EAAW;AAChC,cAAc,mBAAO,CAAC,EAAW;AACjC,WAAW,mBAAO,CAAC,EAAS;AAC5B,YAAY,mBAAO,CAAC,EAAU;AAC9B,WAAW,mBAAO,CAAC,EAAS;AAC5B,kBAAkB,mBAAO,CAAC,EAAiB;AAC3C,YAAY,mBAAO,CAAC,EAAW;AAC/B,iBAAiB,mBAAO,CAAC,EAAgB;AACzC,eAAe,mBAAO,CAAC,EAAc;AACrC,qBAAqB,mBAA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,CAAC,CAAC,MAA8B,GAAG,SAAc;;;;;;;;;;;;;;;;;;kBChHzB61C,S;;AAvFxB;;;;AAEA;;AACA;;IAAYC,e;;AACZ;;IAAYC,e;;AACZ;;IAAYC,e;;AACZ;;AAOA;;AAEA;;AACA;;AACA;;;;AAGA;;AACA;;AACA;;AAGA;;;;AACA;;AACA;;IAAYjkD,W;;AACZ;;AACA;;;;AAGA;;;;;;AAEA;;;AAVA;AAWA,MAAMsG,MAAM49C,iBAAO9/C,SAAP,CAAiB,MAAjB,CAAZ;;AAJA;;;AAZA;AArBA;AACA;;AAqCA,MAAM+/C,SAASD,iBAAO9/C,SAAP,CAAiB,KAAjB,CAAf;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAIA,MAAMC,UAAU;AACZ;AACAC,gBAFY;;AAIZ;AACAC,gBALY;;AAOZ;AACAC,gBARY,EASZC,gBATY;;AAWZ;AACAC,iBAZY,CAAhB;;AATA;AAyBO,SAASN,SAAT,GAAqB;AACxB,UAAMO,SAAS,IAAIC,kBAAJ,EAAf;;AAEA;AACAP,YAAQnlB,OAAR,CAAgB2lB,qBAAWrwD,IAAX,CAAgBmwD,MAAhB,CAAhB;;AAEA,UAAM59C,YAAY49C,OAAO59C,SAAzB;AACA,QAAIi2C,MAAM2H,OAAO59C,SAAP,CAAiB+9C,IAA3B;;AAEA;AACA9H,QAAI5uD,UAAJ,GAAiB2Y,UAAUtQ,UAA3B;AACAumD,QAAIp3B,YAAJ,GAAmB7e,UAAUg+C,YAA7B;AACA/H,QAAI/lD,IAAJ,GAAW8P,UAAUi+C,IAArB;;AAEA;AACAhI,QAAI6B,qBAAJ,GAA4B93C,UAAU83C,qBAAtC;AACA7B,QAAI8B,iBAAJ,GAAwB/3C,UAAU+3C,iBAAlC;;AAEA;AACA6F,WAAOpuD,OAAP,CAAewQ,SAAf;;AAEA,WAAOi2C,GAAP;AACH,C;;;;;;AClDD,yFAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;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jnC;AACH,qBAHY,CAAb;;AAKAyjE,qCAAiBG,gBAAjB,CAAkCO,KAAlC,EAAyCl9B,MAAzC;AACH,iBAjBD,MAiBO;AACHjnC;AACH;AACJ,aArB0C,CAAP,EAqBhC,MAAMyjE,iBAAiBS,gBAAjB,GAAoCluE,SArBV,CAApC;AAsBH;;AAED,eAAOytE,iBAAiBS,gBAAxB;AACH,KAhCD;;AAmCA;;;;;;AAMAT,qBAAiBW,iBAAjB,GAAqC,UAASC,MAAT,EAAiB;AAClDZ,yBAAiBO,oBAAjB;AACA,eAAO,mBAAOK,MAAP,EAAe,MAAMZ,iBAAiBO,oBAAjB,IAAyC,CAA9D,CAAP;AACH,KAHD;;AAKAP,qBAAiBO,oBAAjB,GAAwC,CAAxC;;AAEA,WAAOP,gBAAP;AACH,C;;;;;;AC/FD,aAAa,mBAAO,CAAC,GAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA,gBAAgB,mBAAO,CAAC,GAAa;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA,eAAe,mBAAO,CAAC,GAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACnCA,eAAe,mBAAO,CAAC,GAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA,eAAe,mBAAO,CAAC,GAAa;AACpC,eAAe,mBAAO,CAAC,GAAY;AACnC,eAAe,mBAAO,CAAC,GAAY;;AAEnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/DA,sBAAsB,mBAAO,CAAC,GAAoB;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,mBAAmB,mBAAO,CAAC,GAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA,aAAa,mBAAO,CAAC,GAAW;AAChC,gBAAgB,mBAAO,CAAC,GAAc;AACtC,qBAAqB,mBAAO,CAAC,GAAmB;;AAEhD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA,iBAAiB,mBAAO,CAAC,GAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;;;;;;;ACRA;AACA;;AAEA;;;;;;;;ACHA,aAAa,mBAAO,CAAC,GAAW;;AAEhC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA,2BAA2B,iCAAiC;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,2DAA2D;AACjF,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,mBAAmB;AAChC,wBAAwB,cAAc,gBAAgB;AACtD;AACA;AACA;AACA,aAAa,iEAAiE;AAC9E,wBAAwB,kBAAkB;AAC1C;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kDAAkD,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,yDAAyD;AAC1F;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA,8BAA8B,yCAAyC,oCAAoC,EAAE;AAC7G,uEAAuE,oCAAoC,EAAE,EAAE;AAC/G,qCAAqC,wBAAwB,EAAE;AAC/D,qCAAqC,wBAAwB,EAAE;AAC/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,mCAAmC,oCAAoC,gBAAgB,EAAE,EAAE;;AAE3F;AACA,sCAAsC,4CAA4C,gBAAgB,EAAE,EAAE;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,CAAC;;;;;;;;ACzID;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mBAAO,CAAC,GAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9DA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;ACzLD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AA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6B;AAChC,WAAOI,uBAAUn8D,KAAV,CAAgB+7D,SAAhB,CAAP;AACH;;AAEM,SAASG,QAAT,CAAkBF,SAAlB,EAA6B;AAChC,WAAOG,uBAAUC,KAAV,CAAgBJ,SAAhB,CAAP;AACH,C;;;;;;ACbD,aAAa,mBAAO,CAAC,GAAU;AAC/B,aAAa,mBAAO,CAAC,GAAU;;AAE/B;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;;;;;;;ACVA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+CAA+C;;AAE/C;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,GAAW;AACjC;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,uCAAuC;AACvC;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,6BAA6B;AAClD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E,GAAG;AACH;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;AC3HA,cAAc,mBAAO,CAAC,GAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,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AiC;;AAEjC;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB,6BAA6B;AAC7B;;;;AAIA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,WAAW;AACX,YAAY;AACZ,QAAQ;AACR,mBAAmB;;AAEnB,gBAAgB,oBAAoB;AACpC;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;;AAE/C,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU,EAAE;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;;AAE/B;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,uBAAuB;AACvB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;AACrB;AACA,8CAA8C;AAC9C,eAAe;AACf,WAAW;AACX,QAAQ;;AAER;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,QAAQ;AACR,WAAW;AACX,aAAa;AACb,WAAW;AACX,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb,QAAQ,kBAAkB;AAC1B;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,oBAAoB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,QAAQ;;AAER;AACA,aAAa,eAAe,QAAQ,iCAAiC;AACrE,aAAa,eAAe,QAAQ,iCAAiC;AACrE,aAAa,gBAAgB,OAAO,+BAA+B;;AAEnE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,eAAe;AACf,kBAAkB;AAClB;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,YAAY;AACZ;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA,WAAW;AACX,SAAS;AACT,aAAa;AACb,WAAW;AACX,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,OAAO;AACP;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,kCAAkC;AAClC;AACA,eAAe;AACf;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA,oCAAoC;AACpC;AACA,OAAO;;AAEP;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oBAAoB;AACpB,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,QAAQ,OAAO,wBAAwB;;AAE9E;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;AAEA,KAAK;;AAEL,+BAA+B,kCAAkC;AACjE;;AAEA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL,UAAU,iCAAiC,EAAE;;AAE7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gCAAgC;AAChC,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA,wCAAwC;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,MAAM,GAAG,MAAM,GAAG;AAChD;AACA;AACA;AACA,SAAS,IAAI,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,wDAAwD;AACxD,uCAAuC;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,4BAA4B;AAC5B,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,wBAAwB;;AAE1D,GAAG;AACH;AACA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;;AAEA,sBAAsB;AACtB;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,oEAAoE;;;;;AAK3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;;AAE5B,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,qBAAqB,cAAc;AAC1D;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B,kBAAkB,UAAU;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC,wBAAwB;AACxB,YAAY;AACZ,UAAU;AACV,+BAA+B;AAC/B,gCAAgC;AAChC;AACA;;AAEA,wBAAwB;;AAExB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;;AAE3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA,yDAAyD;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB,aAAa;;AAEb;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb,WAAW;AACX,mBAAmB;;AAEnB;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB;AACrB,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB;AACnB,kBAAkB;AAClB,0BAA0B;AAC1B,4BAA4B;AAC5B,uBAAuB;AACvB,mBAAmB;AACnB,gBAAgB;AAChB,qBAAqB;AACrB,mBAAmB;AACnB,6BAA6B;AAC7B,uBAAuB;;AAEvB,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,iBAAiB;AACjB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,sBAAsB;AACtB,2BAA2B;AAC3B,oBAAoB;AACpB,uBAAuB;AACvB,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,oBAAoB;;AAEpB;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;;AAEA,2CAA2C;AAC3C,6CAA6C;AAC7C,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,0BAA0B;AAC1B,+CAA+C;AAC/C;;AAEA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,6BAA6B,yBAAyB;AACtD,8BAA8B,yBAAyB;AACvD;AACA;AACA;;;AAGA;;AAEA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB,sCAAsC;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB,qBAAqB;AACrB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,6BAA6B,eAAe;AAC5C,oBAAoB,uBAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA,aAAa;;AAEb;AACA;AACA,qBAAqB;AACrB,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;;AAEA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,oDAAoD,EAAE,aAAa,0BAA0B;;;AAGlG;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,kCAAkC;;;AAGlC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA,mBAAmB,qBAAqB,UAAU;;AAElD;AACA;AACA,oBAAoB,0BAA0B,gBAAgB,UAAU;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,0BAA0B,UAAU;;AAExD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,kBAAkB;;AAE3C;AACA;AACA,kDAAkD,OAAO;;AAEzD;AACA;AACA,gBAAgB,YAAY;;AAE5B;AACA;AACA,kBAAkB,YAAY;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,8CAA8C;;AAEnE;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX,UAAU;AACV,UAAU;AACV;AACA,WAAW;AACX;AACA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA,eAAe;AACf,WAAW;AACX,WAAW;AACX,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,WAAW;AACX,SAAS;AACT;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX;;;AAGA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,gCAAgC;AAChC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB,cAAc;AACd,cAAc;AACd,uBAAuB;AACvB,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,WAAW;AACX,WAAW;AACX,UAAU;AACV,WAAW;AACX,WAAW;AACX,kBAAkB;AAClB;AACA,iBAAiB;AACjB,UAAU;AACV,6CAA6C,eAAe;AAC5D,4CAA4C,eAAe;AAC3D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,kBAAkB;AAClB,sCAAsC,2BAA2B;AACjE,uCAAuC;AACvC,wCAAwC;AACxC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,eAAe,WAAW;AAC1B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,GAAG,OAAO;AACV;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,UAAU;AACV,YAAY;AACZ,qBAAqB;AACrB,cAAc;AACd,WAAW;AACX,WAAW;AACX,mBAAmB;AACnB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;;AAGA,kBAAkB;AAClB,mBAAmB;AACnB,kBAAkB;AAClB,gBAAgB;AAChB,mBAAmB;AACnB,mBAAmB;AACnB,kBAAkB;AAClB,qBAAqB;AACrB,kBAAkB;AAClB,qBAAqB;AACrB,mBAAmB;AACnB,uBAAuB;AACvB,yBAAyB;AACzB,yBAAyB;AACzB,wBAAwB;AACxB,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B;AAC1B,2BAA2B;AAC3B,2BAA2B;AAC3B,0BAA0B;AAC1B,6BAA6B;AAC7B,2BAA2B;AAC3B,8BAA8B;AAC9B,4BAA4B;AAC5B,0BAA0B;AAC1B,oBAAoB;AACpB,qBAAqB;AACrB,mBAAmB;AACnB,kBAAkB;AAClB,kBAAkB;AAClB,mBAAmB;;AAEnB;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB;AAChB,oBAAoB;AACpB,gBAAgB;AAChB,wBAAwB;AACxB,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB;AACA,mBAAmB;;AAEnB;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,qBAAqB;;AAErB;AACA,gBAAgB;AAChB,gBAAgB;;AAEhB;AACA,kBAAkB;AAClB,kBAAkB;;AAElB;AACA,iBAAiB;;AAEjB;AACA,sBAAsB;AACtB,uBAAuB;AACvB,mBAAmB;AACnB,oBAAoB;;AAEpB;AACA,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;;AAEnB,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA,wCAAwC;AACxC,qBAAqB;AACrB,sBAAsB;AACtB,gBAAgB;AAChB,gBAAgB;AAChB,eAAe;AACf;;;AAGA;;AAEA,6BAA6B,yBAAyB;AACtD;AACA;AACA,gBAAgB;AAChB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA,6BAA6B,yBAAyB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,cAAc,yBAAyB;AACvC,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;;AAGpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;;AAE9C,kEAAkE,UAAU;;AAE5E;AACA;AACA,sBAAsB,uBAAuB;;AAE7C,kEAAkE,UAAU;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,oBAAoB;AACpB,WAAW;AACX,UAAU;AACV,iBAAiB;AACjB,WAAW;AACX,WAAW;AACX,gBAAgB;AAChB,WAAW;AACX,WAAW;AACX;AACA,eAAe;AACf,mCAAmC;AACnC,aAAa;AACb,mCAAmC;AACnC,UAAU;AACV,UAAU;AACV,iCAAiC;AACjC;;AAEA,QAAQ;;AAER;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB,EAAE;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,4BAA4B,aAAa;AACzC,2BAA2B,iBAAiB;AAC5C,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oEAAoE;AACpE;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,kEAAkE;AAClE;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,oEAAoE;AACpE;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,kBAAkB;AACnD;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,6BAA6B,yBAAyB;AACtD;AACA,+BAA+B,yBAAyB;;AAExD;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6DAA6D,yBAAyB;AACtF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,qCAAqC;;AAE5C,OAAO,uCAAuC;;;;AAI9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyO;;;;;;;;;;;;;kBC7hNjN03H,Y;;AArBxB;;AACA;;IAAYxsF,K;;AACZ;;;;AACA;;AAGA;;AAGA;;AACA;;;;;;AAFA;AAIA,MAAMvmC,OAAO,UAAb;;AAPA;AANA;;;AAeA,MAAMgnC,eAAe,CAAC,UAAD,CAArB;;AAEA;;;;;AAKe,SAAS+rF,YAAT,GAAyB;AACtC;AACA,WAASC,YAAT,CAAuBjsF,OAAvB,EAAgC;AAC9B,UAAMksF,SAAS,oBAAIlsF,OAAJ,CAAf;;AAEA;;;;;;;;;;;;;AAaAksF,WAAOxyF,QAAP,CAAgByyF,QAAhB,GAA2BpyF,iBAA3B;;AAEA;;;;;;;;;;;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","file":"kandy.link.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Kandy\"] = factory();\n\telse\n\t\troot[\"Kandy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 170);\n","import { TASK_CANCEL, TERMINATE, SAGA_LOCATION, SAGA_ACTION, IO, SELF_CANCELLATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { array, notUndef, pattern, multicast, channel, undef, effect, task, func, buffer, string, object } from '@redux-saga/is';\nimport delayP from '@redux-saga/delay-p';\n\nvar konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nvar kTrue =\n/*#__PURE__*/\nkonst(true);\n\nvar noop = function noop() {};\n\nif (process.env.NODE_ENV !== 'production' && typeof Proxy !== 'undefined') {\n  noop =\n  /*#__PURE__*/\n  new Proxy(noop, {\n    set: function set() {\n      throw internalErr('There was an attempt to assign a property to internal `noop` function.');\n    }\n  });\n}\nvar identity = function identity(v) {\n  return v;\n};\nvar hasSymbol = typeof Symbol === 'function';\nvar asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : '@@asyncIterator';\nfunction check(value, predicate, error) {\n  if (!predicate(value)) {\n    throw new Error(error);\n  }\n}\nvar assignWithSymbols = function assignWithSymbols(target, source) {\n  _extends(target, source);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(source).forEach(function (s) {\n      target[s] = source[s];\n    });\n  }\n};\nvar flatMap = function flatMap(mapper, arr) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, arr.map(mapper));\n};\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    fn();\n  };\n}\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\n\nvar kReturn = function kReturn(value) {\n  return {\n    value: value,\n    done: true\n  };\n};\n\nfunction makeIterator(next, thro, name) {\n  if (thro === void 0) {\n    thro = kThrow;\n  }\n\n  if (name === void 0) {\n    name = 'iterator';\n  }\n\n  var iterator = {\n    meta: {\n      name: name\n    },\n    next: next,\n    throw: thro,\n    return: kReturn,\n    isSagaIterator: true\n  };\n\n  if (typeof Symbol !== 'undefined') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\nfunction logError(error, _ref2) {\n  var sagaStack = _ref2.sagaStack;\n\n  /*eslint-disable no-console*/\n  console.error(error);\n  console.error(sagaStack);\n}\nvar internalErr = function internalErr(err) {\n  return new Error(\"\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project's github repo.\\n  Error: \" + err + \"\\n\");\n};\nvar createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + '.' : '') + \"setContext(props): argument \" + props + \" is not a plain object\";\n};\nvar FROZEN_ACTION_ERROR = \"You can't put (a.k.a. dispatch from saga) frozen actions.\\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\\nOtherwise you wouldn't be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\\nIf you are using redux and you care about this behaviour (frozen actions),\\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\\nExample implementation:\\n\\nconst freezeActions = store => next => action => next(Object.freeze(action))\\n\"; // creates empty, but not-holey array\n\nvar createEmptyArray = function createEmptyArray(n) {\n  return Array.apply(null, new Array(n));\n};\nvar wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(action, function (ac) {\n        return !Object.isFrozen(ac);\n      }, FROZEN_ACTION_ERROR);\n    }\n\n    return dispatch(Object.defineProperty(action, SAGA_ACTION, {\n      value: true\n    }));\n  };\n};\nvar shouldTerminate = function shouldTerminate(res) {\n  return res === TERMINATE;\n};\nvar shouldCancel = function shouldCancel(res) {\n  return res === TASK_CANCEL;\n};\nvar shouldComplete = function shouldComplete(res) {\n  return shouldTerminate(res) || shouldCancel(res);\n};\nfunction createAllStyleChildCallbacks(shape, parentCallback) {\n  var keys = Object.keys(shape);\n  var totalCount = keys.length;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(totalCount, function (c) {\n      return c > 0;\n    }, 'createAllStyleChildCallbacks: get an empty array or object');\n  }\n\n  var completedCount = 0;\n  var completed;\n  var results = array(shape) ? createEmptyArray(totalCount) : {};\n  var childCallbacks = {};\n\n  function checkEnd() {\n    if (completedCount === totalCount) {\n      completed = true;\n      parentCallback(results);\n    }\n  }\n\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        parentCallback.cancel();\n        parentCallback(res, isErr);\n      } else {\n        results[key] = res;\n        completedCount++;\n        checkEnd();\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCallbacks[key] = chCbAtKey;\n  });\n\n  parentCallback.cancel = function () {\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCallbacks[key].cancel();\n      });\n    }\n  };\n\n  return childCallbacks;\n}\nfunction getMetaInfo(fn) {\n  return {\n    name: fn.name || 'anonymous',\n    location: getLocation(fn)\n  };\n}\nfunction getLocation(instrumented) {\n  return instrumented[SAGA_LOCATION];\n}\n\nvar BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\n\nfunction ringBuffer(limit, overflowAction) {\n  if (limit === void 0) {\n    limit = 10;\n  }\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar none = function none() {\n  return zeroBuffer;\n};\nvar fixed = function fixed(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_THROW);\n};\nvar dropping = function dropping(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_DROP);\n};\nvar sliding = function sliding(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n};\nvar expanding = function expanding(initialSize) {\n  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n};\n\nvar buffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  fixed: fixed,\n  dropping: dropping,\n  sliding: sliding,\n  expanding: expanding\n});\n\nvar TAKE = 'TAKE';\nvar PUT = 'PUT';\nvar ALL = 'ALL';\nvar RACE = 'RACE';\nvar CALL = 'CALL';\nvar CPS = 'CPS';\nvar FORK = 'FORK';\nvar JOIN = 'JOIN';\nvar CANCEL = 'CANCEL';\nvar SELECT = 'SELECT';\nvar ACTION_CHANNEL = 'ACTION_CHANNEL';\nvar CANCELLED = 'CANCELLED';\nvar FLUSH = 'FLUSH';\nvar GET_CONTEXT = 'GET_CONTEXT';\nvar SET_CONTEXT = 'SET_CONTEXT';\n\nvar effectTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TAKE: TAKE,\n  PUT: PUT,\n  ALL: ALL,\n  RACE: RACE,\n  CALL: CALL,\n  CPS: CPS,\n  FORK: FORK,\n  JOIN: JOIN,\n  CANCEL: CANCEL,\n  SELECT: SELECT,\n  ACTION_CHANNEL: ACTION_CHANNEL,\n  CANCELLED: CANCELLED,\n  FLUSH: FLUSH,\n  GET_CONTEXT: GET_CONTEXT,\n  SET_CONTEXT: SET_CONTEXT\n});\n\nvar TEST_HINT = '\\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)';\n\nvar makeEffect = function makeEffect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[IO] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;\n};\n\nvar isForkEffect = function isForkEffect(eff) {\n  return effect(eff) && eff.type === FORK;\n};\n\nvar detach = function detach(eff) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(eff, isForkEffect, 'detach(eff): argument must be a fork effect');\n  }\n\n  return makeEffect(FORK, _extends({}, eff.payload, {\n    detached: true\n  }));\n};\nfunction take(patternOrChannel, multicastPattern) {\n  if (patternOrChannel === void 0) {\n    patternOrChannel = '*';\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'take(patternOrChannel): patternOrChannel is undefined');\n  }\n\n  if (pattern(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      pattern: patternOrChannel\n    });\n  }\n\n  if (multicast(patternOrChannel) && notUndef(multicastPattern) && pattern(multicastPattern)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel,\n      pattern: multicastPattern\n    });\n  }\n\n  if (channel(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(\"take(patternOrChannel): argument \" + patternOrChannel + \" is not valid channel or a valid pattern\");\n  }\n}\nvar takeMaybe = function takeMaybe() {\n  var eff = take.apply(void 0, arguments);\n  eff.payload.maybe = true;\n  return eff;\n};\nfunction put(channel$1, action) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      check(channel$1, notUndef, 'put(channel, action): argument channel is undefined');\n      check(channel$1, channel, \"put(channel, action): argument \" + channel$1 + \" is not a valid channel\");\n      check(action, notUndef, 'put(channel, action): argument action is undefined');\n    } else {\n      check(channel$1, notUndef, 'put(action): argument action is undefined');\n    }\n  }\n\n  if (undef(action)) {\n    action = channel$1; // `undefined` instead of `null` to make default parameter work\n\n    channel$1 = undefined;\n  }\n\n  return makeEffect(PUT, {\n    channel: channel$1,\n    action: action\n  });\n}\nvar putResolve = function putResolve() {\n  var eff = put.apply(void 0, arguments);\n  eff.payload.resolve = true;\n  return eff;\n};\nfunction all(effects) {\n  var eff = makeEffect(ALL, effects);\n  eff.combinator = true;\n  return eff;\n}\nfunction race(effects) {\n  var eff = makeEffect(RACE, effects);\n  eff.combinator = true;\n  return eff;\n} // this match getFnCallDescriptor logic\n\nvar validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {\n  check(fnDescriptor, notUndef, effectName + \": argument fn is undefined or null\");\n\n  if (func(fnDescriptor)) {\n    return;\n  }\n\n  var context = null;\n  var fn;\n\n  if (array(fnDescriptor)) {\n    context = fnDescriptor[0];\n    fn = fnDescriptor[1];\n    check(fn, notUndef, effectName + \": argument of type [context, fn] has undefined or null `fn`\");\n  } else if (object(fnDescriptor)) {\n    context = fnDescriptor.context;\n    fn = fnDescriptor.fn;\n    check(fn, notUndef, effectName + \": argument of type {context, fn} has undefined or null `fn`\");\n  } else {\n    check(fnDescriptor, func, effectName + \": argument fn is not function\");\n    return;\n  }\n\n  if (context && string(fn)) {\n    check(context[fn], func, effectName + \": context arguments has no such method - \\\"\" + fn + \"\\\"\");\n    return;\n  }\n\n  check(fn, func, effectName + \": unpacked fn argument (from [context, fn] or {context, fn}) is not a function\");\n};\n\nfunction getFnCallDescriptor(fnDescriptor, args) {\n  var context = null;\n  var fn;\n\n  if (func(fnDescriptor)) {\n    fn = fnDescriptor;\n  } else {\n    if (array(fnDescriptor)) {\n      context = fnDescriptor[0];\n      fn = fnDescriptor[1];\n    } else {\n      context = fnDescriptor.context;\n      fn = fnDescriptor.fn;\n    }\n\n    if (context && string(fn) && func(context[fn])) {\n      fn = context[fn];\n    }\n  }\n\n  return {\n    context: context,\n    fn: fn,\n    args: args\n  };\n}\n\nvar isNotDelayEffect = function isNotDelayEffect(fn) {\n  return fn !== delay;\n};\n\nfunction call(fnDescriptor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    var arg0 = typeof args[0] === 'number' ? args[0] : 'ms';\n    check(fnDescriptor, isNotDelayEffect, \"instead of writing `yield call(delay, \" + arg0 + \")` where delay is an effect from `redux-saga/effects` you should write `yield delay(\" + arg0 + \")`\");\n    validateFnDescriptor('call', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction apply(context, fn, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  var fnDescriptor = [context, fn];\n\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('apply', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));\n}\nfunction cps(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('cps', fnDescriptor);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction fork(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('fork', fnDescriptor);\n    check(fnDescriptor, function (arg) {\n      return !effect(arg);\n    }, 'fork: argument must not be an effect');\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction spawn(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('spawn', fnDescriptor);\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));\n}\nfunction join(taskOrTasks) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('join(...tasks) is not supported any more. Please use join([...tasks]) to join multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"join([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else {\n      check(taskOrTasks, task, \"join(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(JOIN, taskOrTasks);\n}\nfunction cancel(taskOrTasks) {\n  if (taskOrTasks === void 0) {\n    taskOrTasks = SELF_CANCELLATION;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('cancel(...tasks) is not supported any more. Please use cancel([...tasks]) to cancel multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"cancel([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else if (taskOrTasks !== SELF_CANCELLATION && notUndef(taskOrTasks)) {\n      check(taskOrTasks, task, \"cancel(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(CANCEL, taskOrTasks);\n}\nfunction select(selector) {\n  if (selector === void 0) {\n    selector = identity;\n  }\n\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'select(selector, [...]): argument selector is undefined');\n    check(selector, func, \"select(selector, [...]): argument \" + selector + \" is not a function\");\n  }\n\n  return makeEffect(SELECT, {\n    selector: selector,\n    args: args\n  });\n}\n/**\n  channel(pattern, [buffer])    => creates a proxy channel for store actions\n**/\n\nfunction actionChannel(pattern$1, buffer$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern$1, pattern, 'actionChannel(pattern,...): argument pattern is not valid');\n\n    if (arguments.length > 1) {\n      check(buffer$1, notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');\n      check(buffer$1, buffer, \"actionChannel(pattern, buffer): argument \" + buffer$1 + \" is not a valid buffer\");\n    }\n  }\n\n  return makeEffect(ACTION_CHANNEL, {\n    pattern: pattern$1,\n    buffer: buffer$1\n  });\n}\nfunction cancelled() {\n  return makeEffect(CANCELLED, {});\n}\nfunction flush(channel$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel$1, channel, \"flush(channel): argument \" + channel$1 + \" is not valid channel\");\n  }\n\n  return makeEffect(FLUSH, channel$1);\n}\nfunction getContext(prop) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(prop, string, \"getContext(prop): argument \" + prop + \" is not a string\");\n  }\n\n  return makeEffect(GET_CONTEXT, prop);\n}\nfunction setContext(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(props, object, createSetContextWarning(null, props));\n  }\n\n  return makeEffect(SET_CONTEXT, props);\n}\nvar delay =\n/*#__PURE__*/\ncall.bind(null, delayP);\n\nexport { apply as $, ALL as A, logError as B, CALL as C, wrapSagaDispatch as D, identity as E, FORK as F, GET_CONTEXT as G, buffers as H, detach as I, JOIN as J, take as K, fork as L, cancel as M, call as N, actionChannel as O, PUT as P, sliding as Q, RACE as R, SELECT as S, TAKE as T, delay as U, race as V, effectTypes as W, takeMaybe as X, put as Y, putResolve as Z, all as _, CPS as a, cps as a0, spawn as a1, join as a2, select as a3, cancelled as a4, flush as a5, getContext as a6, setContext as a7, CANCEL as b, check as c, ACTION_CHANNEL as d, expanding as e, CANCELLED as f, FLUSH as g, SET_CONTEXT as h, internalErr as i, getMetaInfo as j, kTrue as k, createAllStyleChildCallbacks as l, createEmptyArray as m, none as n, once as o, assignWithSymbols as p, makeIterator as q, remove as r, shouldComplete as s, noop as t, flatMap as u, getLocation as v, createSetContextWarning as w, asyncIteratorSymbol as x, shouldCancel as y, shouldTerminate as z };\n","import { TASK, SAGA_ACTION, MULTICAST, IO } from '@redux-saga/symbols';\n\nvar undef = function undef(v) {\n  return v === null || v === undefined;\n};\nvar notUndef = function notUndef(v) {\n  return v !== null && v !== undefined;\n};\nvar func = function func(f) {\n  return typeof f === 'function';\n};\nvar number = function number(n) {\n  return typeof n === 'number';\n};\nvar string = function string(s) {\n  return typeof s === 'string';\n};\nvar array = Array.isArray;\nvar object = function object(obj) {\n  return obj && !array(obj) && typeof obj === 'object';\n};\nvar promise = function promise(p) {\n  return p && func(p.then);\n};\nvar iterator = function iterator(it) {\n  return it && func(it.next) && func(it.throw);\n};\nvar iterable = function iterable(it) {\n  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);\n};\nvar task = function task(t) {\n  return t && t[TASK];\n};\nvar sagaAction = function sagaAction(a) {\n  return Boolean(a && a[SAGA_ACTION]);\n};\nvar observable = function observable(ob) {\n  return ob && func(ob.subscribe);\n};\nvar buffer = function buffer(buf) {\n  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);\n};\nvar pattern = function pattern(pat) {\n  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));\n};\nvar channel = function channel(ch) {\n  return ch && func(ch.take) && func(ch.close);\n};\nvar stringableFunc = function stringableFunc(f) {\n  return func(f) && f.hasOwnProperty('toString');\n};\nvar symbol = function symbol(sym) {\n  return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;\n};\nvar multicast = function multicast(ch) {\n  return channel(ch) && ch[MULTICAST];\n};\nvar effect = function effect(eff) {\n  return eff && eff[IO];\n};\n\nexport { array, buffer, channel, effect, func, iterable, iterator, multicast, notUndef, number, object, observable, pattern, promise, sagaAction, string, stringableFunc, symbol, task, undef };\n","var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n","import createManager from 'kandy-logger'\nimport defaultOptions from './config'\n\n// Logs generated as a result of invoking the public API will contain this tag\nexport const API_LOG_TAG = 'API invoked: '\n\n/**\n * Create the LogManager right away so that it is available. The SDK has not\n *    been instantiated yet, so we have to use the default options until we get\n *    the application's configs.\n */\n/**\n * TODO: There is a technical debt associated with having a loggerManager along with it's\n * loggers created at the global scope. Multiple instances of the SDK would end up sharing\n * the log manager and therefore loggers.\n */\nconst manager = createManager(defaultOptions)\nexport const logManager = manager\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","import '@redux-saga/symbols';\nimport '@babel/runtime/helpers/esm/extends';\nimport { channel, stringableFunc, func, notUndef } from '@redux-saga/is';\nimport { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as actionChannel, Q as sliding, U as delay, V as race, c as check } from './io-6de156f3.js';\nexport { O as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, U as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-6de156f3.js';\nimport '@redux-saga/delay-p';\n\nvar done = function done(value) {\n  return {\n    done: true,\n    value: value\n  };\n};\n\nvar qEnd = {};\nfunction safeName(patternOrChannel) {\n  if (channel(patternOrChannel)) {\n    return 'channel';\n  }\n\n  if (stringableFunc(patternOrChannel)) {\n    return String(patternOrChannel);\n  }\n\n  if (func(patternOrChannel)) {\n    return patternOrChannel.name;\n  }\n\n  return String(patternOrChannel);\n}\nfunction fsmIterator(fsm, startState, name) {\n  var stateUpdater,\n      errorState,\n      effect,\n      nextState = startState;\n\n  function next(arg, error) {\n    if (nextState === qEnd) {\n      return done(arg);\n    }\n\n    if (error && !errorState) {\n      nextState = qEnd;\n      throw error;\n    } else {\n      stateUpdater && stateUpdater(arg);\n      var currentState = error ? fsm[errorState](error) : fsm[nextState]();\n      nextState = currentState.nextState;\n      effect = currentState.effect;\n      stateUpdater = currentState.stateUpdater;\n      errorState = currentState.errorState;\n      return nextState === qEnd ? done(arg) : effect;\n    }\n  }\n\n  return makeIterator(next, function (error) {\n    return next(null, error);\n  }, name);\n}\n\nfunction takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action)\n      };\n    }\n  }, 'q1', \"takeEvery(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLatest(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yCancel = function yCancel(task) {\n    return {\n      done: false,\n      value: cancel(task)\n    };\n  };\n\n  var task, action;\n\n  var setTask = function setTask(t) {\n    return task = t;\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return task ? {\n        nextState: 'q3',\n        effect: yCancel(task)\n      } : {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    }\n  }, 'q1', \"takeLatest(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLeading(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yCall = function yCall(ac) {\n    return {\n      done: false,\n      value: call.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action;\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yCall(action)\n      };\n    }\n  }, 'q1', \"takeLeading(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, channel;\n  var yActionChannel = {\n    done: false,\n    value: actionChannel(pattern, sliding(1))\n  };\n\n  var yTake = function yTake() {\n    return {\n      done: false,\n      value: take(channel)\n    };\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yActionChannel,\n        stateUpdater: setChannel\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yTake(),\n        stateUpdater: setAction\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q4',\n        effect: yFork(action)\n      };\n    },\n    q4: function q4() {\n      return {\n        nextState: 'q2',\n        effect: yDelay\n      };\n    }\n  }, 'q1', \"throttle(\" + safeName(pattern) + \", \" + worker.name + \")\");\n}\n\nfunction retry(maxTries, delayLength, fn) {\n  var counter = maxTries;\n\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var yCall = {\n    done: false,\n    value: call.apply(void 0, [fn].concat(args))\n  };\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yCall,\n        errorState: 'q10'\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: qEnd\n      };\n    },\n    q10: function q10(error) {\n      counter -= 1;\n\n      if (counter <= 0) {\n        throw error;\n      }\n\n      return {\n        nextState: 'q1',\n        effect: yDelay\n      };\n    }\n  }, 'q1', \"retry(\" + fn.name + \")\");\n}\n\nfunction debounceHelper(delayLength, patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, raceOutput;\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n  var yRace = {\n    done: false,\n    value: race({\n      action: take(patternOrChannel),\n      debounce: delay(delayLength)\n    })\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yNoop = function yNoop(value) {\n    return {\n      done: false,\n      value: value\n    };\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setRaceOutput = function setRaceOutput(ro) {\n    return raceOutput = ro;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yRace,\n        stateUpdater: setRaceOutput\n      };\n    },\n    q3: function q3() {\n      return raceOutput.debounce ? {\n        nextState: 'q1',\n        effect: yFork(action)\n      } : {\n        nextState: 'q2',\n        effect: yNoop(raceOutput.action),\n        stateUpdater: setAction\n      };\n    }\n  }, 'q1', \"debounce(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nvar validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {\n  check(patternOrChannel, notUndef, fn.name + \" requires a pattern or channel\");\n  check(worker, notUndef, fn.name + \" requires a saga parameter\");\n};\n\nfunction takeEvery$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeEvery$1, patternOrChannel, worker);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return fork.apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));\n}\nfunction takeLatest$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLatest$1, patternOrChannel, worker);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return fork.apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));\n}\nfunction takeLeading$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLeading$1, patternOrChannel, worker);\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n\n  return fork.apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));\n}\nfunction throttle$1(ms, pattern, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern, notUndef, 'throttle requires a pattern');\n    check(worker, notUndef, 'throttle requires a saga parameter');\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n    args[_key4 - 3] = arguments[_key4];\n  }\n\n  return fork.apply(void 0, [throttle, ms, pattern, worker].concat(args));\n}\nfunction retry$1(maxTries, delayLength, worker) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n    args[_key5 - 3] = arguments[_key5];\n  }\n\n  return call.apply(void 0, [retry, maxTries, delayLength, worker].concat(args));\n}\nfunction debounce(delayLength, pattern, worker) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n    args[_key6 - 3] = arguments[_key6];\n  }\n\n  return fork.apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));\n}\n\nexport { debounce, retry$1 as retry, takeEvery$1 as takeEvery, takeLatest$1 as takeLatest, takeLeading$1 as takeLeading, throttle$1 as throttle };\n","export * from '@redux-saga/core/effects';\n","var createSymbol = function createSymbol(name) {\n  return \"@@redux-saga/\" + name;\n};\n\nvar CANCEL =\n/*#__PURE__*/\ncreateSymbol('CANCEL_PROMISE');\nvar CHANNEL_END_TYPE =\n/*#__PURE__*/\ncreateSymbol('CHANNEL_END');\nvar IO =\n/*#__PURE__*/\ncreateSymbol('IO');\nvar MATCH =\n/*#__PURE__*/\ncreateSymbol('MATCH');\nvar MULTICAST =\n/*#__PURE__*/\ncreateSymbol('MULTICAST');\nvar SAGA_ACTION =\n/*#__PURE__*/\ncreateSymbol('SAGA_ACTION');\nvar SELF_CANCELLATION =\n/*#__PURE__*/\ncreateSymbol('SELF_CANCELLATION');\nvar TASK =\n/*#__PURE__*/\ncreateSymbol('TASK');\nvar TASK_CANCEL =\n/*#__PURE__*/\ncreateSymbol('TASK_CANCEL');\nvar TERMINATE =\n/*#__PURE__*/\ncreateSymbol('TERMINATE');\nvar SAGA_LOCATION =\n/*#__PURE__*/\ncreateSymbol('LOCATION');\n\nexport { CANCEL, CHANNEL_END_TYPE, IO, MATCH, MULTICAST, SAGA_ACTION, SAGA_LOCATION, SELF_CANCELLATION, TASK, TASK_CANCEL, TERMINATE };\n","import { cloneDeep } from 'lodash/fp'\nimport { SUBSCRIPTION_STATE } from '../constants'\nimport { platforms } from '../../constants'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to Retrieves\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the config options provided by the auth plugin.\n * @method getAuthConfig\n * @return {Object}\n */\nexport function getAuthConfig (state) {\n  return cloneDeep(state.config.authentication)\n}\n\n/**\n * Retrieves the subscription information of a platform.\n * @method getSubscriptionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getSubscriptionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.subscription) {\n    return cloneDeep(state.authentication.subscription[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the connection information of a platform.\n * Includes the info needed to make requests to that platform.\n * @method getConnectionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getConnectionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.connection) {\n    return cloneDeep(state.authentication.connection[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the domain of the callee address information of a platform.\n * @method getDomain\n * @return {string}\n */\nexport function getDomain (state) {\n  const { username = '', identity = username } = getUserInfo(state)\n  const [, domain = ''] = identity.split('@')\n  return domain\n}\n\n/**\n * Retrieves the identity of the currently logged-in user.\n * The identity is of the form: <userName>@<domain>\n * @method getIdentity\n * @return {string}\n */\nexport function getIdentity (state) {\n  const userInfo = getUserInfo(state)\n  return userInfo.identity || userInfo.username || ''\n}\n\n/**\n * Retrieves the user information.\n * @method getUserInfo\n * @return {Object} An object whose properties are: accessToken, identity & username. Identity is user's primary contact address.\n */\nexport function getUserInfo (state) {\n  return cloneDeep(state.authentication.userInfo) || {}\n}\n\n/**\n * Retrieves a flag from the store representing if the login scenario was SSO or not.\n * @method getAuthScenario\n * @return {boolean}\n */\nexport function getAuthScenario (state) {\n  return cloneDeep(state.authentication.isSSO)\n}\n\n/**\n * Retrieves information about the services that the user is subscribed for.\n * @method getServices\n * @return {Object}\n */\nexport function getServices (state, platform) {\n  const subscription = getSubscriptionInfo(state, platform)\n\n  if (subscription && subscription.servicesInfo) {\n    return subscription.servicesInfo\n  } else {\n    return {\n      // TODO: Have default as part of the reducer.\n      requested: [],\n      received: [],\n      missing: [],\n      status: SUBSCRIPTION_STATE.NONE,\n      services: {}\n    }\n  }\n}\n\n/**\n * Retrieves the name of the backend platform the user is currently subscribed to.\n * @method getPlatform\n * @return {string}\n */\nexport function getPlatform (state) {\n  let platform = state.authentication.platform\n\n  /**\n   * Link and UC set the platform in auth state after setting credentials /\n   *    connecting, but CPaaS does not (because the idea was to move away from\n   *    needing the platform). So if there isn't a platform, but there is a\n   *    CPaaS-specific identity, then assume the platform is CPaaS.\n   * This was needed for the request plugin to get the right platform when using\n   *    the `getRequestInfo` selector below.\n   * This is a workaround for bad design.\n   */\n  if (!platform && getUserInfo(state).identity) {\n    platform = 'cpaas'\n  }\n\n  return platform\n}\n\n/**\n * Retrieves info needed to make a REST request for the different platforms.\n * @method getRequestInfo\n * @return {Object}\n */\nexport function getRequestInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  const { subscription, clientCorrelator } = getAuthConfig(state)\n  let { server } = getAuthConfig(state)\n  let { userInfo } = cloneDeep(state.authentication)\n\n  // For backwards compatibility, we need to fall back to\n  // subscription for the server connection details\n  if (!server) {\n    server = {\n      protocol: subscription.protocol,\n      base: subscription.server,\n      port: subscription.port,\n      version: subscription.version\n    }\n  }\n\n  // If user info does not exist yet, use an empty object. Requests will still fail, but they will be handled.\n  if (!userInfo) {\n    userInfo = {}\n  }\n\n  let requestInfo\n\n  if (platform === platforms.CPAAS) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username,\n      // TODO: Token doesn't need to be here if its in requestOptions.\n      token: userInfo.accessToken,\n      clientCorrelator,\n      // TODO: DO NOT hardcode this here (?). The original idea was that this\n      //    is set in state after connection.\n      options: {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${userInfo.accessToken}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    }\n  } else if (platform === platforms.UC) {\n    requestInfo = {\n      baseURL: `${subscription.protocol}://${subscription.server}:${subscription.port}`,\n      version: subscription.version,\n      username: userInfo.username\n    }\n  } else if (platform === platforms.LINK) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username\n    }\n\n    /*\n     * If the requested platform was Link but the platform set in state is\n     *    UC, and so we're using UC but making a request for SPiDR.\n     * Change the requestInfo provided to ensure the URL will be valid for\n     *    SPiDR and authentication will be valid for CIM.\n     */\n    const setPlatform = getPlatform(state)\n    if (setPlatform === platforms.UC) {\n      requestInfo.version = '1'\n\n      const connInfo = getConnectionInfo(state, setPlatform)\n      if (connInfo && connInfo.requestOptions) {\n        requestInfo.requestOptions = connInfo.requestOptions\n      }\n      return requestInfo\n    }\n  } else {\n    // Platform is not supported\n    return {}\n  }\n\n  const connInfo = getConnectionInfo(state, platform)\n  if (connInfo && connInfo.requestOptions) {\n    requestInfo.requestOptions = connInfo.requestOptions\n  }\n\n  return requestInfo\n}\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","export const platforms = {\n  LINK: 'link',\n  UC: 'uc',\n  CPAAS: 'cpaas'\n}\n\nexport const notificationTypes = {\n  WEBSOCKET: 'websocket',\n  PUSH: 'push'\n}\n\nexport const connCheckResponsibility = {\n  CLIENT: 'client',\n  SERVER: 'server'\n}\n\nexport const connCheckMethods = {\n  KEEP_ALIVE: 'keepAlive',\n  PING_PONG: 'pingPong'\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","export default (function (value) {\n  return typeof value === 'function';\n});","export default (function (value) {\n  return typeof value === 'symbol' || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Symbol]';\n});","export default (function (value) {\n  return value.length === 0;\n});","export default (function (value) {\n  return value.toString();\n});","export default (function (value) {\n  return typeof value === 'string';\n});","export var DEFAULT_NAMESPACE = '/';\nexport var ACTION_TYPE_DELIMITER = '||';","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isSymbol from './utils/isSymbol';\nimport isEmpty from './utils/isEmpty';\nimport toString from './utils/toString';\nimport isString from './utils/isString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\n\nfunction isValidActionType(type) {\n  return isString(type) || isFunction(type) || isSymbol(type);\n}\n\nfunction isValidActionTypes(types) {\n  if (isEmpty(types)) {\n    return false;\n  }\n\n  return types.every(isValidActionType);\n}\n\nexport default function combineActions() {\n  for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  invariant(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(toString).join(ACTION_TYPE_DELIMITER);\n  return {\n    toString: function toString() {\n      return combinedActionType;\n    }\n  };\n}","export default (function (value) {\n  return value;\n});","export default (function (value) {\n  return value === null;\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isNull from './utils/isNull';\nexport default function createAction(type, payloadCreator, metaCreator) {\n  if (payloadCreator === void 0) {\n    payloadCreator = identity;\n  }\n\n  invariant(isFunction(payloadCreator) || isNull(payloadCreator), 'Expected payloadCreator to be a function, undefined or null');\n  var finalPayloadCreator = isNull(payloadCreator) || payloadCreator === identity ? identity : function (head) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return head instanceof Error ? head : payloadCreator.apply(void 0, [head].concat(args));\n  };\n  var hasMeta = isFunction(metaCreator);\n  var typeString = type.toString();\n\n  var actionCreator = function actionCreator() {\n    var payload = finalPayloadCreator.apply(void 0, arguments);\n    var action = {\n      type: type\n    };\n\n    if (payload instanceof Error) {\n      action.error = true;\n    }\n\n    if (payload !== undefined) {\n      action.payload = payload;\n    }\n\n    if (hasMeta) {\n      action.meta = metaCreator.apply(void 0, arguments);\n    }\n\n    return action;\n  };\n\n  actionCreator.toString = function () {\n    return typeString;\n  };\n\n  return actionCreator;\n}","export default (function (value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n});","export default (function (value) {\n  return Array.isArray(value);\n});","export default (function (value) {\n  return value === null || value === undefined;\n});","export default (function (array) {\n  return array[array.length - 1];\n});","import camelCase from 'to-camel-case';\nvar namespacer = '/';\nexport default (function (type) {\n  return type.indexOf(namespacer) === -1 ? camelCase(type) : type.split(namespacer).map(camelCase).join(namespacer);\n});","export default (function (array, callback) {\n  return array.reduce(function (partialObject, element) {\n    return callback(partialObject, element);\n  }, {});\n});","export default (function (value) {\n  return typeof Map !== 'undefined' && value instanceof Map;\n});","import isMap from './isMap';\nexport default function ownKeys(object) {\n  if (isMap(object)) {\n    // We are using loose transforms in babel. Here we are trying to convert an\n    // interable to an array. Loose mode expects everything to already be an\n    // array. The problem is that our eslint rules encourage us to prefer\n    // spread over Array.from.\n    //\n    // Instead of disabling loose mode we simply disable the warning.\n    // eslint-disable-next-line unicorn/prefer-spread\n    return Array.from(object.keys());\n  }\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object);\n  }\n\n  var keys = Object.getOwnPropertyNames(object);\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    keys = keys.concat(Object.getOwnPropertySymbols(object));\n  }\n\n  return keys;\n}","import isMap from './isMap';\nexport default function get(key, x) {\n  return isMap(x) ? x.get(key) : x[key];\n}","import { DEFAULT_NAMESPACE, ACTION_TYPE_DELIMITER } from '../constants';\nimport ownKeys from './ownKeys';\nimport get from './get';\nexport default (function (predicate) {\n  return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$namespace = _ref.namespace,\n        namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n        prefix = _ref.prefix;\n\n    if (partialFlatMap === void 0) {\n      partialFlatMap = {};\n    }\n\n    if (partialFlatActionType === void 0) {\n      partialFlatActionType = '';\n    }\n\n    function connectNamespace(type) {\n      var _ref2;\n\n      if (!partialFlatActionType) return type;\n      var types = type.toString().split(ACTION_TYPE_DELIMITER);\n      var partials = partialFlatActionType.split(ACTION_TYPE_DELIMITER);\n      return (_ref2 = []).concat.apply(_ref2, partials.map(function (p) {\n        return types.map(function (t) {\n          return \"\" + p + namespace + t;\n        });\n      })).join(ACTION_TYPE_DELIMITER);\n    }\n\n    function connectPrefix(type) {\n      if (partialFlatActionType || !prefix || prefix && new RegExp(\"^\" + prefix + namespace).test(type)) {\n        return type;\n      }\n\n      return \"\" + prefix + namespace + type;\n    }\n\n    ownKeys(map).forEach(function (type) {\n      var nextNamespace = connectPrefix(connectNamespace(type));\n      var mapValue = get(type, map);\n\n      if (predicate(mapValue)) {\n        flatten(mapValue, {\n          namespace: namespace,\n          prefix: prefix\n        }, partialFlatMap, nextNamespace);\n      } else {\n        partialFlatMap[nextNamespace] = mapValue;\n      }\n    });\n    return partialFlatMap;\n  };\n});","import isPlainObject from './isPlainObject';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(isPlainObject);","import { DEFAULT_NAMESPACE } from '../constants';\nimport isEmpty from './isEmpty';\nimport camelCase from './camelCase';\nexport default function unflattenActionCreators(flatActionCreators, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n      prefix = _ref.prefix;\n\n  function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {\n    var nextNamespace = camelCase(partialFlatActionTypePath.shift());\n\n    if (isEmpty(partialFlatActionTypePath)) {\n      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];\n    } else {\n      if (!partialNestedActionCreators[nextNamespace]) {\n        partialNestedActionCreators[nextNamespace] = {};\n      }\n\n      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);\n    }\n  }\n\n  var nestedActionCreators = {};\n  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {\n    var unprefixedType = prefix ? type.replace(\"\" + prefix + namespace, '') : type;\n    return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));\n  });\n  return nestedActionCreators;\n}","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isNil from './utils/isNil';\nimport getLastElement from './utils/getLastElement';\nimport camelCase from './utils/camelCase';\nimport arrayToObject from './utils/arrayToObject';\nimport flattenActionMap from './utils/flattenActionMap';\nimport unflattenActionCreators from './utils/unflattenActionCreators';\nimport createAction from './createAction';\nimport { DEFAULT_NAMESPACE } from './constants';\nexport default function createActions(actionMap) {\n  for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    identityActions[_key - 1] = arguments[_key];\n  }\n\n  var options = isPlainObject(getLastElement(identityActions)) ? identityActions.pop() : {};\n  invariant(identityActions.every(isString) && (isString(actionMap) || isPlainObject(actionMap)), 'Expected optional object followed by string action types');\n\n  if (isString(actionMap)) {\n    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);\n  }\n\n  return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));\n}\n\nfunction actionCreatorsFromActionMap(actionMap, options) {\n  var flatActionMap = flattenActionMap(actionMap, options);\n  var flatActionCreators = actionMapToActionCreators(flatActionMap);\n  return unflattenActionCreators(flatActionCreators, options);\n}\n\nfunction actionMapToActionCreators(actionMap, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      prefix = _ref.prefix,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace;\n\n  function isValidActionMapValue(actionMapValue) {\n    if (isFunction(actionMapValue) || isNil(actionMapValue)) {\n      return true;\n    }\n\n    if (isArray(actionMapValue)) {\n      var _actionMapValue$ = actionMapValue[0],\n          payload = _actionMapValue$ === void 0 ? identity : _actionMapValue$,\n          meta = actionMapValue[1];\n      return isFunction(payload) && isFunction(meta);\n    }\n\n    return false;\n  }\n\n  return arrayToObject(Object.keys(actionMap), function (partialActionCreators, type) {\n    var _objectSpread2;\n\n    var actionMapValue = actionMap[type];\n    invariant(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + (\"functions for \" + type));\n    var prefixedType = prefix ? \"\" + prefix + namespace + type : type;\n    var actionCreator = isArray(actionMapValue) ? createAction.apply(void 0, [prefixedType].concat(actionMapValue)) : createAction(prefixedType, actionMapValue);\n    return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));\n  });\n}\n\nfunction actionCreatorsFromIdentityActions(identityActions, options) {\n  var actionMap = arrayToObject(identityActions, function (partialActionMap, type) {\n    var _objectSpread3;\n\n    return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = identity, _objectSpread3));\n  });\n  var actionCreators = actionMapToActionCreators(actionMap, options);\n  return arrayToObject(Object.keys(actionCreators), function (partialActionCreators, type) {\n    var _objectSpread4;\n\n    return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[camelCase(type)] = actionCreators[type], _objectSpread4));\n  });\n}","import curry from 'just-curry-it';\nimport createAction from './createAction';\nexport default (function (type, payloadCreator) {\n  return curry(createAction(type, payloadCreator), payloadCreator.length);\n});","export default (function (value) {\n  return value === undefined;\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isPlainObject from './utils/isPlainObject';\nimport identity from './utils/identity';\nimport isNil from './utils/isNil';\nimport isUndefined from './utils/isUndefined';\nimport toString from './utils/toString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\nexport default function handleAction(type, reducer, defaultState) {\n  if (reducer === void 0) {\n    reducer = identity;\n  }\n\n  var types = toString(type).split(ACTION_TYPE_DELIMITER);\n  invariant(!isUndefined(defaultState), \"defaultState for reducer handling \" + types.join(', ') + \" should be defined\");\n  invariant(isFunction(reducer) || isPlainObject(reducer), 'Expected reducer to be a function or object with next and throw reducers');\n\n  var _ref = isFunction(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {\n    return isNil(aReducer) ? identity : aReducer;\n  }),\n      nextReducer = _ref[0],\n      throwReducer = _ref[1];\n\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    var actionType = action.type;\n\n    if (!actionType || types.indexOf(toString(actionType)) === -1) {\n      return state;\n    }\n\n    return (action.error === true ? throwReducer : nextReducer)(state, action);\n  };\n}","export default (function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var initialState = typeof args[args.length - 1] !== 'function' && args.pop();\n  var reducers = args;\n\n  if (typeof initialState === 'undefined') {\n    throw new TypeError('The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.');\n  }\n\n  return function (prevState, value) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    var prevStateIsUndefined = typeof prevState === 'undefined';\n    var valueIsUndefined = typeof value === 'undefined';\n\n    if (prevStateIsUndefined && valueIsUndefined && initialState) {\n      return initialState;\n    }\n\n    return reducers.reduce(function (newState, reducer) {\n      return reducer.apply(undefined, [newState, value].concat(args));\n    }, prevStateIsUndefined && !valueIsUndefined && initialState ? initialState : prevState);\n  };\n});","import ownKeys from './ownKeys';\nexport default function hasGeneratorInterface(handler) {\n  var keys = ownKeys(handler);\n  var hasOnlyInterfaceNames = keys.every(function (ownKey) {\n    return ownKey === 'next' || ownKey === 'throw';\n  });\n  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;\n}","import isPlainObject from './isPlainObject';\nimport isMap from './isMap';\nimport hasGeneratorInterface from './hasGeneratorInterface';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(function (node) {\n  return (isPlainObject(node) || isMap(node)) && !hasGeneratorInterface(node);\n});","import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}","import combineActions from './combineActions';\nimport createAction from './createAction';\nimport createActions from './createActions';\nimport createCurriedAction from './createCurriedAction';\nimport handleAction from './handleAction';\nimport handleActions from './handleActions';\nexport { combineActions, createAction, createActions, createCurriedAction, handleAction, handleActions };","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","import * as actionTypes from './actionTypes'\n\n/**\n * Add an action-to-event mapping\n * @param  {Object} mapping A mapping object\n * @return {action}          A redux action.\n */\nexport function mapEvents (mapping) {\n  return {\n    type: actionTypes.MAP_EVENTS,\n    payload: mapping\n  }\n}\n\n/* Interface actions */\n\n/**\n * Add a listener for a specified event type.\n *\n * @param {string} type The event type to add the listener on.\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function on (type, listener) {\n  return {\n    type: actionTypes.EVENTS_ON,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Remove a listener from a specified event type.\n *\n * @param {string} type The event type to remove the listener from.\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function off (type, listener) {\n  return {\n    type: actionTypes.EVENTS_OFF,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Add a global event listener.\n *\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function subscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_SUBSCRIBE,\n    payload: listener\n  }\n}\n\n/**\n * Remove a global event listener.\n *\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function unsubscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_UNSUBSCRIBE,\n    payload: listener\n  }\n}\n\n/* Internal actions */\n\n/**\n * Emits an event of the specified type.\n *\n * @method emitEvent\n * @param {Object} payload Information of the event to emit.\n * @throws {Error} Invalid event type\n * @return action An EVENTS_EMIT action.\n */\nexport function emitEvent (type, ...args) {\n  if (type === undefined) {\n    throw Error('Attempted to emit an event without a type.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_EMIT,\n    payload: { eventType: type, args }\n  }\n}\n\n/**\n * Define an alias for an event type.\n *\n * @method alias\n * @param {string} type The event type for which to add an alias.\n * @param {string} alias The alias name for the event type.\n */\nexport function aliasEvent (type, alias) {\n  if (type === undefined || alias === undefined) {\n    throw Error('Invalid attempt to alias an event.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_ALIAS,\n    payload: { eventType: type, alias }\n  }\n}\n","export function getProperty(obj, property) {\n    return ((typeof obj[property]) === 'undefined') ? null : obj[property];\n}\n\n//WARNING: This function probably does not do what you think.\nexport function compose(base, extendme) {\n    var prop;\n    for (prop in base) {\n        if (typeof base[prop] === 'function' && !extendme[prop]) {\n            extendme[prop] = base[prop].bind(base);\n        }\n    }\n}\n\nexport function getTimestamp() {\n    return new Date().getTime();\n}\n\nexport function parseAddress(address, contact) {\n    var displayName = '';\n\n    if (address.indexOf('sip:', 0) > -1) {\n        address = address.replace('sip:', '');\n    }\n\n    if (contact === undefined || contact === null) {\n        return (address.indexOf('@', 0) > -1) ? 'sip:' + address : address;\n    }\n    if (contact.firstName && contact.firstName !== '') {\n        displayName += contact.firstName;\n    }\n    if (contact.lastName && contact.lastName !== '') {\n        if (displayName === '') {\n            displayName += contact.lastName;\n        } else {\n            displayName += ' ' + contact.lastName;\n        }\n    }\n    if (displayName === '') {\n        return (address.indexOf('@', 0) > -1) ? 'sip:' + address : address;\n    }\n    return displayName + '<' + ((address.indexOf('@', 0) > -1) ? 'sip:' + address : address) + '>';\n}\n\nexport function getInteger(val) {\n    if (isNaN(val) || val === null || val === undefined) {\n        return 0;\n    }\n    return parseInt(val);\n}\n\nexport function Queue() {\n    var items;\n\n    this.enqueue = function(item) {\n        if (typeof(items) === 'undefined') {\n            items = [];\n        }\n        items.push(item);\n    };\n\n    this.dequeue = function() {\n        return items.shift();\n    };\n\n    this.peek = function() {\n        return items[0];\n    };\n\n    this.size = function() {\n        return typeof(items) === 'undefined' ? 0 : items.length;\n    };\n}\n\n/*\n * Similar to http://api.jquery.com/jquery.param/\n */\nexport function serialize(object) {\n    var encodedString = '',\n        prop;\n    for (prop in object) {\n        if (object.hasOwnProperty(prop)) {\n            if (encodedString.length > 0) {\n                encodedString += '&';\n            }\n            encodedString += encodeURI(prop + '=' + object[prop]);\n        }\n    }\n    return encodedString;\n}\n\nexport function extend(target, object) {\n    var prop;\n    for (prop in object) {\n        if (object.hasOwnProperty(prop)) {\n            target[prop] = object[prop];\n        }\n    }\n    return target;\n}\n\n/*\n * Always is a Promise.finally replacement helper. Will call the handler as part of the promise chain without\n * affecting the result of the promise.\n *\n * @param  {Promise} promise The promise to attach the finally handler to.\n * @param  {Function} handler A function which will be called when the passed in promise is settled (resolved or rejected)\n * @return {Promise} The new Promise with the handler attached.\n */\nexport function always(promise, handler) {\n    return promise.then(\n        // Success path, attach the always handler and then just a continuation of the param.\n        param => new Promise(resolve => resolve(handler())).then(() => param),\n        // Failure path, attach the always handler and then just a continuation with the re-thrown error.\n        error => new Promise(resolve => resolve(handler())).then(() => { throw error; })\n    );\n}\n\n\nexport function Utils({ LogManager: _logManager }) {\n    var logger;\n\n    this.callFunctionIfExist = function callFunctionIfExist() {\n        // Get the logger on first usage, instead of on LogManager instantiation.\n        // Avoids dependency issues while testing.\n        if(!logger) {\n            logger = _logManager.getLogger('utils');\n        }\n\n        var args = Array.prototype.slice.call(arguments),\n            func;\n        func = args.shift();\n        if (typeof(func) === 'function') {\n            try {\n                return func.apply(null, args);\n            } catch (e) {\n                logger.error('Exception occured: ' + e.message + '\\n' + e.stack);\n            }\n        }\n    };\n}\n\nexport function makeSafeForCSS(name) {\n    if(!name){\n        return name;\n    } else {\n        return name.replace(/[^a-z0-9]/g, function(s) {\n            var c = s.charCodeAt(0);\n            if (c === 32) {\n                return '-';\n            }\n            if (c >= 65 && c <= 90) {\n                return '_' + s.toLowerCase();\n            }\n            return '__' + ('000' + c.toString(16)).slice(-4);\n        });\n    }\n}\n","// Libraries.\nimport { mergeAllWith, isArray, isPlainObject } from 'lodash/fp'\nimport paramParser from 'query-string'\nimport { call, put } from 'redux-saga/effects'\n\n/**\n * Deeply merges the values of multiple objects. Objects on the left receive the values from objects on their right.\n * Unlike lodash's default merge behavior this doesn't merge arrays.\n *\n * @name mergeValues\n * @param {...Object} objects - Objects to merge\n * @return {Object} A new object containing the merged values.\n */\nexport function mergeValues (...objects) {\n  return mergeAllWith((leftValue, rightValue) => {\n    // Overwrite the default behavior of lodash's merge for arrays and simply\n    // clobber what's on the left so we don't end up with merged arrays.\n    if (isArray(leftValue)) {\n      return rightValue\n    }\n  }, objects)\n}\n\n/**\n * Utility function to convert an object to a query string.\n *\n * @param {Object} params An object of query parameters to be parsed and converted for use in a URL string\n * @param {Object} [options] Options to be passed to the query-string library\n * * @param {String} [options.arrayFormat] Format in which to compose array values which were passed as query parameters\n */\nexport function toQueryString (params = {}, options = {}) {\n  if (Object.keys(params).length > 0) {\n    const stringifiedParams = paramParser.stringify(params, options)\n    return '?' + stringifiedParams\n  }\n  return ''\n}\n\n/**\n * Higher-order function to auto-restart sagas when they crash.\n * Based on: https://github.com/redux-saga/redux-saga/pull/644#issuecomment-266454875\n * @method autoRestart\n * @param  {Generator} saga The saga to wrap.\n * @return {Generator} Wrapped saga.\n */\nexport function autoRestart (saga) {\n  return function * autoRestarting (...args) {\n    // Only restart the saga if it crashed; avoid restarting it if\n    //      it returned normally.\n    let shouldRestart = false\n    do {\n      try {\n        yield call(saga, ...args)\n        shouldRestart = false\n      } catch (e) {\n        // TODO: Re-add this log line.\n        // Importing the LogManager in this file breaks tests for an unknown\n        //    reason. Should find out why so that we can log in our utils.\n        // log.error(`Unhandled error in saga ${saga.name}.`, e)\n        console.log(`Unhandled error in saga ${saga.name}.`, e)\n        shouldRestart = true\n      }\n    } while (shouldRestart)\n  }\n}\n\n/**\n * Forwards the actions by directly dispatching them.\n * For example, this can be used with a takeEvery effect to grab actions from a channel and dispatch them.\n * @param {Object} action The action to be forwarded.\n * @example\n * const channel = eventChannel(...)\n * yield takeEvery(channel, forwardAction)\n */\nexport function * forwardAction (action) {\n  yield put(action)\n}\n\n/**\n * Ensures that services are in the same format understood by the server regardless,\n * of whether the client provides services as strings or objects.\n * @param {Array} services The list of services requested by the client.\n * @return {Array} A normalized list of services requested by the client.\n */\nexport function normalizeServices (services = []) {\n  return services.map(service => {\n    if (isPlainObject(service) && service.hasOwnProperty('service')) {\n      return service\n    }\n    return { service: service }\n  })\n}\n\n/**\n * A deferred promise\n * Don't use this unless you know what you are doing:\n *  <https://github.com/petkaantonov/bluebird/wiki/Promise-anti-patterns#the-deferred-anti-pattern>\n * @returns An object a with promise property and functions to resolve and reject\n */\nexport function defer () {\n  const d = {}\n  d.promise = new Promise((resolve, reject) => {\n    d.resolve = resolve\n    d.reject = reject\n  })\n  return d\n}\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/**\n * The Basic Error object. Provides information about an error that occurred in the SDK.\n * @public\n * @static\n * @typedef {Object} BasicError\n * @memberof api\n * @property {string} code The code of the error. If no code is known, this will be 'NO_CODE'.\n * @property {string} message A human-readable message to describe the error. If no message is known, this will be 'An error occurred'.\n */\n\nexport {\n  authCodes,\n  callCodes,\n  callHistoryCodes,\n  groupsCodes,\n  messagingCodes,\n  mwiCodes,\n  sipEventCodes,\n  clickToCallCodes,\n  bridgeCodes,\n  subscriptionCodes,\n  presenceCodes,\n  usersCodes,\n  webrtcCodes\n} from './codes'\n\nexport default class BasicError {\n  constructor ({ message, code }) {\n    this.name = 'BasicError'\n    this.code = code || 'NO_CODE'\n    this.message = message ? `${message}` : 'An error occurred.'\n  }\n}\n","export default {\n    'WEBRTC': {\n        'PLUGIN_ID': 'fcsPlugin',\n        'MEDIA_STATE': {\n            NOT_FOUND: 'notfound',\n            SEND_RECEIVE: 'sendrecv',\n            SEND_ONLY: 'sendonly',\n            RECEIVE_ONLY: 'recvonly',\n            INACTIVE: 'inactive'\n        },\n        'RTC_SIGNALING_STATE': {\n            STABLE: 'stable',\n            HAVE_LOCAL_OFFER: 'have-local-offer',\n            HAVE_REMOTE_OFFER: 'have-remote-offer',\n            HAVE_LOCAL_PRANSWER: 'have-local-pranswer',\n            HAVE_REMOTE_PRANSWER: 'have-remote-pranswer',\n            CLOSED: 'closed'\n        },\n        SDP: {\n            TYPE: {\n                'OFFER': 'offer',\n                'ANSWER': 'answer',\n                'PRANSWER': 'pranswer'\n            },\n            OPERATION: {\n                'START_CALL': 'START_CALL',\n                'ANSWER_CALL': 'ANSWER_CALL',\n                'HOLD': 'HOLD',\n                'UNHOLD': 'UNHOLD',\n                'UPDATE': 'UPDATE',\n                'RESPOND': 'RESPOND',\n                'REOFFER': 'REOFFER',\n                'DATA_CHANNEL': 'DATA_CHANNEL'\n            },\n            STEP: {\n                'PRE_SET_LOCAL': 'PRE_SET_LOCAL',\n                'PRE_SET_REMOTE': 'PRE_SET_REMOTE',\n                'PRE_SEND_LOCAL': 'PRE_SEND_LOCAL'\n            },\n            BUNDLE_POLICY: {\n                MAX_COMPAT: 'max-compat',\n                MAX_BUNDLE: 'max-bundle',\n                BALANCED: 'balanced',\n                DISABLED: 'DISABLED'\n            }\n        },\n        'ERROR': {\n            'ICE_ICELITE': 'ICE_ICELITE'\n        }\n    },\n    'STRING': {\n        'NEW_LINE': '\\n',\n        'CARRIAGE_RETURN': '\\r',\n        'VIDEO': 'video',\n        'AUDIO': 'audio'\n    },\n    'SDP': {\n        'A_LINE': 'a=',\n        'M_LINE': 'm=',\n        'CRYPTO': 'crypto',\n        'FINGERPRINT': 'fingerprint',\n        'ICE_UFRAG': 'ice-ufrag:',\n        'ICE_PWD': 'ice-pwd:',\n        'NACK': 'nack',\n        'NACKPLI': 'nack pli',\n        'SETUP_ACTIVE': 'a=setup:active',\n        'SETUP_PASSIVE': 'a=setup:passive',\n        'SETUP_ACTPASS': 'a=setup:actpass',\n        'BANDWIDTH': {\n            'MAXPLAYBACKRATE': 'maxplaybackrate',\n            'MAXAVERAGEBITRATE': 'maxaveragebitrate',\n            'FEC': 'useinbandfec',\n            'DTX': 'usedtx',\n            'PTIME': 'ptime'\n        }\n    },\n    'HTTP_METHOD': {\n        'GET': 'GET',\n        'POST': 'POST',\n        'PUT': 'PUT',\n        'DELETE': 'DELETE',\n        'OPTIONS': 'OPTIONS'\n    },\n    'WEBSOCKET': {\n        'PROTOCOL': {\n            'SECURE': 'wss',\n            'NONSECURE': 'ws'\n        },\n        'DEFAULT_PORT': '8581',\n        'STATUS': {\n            'OPENED': 1,\n            'ALREADY_OPENED': 2,\n            'CREATE_ERROR': 3,\n            'CONNECTION_ERROR': 4,\n            'NOT_FOUND': 5,\n            'CONNECTION_CLOSED': 6\n        },\n        'FOREGROUND_INTERVAL': 10000,\n        'BACKGROUND_INTERVAL': 60000\n    },\n    'LONG_POLLING': {\n        'STATUS': {\n            'TRIGGERED_CONNECT': 1\n        }\n    },\n    'NOTIFICATION': {\n        'STATUS': {\n            'NOT_STARTED': 3,\n            'CONFIGURATION_ERROR': 4,\n            'STOP_FOR_LP_TO_WS_UPGRADE': 5\n        }\n    },\n    'EVENT': {\n        'XHR_REQUEST_NOT_INITIALIZED': 'XHR_REQUEST_NOT_INITIALIZED',\n        'DEVICE_SUBSCRIPTION_STARTED': 'DEVICE_SUBSCRIPTION_STARTED',\n        'DEVICE_SUBSCRIPTION_STOPPED': 'DEVICE_SUBSCRIPTION_STOPPED',\n        'DEVICE_SUBSCRIPTION_ENDED': 'DEVICE_SUBSCRIPTION_ENDED',\n        'CONNECTION_REESTABLISHED': 'CONNECTION_REESTABLISHED',\n        'CONNECTION_LOST': 'CONNECTION_LOST',\n        'TOKEN_AUTH_STARTED': 'TOKEN_AUTH_STARTED',\n        'BASIC_AUTH_STARTED': 'BASIC_AUTH_STARTED',\n        'TOKEN_NOT_FOUND': 'TOKEN_NOT_FOUND',\n        'SESSION_EXPIRED': 'SESSION_EXPIRED',\n        'NOTIFICATION_CHANNEL_LOST': 'NOTIFICATION_CHANNEL_LOST',\n        'FCS_SETUP_COMPLETED': 'FCS_SETUP_COMPLETED',\n        'WEBSOCKET_CONNECTED': 'WEBSOCKET_CONNECTED',\n        'WEBSOCKET_ERROR': 'WEBSOCKET_ERROR',\n        'WEBSOCKET_DISCONNECTED': 'WEBSOCKET_DISCONNECTED',\n        'WEBSOCKET_CONNECTIVITY_CHECK': 'WEBSOCKET_CONNECTIVITY_CHECK',\n        'NETWORK_ERROR': 'NETWORK_ERROR',\n        'NETWORK_CHANGED' : 'NETWORK_CHANGED',\n        'SERVER_CHANGED' : 'SERVER_CHANGED'\n    },\n    'SUBSCRIPTION_EVENT': {\n        'TOKEN_OR_SESSION_LOSS': 'TOKEN_OR_SESSION_LOSS',\n        'SUBSCRIPTION_SUCCESS': 'SUBSCRIPTION_SUCCESS',\n        'EXTEND_SUCCESS': 'EXTEND_SUCCESS',\n        'EXTEND_FAILURE': 'EXTEND_FAILURE',\n        'REGULAR_EXTEND_PROCESSING': 'REGULAR_EXTEND_PROCESSING',\n        'STOP_SUCCESS': 'STOP_SUCCESS',\n        'STOP_FAILURE': 'STOP_FAILURE',\n        'CONNECTION_LOSS': 'CONNECTION_LOSS',\n        'SET_NOTIFICATION_ONERROR': 'SET_NOTIFICATION_ONERROR',\n        'SET_NOTIFICATION_ONSUCCESS': 'SET_NOTIFICATION_ONSUCCESS',\n        'TRIGGER_LONG_POLLING': 'TRIGGER_LONG_POLLING',\n        'RESTART_SUBSCRIPTION_REQUEST': 'RESTART_SUBSCRIPTION_REQUEST'\n    },\n    'NOTIFICATION_EVENT': {\n        'NOTIFICATION_SUCCESS': 'NOTIFICATION_SUCCESS',\n        'NOTIFICATION_FAILURE': 'NOTIFICATION_FAILURE'\n    },\n    'CACHE': {\n        'NOTIFYURL': 'NotificationUrl',\n        'NOTIFYID': 'NotificationId',\n        'SUBSCRIBEURL': 'SubscriptionUrl',\n        'SUBSCRIBEEXPIRY': 'SubscriptionExpiry',\n        'SUBSCRIBEEXTENDINTERVAL': 'SubscriptionExtendInterval',\n        'SESSION': 'SESSION'\n    },\n    'TIMEOUT': {\n        'STAGGERED_MAX': 5000,\n        'STAGGERED_MIN': 300,\n        'CHECK_INTERVAL': 10000,\n        'RETRY_START': 10000,\n        'RETRY_LIMIT': 640000,\n        'RETRY_MULTIPLIER': 2,\n        'WS_ERROR': 0\n    },\n    'PLATFORM': {\n        'IOS': 'iOS'\n    },\n    'TRICKLE': {\n        'NONE': 'none',\n        'HALF': 'half',\n        'FULL': 'full'\n    }\n};\n","const PREFIX = '@@KANDY/'\n\nexport const MAKE_CALL = PREFIX + 'MAKE_CALL'\nexport const MAKE_CALL_FINISH = PREFIX + 'MAKE_CALL_FINISH'\nexport const CALL_INCOMING = PREFIX + 'CALL_INCOMING'\nexport const ANSWER_CALL = PREFIX + 'ANSWER_CALL'\nexport const ANSWER_CALL_FINISH = PREFIX + 'ANSWER_CALL_FINISH'\nexport const IGNORE_CALL = PREFIX + 'IGNORE_CALL'\nexport const IGNORE_CALL_FINISH = PREFIX + 'IGNORE_CALL_FINISH'\nexport const REJECT_CALL = PREFIX + 'REJECT_CALL'\nexport const REJECT_CALL_FINISH = PREFIX + 'REJECT_CALL_FINISH'\nexport const END_CALL = PREFIX + 'END_CALL'\nexport const END_CALL_FINISH = PREFIX + 'END_CALL_FINISH'\n\nexport const CALL_STATE_CHANGE = PREFIX + 'CALL_STATE_CHANGE'\nexport const CALL_MEDIA_STATE_CHANGE = PREFIX + 'CALL_MEDIA_STATE_CHANGE'\n\nexport const START_LOCAL_VIDEO = PREFIX + 'START_LOCAL_VIDEO'\nexport const START_LOCAL_VIDEO_FINISH = PREFIX + 'START_LOCAL_VIDEO_FINISH'\nexport const STOP_LOCAL_VIDEO = PREFIX + 'STOP_LOCAL_VIDEO'\nexport const STOP_LOCAL_VIDEO_FINISH = PREFIX + 'STOP_LOCAL_VIDEO_FINISH'\n\n/*\n *   Mid-Call operations.\n */\nexport const MUTE_CALL = PREFIX + 'MUTE_CALL'\nexport const MUTE_CALL_FINISH = PREFIX + 'MUTE_CALL_FINISH'\nexport const UNMUTE_CALL = PREFIX + 'UNMUTE_CALL'\nexport const UNMUTE_CALL_FINISH = PREFIX + 'UNMUTE_CALL_FINISH'\n\nexport const SILENCE_CALL = PREFIX + 'SILENCE_CALL'\nexport const SILENCE_CALL_FINISH = PREFIX + 'SILENCE_CALL_FINISH'\nexport const UNSILENCE_CALL = PREFIX + 'UNSILENCE_CALL'\nexport const UNSILENCE_CALL_FINISH = PREFIX + 'UNSILENCE_CALL_FINISH'\n\nexport const SET_CUSTOM_PARAMETERS = PREFIX + 'SET_CUSTOM_PARAMETERS'\n\nexport const START_VIDEO = PREFIX + 'START_VIDEO'\nexport const START_VIDEO_FINISH = PREFIX + 'START_VIDEO_FINISH'\nexport const STOP_VIDEO = PREFIX + 'STOP_VIDEO'\nexport const STOP_VIDEO_FINISH = PREFIX + 'STOP_VIDEO_FINISH'\n\nexport const HOLD_CALL = PREFIX + 'HOLD_CALL'\nexport const HOLD_CALL_FINISH = PREFIX + 'HOLD_CALL_FINISH'\nexport const UNHOLD_CALL = PREFIX + 'UNHOLD_CALL'\nexport const UNHOLD_CALL_FINISH = PREFIX + 'UNHOLD_CALL_FINISH'\n\nexport const START_SCREENSHARE = PREFIX + 'START_SCREENSHARE'\nexport const START_SCREENSHARE_FINISH = PREFIX + 'START_SCREENSHARE_FINISH'\nexport const STOP_SCREENSHARE = PREFIX + 'STOP_SCREENSHARE'\nexport const STOP_SCREENSHARE_FINISH = PREFIX + 'STOP_SCREENSHARE_FINISH'\n\nexport const FORWARD_CALL = PREFIX + 'FORWARD_CALL'\nexport const FORWARD_CALL_FINISH = PREFIX + 'FORWARD_CALL_FINISH'\n\nexport const DIRECT_TRANSFER = PREFIX + 'DIRECT_TRANSFER'\nexport const DIRECT_TRANSFER_FINISH = PREFIX + 'DIRECT_TRANSFER_FINISH'\n\nexport const CONSULTATIVE_TRANSFER = PREFIX + 'CONSULTATIVE_TRANSFER'\nexport const CONSULTATIVE_TRANSFER_FINISH = PREFIX + 'CONSULTATIVE_TRANSFER_FINISH'\n\nexport const JOIN_CALL = PREFIX + 'JOIN_CALL'\nexport const JOIN_CALL_FINISH = PREFIX + 'JOIN_CALL_FINISH'\n\nexport const SEND_CUSTOM_PARAMETERS = PREFIX + 'SEND_CUSTOM_PARAMETERS'\nexport const SEND_CUSTOM_PARAMETERS_FINISH = PREFIX + 'SEND_CUSTOM_PARAMETERS_FINISH'\n\nexport const SEND_DTMF = PREFIX + 'SEND_DTMF'\nexport const SEND_DTMF_FINISH = PREFIX + 'SEND_DTMF_FINISH'\n\n// Media devices.\nexport const CHECK_DEVICES = PREFIX + 'CHECK_DEVICES'\nexport const CHECK_DEVICES_FINISH = PREFIX + 'CHECK_DEVICES_FINISH'\n\nexport const SET_DEFAULT_DEVICES = PREFIX + 'SET_DEFAULT_DEVICES'\nexport const SET_DEFAULT_DEVICES_FINISH = PREFIX + 'SET_DEFAULT_DEVICES_FINISH'\n\nexport const PROMPT_USER_MEDIA = PREFIX + 'PROMPT_USER_MEDIA'\nexport const PROMPT_USER_MEDIA_FINISH = PREFIX + 'PROMPT_USER_MEDIA_FINISH'\n\nexport const CHANGE_SPEAKER = PREFIX + 'CHANGE_SPEAKER'\nexport const CHANGE_SPEAKER_FINISH = PREFIX + 'CHANGE_SPEAKER_FINISH'\n\nexport const CHANGE_INPUT_DEVICES = PREFIX + 'CHANGE_INPUT_DEVICES'\nexport const CHANGE_INPUT_DEVICES_FINISH = PREFIX + 'CHANGE_INPUT_DEVICES_FINISH'\n\n// Media\nexport const INIT_MEDIA = PREFIX + 'INIT_MEDIA'\nexport const INIT_MEDIA_FINISH = PREFIX + 'INIT_MEDIA_FINISH'\n\n// Call Me\nexport const MAKE_CALL_ANONYMOUS = PREFIX + 'MAKE_CALL_ANONYMOUS'\n\n// Audio Bridge\nexport const CREATE_AUDIO_BRIDGE = PREFIX + 'CREATE_AUDIO_BRIDGE'\nexport const CREATE_AUDIO_BRIDGE_FINISH = PREFIX + 'CREATE_AUDIO_BRIDGE_FINISH'\n\nexport const CLOSE_AUDIO_BRIDGE = PREFIX + 'CLOSE_AUDIO_BRIDGE'\nexport const CLOSE_AUDIO_BRIDGE_FINISH = PREFIX + 'CLOSE_AUDIO_BRIDGE_FINISH'\n\nexport const BRIDGE_ADD_CALL = PREFIX + 'BRIDGE_ADD_CALL'\nexport const BRIDGE_ADD_CALL_FINISH = PREFIX + 'BRIDGE_ADD_CALL_FINISH'\n\nexport const BRIDGE_REMOVE_CALL = PREFIX + 'BRIDGE_REMOVE_CALL'\nexport const BRIDGE_REMOVE_CALL_FINISH = PREFIX + 'BRIDGE_REMOVE_CALL_FINISH'\n\nexport const MUTE_AUDIO_BRIDGE = PREFIX + 'MUTE_AUDIO_BRIDGE'\nexport const MUTE_AUDIO_BRIDGE_FINISH = PREFIX + 'MUTE_AUDIO_BRIDGE_FINISH'\n\nexport const UNMUTE_AUDIO_BRIDGE = PREFIX + 'UNMUTE_AUDIO_BRIDGE'\nexport const UNMUTE_AUDIO_BRIDGE_FINISH = PREFIX + 'UNMUTE_AUDIO_BRIDGE_FINISH'\n\nexport const SILENCE_AUDIO_BRIDGE = PREFIX + 'SILENCE_AUDIO_BRIDGE'\nexport const SILENCE_AUDIO_BRIDGE_FINISH = PREFIX + 'SILENCE_AUDIO_BRIDGE_FINISH'\n\nexport const UNSILENCE_AUDIO_BRIDGE = PREFIX + 'UNSILENCE_AUDIO_BRIDGE'\nexport const UNSILENCE_AUDIO_BRIDGE_FINISH = PREFIX + 'UNSILENCE_AUDIO_BRIDGE_FINISH'\n\nexport const UPDATE_AUDIO_BRIDGE_CALLS = PREFIX + 'UPDATE_AUDIO_BRIDGE_CALLS'\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","const prefix = '@@KANDY/'\n\nexport const PROCESS_NOTIFICATION = prefix + 'PROCESS_NOTIFICATION'\nexport const PROCESS_NOTIFICATION_FINISH = prefix + 'PROCESS_NOTIFICATION_FINISH'\nexport const NOTIFICATION_RECEIVED = prefix + 'NOTIFICATION_RECEIVED'\n\nexport const ENABLE_NOTIFICATION_CHANNEL = prefix + 'ENABLE_NOTIFICATION_CHANNEL'\nexport const ENABLE_NOTIFICATION_CHANNEL_FINISH = prefix + 'ENABLE_NOTIFICATION_CHANNEL_FINISH'\n\nexport const REGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'REGISTER_APPLE_PUSH_NOTIFICATION'\nexport const REGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'REGISTER_ANDROID_PUSH_NOTIFICATION'\n\nexport const UNREGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'UNREGISTER_APPLE_PUSH_NOTIFICATION'\nexport const UNREGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'UNREGISTER_ANDROID_PUSH_NOTIFICATION'\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Requests plugin.\nimport { RESPONSE } from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { getCommonOptions } from './utils'\n\n// Libraries.\nimport { mergeValues } from '../common/utils'\nimport { get } from 'lodash/fp'\nimport { put, take, call } from 'redux-saga/effects'\n\n/**\n * Creates an effect description that instructs the middleware to perform a request with the provided options.\n * This effect is blocking and will yield a RESPONSE action on completion.\n *\n * @param {Object} options See https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n * @param {string} options.url The url to perform the request on.\n * @param {string} options.method The HTTP method to use for the request.\n * @param {Object} options.headers Object literal of headers you want to add to the request.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] Any body that you want to add to your request.\n * @return A blocking redux-saga effect that will instruct the middleware to wait for the request to be fulfilled or until it fails.\n */\nexport default function request (options, commonOptions) {\n  return call(requestSaga, options, commonOptions)\n}\n\n/*\n * The saga backing the request effect.\n */\nexport function * requestSaga (options, manualOptions) {\n  /*\n   * Some requests can have special-cases where they don't want to use the\n   *    \"common\" options. Allow them to pass in \"manual\" options that should be\n   *    used instead.\n   * For example, the CPaaS \"upload file\" request cannot use the \"common\"\n   *    Content-Type header.\n   */\n  if (manualOptions) {\n    options = mergeValues(options, manualOptions)\n  } else {\n    // Get the common request options that should be used for all requests.\n    const commonOptions = yield call(getCommonOptions, options.url)\n\n    options = mergeValues(options, commonOptions)\n  }\n\n  // Dispatch the request action for the sagas to process.\n  const requestAction = yield put(actions.request(options))\n  const responseAction = yield take(\n    action => action.type === RESPONSE && get('meta.requestId', action) === requestAction.meta.requestId\n  )\n\n  return responseAction\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","import * as actionTypes from './actionTypes'\nimport { sanitizeSdesFromSdp, modifySdpBandwidth } from '../../callstack/utils'\nimport { createCodecRemover } from '@kandy-io/sdp-handlers'\n\n/**\n * Add or update a specific key within the store.config.\n *\n * @param {Object} values The values that will be placed in the store.\n * @param {string} [pluginName] The plugin name of the config being set.\n * @return {Action} action A redux action.\n */\nexport function update (values, pluginName = '') {\n  var payload\n  // Use the plugin name as a substate key, if present.\n  if (pluginName) {\n    payload = {\n      [pluginName]: values\n    }\n  } else {\n    payload = values\n  }\n\n  return {\n    type: actionTypes.CONFIG_UPDATE,\n    payload: payload\n  }\n}\n\n/**\n * Updates the SDP Handlers in the call plugin configs\n *\n * @method setSdpHandlers\n * @param {Array<call.SdpHandlerFunction>} sdpHandlers The list of SDP handler to set in the config.\n * @param {Object}                         options     Options to configure extra sdp handlers\n * @returns {Object} A flux standard action.\n */\nexport function setSdpHandlers (sdpHandlers, options) {\n  /*\n   * Set SDP handlers to be used for every operation:\n   *\n   * 1. Application provided SDP handlers.\n   *\n   * 2. Disable DTLS-SDES crypto method (ie. delete the line) if there's a better\n   *    crypto method enabled. WebRTC only allows one method to be enabled.\n   *    This is needed for interoperability with non-browser endpoints that include\n   *    SDES as a fallback method.\n   *\n   * 3. [optional] Disable H264 Codecs for video calls, used to reduce SDP size\n   *\n   * 4. Modify sdp and add bandwidth limits on it if bandwidth controls are provided.\n   */\n  if (options.removeH264Codecs) {\n    sdpHandlers.push(createCodecRemover(['H264']))\n  }\n  sdpHandlers.push(sanitizeSdesFromSdp)\n  sdpHandlers.push(modifySdpBandwidth)\n\n  return {\n    type: actionTypes.SET_SDP_HANDLERS,\n    payload: {\n      sdpHandlers\n    }\n  }\n}\n","const prefix = '@@KANDY/CONN/'\n\n// Actions to tell connectivity plugin what to do\nexport const WS_ATTEMPT_CONNECT = prefix + 'WS_ATTEMPT_CONNECT'\nexport const WS_CONNECT_FINISHED = prefix + 'WS_CONNECT_FINISHED'\nexport const WS_DISCONNECT = prefix + 'WS_DISCONNECT'\nexport const WS_DISCONNECT_FINISHED = prefix + 'WS_DISCONNECT_FINISHED'\nexport const WS_RECONNECT_FAILED = prefix + 'WS_RECONNECT_FAILED'\n\n// actions for hooking into connectivity plugin behaviour\nexport const WS_CLOSED = prefix + 'WS_CLOSED'\nexport const WS_ERROR = prefix + 'WS_ERROR'\n\nexport const LOST_CONNECTION = prefix + 'LOST_CONNECTION'\n\nexport const RECEIVE_SERVER_PING = prefix + 'RECEIVE_SERVER_PING'\nexport const RECEIVE_SERVER_PONG = prefix + 'RECEIVE_SERVER_PONG'\n\nexport const CHANGE_CONNECTIVITY_CHECKING = prefix + 'CHANGE_CONNECTIVITY_CHECKING'\nexport const CHANGE_PING_INTERVAL = prefix + 'CHANGE_PING_INTERVAL'\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };","import { extend } from '../utils';\n\nexport const mediaErrors = {\n    NOT_FOUND: 1,\n    NOT_ALLOWED: 2,\n    OPTIONS: 3,\n    WRONG_VERSION: 4,\n    NOT_INITIALIZED: 5,\n    NEW_VERSION_WARNING: 6,\n    INVALID_PARAMETER: 7,\n    NO_SCREENSHARING_WARNING: 8\n};\n\n/**\n * Call and Remote Call Control (RCC) related resources (IMRN, Click To Call, Call Disposition).\n *\n * Available for SPiDR since 3.0.0, and for RCC since 3.1.1.\n *\n * @name call\n * @namespace\n *\n * @memberOf fcs\n *\n * @version @{spidr.jsl.version}\n */\nexport function CallImpl({ CallManager: _callManager, RccManager: _rccManager}) {\n\n    /**\n     * This field provides the state of local video status like \"recvonly\", \"sendrecv\", \"sendrecv\" etc.\n     *\n     * This is a SPiDR service only member.\n     *\n     * @name fcs.call#localVideoState\n     * @field\n     * @type {number}\n     * @since 3.0.0\n     */\n    this.localVideoState = 0;\n\n    /**\n     * This field provides the state of remote video status like \"recvonly\", \"sendrecv\", \"sendrecv\" etc.\n     *\n     * This is a SPiDR service only member.\n     *\n     * @name fcs.call#remoteVideoState\n     * @field\n     * @since 3.0.0\n     * @type {number}\n     */\n    this.remoteVideoState = 0;\n\n    /**\n     * Sets the handler for received call notifications.\n     *\n     * This is a SPiDR and RCC service event.\n     *\n     * @name fcs.call#onReceived\n     * @event\n     * @param {fcs.call#Call} call The call object\n     * @example\n     * // SPiDR service example is as follows:\n     * // @since 3.0.0\n     * // This function listens received calls\n     * function callReceived(call) {\n     *    console.log(\"There is an incomming call...\");\n     *\n     *    //This function listens call state changes in JSL API level\n     *    call.onStateChange = function(state) {\n     *        onStateChange(call, state);\n     *    };\n     *\n     *    //This function listens media streams in JSL API level\n     *    call.onStreamAdded = function(stream) {\n     *        // Remote Video is turned on by the other end of the call\n     *        // Stream of Remote Video stream is passed into this function\n     *        onStreamAdded(stream);\n     *    };\n     *\n     *    // Answering the incomming call\n     *    call.answer(onAnswer, onFailure, isVideoAnswer);\n     * }\n     *\n     * fcs.call.onReceived = callReceived;\n     *\n     * // RCC service example is as follows:\n     * // @since 3.1.1\n     * function onCallReceived(call) {\n     *   console.log('There is an incomming call...');\n     *\n     *   call.onStateChange = function (state, statusCode, reasonText, data) {\n     *       onStateChange(call, state, data);\n     *   };\n     * }\n     *\n     * fcs.call.onReceived = onCallReceived;\n     *\n     */\n    this.onReceived = null;\n\n    /**\n     * Sets the handler for received CallReplace nofitication\n     *\n     * This is a SPIDR service event\n     *\n     * @name fcs.call#onCallReplaceReceived\n     * @event\n     * @param {fcs.call#Call} call the new call object\n     * @param {fcs.call#Call} call the call object to transferred\n     * @since 4.0.0\n     * @example\n     *\n     *\n     *  function onCallReplaceReceived(newlyCreatedCall, transferredCall) {\n     *       showInfoMessage(\"A Replacing call has received with id: \" + newlyCreatedCall.id);\n     *\n     *       // Assigning call object to currentCall variable to use in the application\n     *       currentCall = newlyCreatedCall;\n     *\n     *       //This function listens call state changes in JSL API level\n     *       newlyCreatedCall.call.onStateChange = function(state) {\n     *          onStateChange(newlyCreatedCall, state);\n     *       };\n     *\n     *       //This function listens call state changes in JSL API level\n     *       transferredCall.onMute = function(status) {\n     *           showInfoMessage(\"Call mute status: \" + status);\n     *       };\n     * }\n     *\n     * fcs.call.onCallReplaceReceived = onCallReplaceReceived;\n     */\n    this.onCallReplaceReceived = null;\n\n    /**\n     * Sets the handler for monitored device initiated outgoing call notifications.\n     *\n     * This is an RCC service only event.\n     *\n     * @name fcs.call#onOutgoingCall\n     * @event\n     * @since 3.1.1\n     * @param {fcs.call#Call} Call The call object\n     *\n     * @example\n     * //This function listens monitored device initiated outgoing calls\n     * function outgoingCall(call) {\n     *    console.log(\"A new call is successful!\");\n     *\n     *    //This function listens call state changes in JSL API level\n     *    outgoingCall.onStateChange = function(state, statusCode, reasonText, data) {\n     *      onStateChange(call, state, data);\n     *    };\n     *\n     * }\n     * fcs.call.onOutgoingCall = outgoingCall;\n     */\n    this.onOutgoingCall = null;\n\n    /**\n     * Monitor session is automatically and periodically extended after it is\n     * started (see {@link fcs.call#startMonitorDevice}). In case of extend\n     * monitor failure, given onMonitorSessionLost callback\n     * function is called.\n     *\n     * This is an RCC service only method.\n     *\n     * @name fcs.call#setOnMonitorSessionLost\n     * @function\n     * @since 3.1.1\n     * @param {function} callback callback function for on monitor session lost\n     *\n     * @example\n     * onSuccess = function () {\n     *   console.log('Start monitor success');\n     *\n     *   fcs.call.setOnMonitorSessionLost(\n     *       function () {\n     *           console.log('Extend monitor session lost! Please again start new monitor session.');\n     *       });\n     * }\n     *\n     * onFailure = function () {\n     *   console.log('Start monitor failure');\n     * }\n     *\n     * fcs.call.startMonitorDevice(deviceID, onSuccess, onFailure);\n     *\n     */\n    this.setOnMonitorSessionLost = function(callback) {\n        return _rccManager.setOnMonitorSessionLost({callback});\n    };\n\n    /**\n     * @deprecated DO NOT USE, fcs.setup will do initMedia immediatly, please see {@link fcs#setup} for more information\n     * @name fcs.call#initMedia\n     * @function\n     */\n\n    this.initMedia = function(onSuccess, onFailure, options) {\n        return _callManager.initMedia({options}, onSuccess, onFailure);\n    };\n\n    /**\n     * Starts a call.\n     *\n     * This is a SPiDR and RCC service method.\n     *\n     * @name fcs.call#startCall\n     * @function\n     * @param {string} from The caller's address (e.g. SIP URI) used to establish the call. This is a SPiDR service only parameter.\n     * @param {object} [contact] Contains users firstName and lastName. This is a SPiDR service only parameter.\n     * @param {string} [contact.firstName=\"John\"] First Name of the user\n     * @param {string} [contact.lastName=\"Doe\"] Last Name of the user\n     * @param {string} to The callee's address (e.g. SIP URI) used to establish the call\n     * @param {function} onSuccess The onSuccess({@link fcs.call#OutgoingCall}) callback function to be called\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n     * @param {boolean} [isVideoEnabled] This will negotiate to receive video, see sendInitialVideo. This is a SPiDR service only parameter.\n     * @param {boolean} [sendInitialVideo] Send the video automatically with the call, this will turn the camera on, and set the call to also receive video same as setting isVideoEnabled to true. This is a SPiDR service only parameter.\n     * @param {object} [videoResolution] Sets the quality of video. This is a SPiDR service only parameter.\n     * @param {string} [videoResolution.width=\"320\"] Specifies min & max width of video.\n     * @param {string} [videoResolution.height=\"240\"] Specifies min & maxheight of video.\n     * @param {string} [videoResolution.minWidth=\"320\"] Specifies min width of video. Overrides ({@link videoResolution.width})\n     * @param {string} [videoResolution.minHeight=\"240\"] Specifies min height of video. Overrides ({@link videoResolution.height})\n     * @param {string} [videoResolution.maxWidth=\"320\"] Specifies max width of video. Overrides ({@link videoResolution.width})\n     * @param {string} [videoResolution.maxHeight=\"240\"] Specifies max height of video. Overrides ({@link videoResolution.height})\n     * @param {object} [params] Extra parameters.\n     * @param {string} [params.serviceName] Contains the service name 'spidr' or 'rcc'. SPiDR service parameter is default. If it is a RCC service, the service parameter should be given.\n     * @param {boolean} [params.isAudioEnabled] Setting this to false will disable audio for the call. This is a SPiDR service only parameter.\n     *\n     * @example\n     * // SPiDR service example is as follows:\n     * // @since 3.0.0\n     * // Make Voice Call\n     * // Start a voice call to the uri indicated with \"to\" argument\n     * // Login is a prerequisite for making calls\n     * // contact is an object with two fields contact.firstName and contact.lastName that specifies caller info\n     * fcs.call.startCall(fcs.getUser(), contact, to,\n     *      function(outgoingCall){\n     *        //get callid for your web app to be used later for handling popup windows\n     *        var callId = outgoingCall.getId();\n     *\n     *        outgoingCall.onStateChange = function(state, sipResponseCode, sipReasonText, data){\n     *            // For example, to handle the end of a call.\n     *            switch (sipResponseCode) {\n     *            \tcase \"404\":\n     *            \t\tshowInfoMessage(\"Callee does not exist\");\n     *            \t\tbreak;\n     *            \tcase \"480\":\n     *            \t\tshowInfoMessage(\"Callee is offline\");\n     *            \t\tbreak;\n     *            \tcase \"603\":\n     *            \t\tshowInfoMessage(\"Callee rejected us\");\n     *            \t\tbreak;\n     *            \tcase \"487\":\n     *            \t\tshowInfoMessage(\"Callee did not answer\");\n     *            \t\tbreak;\n     *            }\n     *            switch (data.localStatusCode) {\n     *            \tcase \"9900\":\n     *            \t\tshowInfoMessage(\"Call end reason is not provided\");\n     *            \t\tbreak;\n     *            \tcase \"9901\":\n     *            \t\tshowInfoMessage(\"Call is ended locally\");\n     *            \t\tbreak;\n     *            \tcase \"9902\":\n     *            \t\tshowInfoMessage(\"Call is rejected locally\");\n     *            \t\tbreak;\n     *            \tcase \"9903\":\n     *            \t\tshowInfoMessage(\"Call is ignored locally\");\n     *            \t\tbreak;\n     *            \tcase \"9904\":\n     *            \t\tshowInfoMessage(\"Call is responded from another device\");\n     *            \t\tbreak;\n     *                case \"9905\":\n     *            \t\tshowInfoMessage(\"Call is transfered\");\n     *            \t\tbreak;\n     *            \tdefault:\n     *            \t\tbreak;\n     *            }\n     *          //Add statusCode that returned from the server property to the call\n     *          outgoingCall.statusCode = sipResponseCode;\n     *          outgoingCall.localStatusCode = data.localStatusCode;\n     *          outgoingCall.reasonText = sipReasonText;\n     *          outgoingCall.localReasonText = data.localReasonText;\n     *          //Put your web app code to handle call state change like ringing, onCall ...etc.\n     *\t      };\n     *\n     *       outgoingCall.onStreamAdded = function(stream){\n     *           // Setting up source (src tag) of remote video container\n     *           document.getElementById('remoteVideo').srcObject = stream;\n     *       };\n     *    },\n     *    function(){\n     *       //put your web app failure handling code\n     *       window.alert(\"CALL_FAILED\");\n     *    },\n     *    false, false);\n     *\n     * // RCC service example is as follows:\n     * // @since 3.1.1\n     * // Start a call from a monitored device.\n     * fcs.call.startCall(undefined, undefined,\n     *    // destination\n     *    destination,\n     *    // onSuccess callback\n     *    function (outgoingCall)\n     *    {\n     *        outgoingCall.onStateChange = function (state, statusCode, reasonText, data) {\n     *                onStateChange(outgoingCall, state, data);\n     *        };\n     *        console.log('make call request success');\n     *    },\n     *    // onFailure callback\n     *    function (e) {\n     *        console.log('make call request failure!');\n     *    },\n     *    undefined, undefined, undefined, {serviceName: 'rcc'});\n     *\n     */\n\n    /*\n     * Internal API\n     * @param {boolean} [params.sendScreenShare] Initiate a call with screen sharing. If mediaSourceId is not provided this will trigger the browser to request for screen sharing, can be used with FireFox, or with the Kandy ChromeExtension. Audio will be disabled when in use. This is a SPiDR service only parameter.\n     * @param {string} [params.mediaSourceId] . This will initate the call from a mediaSourceId. This is a SPiDR service only parameter.\n     */\n\n    this.startCall = function(from, contact, to, onSuccess, onFailure, isVideoEnabled, sendInitialVideo, videoResolution, options) {\n        var params = {\n            from: from,\n            contact: contact,\n            to: to,\n            isVideoEnabled: isVideoEnabled,\n            sendInitialVideo: sendInitialVideo,\n            videoResolution: videoResolution\n        };\n        params = extend(params, options);\n\n        if (options && options.serviceName === 'rcc') {\n            return _rccManager.start(params, onSuccess, onFailure);\n        } else {\n            return _callManager.start(params, onSuccess, onFailure);\n        }\n    };\n\n    /**\n     * Starts monitoring a device.\n     *\n     * This is an RCC service only method.\n     *\n     * @name fcs.call#startMonitorDevice\n     * @function\n     * @since 3.1.1\n     * @param {string} deviceID If string with length greater than 0; device monitor will be started, otherwise user monitor will be started.\n     * @param {function} onSuccess The onSuccess callback function to be called\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n     *\n     * @example\n     * // User is subscribed...\n     * // If deviceID is a string with length greater than 0; device monitor will be started,\n     * // otherwise user monitor will be started.\n     * var deviceID = null;\n     * fcs.call.startMonitorDevice(\n     *     deviceID,\n     *     // onSuccess callback\n     *     function () {\n     *         console.log('Start monitor success');\n     *     },\n     *     // onFailure callback\n     *     function () {\n     *         console.log('Start monitor failure');\n     *     });\n     */\n\n    this.startMonitorDevice = function(deviceID, onSuccess, onFailure) {\n        return _rccManager.startMonitorDevice({ deviceID }, onSuccess, onFailure);\n    };\n\n    /**\n     * Stops monitoring a device.\n     *\n     * This is an RCC service only method.\n     *\n     * @name fcs.call#stopMonitorDevice\n     * @function\n     * @since 3.1.1\n     * @param {function} onSuccess The onSuccess callback function to be called\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n     *\n     * @example\n     * fcs.call.stopMonitorDevice(\n     *  // onSuccess callback\n     *  function () {\n     *      console.log('stop monitor success');\n     *  },\n     *  // onFailure callback\n     *  function () {\n     *      console.log('stop monitor failure');\n     *  });\n     *\n     */\n\n    this.stopMonitorDevice = function(onSuccess, onFailure) {\n        return _rccManager.stopMonitorDevice(onSuccess, onFailure);\n    };\n\n\n    /**\n     * Lists the registered devices of the RCC subscriber.\n     *\n     * This is an RCC service only method.\n     *\n     * @name fcs.call#getRCCDeviceList\n     * @function\n     * @since 3.1.1\n     * @param {function} onSuccess The onSuccess callback function to be called with an array of device info objects. Each object contains deviceURI, deviceId and uuid fields.\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n     *\n     * @example\n     * // User is subscribed...\n     * fcs.call.getRCCDeviceList(\n     *  // onsuccess callback\n     *  function(deviceList) {\n     *      console.log('get device list success');\n     *      for (i = 0; i < deviceList.length; i++) {\n     *          // use device list array elements: Sample element:\n     *          // \"deviceURI\":\"user1@1.1.1.1:5061\",\n     *          // \"uuid\":\"00000000-0000-1000-8000-001ECAF35125\",\n     *          // \"deviceId\":\"c2lwOmVyZGVtMUA0Ny4xNjguMjQ2LjMzOjUwNjE7dHJhbnNwb3J0PXRjcCQ8dXJuOnV1aWQ6IDAw%0AMDAwMDAwLTAwMDAtMTAwMC04MDAwLTAwMUVDQUYzNTEyNT4%3D%0A\"\n     *      }\n     *  },\n     *  // onFailure callback\n     *  function(e) {\n     *      console.log('get device list failure');\n     *  });\n     */\n    this.getRCCDeviceList = function(onSuccess, onFailure) {\n        return _rccManager.getDeviceList(onSuccess, onFailure);\n    };\n\n    /**\n     * Sets log severity level for Webrtc Plugin (not used for native webrtc)\n     * 5 levels(sensitive:0, verbose:1, info:2, warning:3, error:4).\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#set_logSeverityLevel\n     * @function\n     * @since 3.0.0\n     *\n     */\n\n    this.set_logSeverityLevel = function(level) {\n        return _callManager.set_logSeverityLevel({level});\n    };\n\n    /**\n     * Enables log callback for Webrtc Plugin (not used for native webrtc).\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#enable_logCallback\n     * @function\n     * @since 3.0.0\n     */\n\n    this.enable_logCallback = function() {\n        return _callManager.enable_logCallback();\n    };\n\n    /**\n     * Disables log callback for Webrtc Plugin (not used for native webrtc).\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#disable_logCallback\n     * @function\n     * @since 3.0.0\n     */\n\n    this.disable_logCallback = function() {\n        return _callManager.disable_logCallback();\n    };\n\n    /**\n     * Gets audioInDeviceCount.\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#get_audioInDeviceCount\n     * @function\n     * @since 3.0.0\n     */\n\n    this.get_audioInDeviceCount = function() {\n        return _callManager.get_audioInDeviceCount();\n    };\n\n    /**\n     * Gets audioOutDeviceCount.\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#get_autioOutDeviceCount\n     * @function\n     * @since 3.0.0\n     */\n\n    this.get_audioOutDeviceCount = function() {\n        return _callManager.get_audioOutDeviceCount();\n    };\n\n    /**\n     * Gets videoDeviceCount.\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#get_videoDeviceCount\n     * @function\n     * @since 3.0.0\n     */\n\n    this.get_videoDeviceCount = function() {\n        return _callManager.get_videoDeviceCount();\n    };\n\n    /**\n     * Returns Video Device(Camera) availability.\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#hasVideoDevice\n     * @function\n     * @since 3.0.0\n     *\n     * @example\n     * if(fcs.call.hasVideoDevice()){\n     *     // If there is a video device available, show local video container\n     *     callView.toggleLocalVideo(true);\n     * }\n     */\n    this.hasVideoDevice = function() {\n        return _callManager.get_videoDeviceCount();\n    };\n\n    /**\n     * Returns Audio Device(Microphone) availability.\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#hasAudioDevice\n     * @function\n     * @since 3.0.0\n     *\n     * @example\n     * if(!fcs.call.hasAudioDevice()){\n     *     window.alert(\"There is no available audio source!\");\n     * }\n     */\n    this.hasAudioDevice = function() {\n        return _callManager.hasAudioDevice();\n    };\n\n    /**\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getUserMedia\n     * @function\n     * @since 3.0.0\n     * @param onSuccess success callback of getUserMedia\n     * @param onFailure failure callback of getUserMedia\n     * @param options contains audio and video constraints\n     *\n     * @example\n     * fcs.call.getUserMedia(\n     *    function(mediaInfo){\n     *        window.console.log(\"media initialized. mediaInfo: \" + JSON.stringify(mediaInfo));\n     *    },\n     *    function(err){\n     *        window.console.log(\"media initialization error \" + err);\n     *    },\n     *    {\n     *        \"audio\": true,\n     *        \"video\": true\n     *    }\n     * );\n     */\n\n    this.getUserMedia = function(onSuccess, onFailure, options) {\n        return _callManager.getUserMedia({options, privateStream: true}, onSuccess, onFailure);\n    };\n\n    /**\n     * Shows device settings Window\n     * Only works with PLUGIN.\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#showSettingsWindow\n     * @function\n     * @since 3.0.0\n     *\n     * @example\n     * $(\"#device_settings_button\").click(function() {\n     *    fcs.call.showSettingsWindow();\n     * });\n     */\n\n    this.showSettingsWindow = function(onSuccess, onFailure, options) {\n        return _callManager.showSettingsWindow({options}, onSuccess, onFailure);\n    };\n\n    /**\n     * Gets local video resolutions with the order below\n     * localVideoHeight-localVideoWidth\n     * Only works with PLUGIN.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getLocalVideoResolutions\n     * @function\n     * @since 3.0.0\n     *\n     * @example\n     * var pluginLocalVideoResolution = fcs.call.getLocalVideoResolutions();\n     * var localVideoHeight = pluginLocalVideoResolution[0];\n     * var localVideoWidth = pluginLocalVideoResolution[1];\n     * console.log(\"Local Video Dimensions: \" + localVideoWidth + \",\" + localVideoHeight);\n     */\n\n    this.getLocalVideoResolutions = function() {\n        return _callManager.getLocalVideoResolutions();\n    };\n\n    /**\n     * Gets remote video resolutions with the order below\n     * remoteVideoHeight-remoteVideoWidth\n     * Only works with PLUGIN.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getRemoteVideoResolutions\n     * @function\n     * @since 3.0.0\n     *\n     * @example\n     * var pluginRemoteVideoResolution = fcs.call.getRemoteVideoResolutions();\n     * var remoteVideoHeight = pluginRemoteVideoResolution[0];\n     * var remoteVideoWidth = pluginRemoteVideoResolution[1];\n     * console.log(\"Remote Video Dimensions: \" + remoteVideoWidth + \",\" + remoteVideoHeight);\n     */\n\n    this.getRemoteVideoResolutions = function() {\n        return _callManager.getRemoteVideoResolutions();\n    };\n\n    /**\n     * Shows if plugin is enabled.\n     * Only works with PLUGIN.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#isPluginEnabled\n     * @function\n     * @since 3.0.0\n     *\n     * @example\n     * if(fcs.call.isPluginEnabled()) {\n     *     $(\"#device_settings_details\").show();\n     * }\n     */\n\n    this.isPluginEnabled = function() {\n        return _callManager.isPluginEnabled();\n    };\n\n    /**\n     * Checks if any call exists.\n     *\n     * This is a SPiDR and RCC service method.\n     *\n     * @name fcs.call#hasGotCalls\n     * @function\n     * @param {object} params Contains the service name ({serviceName:'spidr'} or ({serviceName:'rcc'}). SPiDR service parameter is default. If it is a RCC service, the service parameter should be given.\n     * @returns {Boolean} true if any call exists, false otherwise.\n     *\n     * @example\n     * // SPiDR service example is as follows:\n     * // @since 3.0.0\n     * if(fcs.call.hasGotCalls()) {\n     *  console.log('At least one call is available.');\n     * }\n     *\n     * // RCC service example is as follows:\n     * // @since 3.1.1\n     * if(fcs.call.hasGotCalls({serviceName:'rcc'})) {\n     *  console.log('At least one call is available.');\n     * }\n     */\n    this.hasGotCalls = function(options) {\n        if (options && options.serviceName === 'rcc') {\n            return _rccManager.hasGotCalls();\n        } else {\n            return _callManager.hasGotCalls();\n        }\n    };\n\n    /**\n     * Retrived a call by Id.\n     *\n     * This function allow to retrive a call which was cached by the call continuation feature.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getIncomingCallById\n     * @function\n     * @since 3.0.0\n     * @param {string} id from The id of the incoming call\n     * @returns {fcs.call.IncomingCall}\n     *\n     */\n    this.getIncomingCallById = function(id) {\n        return _callManager.getIncomingCallById({ callid: id });\n    };\n\n    /**\n     * Create a renderer for an audio/video stream.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#createStreamRenderer\n     * @function\n     * @since 3.0.0\n     * @param {MediaStream} stream The stream to render\n     * @param {object} container The DOM node into which to create the renderer (the content of the node will be cleared)\n     * @param {object} options The options to be used for the renderer\n     * @returns {Object} renderer Renderer object\n     *\n     */\n    this.createStreamRenderer = function(stream, container, options) {\n        return _callManager.createStreamRenderer({stream, container, options});\n    };\n\n    /**\n     * Discpose of a previously created renderer.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#disposeStreamRenderer\n     * @function\n     * @since 3.0.0\n     * @param {object} container The DOM node into which the renderer was previously created\n     */\n    this.disposeStreamRenderer = function(container) {\n        return _callManager.disposeStreamRenderer({container});\n    };\n\n    /**\n     * Create an audio local bridge\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#createLocalAudioBridge\n     * @function\n     * @since 3.0.0\n     * @param {function} onSuccess The onSuccess({@link fcs.call.LocalAudioBridge}) callback to be called with the LocalAudioBridge\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback to be called\n     * @param {object} options The options for creating an audio bridge\n     */\n    this.createLocalAudioBridge = function(onSuccess, onFailure, options) {\n        return _callManager.createLocalAudioBridge(options, onSuccess, onFailure);\n    };\n\n    /**\n     * States of the Call.\n     *\n     * This is a SPiDR and RCC service member.\n     * Available for SPiDR since 3.0.0, and for RCC since 3.1.1.\n     *\n     * @name fcs.call#States\n     * @enum {number}\n     * @readonly\n     * @property {number} [IN_CALL=0] The call has been established. In rcc mode, called and calling party information is also passed to the client in on state change callback.\n     * @property {number} [ON_HOLD=1] The call has been put on hold.\n     * @property {number} [RINGING=2] The outgoing call is ringing. In rcc mode, called and calling party information is also passed to the client in on state change callback.\n     * @property {number} [ENDED=3] The call has been terminated.\n     * @property {number} [REJECTED=4] The outgoing call request has been rejected by the other party.\n     * @property {number} [OUTGOING=5] The outgoing call request has been sent but no response have been received yet.\n     * @property {number} [INCOMING=6] The incoming call has been received but has not been answered yet. In rcc mode, called and calling party information is also passed to the client in on state change callback.\n     * @property {number} [ANSWERING=7] The incoming call has been answered but the call as not been establish yet.\n     * @property {number} [JOINED=8] The call is joined.\n     * @property {number} [RENEGOTIATION=9] The call is re-established.\n     * @property {number} [TRANSFERRED=10] The call is transferred to a third party.\n     * @property {number} [ON_REMOTE_HOLD=11] The call has been put on hold remotely.\n     * @property {number} [CALL_IN_PROGRESS=12] The call is in progress. In rcc mode, called and calling party information is also passed to the client in on state change callback.\n     * @property {number} [EARLY_MEDIA=13] Early media process successful.\n     * EARLY_MEDIA and RINGING states can be triggered multiple times in different orders.\n     * In each of these states, if the respondCallUpdate notification comes\n     * and processed successfully, the state is IN_CALL.\n     * @property {number} [TRANSFER_FAILURE=14] The call couldn't be transferred to a third party.\n     * @property {number} [REPLACING=15] Blind Transfer is in progress for transferee. Call replacing notification has come.\n     */\n\n    this.States = {\n        IN_CALL: 0,\n        ON_HOLD: 1,\n        RINGING: 2,\n        ENDED: 3,\n        REJECTED: 4,\n        OUTGOING: 5,\n        INCOMING: 6,\n        ANSWERING: 7,\n        JOINED: 8,\n        RENEGOTIATION: 9,\n        TRANSFERRED: 10,\n        ON_REMOTE_HOLD: 11,\n        CALL_IN_PROGRESS: 12,\n        EARLY_MEDIA: 13,\n        TRANSFER_FAILURE: 14,\n        REPLACING: 15\n    };\n\n    /**\n     * States of the Media Negotiation (ICE).\n     *\n     * This is a SPiDR service only.\n     *\n     * @name fcs.call#MediaStates\n     * @enum {number}\n     * @readonly\n     * @property {number} [NEW=0] The ICE agent is gathering addresses or is waiting to be given remote candidates.\n     * @property {number} [CHECKING=1] The ICE agent has been given one or more remote candidates and is checking pairs of local and remote candidates against one another to try to find a compatible match, but has not yet found a pair which will allow the peer connection to be made. It's possible that gathering of candidates is also still underway.\n     * @property {number} [CONNECTED=2] A usable pairing of local and remote candidates has been found for all components of the connection, and the connection has been established. It's possible that gathering is still underway, and it's also possible that the ICE agent is still checking candidates against one another looking for a better connection to use.\n     * @property {number} [COMPLETED=3] The ICE agent has finished gathering candidates, has checked all pairs against one another, and has found a connection for all components.\n     * @property {number} [FAILED=4] The ICE candidate has checked all candidates pairs against one another and has failed to find compatible matches for all components of the connection. It is, however, possible that the ICE agent did find compatible connections for some components.\n     * @property {number} [DISCONNECTED=5] Checks to ensure that components are still connected failed for at least one component of the RTCPeerConnection. This is a less stringent test than \"failed\" and may trigger intermittently and resolve just as spontaneously on less reliable networks, or during temporary disconnections. When the problem resolves, the connection may return to the \"connected\" state.\n     * @property {number} [CLOSED=6] The ICE agent for this RTCPeerConnection has shut down and is no longer handling requests.\n     */\n\n    this.MediaStates = {\n        NEW: 0,\n        CHECKING: 1,\n        CONNECTED: 2,\n        COMPLETED: 3,\n        FAILED: 4,\n        DISCONNECTED: 5,\n        CLOSED: 6\n    };\n\n    /**\n     * Hold states of the Call.\n     *\n     * This is a SPiDR and RCC service member.\n     * Available for SPiDR since 3.0.0, and for RCC since 3.1.1.\n     *\n     * @name fcs.call#HoldStates\n     * @enum {number}\n     * @readonly\n     * @property {number} [LOCAL_HOLD=0] The call has been put on hold locally.\n     * @property {number} [REMOTE_HOLD=1] The call has been put on hold remotely.\n     * @property {number} [BOTH_HOLD=2] he call has been put on both locally and remotely.\n     */\n\n    this.HoldStates = {\n        LOCAL_HOLD: 0,\n        REMOTE_HOLD: 1,\n        BOTH_HOLD: 2\n    };\n\n    /**\n     * Local status codes of the Call.\n     *\n     * This is a SPiDR service only member.\n     * Available for SPiDR since 4.0.0\n     *\n     * @name fcs.call#LocalStatusCodes\n     * @enum {string}\n     * @readonly\n     * @property {string} [STATUS_CODE_NOT_PROVIDED=\"9900\"] The call's status code hasn't been provided.\n     * @property {string} [ENDED_BY_LOCAL=\"9901\"] The call has been ended locally.\n     * @property {string} [REJECTED_BY_LOCAL=\"9902\"] The call has been rejected by local user.\n     * @property {string} [IGNORED_BY_LOCAL=\"9903\"] The call has been ignored by local user.\n     * @property {string} [RESPONDED_FROM_ANOTHER_DEVICE=\"9904\"] The call has been responded from another device.\n     * @property {string} [SESSION_COMPLETED=\"9905\"] The call session has been completed.\n     */\n    this.LOCAL_STATUS_CODES = {\n        STATUS_CODE_NOT_PROVIDED: '9900',\n        ENDED_BY_LOCAL: '9901',\n        REJECTED_BY_LOCAL: '9902',\n        IGNORED_BY_LOCAL: '9903',\n        RESPONDED_FROM_ANOTHER_DEVICE: '9904',\n        SESSION_COMPLETED: '9905'\n    };\n\n    /**\n     * Local reason texts of the Call.\n     *\n     * This is a SPiDR service only member.\n     * Available for SPiDR since 4.0.0\n     *\n     * @name fcs.call#LocalReasonTexts\n     * @enum {string}\n     * @readonly\n     * @property {string} [STATUS_CODE_NOT_PROVIDED=\"Reason not provided\"] The call's reason text has not been provided.\n     * @property {string} [ENDED_BY_LOCAL=\"Ended by local user\"] The call has been ended locally.\n     * @property {string} [REJECTED_BY_LOCAL=\"Rejected by local user\"] The call has been rejected by local user.\n     * @property {string} [IGNORED_BY_LOCAL=\"Ignored by local user\"] The call has been ignored by local user.\n     * @property {string} [RESPONDED_FROM_ANOTHER_DEVICE=\"Responded from another device\"] The call has been answered on another device.\n     * @property {string} [SESSION_COMPLETED=\"Session completed\"] The call session is complete.\n     */\n    this.LOCAL_REASON_TEXTS = {\n        STATUS_CODE_NOT_PROVIDED: 'Reason not provided',\n        ENDED_BY_LOCAL: 'Ended by local user',\n        REJECTED_BY_LOCAL: 'Rejected by local user',\n        IGNORED_BY_LOCAL: 'Ignored by local user',\n        RESPONDED_FROM_ANOTHER_DEVICE: 'Responded from another device',\n        SESSION_COMPLETED: 'Session completed'\n    };\n\n    /**\n     * Type of media initialization errors.\n     *\n     * This is a SPiDR service only member.\n     *\n     * @name fcs.call#MediaErrors\n     * @enum {number}\n     * @since 3.0.0\n     * @readonly\n     * @property {number} [NOT_FOUND=1] No media source available.\n     * @property {number} [NOT_ALLOWED=2] User did not allow media use.\n     * @property {number} [OPTIONS=3] Missing or wrong use of options.\n     * @property {number} [WRONG_VERSION=4] The version of the plugin is not supported.\n     * @property {number} [NOT_INITIALIZED=5] The media is not initialized.\n     * @property {number} [NEW_VERSION_WARNING=6] New plugin version is available.\n     * @property {number} [INVALID_PARAMETER=7] Invalid parameter.\n     * @property {number} [NO_SCREENSHARING_WARNING=8] Screen sharing is not possible with this browser or the screensharing extension could not be found.\n     */\n    this.MediaErrors = mediaErrors;\n\n    /**\n     * Call a party through a client device using the Click To Call service.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#clickToCall\n     * @function\n     * @since 3.0.0\n     * @param {string} callingParty The caller's address (e.g. SIP) used to establish the call\n     * @param {string} calledParty The callee's address (e.g. SIP) used to establish the call\n     * @param {function} onSuccess The onSuccess() callback to be called\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback to be called\n     *\n     * @example\n     * var onSuccess = function(){\n     *    //do something here\n     * };\n     * var onError = function (err) {\n     *   //do something here\n     * };\n     *\n     * fcs.call.clickToCall(\"user1@test.com\", \"user2@test.com\", onSuccess, onError);\n     */\n\n    this.clickToCall = function(callingParty, calledParty, onSuccess, onFailure) {\n        return _callManager.clickToCall({callingParty, calledParty}, onSuccess, onFailure);\n    };\n\n    /**\n     * Provide the user with a routable PSTN number as a result of an IMRN allocation request.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getIMRN\n     * @function\n     * @param {string} realm The pool of numbers from which IMRN will be allocated\n     * @param {string} source The URI of the individual placing the call\n     * @param {string} destination The URI of the individual receiving the call\n     * @param {function} onSuccess The onSuccess() callback to be called\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback to be called\n     */\n\n    this.getIMRN = function(realm, source, destination, onSuccess, onFailure) {\n        return _callManager.getIMRN({realm, source, destination}, onSuccess, onFailure);\n    };\n\n    /**\n     * Return the stream refined by id\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getStreamById\n     * @function\n     * @param id of the stream\n     */\n    this.getStreamById = function(streamId) {\n        return _callManager.getStreamById({streamId});\n    };\n\n    /**\n     * Delete selected stream\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#removeStreamById\n     * @function\n     * @param id of the stream\n     */\n    this.removeStreamById = function(streamId) {\n        _callManager.removeStreamById({streamId});\n    };\n\n    /**\n     * Sets specific audio input for the next call\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#setSelectedMicrophoneId\n     * @function\n     * @param id of the audio input device\n     */\n    this.setSelectedMicrophoneId = function(microphoneId) {\n        _callManager.setSelectedMicrophoneId({microphoneId});\n    };\n\n    /**\n     * Sets specific video input for the next call\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#setSelectedCameraId\n     * @function\n     * @param id of the video input device\n     */\n    this.setSelectedCameraId = function(cameraId) {\n        _callManager.setSelectedCameraId({cameraId});\n    };\n\n    /**\n     * Sets the selected speaker as the default speaker.\n     * It will be used for audio output for future calls.\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#setSelectedSpeakerId\n     * @function\n     * @param {String} id ID of the speaker to use for call audio.\n     * @param {Function} onSuccess Function called once the operation completes successfully.\n     * @param {function} onFailure Function called if the operation fails to complete.\n     */\n    this.setSelectedSpeakerId = function(speakerId, onSuccess, onFailure) {\n        _callManager.setSelectedSpeakerId({speakerId}, onSuccess, onFailure);\n    };\n\n    /**\n     * Returns available video input sources\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getCameraList\n     * @function\n     * @param onSuccess success callback of getCameraList\n     * @example\n     * // Get the list of cameras and create an option under an existing select menu\n     * var camSelect = document.getElementById(\"cameraDevice\");\n     *\n     * fcs.call.getCameraList(function(cList) {\n     *     for (var index = 0; index < cList.length; index++) {\n     *         var option = document.createElement(\"option\");\n     *         option.value = cList[index].id;\n     *         option.text = cList[index].label;\n     *         camSelect.add(option);\n     *     }\n     * });\n     */\n    this.getCameraList = function(onSuccess) {\n        return _callManager.getCameraList({onSuccess});\n    };\n\n    /**\n     * Returns available audio input sources\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getMicrophoneList\n     * @function\n     * @param onSuccess success callback of getMicrophoneList\n     * @example\n     * // Get the list of microphones and create an option under an existing select menu\n     * var micSelect = document.getElementById(\"microphoneDevice\");\n     *\n     * fcs.call.getMicrophoneList(function(mList) {\n     *     for (var index = 0; index < mList.length; index++) {\n     *         var option = document.createElement(\"option\");\n     *         option.value = mList[index].id;\n     *         option.text = mList[index].label;\n     *         micSelect.add(option);\n     *     }\n     * });\n     */\n    this.getMicrophoneList = function(onSuccess) {\n        return _callManager.getMicrophoneList({onSuccess});\n    };\n\n    /**\n     * Returns available audio output sources\n     *\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#getSpeakerList\n     * @function\n     * @param onSuccess success callback of getSpeakerList\n     * @example\n     * // Get the list of speakers and create an option under an existing select menu\n     * var speakerSelect = document.getElementById(\"speakerDevice\");\n     *\n     * fcs.call.getSpeakerList(function(sList) {\n     *     for (var index = 0; index < sList.length; index++) {\n     *         var option = document.createElement(\"option\");\n     *         option.value = sList[index].id;\n     *         option.text = sList[index].label;\n     *         speakerSelect.add(option);\n     *     }\n     * });\n     */\n    this.getSpeakerList = function(onSuccess) {\n        return _callManager.getSpeakerList({onSuccess});\n    };\n\n    /**\n     * Sets specific media device for active call\n     * Changes the camera and/or microphone used for the active call.\n     * This is a SPiDR service only method.\n     *\n     * @name fcs.call#changeDevices\n     * @function\n     * @param {object} contains new device ids and active call object\n     *                var params = {\"call\":call};\n     *\n     * @param {function} onSuccess The onSuccess() callback to be called\n     * @param {function} onFailure The onFailure({@link fcs#Errors}) callback to be called\n     *\n     * @since 4.0.0\n     * @example\n     * // SPiDR service example is as follows:\n     * // Change Media Devices\n     * // During an active call with selected device id\n     * // This method change media device which called with setSelectedCameraId or setSelectedMicrophoneId\n     *  var params = {\"call\":call};\n     *  fcs.call.setSelectedCameraId(videoDeviceId);\n     *  fcs.call.setSelectedMicrophoneId(audioDeviceId);\n     *\n     *  fcs.call.changeDevices(params,\n     *  function(){\n     *     showInfoMessage(\"Device change called.\");\n     *  },function(){\n     *     showInfoMessage(\"Device change Failed.\");\n     *  });\n     */\n    this.changeDevices = function(params, onSuccess, onFailure) {\n        return _callManager.changeDevices(params, onSuccess, onFailure);\n    };\n\n    /**\n     * Changes speaker used for call audio output.\n     * This is a SPiDR service only method.\n     * Supported on browser's that support HTMLMediaElement.setSinkId().\n     * @name fcs.call#changeSpeaker\n     * @function\n     * @param {String} speakerId ID of the speaker to use for audio output.\n     * @param {Function} onSuccess The success callback.\n     * @param {Function} onFailure The failure callback.\n     * @example\n     * var speakerId;\n     * // Set a speaker to use.\n     * call.changeSpeaker(speakerId, onSuccess, onFailure);\n     */\n    this.changeSpeaker = function(speakerId, onSuccess, onFailure) {\n        return _callManager.changeSpeaker({speakerId}, onSuccess, onFailure);\n    };\n\n    /**\n     * When an monitor session refreshed notification is received, {@link fcs.call#setOnMonitorSessionRefreshed} handler will be invoked.\n     *\n     * This is an RCC service only method.\n     *\n     * @name fcs.call#setOnMonitorSessionRefreshed\n     * @function\n     * @since 4.1.0\n     * @param {function} callback callback function for on monitor session refreshed\n     *\n     * @example\n     * onSuccess = function () {\n     *   console.log('Start monitor success');\n     *\n     *   fcs.call.setOnMonitorSessionRefreshed(\n     *       function () {\n     *           console.log('Received monitor session refreshed.');\n     *       });\n     * }\n     *\n     * onFailure = function () {\n     *   console.log('Start monitor failure');\n     * }\n     *\n     * fcs.call.startMonitorDevice(deviceID, onSuccess, onFailure);\n     *\n     */\n    this.setOnMonitorSessionRefreshed = function(callback) {\n        return _rccManager.setOnMonitorSessionRefreshed({callback});\n    };\n\n    /**\n     * When an monitor session refreshed notification is received, {@link fcs.call#setOnMonitorSessionTerminated} handler will be invoked.\n     *\n     * This is an RCC service only method.\n     *\n     * @name fcs.call#setOnMonitorSessionTerminated\n     * @function\n     * @since 4.1.0\n     * @param {function} callback callback function for on monitor session terminated\n     *\n     * @example\n     * onSuccess = function () {\n     *   console.log('Start monitor success');\n     *\n     *   fcs.call.setOnMonitorSessionTerminated(\n     *       function () {\n     *           console.log('Received monitor session terminated.');\n     *       });\n     * }\n     *\n     * onFailure = function () {\n     *   console.log('Start monitor failure');\n     * }\n     *\n     * fcs.call.startMonitorDevice(deviceID, onSuccess, onFailure);\n     *\n     */\n    this.setOnMonitorSessionTerminated = function(callback) {\n        return _rccManager.setOnMonitorSessionTerminated({callback});\n    };\n\n    /**\n     * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n     *\n     * This is a SPiDR and RCC service class.\n     * Available for SPiDR since 3.0.0, and for RCC since 3.1.1.\n     *\n     * @name fcs.call#IncomingCall\n     * @class\n     * @augments fcs.call.Call\n     * @param {String} callid Unique identifier for the call\n     * @param {Object} opts options\n     * @param {String} callee Called party information. This is an RCC service parameter.\n     * @param {String} caller Calling party information. This is an RCC service parameter.\n     * @version @{spidr.jsl.version}\n     */\n    this.IncomingCall = function() {\n\n        /**\n         * Sets the handler for listening for media state changed\n         *\n         * This is a SPiDR service only event.\n         *\n         * @name fcs.call#IncomingCall#onMediaStateChange\n         * @event\n         * @param {fcs.call.MediaStates} state Current state of the media negotiation.\n         *\n         **/\n\n        /**\n         * Sets the handler for listening local stream ready event.\n         *\n         * This is a SPiDR service only event.\n         *\n         * @name fcs.call#IncomingCall#onLocalStreamAdded\n         * @function\n         * @since 3.0.0.1\n         *\n         **/\n\n        /**\n         * Sets the handler for listening remote stream ready event.\n         *\n         * This is a SPiDR service only event.\n         *\n         * @name fcs.call#IncomingCall#onStreamAdded\n         *\n         * @function\n         * @since 2.0.0\n         * @param {?MediaStream} stream remote MediaStream\n         *\n         **/\n\n        /**\n         *\n         * This is a SPiDR service only member.\n         *\n         * @name fcs.call#IncomingCall#calleeNumber\n         * @field\n         * @since 3.0.0\n         * @type {String}\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.calleeNumber;\n         */\n\n        /**\n         *\n         * This is a SPiDR service only member.\n         *\n         * @name fcs.call#IncomingCall#callerNumber\n         * @field\n         * @since 3.0.0\n         * @type {String}\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.callerNumber;\n         */\n\n        /**\n         *\n         * This is a SPiDR service only member.\n         *\n         * @name fcs.call#IncomingCall#callerName\n         * @field\n         * @since 3.0.0\n         * @type {String}\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.callerName;\n         */\n\n        /**\n         *\n         * This is a SPiDR service only member.\n         *\n         * @name fcs.call#IncomingCall#primaryContact\n         * @field\n         * @since 3.0.0\n         * @type {String}\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.primaryContact;\n         */\n\n        /**\n         * Mutes the microphone.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#mute\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.mute();\n         */\n\n        /**\n         * Unmutes the microphone\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#unmute\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.unmute();\n         */\n\n        /**\n         * Silence the speaker\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#silence\n         * @function\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.silence();\n         */\n\n        /**\n         * Unsilence the speaker\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#unsilence\n         * @function\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.unsilence();\n         */\n\n        /**\n         * Check if the speaker is silenced\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#isSilenced\n         * @return {boolean} True if the call is silenced, false otherwise.\n         * @function\n         */\n\n        /**\n         * Answers the call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#answer\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called. In RCC, success callback is triggered when answered event is received.\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called. In RCC, failure call back is triggered when end or failed event is received before answered event, or there is a state failure.\n         * @param {boolean} [sendInitialVideo] Answer call with video when video was negotiated by the other party. This is a SPiDR service only parameter.\n         * @param {String} [videoResolution] Video quality. This is a SPiDR service only parameter.\n         * @param {Object} [param] Extra optional parameters.\n         * @param {boolean} [param.isAudioEnabled] Setting this to false will disable audio for the call. This is a SPiDR service only parameter.\n         *\n         * @example\n         * // SPiDR service example is as follows:\n         * // @since 3.0.0\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    console.log('Answer call success!');\n         * };\n         * var onError = function (err) {\n         *   console.log('Answer call failure!');\n         * };\n         *\n         * incomingCall.answer(onSuccess, onFailure, true, \"1280x720\");\n         *\n         * // RCC service example is as follows:\n         * // @since 3.1.1\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.answer(\n         *  // onSuccess callback\n         *  function () {\n         *      console.log('Answer call success!');\n         *  },\n         *  // onFailure callback\n         *  function () {\n         *      console.log('Answer call failure!');\n         *  });\n         */\n\n        /**\n         * Rejects the call.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#reject\n         * @function\n         * @since 3.0.0\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    //do something here\n         * };\n         * var onError = function (err) {\n         *   //do something here\n         * };\n         *\n         * incomingCall.reject(onSuccess, onFailure);\n         */\n\n        /**\n         * Ignores the call. Client will not send any rest request for this one. Ignore is on client side only.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#ignore\n         * @function\n         * @since 3.0.0\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    //do something here\n         * };\n         * var onError = function (err) {\n         *   //do something here\n         * };\n         *\n         * incomingCall.ignore(onSuccess, onFailure);\n         */\n\n        /**\n         * Forwards the call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#forward\n         * @function\n         * @param {string} address The address where the call is transferred (e.g. SIP URI)\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    console.log('Forward call success!');\n         * };\n         * var onError = function (err) {\n         *   console.log('Forward call failure!');\n         * };\n         *\n         * incomingCall.forward(\"user1@test.com\", onSuccess, onFailure);\n         */\n\n        /**\n         *\n         * Checks the incoming call if it has reject option.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#canReject\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean}\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.canReject();\n         */\n\n        /**\n         *\n         * Checks the incoming call if it has forward option.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#canForward\n         * @function\n         * @returns {Boolean}\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.canForward();\n         */\n\n        /**\n         * Checks the incoming call if it has answer option.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#canAnswer\n         * @function\n         * @returns {Boolean}\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.canAnswer();\n         */\n\n        /**\n         * Are we able to send video.\n         * Ex: Client may try to send video but video cam can be unplugged. Returns false in that case.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#canSendVideo\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean}\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.canSendVideo();\n         */\n\n        /**\n         * Are we able to send video. Checks the incoming SDP.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#canReceiveVideo\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean}\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.canReceiveVideo();\n         */\n\n        /**\n         * Returns hold state of call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#getHoldState\n         * @function\n         * @returns {@link fcs.HoldStates} or undefined if call has not been put\n         * on hold.\n         *\n         * @example\n         * // Available since 3.0.4 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.getHoldState();\n         */\n\n        /**\n         * Gets called party.\n         *\n         * This is an RCC service method.\n         *\n         * @name fcs.call#IncomingCall#getCalledParty\n         * @function\n         * @returns {calledParty} string describing the called party\n         *\n         * @example\n         * // Available since 3.1.0 for RCC service.\n         *\n         *   fcs.call.onReceived = onCallReceived;\n         *   function onCallReceived(call) {\n         *       console.log(\"Called party: \" + call.getCalledParty());\n         *   }\n         */\n\n        /**\n         * Gets calling party.\n         *\n         * This is an RCC service method.\n         *\n         * @name fcs.call#IncomingCall#getCallingParty\n         * @function\n         * @returns {callingParty} string describing the calling party\n         *\n         * @example\n         * // Available since 3.1.0 for RCC service.\n         *\n         *   fcs.call.onReceived = onCallReceived;\n         *   function onCallReceived(call) {\n         *       console.log(\"Calling party: \" + call.getCallingParty());\n         *   }\n         */\n\n\n        /**\n         * Gets call id.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#getId\n         * @function\n         * @returns {id} Unique identifier for the call\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.getId();\n         */\n\n        /**\n         * End the call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * `Starting with the SPiDR 4.0.0 JSL API this method fires fcs.call.States.ENDED state.`\n         *\n         * @name fcs.call#IncomingCall#end\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.end(\n         *   // onSuccess callback\n         *   function () {\n         *       console.log('Call is ended!');\n         *   },\n         *   // onFailure callback\n         *   function () {\n         *       console.log('Call could not be ended!');\n         *   });\n         */\n\n        /**\n         * Holds the call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#hold\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    console.log('Call is held!');\n         * };\n         * var onFailure = function(err){\n         *    console.log('Call could not be held!');\n         * };\n         *\n         * incomingCall.hold(onSuccess, onFailure);\n         */\n\n        /**\n         * Resume the call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#unhold\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    console.log('Call is retrieved!');\n         * };\n         * var onFailure = function(err){\n         *    console.log('Call could not be retrieved!');\n         * };\n         *\n         * incomingCall.unhold(onSuccess, onFailure);\n         */\n\n        /**\n         * Get WebRTC Statistics\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#IncomingCall#getWebRtcStats\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.getWebRtcStats(function(stats) {\n         *          // Stats returned successfully\n         *          logger.debug(\"Audio Packets Lost: \" + stats.audio.packetsLost);\n         *      },\n         *      function(error) {\n         *          // Error occured\n         *          logger.error(\"getWebRtcStats failed: \" + error);\n         *      }\n         * );\n         */\n\n        /**\n         * Get Native WebRTC Statistics\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#IncomingCall#getNativeWebRtcStats\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.getNativeWebRtcStats(function(results) {\n         *          // Stats returned successfully\n         *          logger.debug(\"getNativeWebRtcStats returned successfully: \" + results);\n         *      },\n         *      function(error) {\n         *          // Error occured\n         *          logger.error(\"getNativeWebRtcStats failed: \" + error);\n         *      }\n         *   );\n         */\n\n        /**\n         * Start WebRtc Statistics Timer\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#IncomingCall#startWebRtcStatsTimer\n         * @function\n         * @param {string} interval The interval is a parameter that determines how many seconds if necessary turning statistics(e.g. 10 seconds)\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.startWebRtcStatsTimer(interval,\n         *      function(stats) {\n         *          // Stats returned successfully\n         *          logger.debug(\"Audio Packets Lost: \" + stats.audio.packetsLost);\n         *      },\n         *      function(error) {\n         *          // Error occured\n         *          logger.error(\"startWebRtcStatsTimer failed: \" + error);\n         *      }\n         *   );\n         */\n\n        /**\n         * Stop WebRtc Statistics Timer\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#IncomingCall#stopWebRtcStatsTimer\n         * @function\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.stopWebRtcStatsTimer();\n         */\n\n        /**\n         * Directly transfers the existing call to another recipient.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#directTransfer\n         * @function\n         * @param {string} address The address where the call is transferred (e.g. SIP URI)\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    console.log('Call is transferred!');\n         * };\n         * var onFailure = function(err){\n         *    console.log('Call could not be transferred!');\n         * };\n         *\n         * incomingCall.directTransfer(\"user@domain.com\", onSuccess, onFailure);\n         */\n\n        /**\n         * Transfers an existing call to another existing call.\n         *\n         *\n         * @name fcs.call#IncomingCall#consultativeTransfer\n         * @function\n         * @since 3.1.1\n         * @param {string} transferredCallId The id of call which will be transferred into the current(incoming) call\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         *\n         * // When an outgoing call is received, {@link fcs.call.event:onOutgoingCall} handler will be invoked.\n         *\n         * var outgoingCall = {};\n         * fcs.call.onOutgoingCall = function(call) {\n         *    outgoingCall = call;\n         * };\n         *\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.consultativeTransfer(outgoingCall.getId(), onSuccess, onFailure);\n         */\n\n        /**\n         * Stop the video for this call after the call is established.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#videoStop\n         * @function\n         * @since 3.0.0\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    //do something here\n         * };\n         * var onFailure = function(err){\n         *    //do something here\n         * };\n         *\n         * incomingCall.videoStop(onSuccess, onFailure);\n         */\n\n        /**\n         * Start the video for this call after the call is established.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#videoStart\n         * @function\n         * @since 3.0.0\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure() callback function to be called\n         * @param {object} [videoResolution] Sets the quality of video. This is a SPiDR service only parameter.\n         * @param {string} [videoResolution.width=\"320\"] Specifies min & max width of video.\n         * @param {string} [videoResolution.height=\"240\"] Specifies min & maxheight of video.\n         * @param {string} [videoResolution.minWidth=\"320\"] Specifies min width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.minHeight=\"240\"] Specifies min height of video. Overrides ({@link videoResolution.height})\n         * @param {string} [videoResolution.maxWidth=\"320\"] Specifies max width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.maxHeight=\"240\"] Specifies max height of video. Overrides ({@link videoResolution.height})\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * var onSuccess = function(){\n         *    //do something here\n         * };\n         * var onFailure = function(err){\n         *    //do something here\n         * };\n         *\n         * incomingCall.videoStart(onSuccess, onFailure);\n         */\n\n        /**\n         * Join 2 calls.\n         * You need two different calls to establish this functionality.<br>\n         *\n         * In SPiDR implementation: in order to join two calls both calls must\n         * be put into hold state first.<br>\n         *\n         * In RCC implementation: in order to join two calls one call must\n         * be in local hold state, and the other one must be in answered state. <br>\n         *\n         * If not call servers will not handle your request.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#IncomingCall#join\n         * @function\n         * @param {fcs.call#Call} anotherCall Call that we want the current call to be joined to.\n         * @param {function} onSuccess The onSuccess({@link fcs.call#Call}) to be called when the call have been joined provide the joined call as parameter\n         * @param {function} [onFailure] The onFailure() to be called when media could not be join\n         * @param {boolean} [isVideoEnabled] In order to join video calls set this to true. This is a SPiDR service only parameter.\n         * @param {object} [videoResolution] Sets the quality of video. This is a SPiDR service only parameter.\n         * @param {string} [videoResolution.width=\"320\"] Specifies min & max width of video.\n         * @param {string} [videoResolution.height=\"240\"] Specifies min & maxheight of video.\n         * @param {string} [videoResolution.minWidth=\"320\"] Specifies min width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.minHeight=\"240\"] Specifies min height of video. Overrides ({@link videoResolution.height})\n         * @param {string} [videoResolution.maxWidth=\"320\"] Specifies max width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.maxHeight=\"240\"] Specifies max height of video. Overrides ({@link videoResolution.height})\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * // And another {@link fcs.call#OutgoingCall} or {@link fcs.call#IncomingCall} is required which is going to be joined.\n         * var anotherCall; // assume this is previosuly created.\n         *\n         * var joinOnSuccess = function(joinedCall){\n         *    joinedCall // newly created.\n         *    console.log('Join success!');\n         * };\n         * var joinOnFailure = function(){\n         *    console.log('Join failure!');\n         * };\n         *\n         * incomingCall.join(anotherCall, joinOnSuccess, joinOnFailure, isVideoEnabled, videoResolution);\n         *\n         * // When join() is successfuly completed, joinOnSuccess({@link fcs.call#OutgoingCall}) will be invoked.\n         */\n\n        /**\n         * Send Dual-tone multi-frequency signaling.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#sendDTMF\n         * @function\n         * @since 3.0.0\n         * @param {String} tone Tone to be send as dtmf.\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.sendDTMF(\"0\");\n         */\n\n        /**\n         * Force the plugin to send a IntraFrame\n         * Only used by PLUGIN.\n         * This needs to be called when sending video.\n         * Solves video freeze issue.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#sendIntraFrame\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.sendIntraFrame();\n         */\n\n        /**\n         * Force the plugin to send a BlackFrame\n         * Only used by PLUGIN.\n         * Some of the SBC's(Session Border Controllers) do not establish one way video.\n         * audio only side has to send a blackFrame in order to see the incoming video.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#sendBlackFrame\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.sendBlackFrame();\n         */\n\n        /**\n         * Force the plugin to refresh video renderer\n         * with this call's remote video stream\n         * Only used by PLUGIN.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#refreshVideoRenderer\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.refreshVideoRenderer();\n         */\n\n        /**\n         * Returns the call is a join call or not\n         * Do not use this function if you really dont need it.\n         * This will be handled by the framework.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#getJoin\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean} isJoin\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.getJoin();\n         */\n\n        /**\n         * Marks the call as a join call or not\n         * Do not use this function if you really dont need it.\n         * This will be handled by the framework.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#setJoin\n         * @function\n         * @since 3.0.0\n         * @param {String} join\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.setJoin(true);\n         */\n\n        /**\n         * Returns the button is a disabled or not\n         * You may want to disable your buttons while waiting for a response.\n         * Ex: this will prevent clicking multiple times for hold button until first hold response is not recieved.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#getButtonDisabler\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean} buttonDisabler\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.getButtonDisabler();\n         */\n\n        /**\n         * Disable the button after waiting 4000 milliseconds.\n         * You may want to disable your buttons while waiting for a response.\n         * Ex: this will prevent clicking multiple times for hold button until first hold response is not recieved.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#setButtonDisabler\n         * @function\n         * @since 3.0.0\n         * @param {Boolean} disable\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.setButtonDisabler(true);\n         */\n\n        /**\n         * Clears the timer set with fcs.call#IncomingCall#setButtonDisabler.\n         * You may want to disable your buttons while waiting for a response.\n         * Ex: this will prevent clicking multiple times for hold button until first hold response is not recieved.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#clearBtnTimeout\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.clearBtnTimeout();\n         */\n\n\n        /**\n         * Long call audit\n         * Creates a timer after call is established.\n         * This timer sends a \"PUT\" request to server.\n         * This will continue until one request fails.\n         * Handled by framework. You dont need to call this function.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#setAuditTimer\n         * @function\n         * @since 3.0.0\n         * @param {String} audit\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         * incomingCall.setAuditTimer(audit);\n         */\n\n\n        /**\n         * Clears the long call audit prior to clearing all call resources.\n         * Handled by framework. you dont need to call this function.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#clearAuditTimer\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         */\n\n        /**\n         * @deprecated DO NOT USE, use isVideoNegotiationAvailable instead\n         * Returns video negotation availability.\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#isVideoNegotationAvailable\n         * @function\n         * @since 3.0.1\n         * @param {String} id Unique identifier for the call\n         * @example\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.isVideoNegotationAvailable();\n         */\n\n        /**\n         * Returns video negotiation availability.\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#isVideoNegotiationAvailable\n         * @function\n         * @since 3.1.0\n         * @example\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.isVideoNegotiationAvailable();\n         */\n\n        /**\n         * Set custom parameters\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#setCustomParameters\n         * @function\n         * @since 3.0.0\n         * @param {Array.<{name: string, value:string}>} customParameters Custom SIP header parameters for the call.\n         *\n         * @example\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.setCustomParameters(\n         *   [\n         *     {\n         *       \"name\": \"X-GPS\",\n         *       \"value\": \"42,686032,23.344565\"\n         *     }\n         *   ]\n         * );\n         */\n\n        /**\n         * Get custom parameters\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#getCustomParameters\n         * @function\n         * @since 3.0.0\n         * @returns {Array.<{name: string, value:string}>} Custom SIP header parameters of the call\n         *\n         * @example\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         * const customParameters = incomingCall.getCustomParameters();\n         */\n\n        /**\n         * Sends the current custom parameters associated with a call to\n         * the SPiDR service.\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#IncomingCall#sendCustomParameters\n         * @function\n         * @since 3.0.0\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * incomingCall.sendCustomParameters();\n         */\n    };\n\n    /**\n     * This class is used to represent an outgoing call.\n     *\n     * This is a SPiDR and RCC service class.\n     * Available for SPiDR since 3.0.0, and for RCC since 3.1.1.\n     *\n     * @name fcs.call#OutgoingCall\n     * @class\n     * @augments fcs.call.Call\n     * @param {String} callid Unique identifier for the call\n     * @param {String} callee Called party information. This is an RCC service parameter. Exists in received calls. Does not exist in rcc client started calls.\n     * @param {String} caller Calling party information. This is an RCC service parameter. Exists in received calls. Does not exist in rcc client started calls.\n     * @version @{spidr.jsl.version}\n     */\n    this.OutgoingCall = function() {\n\n        /**\n         * Sets the handler for listening for media state changed\n         *\n         * This is a SPiDR service only event.\n         *\n         * @name fcs.call#OutgoingCall#onMediaStateChange\n         * @event\n         * @param {fcs.call.MediaStates} state Current state of the media negotiation.\n         *\n         **/\n\n        /**\n         * Sets the handler for listening local stream ready event.\n         *\n         * This is a SPiDR service only event.\n         *\n         * @name fcs.call#OutgoingCall#onLocalStreamAdded\n         * @function\n         * @param {?MediaStream} stream remote MediaStream\n         *\n         **/\n\n        /**\n         * Sets the handler for listening remote stream ready event.\n         *\n         * This is a SPiDR service only event.\n         *\n         * @name fcs.call#OutgoingCall#onStreamAdded\n         *\n         * @function\n         * @param {?MediaStream} stream remote MediaStream\n         *\n         **/\n\n        /**\n         * Are we able to send video.\n         * Ex: Client may try to send video but video cam can be unplugged. Returns false in that case.\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#canSendVideo\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean}\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.canSend();\n         */\n\n        /**\n         * Are we able to send video. Checks the incoming SDP.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#canReceiveVideo\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean}\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.canReceiveVideo();\n         */\n\n        /**\n         * Returns hold state of call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#OutgoingCall#getHoldState\n         * @function\n         * @returns {@link fcs.HoldStates} or undefined if call has not been put\n         * on hold.\n         *\n         * @example\n         * // Available since 3.0.4 for SPiDR service, and since 3.1.1 for RCC service.\n         * // When an outgoingCall call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * outgoingCall.getHoldState();\n         */\n\n\n        /**\n         * Gets called party.\n         *\n         * This is an RCC service method. This paremeter exists in received calls. Does not exist in rcc client started calls.\n         *\n         * @name fcs.call#OutgoingCall#getCalledParty\n         * @function\n         * @returns {calledParty} string describing the called party\n         *\n         * @example\n         * // Available since 3.1.0 for RCC service.\n         *\n         *   fcs.call.onOutgoingCall = onOutgoingCall;\n         *   function onOutgoingCall(call) {\n         *       console.log(\"Called party: \" + call.getCalledParty());\n         *   }\n         */\n\n        /**\n         * Gets calling party.\n         *\n         * This is an RCC service method. This paremeter exists in received calls. Does not exist in rcc client started calls.\n         *\n         * @name fcs.call#OutgoingCall#getCallingParty\n         * @function\n         * @returns {callingParty} string describing the calling party\n         *\n         * @example\n         * // Available since 3.1.0 for RCC service.\n         *\n         *   fcs.call.onOutgoingCall = onOutgoingCall;\n         *   function onOutgoingCall(call) {\n         *       console.log(\"Calling party: \" + call.getCallingParty());\n         *   }\n         */\n\n\n        /**\n         * Gets call id.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#OutgoingCall#getId\n         * @function\n         * @returns {id} Unique identifier for the call\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.getId();\n         */\n\n        /**\n         * Force the plugin to send a IntraFrame.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#sendIntraFrame\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.sendIntraFrame();\n         */\n\n        /**\n         * Force the plugin to send a BlackFrame.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#sendBlackFrame\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.sendBlackFrame();\n         */\n\n        /**\n         * Force the plugin to refresh video renderer\n         * with this call's remote video stream.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#refreshVideoRenderer\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.refreshVideoRenderer();\n         */\n\n        /**\n         * Mute the microphone.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#mute\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.mute();\n         */\n\n        /**\n         * Unmute the microphone\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#unmute\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.unmute();\n         */\n\n        /**\n         * Silence the speaker\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#silence\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.silence();\n         */\n\n        /**\n         * Unsilence the speaker\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#unsilence\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.unsilence();\n         */\n\n        /**\n         * Check if the speaker is silenced\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#isSilenced\n         * @return {boolean} True if the call is silenced, false otherwise.\n         * @function\n         */\n\n        /**\n         * End the call.\n         *\n         * `Starting with the SPiDR 4.0.0 JSL API this method fires fcs.call.States.ENDED state.`\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#OutgoingCall#end\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         * @function\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * outgoingCall.end(\n         *   // onSuccess callback\n         *   function () {\n         *       console.log('Call is ended!');\n         *   },\n         *   // onFailure callback\n         *   function () {\n         *       console.log('Call could not be ended!');\n         *   });\n         */\n\n        /**\n         * Holds the call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#OutgoingCall#hold\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * var holdCallOnSuccess = function(){\n         *    console.log('Call is held!');\n         * };\n         * var holdCallOnFailure = function(err){\n         *    console.log('Call could not be held!');\n         * };\n         *\n         * outgoingCall.hold(holdCallOnSuccess, holdCallOnFailure);\n         */\n\n        /**\n         * Resume the call.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#OutgoingCall#unhold\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * var unholdCallOnSuccess = function(){\n         *    console.log('Call is retrieved!');\n         * };\n         * var unholdCallOnFailure = function(err){\n         *    console.log('Call could not be retrieved!');\n         * };\n         *\n         * outgoingCall.unhold(unholdCallOnSuccess, unholdCallOnFailure);\n         */\n\n        /**\n         * Get WebRTC Statistics\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#OutgoingCall#getWebRtcStats\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * outgoingCall.getWebRtcStats(function(stats) {\n         *          // Stats returned successfully\n         *          logger.debug(\"Audio Packets Lost: \" + stats.audio.packetsLost);\n         *      },\n         *      function(error) {\n         *          // Error occured\n         *          logger.error(\"getWebRtcStats failed: \" + error);\n         *      }\n         * );\n         */\n\n        /**\n         * Get Native WebRTC Statistics\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#OutgoingCall#getNativeWebRtcStats\n         * @function\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         *  outgoingCall.getNativeWebRtcStats(function(results) {\n         *          // Stats returned successfully\n         *          logger.debug(\"getNativeWebRtcStats returned successfully: \" + results);\n         *      },\n         *      function(error) {\n         *          // Error occured\n         *          logger.error(\"getNativeWebRtcStats failed: \" + error);\n         *      }\n         *   );\n         */\n\n        /**\n         * Start WebRtc Statistics Timer\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#OutgoingCall#startWebRtcStatsTimer\n         * @function\n         * @param {string} interval The interval is a parameter that determines how many seconds if necessary turning statistics(e.g. 10 seconds)\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         *  outgoingCall.startWebRtcStatsTimer(interval,\n         *      function(stats) {\n         *          // Stats returned successfully\n         *          logger.debug(\"Audio Packets Lost: \" + stats.audio.packetsLost);\n         *      },\n         *      function(error) {\n         *          // Error occured\n         *          logger.error(\"startWebRtcStatsTimer failed: \" + error);\n         *      }\n         *   );\n         */\n\n        /**\n         * Stop WebRtc Statistics Timer\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#OutgoingCall#stopWebRtcStatsTimer\n         * @function\n         *\n         * @example\n         * // Available since 4.0.0 for SPiDR service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * outgoingCall.stopWebRtcStatsTimer();\n         */\n\n        /**\n         * Directly transfers the existing call to another recipient.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#OutgoingCall#directTransfer\n         * @function\n         * @param {string} address The address where the call is transferred (e.g. SIP URI)\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * var onSuccess = function(){\n         *    console.log('Call is transferred!');\n         * };\n         * var onFailure = function(err){\n         *    console.log('Call could not be transferred!');\n         * };\n         *\n         * outgoingCall.directTransfer(\"user@domain.com\", onSuccess, onFailure);\n         */\n\n        /**\n         * Transfers an existing call to another existing call.\n         *\n         * This is an RCC service only method.\n         *\n         * @name fcs.call#OutgoingCall#consultativeTransfer\n         * @function\n         * @since 3.1.1\n         * @param {string} transferredCallId The id of call which will be transferred into the current(outgoing) call\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         *\n         * // When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var incomingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    incomingCall = call;\n         * };\n         *\n         * // When an outgoing call is received, {@link fcs.call.event:onOutgoingCall} handler will be invoked.\n         *\n         * var outgoingCall = {};\n         * fcs.call.onOutgoingCall = function(call) {\n         *    outgoingCall = call;\n         * };\n         *\n         * outgoingCall.consultativeTransfer(incomingCall.getId(), onSuccess, onFailure);\n         */\n\n        /**\n         * Stop the video for this call after the call is established.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#videoStop\n         * @function\n         * @since 3.0.0\n         * @param {function} [onSuccess] The onSuccess() to be called when the video is stopped<br />\n         * function()\n         * @param {function} [onFailure] The onFailure() to be called when the video could not be stopped<br />\n         * function()\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * var videoStopOnSuccess = function(){\n         *    //do something here\n         * };\n         * var videoStopOnFailure = function(){\n         *    //do something here\n         * };\n         *\n         * outgoingCall.videoStop(videoStopOnSuccess, videoStopOnFailure);\n         */\n\n        /**\n         * Start the video for this call after the call is established.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#videoStart\n         * @function\n         * @since 3.0.0\n         * @param {function} [onSuccess] The onSuccess() to be called when the video is started\n         * @param {function} [onFailure] The onFailure() to be called when the video could not be started\n         * @param {object} [videoResolution] Sets the quality of video. This is a SPiDR service only parameter.\n         * @param {string} [videoResolution.width=\"320\"] Specifies min & max width of video.\n         * @param {string} [videoResolution.height=\"240\"] Specifies min & maxheight of video.\n         * @param {string} [videoResolution.minWidth=\"320\"] Specifies min width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.minHeight=\"240\"] Specifies min height of video. Overrides ({@link videoResolution.height})\n         * @param {string} [videoResolution.maxWidth=\"320\"] Specifies max width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.maxHeight=\"240\"] Specifies max height of video. Overrides ({@link videoResolution.height})\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * var videoStartOnSuccess = function(){\n         *    //do something here\n         * };\n         * var videoStartOnFailure = function(){\n         *    //do something here\n         * };\n         *\n         * outgoingCall.videoStart(videoStopOnSuccess, videoStopOnFailure);\n         */\n\n        /**\n         * Join 2 calls.\n         * You need two different calls to establish this functionality.<br>\n         *\n         * In SPiDR implementation: in order to join two calls both calls must\n         * be put into hold state first.<br>\n         *\n         * In RCC implementation: in order to join two calls one call must\n         * be in local hold state, and the other one must be in answered state. <br>\n         *\n         * If not call servers will not handle your request.\n         *\n         * This is a SPiDR and RCC service method.\n         *\n         * @name fcs.call#OutgoingCall#join\n         * @function\n         * @param {fcs.call#Call} anotherCall Call that we want the current call to be joined to.\n         * @param {function} onSuccess The onSuccess({@link fcs.call#OutgoingCall}) to be called when the call have been joined provide the joined call as parameter\n         * @param {function} [onFailure] The onFailure() to be called when media could not be join\n         * @param {boolean} [isVideoEnabled] In order to join video calls set this to true. This is a SPiDR service only parameter.\n         * @param {object} [videoResolution] Sets the quality of video. This is a SPiDR service only parameter.\n         * @param {string} [videoResolution.width=\"320\"] Specifies min & max width of video.\n         * @param {string} [videoResolution.height=\"240\"] Specifies min & maxheight of video.\n         * @param {string} [videoResolution.minWidth=\"320\"] Specifies min width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.minHeight=\"240\"] Specifies min height of video. Overrides ({@link videoResolution.height})\n         * @param {string} [videoResolution.maxWidth=\"320\"] Specifies max width of video. Overrides ({@link videoResolution.width})\n         * @param {string} [videoResolution.maxHeight=\"240\"] Specifies max height of video. Overrides ({@link videoResolution.height})\n         *\n         * @example\n         * // Available since 3.0.0 for SPiDR service, and since 3.1.1 for RCC service.\n         * // A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * // And another {@link fcs.call#OutgoingCall} or {@link fcs.call#IncomingCall} is required which is going to be joined.\n         * var anotherCall; // assume this is previosuly created.\n         *\n         * var joinOnSuccess = function(joinedCall){\n         *    joinedCall // newly created.\n         *    console.log('Join success!');\n         * };\n         * var joinOnFailure = function(){\n         *    console.log('Join failure!');\n         * };\n         *\n         * outgoingCall.join(anotherCall, joinOnSuccess, joinOnFailure, isVideoEnabled, videoResolution);\n         *\n         * // When join() is successfuly completed, joinOnSuccess({@link fcs.call#OutgoingCall}) will be invoked.\n         */\n\n        /**\n         * Send Dual-tone multi-frequency signaling.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#sendDTMF\n         * @function\n         * @since 3.0.0\n         * @param {String} tone Tone to be send as dtmf.\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * var videoStartOnSuccess = function(){\n         *    //do something here\n         * };\n         * var videoStartOnFailure = function(){\n         *    //do something here\n         * };\n         *\n         * outgoingCall.sendDTMF(\"0\");\n         */\n\n        /**\n         * Returns the call is a join call or not\n         * Do not use this function if you really dont need it.\n         * This will be handled by the framework.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#getJoin\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean} isJoin\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         *\n         * var videoStartOnSuccess = function(){\n         *    //do something here\n         * };\n         * var videoStartOnFailure = function(){\n         *    //do something here\n         * };\n         *\n         * outgoingCall.getJoin();\n         *\n         * This method will return true if the outgoingCall is a previously joined call {@see {@link fcs.call#OutgoingCall#join}}.\n         */\n\n        /**\n         * Marks the call as a join call or not\n         * Do not use this function if you really dont need it.\n         * This will be handled by the framework.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#setJoin\n         * @function\n         * @since 3.0.0\n         * @param {String} join\n         *\n         * @example\n         *\n         * When an outgoing call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var outgoingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    outgoingCall = call;\n         * };\n         *\n         * outgoingCall.setJoin(true);\n         */\n\n        /**\n         * Returns the button is a disabled or not\n         * You may want to disable your buttons while waiting for a response.\n         * Ex: this will prevent clicking multiple times for hold button until first hold response is not recieved.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#getButtonDisabler\n         * @function\n         * @since 3.0.0\n         * @returns {Boolean} buttonDisabler\n         *\n         * @example\n         *\n         * When an outgoing call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var outgoingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    outgoingCall = call;\n         * };\n         *\n         * outgoingCall.getButtonDisabler();\n         */\n\n        /**\n         * Clears the timer set with fcs.call#IncomingCall#setButtonDisabler.\n         * You may want to disable your buttons while waiting for a response.\n         * Ex: this will prevent clicking multiple times for hold button until first hold response is not recieved.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#clearBtnTimeout\n         * @function\n         * @since 3.0.0\n         * @param {bool} disable\n         *\n         * @example\n         *\n         * When an outgoing call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var outgoingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    outgoingCall = call;\n         * };\n         *\n         * outgoingCall.clearBtnTimeout();\n         */\n\n        /**\n         * Clears the timer set with fcs.call#IncomingCall#setButtonDisabler.\n         * You may want to disable your buttons while waiting for a response.\n         * Ex: this will prevent clicking multiple times for hold button until first hold response is not recieved.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#clearBtnTimeout\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an outgoing call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         *\n         * var outgoingCall = {};\n         * fcs.call.onReceived = function(call) {\n         *    outgoingCall = call;\n         * };\n         *\n         * outgoingcall.clearBtnTimeout();\n         */\n\n        /**\n         * Long call audit\n         * Creates a timer after call is established.\n         * This timer sends a \"PUT\" request to server.\n         * This will continue until one request fails.\n         * Handled by framework. You dont need to call this function.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#setAuditTimer\n         * @function\n         * @since 3.0.0\n         * @param {function} audit\n         *\n         * @example\n         *\n         * When an incoming call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         * incomingCall.setAuditTimer(audit);\n         */\n\n\n        /**\n         * Clears the long call audit prior to clearing all call resources.\n         * Handled by framework. you dont need to call this function.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#clearAuditTimer\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * When an outgoing call is received, {@link fcs.call#event:onReceived} handler will be invoked.\n         */\n\n        /**\n         * @deprecated DO NOT USE, use isVideoNegotiationAvailable instead\n         * Returns video negotation availability.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#isVideoNegotationAvailable\n         * @function\n         * @since 3.0.1\n         * @param {String} id Unique identifier for the call\n         * @example\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.isVideoNegotationAvailable(id);\n         */\n\n        /**\n         * Returns video negotiation availability.\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#isVideoNegotiationAvailable\n         * @function\n         * @since 3.1.0\n         * @example\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.isVideoNegotiationAvailable();\n         */\n\n        /**\n         * Set custom parameters\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#setCustomParameters\n         * @function\n         * @since 3.0.0\n         * @param {Array.<{name: string, value:string}>} customParameters Custom SIP header parameters for the call.\n         *\n         * @example\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.setCustomParameters(\n         *    [\n         *      {\n         *        \"name\": \"X-GPS\",\n         *        \"value\": \"42,686032,23.344565\"\n         *      }\n         *    ]\n         * );\n         */\n\n        /**\n         * Get custom parameters\n         *\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#getCustomParameters\n         * @function\n         * @since 3.0.0\n         * @returns {Array.<{name: string, value:string}>} Custom SIP header parameters of the call\n         *\n         * @example\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * const customParameters = outgoingCall.getCustomParameters();\n         */\n\n        /**\n         * Send custom parameters\n         *             * Sends the current custom parameters associated with a call to\n         * the SPiDR service.\n         *             * This is a SPiDR service only method.\n         *\n         * @name fcs.call#OutgoingCall#sendCustomParameters\n         * @function\n         * @since 3.0.0\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         * A previously created {@link fcs.call#OutgoingCall} is required. {@see {@link fcs.call#startCall}} for more details.\n         *\n         * var outgoingCall = {};\n         * fcs.call.startCall(..., ..., ..., onSuccess(outgoingCall), ..., ...);\n         * outgoingCall.sendCustomParameters();\n         */\n    };\n\n    /**\n     * This class is used to represent a local audio bridge.\n     *\n     * This is a SPiDR service only\n     *\n     * @name fcs.call#LocalAudioBridge\n     * @class\n     * @version @{spidr.jsl.version}\n     */\n    this.LocalAudioBridge = function() {\n        /**\n         * Add a call to the local audio bridge\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#LocalAudioBridge#add\n         * @function\n         * @param {fcs.call.IncomingCall | fcs.call.OutgoingCall} call The call to be added to the audio local bridge\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#LocalAudioBridge} is required. {@see {@link fcs.call#createLocalAudioBridge}} for more details.\n         * var incomingCall = {};\n         * var bridge = {};\n         * bridge.add(incomingCall);\n         */\n\n        /**\n         * Remove a call from the local audio bridge\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#LocalAudioBridge#remove\n         * @function\n         * @param {fcs.call.IncomingCall | fcs.call.OutgoingCall} call The call to be added to the audio local bridge\n         * @param {function} onSuccess The onSuccess() callback function to be called\n         * @param {function} onFailure The onFailure({@link fcs#Errors}) callback function to be called\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#LocalAudioBridge} is required. {@see {@link fcs.call#createLocalAudioBridge}} for more details.\n         * var incomingCall = {};\n         * var bridge = {};\n         * bridge.add(incomingCall);\n         * bridge.remove(incomingCall);\n         */\n\n        /**\n         * Closes the audio bridge, removing all of the calls.\n         *\n         * This is a SPiDR service method.\n         *\n         * @name fcs.call#LocalAudioBridge#close\n         * @function\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#LocalAudioBridge} is required. {@see {@link fcs.call#createLocalAudioBridge}} for more details.\n         * var bridge = {};\n         * bridge.close();\n         */\n\n        /**\n         * Mute the local audio for all of the calls on the bridge\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#LocalAudioBridge#muteLocalAudio\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#LocalAudioBridge} is required. {@see {@link fcs.call#createLocalAudioBridge}} for more details.\n         *\n         * var bridge = {};\n         * bridge.muteLocalAudio();\n         */\n\n        /**\n         * Mute the local audio for all of the calls on the bridge\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#LocalAudioBridge#unmuteLocalAudio\n         * @function\n         * @since 3.0.0\n         *\n         * @example\n         *\n         * A previously created {@link fcs.call#LocalAudioBridge} is required. {@see {@link fcs.call#createLocalAudioBridge}} for more details.\n         *\n         * var bridge = {};\n         * bridge.unmuteLocalAudio();\n         */\n\n        /**\n         * Silences the remote audio for all of the calls on the bridge\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#LocalAudioBridge#silenceRemoteAudio\n         * @function\n         */\n\n        /**\n         * Un-silences the remote audio for all of the calls on the bridge\n         * This is a SPiDR service only method.\n         *\n         * @name fcs.call#LocalAudioBridge#unsilenceRemoteAudio\n         * @function\n         */\n    };\n}\n","const prefix = '@@KANDY/'\n\n/**\n * Contact Actions\n *\n * Action types associated with the operations of methods on the contacts namespace\n */\nexport const ADD_CONTACT = prefix + 'ADD_CONTACT'\nexport const ADD_CONTACT_FINISH = prefix + 'ADD_CONTACT_FINISH'\n\nexport const REFRESH_CONTACTS = prefix + 'REFRESH_CONTACTS'\nexport const REFRESH_CONTACTS_FINISH = prefix + 'REFRESH_CONTACTS_FINISH'\n\nexport const REMOVE_CONTACT = prefix + 'REMOVE_CONTACT'\nexport const REMOVE_CONTACT_FINISH = prefix + 'REMOVE_CONTACT_FINISH'\n\nexport const UPDATE_CONTACT = prefix + 'UPDATE_CONTACT'\nexport const UPDATE_CONTACT_FINISH = prefix + 'UPDATE_CONTACT_FINISH'\n\nexport const FETCH_CONTACT = prefix + 'FETCH_CONTACT'\nexport const FETCH_CONTACT_FINISH = prefix + 'FETCH_CONTACT_FINISH'\n\n/**\n * User Actions\n *\n * Action types associated with the operations of methods on the users namespace\n */\nexport const FETCH_USER = prefix + 'FETCH_USER'\nexport const FETCH_USER_FINISH = prefix + 'FETCH_USER_FINISH'\n\nexport const FETCH_SELF_INFO = prefix + 'FETCH_SELF_INFO'\nexport const FETCH_SELF_INFO_FINISH = prefix + 'FETCH_SELF_INFO_FINISH'\n\nexport const SEARCH_DIRECTORY = prefix + 'SEARCH_DIRECTORY'\nexport const SEARCH_DIRECTORY_FINISH = prefix + 'SEARCH_DIRECTORY_FINISH'\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","/**\n * This wrapper generates error messages from v8n Validation Errors. https://imbrn.github.io/v8n/api/#validationerror\n * They are logged using LogManager as a warning to our customers when they mess up arguments.\n * To use: `import { enums, validation as v8n, parse } from '<relativePath>/common/validation'`.\n * Build up your validation using v8n.string, v8n.number, v8n.schema, enums, etc.\n * Enums is not part of the v8n library, but provided here for ease of use\n * const v8nValidation = v8n.schema({\n      sdpSemantics: enums(['unified-plan', 'plan-b']),\n      iceServers: v8n.array(),\n      iceCollectionDelay: v8n.positive(),\n      serverTurnCredentials: v8n.boolean(),\n      iceCollectionCheck: v8n.optional(v8n.function())\n    })\n * Create a validator like this: `const parseOptions = parse('nameOfArg', v8nValidation)`\n * Run that validator against the actual values: `parseOptions(options)`\n * Returns the input either way and logs errors, in the future will throw errors on invalid data.\n */\nimport { __, concat, flatMap, isArray, isEmpty, join, map, partial } from 'lodash/fp'\nimport { logManager } from '../../logs'\nimport v8n from 'v8n'\n\n// Custom v8n Rules - https://imbrn.github.io/v8n/api/#extend\nv8n.extend({\n  function: () => value => typeof value === 'function'\n})\n\n// EXPORTS / IO\nexport const validation = v8n()\n\n// TODO: Add an enums function to the v8n library\n// Use as such: `prop: enums( [ 'red', 'blue', 'green' ] )\nexport const enums = values => {\n  // Map iteratee isn't just `v8n().exact` due to v8n() returning a new ProxyContext each time\n  const v8nExact = value => v8n().exact(value)\n  const exactValues = map(v8nExact)(values)\n  return v8n().passesAnyOf(...exactValues)\n}\n\n// Name -> v8nRule -> Input -> [String]\nexport const errorMessages = name => v8nRule => input =>\n  flatMap(validationErrorMessages(name))(validationResults(v8nRule)(input))\n\nexport const validationResults = v8nRule => input => v8nRule.testAll(input)\n\n// (Name, v8nRule) -> Input -> IO Input\nexport const parse = (name, v8nRule) => input => {\n  const errors = errorMessages(name)(v8nRule)(input)\n\n  if (isEmpty(errors)) {\n    return input\n  } else {\n    const log = logManager.getLogger('VALIDATION')\n    log.info(prettyPrint(errors)) // This is an IO side-effect\n    return input\n  }\n}\n\n// DEFINITIONS\n\n// Name -> ValidationError -> [String]\n// https://imbrn.github.io/v8n/api/#validationerror\nconst validationErrorMessages = name => validationError => {\n  const startingPath = []\n  return validationErrorMessageHelper(startingPath)(name)(validationError)\n}\n\n// [String] -> Name -> ValidationError -> [String]\nconst validationErrorMessageHelper = acc => name => ({ cause, rule, target, value }) => {\n  const path = concat(acc)(target || name)\n  if (isArray(cause)) {\n    const newVEM = validationErrorMessageHelper(path)(target)\n    return flatMap(newVEM)(cause)\n  } else {\n    return `${join('.')(path)} has value of '${value}', but it should be ${ruleMessage(rule)}`\n  }\n}\n\n// Rule -> String\n// https://imbrn.github.io/v8n/api/#rule\nconst ruleMessage = ({ name, args }) => {\n  switch (name) {\n    case 'schema':\n      return 'Schema'\n\n    case 'passesAnyOf':\n      return `any of '${join(\"', '\")(map(enumName)(args))}'`\n\n    case 'between':\n      return `between ${args.join(', ')}`\n\n    default:\n      return `${aOrAn(name)} ${name}`\n  }\n}\n\n// HELPERS\nconst enumName = arg => arg.chain[0].args // v8n internals\nconst prettyPrint = partial(JSON.stringify)([__, null, 4])\n// https://dictionary.cambridge.org/grammar/british-grammar/a-an-and-the\nconst aOrAn = string => (/[aeiou]/i.test(string[0]) ? 'an' : 'a')\n","export default {\n    NETWORK: 1,\n    AUTH: 2,\n    STATE: 3,\n    PRIV: 4,\n    UNKNOWN: 9,\n    LOGIN_LIMIT_CLIENT: 10,\n    INCORRECT_LOGIN_PASS: 11,\n    INVALID_LOGIN: 12,\n    // smartoffice2.0 specific\n    FORCE_LOGOUT_ERROR: 13,\n    // smartoffice2.0 specific\n    LOGIN_LIMIT_TABLET: 14,\n    TOKEN_NOT_FOUND: 15,\n    SESSION_EXPIRED: 16,\n    VIDEO_SESSION_NOT_AVAILABLE: 17,\n    PENDING_REQUEST: 18,\n    NOT_ALLOWED_SERVICE: 19,\n    NOT_ALLOWED_METHOD: 20,\n    NOT_ALLOWED_INSTANCE: 21,\n    INVALID_PARAMETER: 22,\n    CONNECTION_ISSUE: 23,\n    MEDIA_NOT_FOUND: 24,\n    MEDIA_NOT_ALLOWED: 25,\n    CALL_FAILED: 26,\n    CALL_ENDED: 27,\n    MAXIMUM_ENTRIES:28,\n    ENTRY_ALREADY_EXISTS:29,\n    SERVICE_NOT_AUTHORIZED:30,\n    DB_EXCEPTION:31,\n    INSUFFICIENT_INFO:32,\n    NOT_FOUND:33,\n    INTERNAL_SERVER_ERROR:34,\n    SERVICE_UNAVAILABLE:35,\n    SESSION_NOT_FOUND: 36,\n    CANNOT_SUBSCRIBE: 37,\n    MEDIA_REQUIRED: 38\n};\n","import { mapKeys } from 'lodash/fp'\n\n/**\n * Helper function. Converts an object so that its keys are the same as its values.\n * @method mapValuesToKeys\n * @param  {Object} source\n * @return {Object}\n */\nfunction mapValuesToKeys (source) {\n  return mapKeys(function (value) {\n    return source[value]\n  })(source)\n}\n\n/**\n * Enum of FCS call states.\n * Key is the \"code\" that FCS uses, and value is the text representation.\n * These are taken from FCS callManager.js, but inversed.\n *      See `fcs.call.States`.\n * @type {Object}\n */\nexport const FCS_CALL_STATES = {\n  0: 'IN_CALL',\n  1: 'ON_HOLD',\n  2: 'RINGING',\n  3: 'ENDED',\n  4: 'REJECTED',\n  5: 'OUTGOING',\n  6: 'INCOMING',\n  7: 'ANSWERING',\n  8: 'JOINED',\n  9: 'RENEGOTIATION',\n  10: 'TRANSFERRED',\n  11: 'ON_REMOTE_HOLD',\n  12: 'CALL_IN_PROGRESS',\n  13: 'EARLY_MEDIA',\n  14: 'TRANSFER_FAILURE',\n  15: 'REPLACING'\n}\n\n/**\n * Call states.\n * Same as FCS_CALL_STATES, except both key and value are the text representation.\n * @name CALL_STATES_FCS\n */\nexport const CALL_STATES_FCS = mapValuesToKeys(FCS_CALL_STATES)\n\n/**\n * Call states\n * Call states used in the cpaas and link call plugins\n * @name CALL_STATES\n */\nexport const CALL_STATES = {\n  INITIATING: 'Initiating',\n  INITIATED: 'Initiated',\n  EARLY_MEDIA: 'Early Media',\n  RINGING: 'Ringing',\n  CANCELLED: 'Cancelled',\n  CONNECTED: 'Connected',\n  ON_HOLD: 'On Hold',\n  ENDED: 'Ended'\n}\n\n/**\n * Possible states a call's media can be in.\n * Describes whether media is flowing or if an endpoint is preventing media flow.\n * @name CALL_MEDIA_STATES\n * @type {Object}\n * @property {string} CONNECTED Both call endpoints allow for media to flow.\n * @property {string} LOCAL_HOLD Local endpoint disallows media from flowing.\n * @property {string} REMOTE_HOLD Remote endpoint disallows media from flowing.\n * @property {string} DUAL_HOLD Both endpoints disallow media from flowing.\n */\nexport const CALL_MEDIA_STATES = {\n  CONNECTED: 'Connected',\n  LOCAL_HOLD: 'Local Hold',\n  REMOTE_HOLD: 'Remote Hold',\n  DUAL_HOLD: 'Dual Hold'\n}\n\n/**\n * Possible states for a Call's media connection.\n * @name CALL_MEDIA_CONNECTION_STATES\n */\nexport const CALL_MEDIA_CONNECTION_STATES = {\n  NEW: 'new',\n  CHECKING: 'checking',\n  CONNECTED: 'connected',\n  COMPLETED: 'completed',\n  FAILED: 'failed',\n  DISCONNECTED: 'disconnected',\n  CLOSED: 'closed'\n}\n\n/**\n * Call operations that require negotiation.\n * @name OPERATIONS\n * @type {Object}\n * @property {string} CHANGE_MEDIA Media flow remains the same, includes non-flow related media changes.\n * @property {string} HOLD_MEDIA   Media flow stops. May include non-flow related media changes.\n * @property {string} UNHOLD_MEDIA Media flow restarts. May include non-flow related media changes.\n * @property {string} MUSIC_ON_HOLD Media flow changes to sendonly.\n */\nexport const OPERATIONS = {\n  CHANGE_MEDIA: 'Change Media',\n  HOLD_MEDIA: 'Hold Media',\n  UNHOLD_MEDIA: 'Unhold Media',\n  MUSIC_ON_HOLD: 'Music on hold'\n}\n\n/**\n * Complex call operations.\n * @name COMPLEX_OPERATIONS\n * @type {Object}\n * @property {string} DIRECT_TRANSFER\n * @property {string} CONSULTATIVE_TRANSFER\n * @property {string} JOIN\n */\nexport const COMPLEX_OPERATIONS = {\n  DIRECT_TRANSFER: 'Direct Transfer',\n  CONSULTATIVE_TRANSFER: 'Consultative Transfer',\n  JOIN: 'Join'\n}\n\n/**\n * Complex call operation messages.\n * @name COMPLEX_OPERATION_MESSAGES\n * @type {Object}\n * @property {string} DIRECT_TRANSFER_SUCCESS Success message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_SUCCESS Success message for consultative transfer (matches reasonText from notification).\n * @property {string} JOIN_SUCCESS Success message for join.\n * @property {string} DIRECT_TRANSFER_FAILURE Failure message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_FAILURE Failure message for consultative transfer.\n * @property {string} JOIN_FAILURE Failure message for join.\n */\nexport const COMPLEX_OPERATION_MESSAGES = {\n  DIRECT_TRANSFER_SUCCESS: 'Direct Transfer Successful',\n  CONSULTATIVE_TRANSFER_SUCCESS: 'Transfer Successful',\n  JOIN_SUCCESS: 'Join Successful',\n  DIRECT_TRANSFER_FAILURE: 'Direct Transfer Failed',\n  CONSULTATIVE_TRANSFER_FAILURE: 'Transfer Failed',\n  JOIN_FAILURE: 'Join Failed'\n}\n\n/**\n * Status codes that match success messages.\n * @name STATUS_CODES\n * @type {Object}\n * @property {number} DIRECT_TRANSFER_SUCCESS Status code for successful direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_SUCCESS Status code for successful consultative transfer.\n * @property {number} JOIN_SUCCESS Status code for successful join.\n * @property {number} DIRECT_TRANSFER_FAILURE Status code for failed direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_FAILURE Status code for failed consultative transfer.\n * @property {number} JOIN_FAILURE Status code for failed join.\n */\nexport const STATUS_CODES = {\n  DIRECT_TRANSFER_SUCCESS: 9905,\n  CONSULTATIVE_TRANSFER_SUCCESS: 9905,\n  JOIN_SUCCESS: 9906,\n  DIRECT_TRANSFER_FAILURE: -1,\n  CONSULTATIVE_TRANSFER_FAILURE: -1,\n  JOIN_FAILURE: -2\n}\n\n/**\n * Call direction\n * Indication of which direction the call is going\n * @name CALL_DIRECTION\n */\nexport const CALL_DIRECTION = {\n  INCOMING: 'incoming',\n  OUTGOING: 'outgoing'\n}\n\n/*\n * A conversion from MediaDeviceInfo.kind values to their more common terms.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind\n */\nexport const WEBRTC_DEVICE_KINDS = {\n  audioinput: 'microphone',\n  videoinput: 'camera',\n  audiooutput: 'speaker'\n}\n\n/**\n * Enum of ICE media states.\n * These are taken from FCS call, but inversed.\n *      See `fcs.call.MediaStates`.\n * @name FCS_ICE_MEDIA_STATES\n * @type {Object}\n */\nexport const FCS_ICE_MEDIA_STATES = {\n  0: 'NEW',\n  1: 'CHECKING',\n  2: 'CONNECTED',\n  3: 'COMPLETED',\n  4: 'FAILED',\n  5: 'DISCONNECTED',\n  6: 'CLOSED'\n}\n\n/**\n * ICE media states.\n * Same as FCS_ICE_MEDIA_STATES, except both key and value are the text representation.\n * @name ICE_MEDIA_STATES\n */\nexport const ICE_MEDIA_STATES = mapValuesToKeys(FCS_ICE_MEDIA_STATES)\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","module.exports = true;\n","exports.f = {}.propertyIsEnumerable;\n","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };","module.exports = {};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","/**\n * Log levels supported by Loggers.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const logLevels = {\n  TRACE: 'TRACE',\n  DEBUG: 'DEBUG',\n  INFO: 'INFO',\n  WARN: 'WARN',\n  ERROR: 'ERROR',\n  SILENT: 'SILENT'\n}\n\n/**\n * Numeric values for each log level.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const levelValues = {\n  TRACE: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n  SILENT: 5\n}\n\n/**\n * Supported Log methods and their set log level; `<logMethod>: <logLevel>`\n * Used to construct the logging methods on a Logger.\n * @type {Object}\n */\nexport const logMethods = {\n  // Standard methods.\n  trace: logLevels.TRACE,\n  debug: logLevels.DEBUG,\n  info: logLevels.INFO,\n  warn: logLevels.WARN,\n  error: logLevels.ERROR,\n  // Extra console methods.\n  log: logLevels.DEBUG,\n  group: logLevels.DEBUG,\n  groupEnd: logLevels.DEBUG,\n  groupCollapsed: logLevels.DEBUG\n}\n\n/**\n * The log level for all timer methods.\n * @type {string}\n */\nexport const timeLevel = logLevels.DEBUG\n","const prefix = '@@KANDY/'\n\nexport const CONNECT = prefix + 'CONNECT'\nexport const SET_CONNECTION_INFO = prefix + 'SET_CONNECTION_INFO'\nexport const CONNECTION_OCCURRED = prefix + 'CONNECTION_OCCURRED'\nexport const CONNECT_FINISHED = prefix + 'CONNECT_FINISHED'\nexport const GET_USER_DETAILS = prefix + 'GET_USER_DETAILS'\nexport const USER_DETAILS_RECEIVED = prefix + 'USER_DETAILS_RECEIVED'\nexport const DISCONNECT = prefix + 'DISCONNECT'\nexport const DISCONNECT_FINISHED = prefix + 'DISCONNECT_FINISHED'\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\nexport const REFRESH_TOKENS = prefix + 'REFRESH_TOKENS'\nexport const REFRESH_TOKENS_FINISHED = prefix + 'REFRESH_TOKENS_FINISHED'\n\nexport const UPDATE_SUBSCRIPTION = prefix + 'UPDATE_SUBSCRIPTION'\nexport const UPDATE_SUBSCRIPTION_FINISH = prefix + 'UPDATE_SUBSCRIPTION_FINISH'\n\nexport const SET_TOKEN = prefix + 'SET_TOKEN'\n\nexport const SET_CREDENTIALS = prefix + 'SET_CREDENTIALS'\nexport const SET_CREDENTIALS_FINISH = prefix + 'SET_CREDENTIALS_FINISH'\n\nexport const AUTHORIZATION_ERROR = prefix + 'AUTHORIZATION_ERROR'\n\nexport const UPDATE_HMAC_TOKEN = prefix + 'UPDATE_HMAC_TOKEN'\n","const PREFIX = '@@KANDY/'\n\nexport const CREATE_CONVERSATION = PREFIX + 'CREATE_CONVERSATION'\nexport const SEND_MESSAGE = PREFIX + 'SEND_MESSAGE'\nexport const SEND_MESSAGE_FINISH = PREFIX + 'SEND_MESSAGE_FINISH'\nexport const MESSAGE_RECEIVED = PREFIX + 'MESSAGE_RECEIVED'\nexport const INCOMING_MESSAGE_READ = PREFIX + 'INCOMING_MESSAGE_READ'\nexport const SEND_MESSAGE_READ = PREFIX + 'SEND_MESSAGE_READ'\nexport const SEND_MESSAGE_READ_FINISH = PREFIX + 'SEND_MESSAGE_READ_FINISH'\n\nexport const CLEAR_MESSAGES = PREFIX + 'CLEAR_MESSAGES'\nexport const CLEAR_MESSAGES_FINISH = PREFIX + 'CLEAR_MESSAGES_FINISH'\n\nexport const DELETE_CONVERSATION = PREFIX + 'DELETE_CONVERSATION'\nexport const DELETE_CONVERSATION_FINISH = PREFIX + 'DELETE_CONVERSATION_FINISH'\n\nexport const DELETE_MESSAGE = PREFIX + 'DELETE_MESSAGES'\nexport const DELETE_MESSAGE_FINISH = PREFIX + 'DELETE_MESSAGES_FINISH'\n\nexport const FETCH_CONVERSATIONS = PREFIX + 'FETCH_CONVERSATIONS'\nexport const FETCH_CONVERSATIONS_FINISHED = PREFIX + 'FETCH_CONVERSATIONS_FINISHED'\n\nexport const UPDATE_CONVERSATION = PREFIX + 'UPDATE_CONVERSATION'\n\nexport const FETCH_MESSAGES = PREFIX + 'FETCH_MESSAGES'\nexport const FETCH_MESSAGES_FINISHED = PREFIX + 'FETCH_MESSAGES_FINISHED'\n\nexport const FILE_UPLOAD_FAIL = PREFIX + 'FILE_UPLOAD_FAIL'\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","/**\n * Returns the version of the currently running SDK.\n *\n * It must be used by any plugins (including the factory) as the unique source of truth when it comes to determine the current SDK version.\n * The actual version value is provided by the build process scripts (aka webpack.config.***.js) which simply do a string substitution\n * for the @@ tag below with actual version value.\n */\nexport function getVersion () {\n  return '3.36.0-beta.826'\n}\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","/**\n * Possible subscription states.\n * @name SUBSCRIPTION_STATE\n * @type {Object}\n */\nexport const SUBSCRIPTION_STATE = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n  NONE: 'NONE'\n}\n\n/**\n * Possible disconnect reasons.\n * @name DISCONNECT_REASONS\n * @type {Object}\n */\nexport const DISCONNECT_REASONS = {\n  GONE: 'GONE',\n  LOST_CONNECTION: 'LOST_CONNECTION'\n}\n","const PREFIX = '@@KANDY/'\n\nexport const REQUEST = PREFIX + 'REQUEST'\nexport const RESPONSE = PREFIX + 'RESPONSE'\n\nexport const AUTHORIZATION_ERROR = PREFIX + 'AUTHORIZATION_ERROR'\n","// Request plugin.\nimport { injectAgentVersionHeader, customAgentVersionHeaderSuffix } from '../interface/selectors'\n\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { logManager } from '../../logs'\n\n// Utils.\nimport { getVersion } from '../../common/version'\nimport { toQueryString } from '../../common/utils'\nimport { platforms } from '../../constants'\n\n// Libraries.\nimport { select } from 'redux-saga/effects'\nimport { cloneDeep } from 'lodash/fp'\n\nconst log = logManager.getLogger('REQUEST')\n\n/**\n * Helper function to compile the common headers/options for a REST request.\n * @method getCommonOptions\n * @param  {string} url The URL to be used for the request.\n * @return {Object}\n */\nexport function * getCommonOptions (url) {\n  const platform = yield select(getPlatform)\n  const requestInfo = yield select(getRequestInfo, platform)\n  const useCustomHeader = yield select(injectAgentVersionHeader)\n  const customSuffix = yield select(customAgentVersionHeaderSuffix)\n\n  // Start off with whatever options were set by the Auth plugin.\n  //    The authentication headers / token will be there if they are set.\n  let options\n  if (platform === 'cpaas') {\n    // For some reason, CPaaS has this property as `options` where the other\n    //    SDKs have it as `requestOptions`. Workaround that here.\n    options = requestInfo.options || {}\n  } else {\n    options = requestInfo.requestOptions || {}\n  }\n\n  // Ensure there is a headers object.\n  options.headers = options.headers || {}\n\n  // Add the common headers.\n  options.headers['Content-Type'] = 'application/json'\n  options.headers.Accept = 'application/json'\n\n  // If enabled, add the 'Agent Version' header to the options.\n  if (useCustomHeader) {\n    let headerValue = getCpaasAgentHeaderValue(platform, url)\n    if (customSuffix) {\n      // If a custom suffix value was provided as well, then use it.\n      headerValue += ' ' + customSuffix\n    }\n    options.headers['X-Cpaas-Agent'] = headerValue\n  }\n\n  return options\n}\n\n/**\n * Determine and return the current SDK platform and version string to be used\n * with the x-Cpaas-Agent network request header field.\n * @method getCpaasAgentHeaderValue\n * @param  {string}  platform Which platform is currently being used.\n * @param  {string}  url The url for the request being made.\n * @return {string}  A string representation of the platform and version the SDK is using.\n */\nexport function getCpaasAgentHeaderValue (platform, url) {\n  // Assume request is for CPaaS platform, by default.\n  let headerValue = `cpaas-js-sdk/${getVersion()}`\n\n  // Check if request is for callMe service, otherwise determine the appropriate platform.\n  // (callMe service uses Link platform for call requests)\n  if (url && url.includes('/anonymous/')) {\n    headerValue = `callme-js-sdk/${getVersion()}`\n  } else {\n    // Check the actual platform used\n    if (platform === platforms.UC) {\n      headerValue = `uc-js-sdk/${getVersion()}`\n    } else if (platform === platforms.LINK) {\n      headerValue = `link-js-sdk/${getVersion()}`\n    }\n  }\n  return headerValue\n}\n\n/**\n * Prepares a REST request options object for logging by removing passwords\n * and parses the body string into an object that can be interacted with in console.\n * @method sanitizeRequest\n * @param {Object} options An object containing any custom settings that you want to\n *                         apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n *                         or a full description and defaults.\n * @return {Object} A sanitized REST request options object that can be safely logged.\n */\nexport function sanitizeRequest (options) {\n  const logOptions = cloneDeep(options)\n  // When logging the Auth header, cut it off so that we can see the type of\n  //    token but not the token itself. Depending on the type, it can contain\n  //    a password.\n  const authHeader = logOptions.headers && logOptions.headers.Authorization\n  if (authHeader) {\n    logOptions.headers.Authorization = authHeader.substring(0, 6) + '...'\n  }\n\n  // If the rest request body is a string, try to parse it as JSON and store\n  // it as an object so it can be interacted with in the console\n  const body = logOptions.body\n  if (body) {\n    try {\n      logOptions.body = JSON.parse(body)\n    } catch (e) {\n      // Noop, leave the body in whatever format it was in.\n    }\n  }\n\n  return logOptions\n}\n\n/**\n * Send a REST request to Link with the appropriate configuration.\n * @method fetchResource\n * @param {string} resource The path of the resource to fetch from the underlying service. This path will be appended\n *                          to the base URL according to SDK configuration.\n * @param {Object} requestInfo An object containing any custom settings that you want to apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n *                             for a full description and defaults.\n * @return {Promise<Response>} A promise for a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object.\n */\nexport async function fetchResource (resource, requestInfo, module) {\n  const { requestOptions } = requestInfo\n\n  // If the app doesn't prepend the '/' we should add it.\n  if (resource.charAt() !== '/') {\n    resource = `/${resource}`\n  }\n\n  const url = `${requestInfo.baseURL}${resource}`\n  const logOptions = sanitizeRequest(requestOptions)\n  log.debug('Making REST request', logOptions)\n\n  const queryParams = requestInfo.requestOptions.queryParams || {}\n  let queryString = toQueryString(queryParams)\n  // Check resource passed in for any existing query params\n  if (resource.includes('?')) {\n    queryString = queryString.replace('?', '&')\n  }\n  const response = await fetch(url + queryString, requestOptions)\n\n  log.debug('Received REST response', response)\n\n  return response\n}\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\n/**\n * @param {string} type\n */\nfunction createWsAction (type) {\n  /**\n   * @param {any=} payload\n   * @param {string=} platform\n   * @param {boolean=} [isReconnect] flag to signify if we are reconnecting or not.\n   */\n  function action (payload, platform = platforms.LINK, isReconnect = false) {\n    return {\n      type,\n      // TODO: This must check for basic error eventually instead.\n      error: payload instanceof Error,\n      payload,\n      meta: { platform, isReconnect }\n    }\n  }\n  return action\n}\n\nexport const wsAttemptConnect = createWsAction(actionTypes.WS_ATTEMPT_CONNECT)\nexport const wsDisconnect = createWsAction(actionTypes.WS_DISCONNECT)\nexport const wsConnectFinished = createWsAction(actionTypes.WS_CONNECT_FINISHED)\nexport const wsDisconnectFinished = createWsAction(actionTypes.WS_DISCONNECT_FINISHED)\nexport const wsReconnectFailed = createWsAction(actionTypes.WS_RECONNECT_FAILED)\n\nexport const wsClosed = createWsAction(actionTypes.WS_CLOSED)\nexport const wsError = createWsAction(actionTypes.WS_ERROR)\n\nexport const lostConnection = createWsAction(actionTypes.LOST_CONNECTION)\n\nexport const receiveServerPing = createWsAction(actionTypes.RECEIVE_SERVER_PING)\nexport const receiveServerPong = createWsAction(actionTypes.RECEIVE_SERVER_PONG)\n\nexport const changeConnectivityChecking = createWsAction(actionTypes.CHANGE_CONNECTIVITY_CHECKING)\nexport const changePingInterval = createWsAction(actionTypes.CHANGE_PING_INTERVAL)\n","import { cloneDeep } from 'lodash/fp'\nimport name from './name'\n\nexport function getConnectionState (state, platform) {\n  if (state[name][platform]) {\n    return cloneDeep(state[name][platform])\n  } else {\n    return new Error('No sockets are up. Have you attempted to connect?')\n  }\n}\n\n/**\n * Retrieves the config options provided by the connectivity plugin.\n * @method getConnectivityConfig\n * @return {Object}\n */\nexport function getConnectivityConfig (state) {\n  return state.config[name]\n}\n\n/**\n * Retrieves the pingInterval property from state\n * @method getPingInterval\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getPingInterval (state) {\n  return state[name].pingInterval\n}\n\n/**\n * Retrieves the checkConnectivity property from state\n * @method getCheckConnectivity\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getCheckConnectivity (state) {\n  return state[name].checkConnectivity\n}\n","import Map from '../../utils/map';\n\nexport function WebRtcAdaptorModel() {\n    var self = {},\n        dtlsEnabled = false,\n        dscpEnabled,\n        iceServerUrl = '',\n        containers = {\n            video: null,\n            localVideo: null,\n            remoteVideo: null,\n            defaultVideo: null\n        },\n        mediaSources = {\n            video: {\n                available: false\n            },\n            audio: {\n                available: false\n            },\n            screen: {\n                available: false,\n                width: '1024',\n                height: '768',\n                rate: 15\n            }\n        },\n        stats = {},\n        initialized = false,\n        rtcLibrary = {},\n        language,\n        logLevel = 4,\n        peerCount = 0,\n        pluginEnabled = false,\n        h264Enabled = false,\n        screenStream,\n        localStreamMap = new Map(),\n        privateStreamMap = new Map(),\n        localMedia = {},\n        selectedMicrophoneId,\n        selectedSpeakerId,\n        selectedCameraId,\n        mediaSourceList;\n\n    self.getLocalMedia = function() {\n        return localMedia;\n    };\n\n    self.setLocalMedia = function(media) {\n        localMedia = media;\n    };\n\n    self.getLocalStreamMap = function() {\n        return localStreamMap;\n    };\n\n    self.getScreenStream = function() {\n        return screenStream;\n    };\n\n    self.setScreenStream = function(stream) {\n        screenStream = stream;\n    };\n\n    self.isH264Enabled = function() {\n        return h264Enabled;\n    };\n\n    self.setH264Enabled = function(enabled) {\n        h264Enabled = enabled === true ? true : false;\n    };\n\n    self.getIceServerUrl = function() {\n        return iceServerUrl;\n    };\n\n    self.setIceServerUrl = function(url) {\n        iceServerUrl = url;\n    };\n\n    self.isDtlsEnabled = function() {\n        return dtlsEnabled;\n    };\n\n    self.setDtlsEnabled = function(enabled) {\n        dtlsEnabled = enabled;\n    };\n\n    self.isDscpEnabled = function() {\n        return dscpEnabled;\n    };\n\n    self.setDscpEnabled = function(enabled) {\n        dscpEnabled = enabled;\n    };\n\n    self.getVideoContainer = function() {\n        return containers.video;\n    };\n\n    self.setVideoContainer = function(container) {\n        containers.video = container;\n    };\n\n    self.getLocalVideoContainer = function() {\n        return containers.localVideo;\n    };\n\n    self.setLocalVideoContainer = function(container) {\n        containers.localVideo = container;\n    };\n\n    self.getRemoteVideoContainer = function() {\n        return containers.remoteVideo;\n    };\n\n    self.setRemoteVideoContainer = function(container) {\n        containers.remoteVideo = container;\n    };\n\n    self.getDefaultVideoContainer = function() {\n        return containers.defaultVideo;\n    };\n\n    self.setDefaultVideoContainer = function(container) {\n        containers.defaultVideo = container;\n    };\n\n    self.isInitialized = function() {\n        return initialized;\n    };\n\n    self.setInitialized = function(value) {\n        initialized = value === true ? true : false;\n    };\n\n    self.getRtcLibrary = function() {\n        return rtcLibrary;\n    };\n\n    self.setRtcLibrary = function(library) {\n        rtcLibrary = library;\n    };\n\n    self.getLogLevel = function() {\n        return logLevel;\n    };\n\n    self.setLogLevel = function(level) {\n        logLevel = level;\n    };\n\n    self.getLanguage = function() {\n        return language;\n    };\n\n    self.setLanguage = function(lang) {\n        language = lang;\n    };\n\n    self.getVideoWidth = function() {\n        return mediaSources.video.width;\n    };\n\n    self.setVideoWidth = function(_videoWidth) {\n        mediaSources.video.width = _videoWidth;\n    };\n\n    self.getVideoHeight = function() {\n        return mediaSources.video.height;\n    };\n\n    self.setVideoHeight = function(_videoHeight) {\n        mediaSources.video.height = _videoHeight;\n    };\n\n    self.getVideoSourceAvailable = function() {\n        return mediaSources.video.available || mediaSources.screen.available;\n    };\n\n    self.setVideoSourceAvailable = function(_videoSourceAvailable) {\n        mediaSources.video.available = _videoSourceAvailable;\n    };\n\n    self.getAudioSourceAvailable = function() {\n        return mediaSources.audio.available;\n    };\n\n    self.setAudioSourceAvailable = function(_audioSourceAvailable) {\n        mediaSources.audio.available = _audioSourceAvailable;\n    };\n\n    self.setMediaSources = function(mediaSourceInfo) {\n        if (mediaSourceInfo) {\n            self.setVideoSourceAvailable(mediaSourceInfo.videoSourceAvailable);\n            self.setAudioSourceAvailable(mediaSourceInfo.audioSourceAvailable);\n            self.setScreenSourceAvailable(mediaSourceInfo.screenSourceAvailable);\n            self.setMediaSourceList(mediaSourceInfo.sourceList);\n        }\n    };\n\n    self.getScreenSourceAvailable = function() {\n        return mediaSources.screen.available;\n    };\n\n    self.setScreenSourceAvailable = function(_videoSourceAvailable) {\n        mediaSources.screen.available = _videoSourceAvailable;\n    };\n\n    self.getScreenWidth = function() {\n        return mediaSources.screen.width;\n    };\n\n    self.setScreenWidth = function(_screenWidth) {\n        mediaSources.screen.width = _screenWidth;\n    };\n\n    self.getScreenHeight = function() {\n        return mediaSources.screen.height;\n    };\n\n    self.setScreenHeight = function(_screenHeight) {\n        mediaSources.screen.height = _screenHeight;\n    };\n\n    self.getScreenFrameRate = function() {\n        return mediaSources.screen.rate;\n    };\n\n    self.setScreenFrameRate = function(_screenRate) {\n        mediaSources.screen.rate = _screenRate;\n    };\n\n    self.getPeerCount = function() {\n        return peerCount;\n    };\n\n    self.setPeerCount = function(_peerCount) {\n        peerCount = _peerCount;\n    };\n\n    self.isPluginEnabled = function() {\n        return pluginEnabled;\n    };\n\n    self.setPluginEnabled = function(_isPluginEnabled) {\n        pluginEnabled = _isPluginEnabled;\n    };\n\n    self.setSelectedMicrophoneId = function(_selectedMicrophoneId) {\n        selectedMicrophoneId = _selectedMicrophoneId;\n    };\n\n    self.getSelectedMicrophoneId = function() {\n        return selectedMicrophoneId;\n    };\n\n    self.setSelectedSpeakerId = function(_selectedSpeakerId) {\n        selectedSpeakerId = _selectedSpeakerId;\n    };\n\n    self.getSelectedSpeakerId = function() {\n        return selectedSpeakerId;\n    };\n\n    self.setSelectedCameraId = function(_selectedCameraId) {\n        selectedCameraId = _selectedCameraId;\n    };\n\n    self.getSelectedCameraId = function() {\n        return selectedCameraId;\n    };\n\n    self.getStreamById = function(id) {\n        return privateStreamMap.get(id);\n    };\n\n    self.removeStreamFromMap = function(id) {\n        privateStreamMap.remove(id);\n    };\n\n    self.getPrivateStreamMap = function() {\n        return privateStreamMap;\n    };\n\n    self.setMediaSourceList = function(_mediaSourceList) {\n        mediaSourceList = _mediaSourceList;\n    };\n\n    self.getMediaSourceList = function() {\n        return mediaSourceList;\n    };\n\n    self.getStats = function() {\n        return stats;\n    };\n\n    self.setStats = function(_stats) {\n        stats = _stats;\n    };\n\n    self.getUserMediaContraints = function() {\n        return {\n            audio: true,\n            video: true\n        };\n    };\n\n    return self;\n}\n","const prefix = '@@KANDY/'\n\nexport const FETCH_CALL_HISTORY = prefix + 'FETCH_CALL_HISTORY'\nexport const FETCH_CALL_HISTORY_FINISH = prefix + 'FETCH_CALL_HISTORY_FINISH'\n\nexport const DELETE_CALL_HISTORY = prefix + 'DELETE_CALL_HISTORY'\nexport const DELETE_CALL_HISTORY_FINISH = prefix + 'DELETE_CALL_HISTORY_FINISH'\n\nexport const ADD_CALL_HISTORY_ENTRY = prefix + 'ADD_CALL_HISTORY_ENTRY'\n\nexport const SET_CACHE = prefix + 'SET_CACHE'\n","const PREFIX = '@@KANDY/'\n\nexport const CLICK_TO_CALL = PREFIX + 'CLICK_TO_CALL'\nexport const CLICK_TO_CALL_FINISH = PREFIX + 'CLICK_TO_CALL_FINISH'\n","const PREFIX = '@@KANDY/'\n\nexport const MWI_UPDATE = PREFIX + 'MWI_UPDATE'\nexport const FETCH_MWI = PREFIX + 'FETCH_MWI'\n","const prefix = '@@KANDY/PRESENCE/'\n\nexport const UPDATE = prefix + 'UPDATE'\nexport const UPDATE_FINISH = prefix + 'UPDATE_FINISH'\nexport const GET = prefix + 'GET'\nexport const GET_FINISH = prefix + 'GET_FINISH'\nexport const SUBSCRIBE = prefix + 'SUBSCRIBE'\nexport const SUBSCRIBE_FINISH = prefix + 'SUBSCRIBE_FINISH'\nexport const UNSUBSCRIBE = prefix + 'UNSUBSCRIBE'\nexport const UNSUBSCRIBE_FINISH = prefix + 'UNSUBSCRIBE_FINISH'\nexport const RECEIVED = prefix + 'RECEIVED'\nexport const CREATE_PRESENCE_LIST = prefix + 'CREATE_PRESENCE_LIST'\nexport const CREATE_PRESENCE_LIST_FINISH = prefix + 'CREATE_PRESENCE_LIST_FINISH'\nexport const DELETE_PRESENCE_LIST = prefix + 'DELETE_PRESENCE_LIST'\nexport const GET_PRESENCE_LIST = prefix + 'GET_PRESENCE_LIST'\n","const PREFIX = '@@KANDY/'\n\nexport const SIP_EVENT_SUBSCRIBE = PREFIX + 'SIP_EVENT_SUBSCRIBE'\nexport const SIP_EVENT_SUBSCRIBE_FINISH = PREFIX + 'SIP_EVENT_SUBSCRIBE_FINISH'\n\nexport const SIP_EVENT_UPDATE = PREFIX + 'SIP_EVENT_UPDATE'\nexport const SIP_EVENT_UPDATE_FINISH = PREFIX + 'SIP_EVENT_UPDATE_FINISH'\n\nexport const SIP_EVENT_UNSUBSCRIBE = PREFIX + 'SIP_EVENT_UNSUBSCRIBE'\nexport const SIP_EVENT_UNSUBSCRIBE_FINISH = PREFIX + 'SIP_EVENT_UNSUBSCRIBE_FINISH'\n\nexport const SIP_EVENT_RECEIVED = PREFIX + 'SIP_EVENT_RECEIVED'\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","function deferred() {\n  var def = {};\n  def.promise = new Promise(function (resolve, reject) {\n    def.resolve = resolve;\n    def.reject = reject;\n  });\n  return def;\n}\nfunction arrayOfDeferred(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(deferred());\n  }\n\n  return arr;\n}\n\nexport default deferred;\nexport { arrayOfDeferred };\n","import { CHANNEL_END_TYPE, MULTICAST, MATCH, SAGA_ACTION, CANCEL, SELF_CANCELLATION, TERMINATE, TASK, TASK_CANCEL, IO } from '@redux-saga/symbols';\nexport { CANCEL, SAGA_LOCATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { string as string$1, array as array$1, stringableFunc, func, symbol as symbol$1, buffer, notUndef, promise, iterator, undef, object, channel as channel$1 } from '@redux-saga/is';\nimport { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-6de156f3.js';\nexport { H as buffers, I as detach } from './io-6de156f3.js';\nimport { compose } from 'redux';\nimport deferred from '@redux-saga/deferred';\nimport '@redux-saga/delay-p';\n\nvar queue = [];\n/**\n  Variable to hold a counting semaphore\n  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it's not\n    already suspended)\n  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This\n    triggers flushing the queued tasks.\n**/\n\nvar semaphore = 0;\n/**\n  Executes a task 'atomically'. Tasks scheduled during this execution will be queued\n  and flushed after this task has finished (assuming the scheduler endup in a released\n  state).\n**/\n\nfunction exec(task) {\n  try {\n    suspend();\n    task();\n  } finally {\n    release();\n  }\n}\n/**\n  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)\n**/\n\n\nfunction asap(task) {\n  queue.push(task);\n\n  if (!semaphore) {\n    suspend();\n    flush();\n  }\n}\n/**\n * Puts the scheduler in a `suspended` state and executes a task immediately.\n */\n\nfunction immediately(task) {\n  try {\n    suspend();\n    return task();\n  } finally {\n    flush();\n  }\n}\n/**\n  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the\n  scheduler is released.\n**/\n\nfunction suspend() {\n  semaphore++;\n}\n/**\n  Puts the scheduler in a `released` state.\n**/\n\n\nfunction release() {\n  semaphore--;\n}\n/**\n  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\n\n\nfunction flush() {\n  release();\n  var task;\n\n  while (!semaphore && (task = queue.shift()) !== undefined) {\n    exec(task);\n  }\n}\n\nvar array = function array(patterns) {\n  return function (input) {\n    return patterns.some(function (p) {\n      return matcher(p)(input);\n    });\n  };\n};\nvar predicate = function predicate(_predicate) {\n  return function (input) {\n    return _predicate(input);\n  };\n};\nvar string = function string(pattern) {\n  return function (input) {\n    return input.type === String(pattern);\n  };\n};\nvar symbol = function symbol(pattern) {\n  return function (input) {\n    return input.type === pattern;\n  };\n};\nvar wildcard = function wildcard() {\n  return kTrue;\n};\nfunction matcher(pattern) {\n  // prettier-ignore\n  var matcherCreator = pattern === '*' ? wildcard : string$1(pattern) ? string : array$1(pattern) ? array : stringableFunc(pattern) ? string : func(pattern) ? predicate : symbol$1(pattern) ? symbol : null;\n\n  if (matcherCreator === null) {\n    throw new Error(\"invalid pattern: \" + pattern);\n  }\n\n  return matcherCreator(pattern);\n}\n\nvar END = {\n  type: CHANNEL_END_TYPE\n};\nvar isEnd = function isEnd(a) {\n  return a && a.type === CHANNEL_END_TYPE;\n};\nvar CLOSED_CHANNEL_WITH_TAKERS = 'Cannot have a closed channel with pending takers';\nvar INVALID_BUFFER = 'invalid buffer passed to channel factory function';\nvar UNDEFINED_INPUT_ERROR = \"Saga or channel was provided with an undefined action\\nHints:\\n  - check that your Action Creator returns a non-undefined value\\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\";\nfunction channel(buffer$1) {\n  if (buffer$1 === void 0) {\n    buffer$1 = expanding();\n  }\n\n  var closed = false;\n  var takers = [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(buffer$1, buffer, INVALID_BUFFER);\n  }\n\n  function checkForbiddenStates() {\n    if (closed && takers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n\n    if (takers.length && !buffer$1.isEmpty()) {\n      throw internalErr('Cannot have pending takers with non empty buffer');\n    }\n  }\n\n  function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (takers.length === 0) {\n      return buffer$1.put(input);\n    }\n\n    var cb = takers.shift();\n    cb(input);\n  }\n\n  function take(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.take's callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n    } else if (!buffer$1.isEmpty()) {\n      cb(buffer$1.take());\n    } else {\n      takers.push(cb);\n\n      cb.cancel = function () {\n        remove(takers, cb);\n      };\n    }\n  }\n\n  function flush(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.flush' callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n      return;\n    }\n\n    cb(buffer$1.flush());\n  }\n\n  function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n    var arr = takers;\n    takers = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var taker = arr[i];\n      taker(END);\n    }\n  }\n\n  return {\n    take: take,\n    put: put,\n    flush: flush,\n    close: close\n  };\n}\nfunction eventChannel(subscribe, buffer) {\n  if (buffer === void 0) {\n    buffer = none();\n  }\n\n  var closed = false;\n  var unsubscribe;\n  var chan = channel(buffer);\n\n  var close = function close() {\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n\n    if (func(unsubscribe)) {\n      unsubscribe();\n    }\n\n    chan.close();\n  };\n\n  unsubscribe = subscribe(function (input) {\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    chan.put(input);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(unsubscribe, func, 'in eventChannel: subscribe should return a function to unsubscribe');\n  }\n\n  unsubscribe = once(unsubscribe);\n\n  if (closed) {\n    unsubscribe();\n  }\n\n  return {\n    take: chan.take,\n    flush: chan.flush,\n    close: close\n  };\n}\nfunction multicastChannel() {\n  var _ref;\n\n  var closed = false;\n  var currentTakers = [];\n  var nextTakers = currentTakers;\n\n  function checkForbiddenStates() {\n    if (closed && nextTakers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n  }\n\n  var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {\n    if (nextTakers !== currentTakers) {\n      return;\n    }\n\n    nextTakers = currentTakers.slice();\n  };\n\n  var close = function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    closed = true;\n    var takers = currentTakers = nextTakers;\n    nextTakers = [];\n    takers.forEach(function (taker) {\n      taker(END);\n    });\n  };\n\n  return _ref = {}, _ref[MULTICAST] = true, _ref.put = function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    var takers = currentTakers = nextTakers;\n\n    for (var i = 0, len = takers.length; i < len; i++) {\n      var taker = takers[i];\n\n      if (taker[MATCH](input)) {\n        taker.cancel();\n        taker(input);\n      }\n    }\n  }, _ref.take = function take(cb, matcher) {\n    if (matcher === void 0) {\n      matcher = wildcard;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      cb(END);\n      return;\n    }\n\n    cb[MATCH] = matcher;\n    ensureCanMutateNextTakers();\n    nextTakers.push(cb);\n    cb.cancel = once(function () {\n      ensureCanMutateNextTakers();\n      remove(nextTakers, cb);\n    });\n  }, _ref.close = close, _ref;\n}\nfunction stdChannel() {\n  var chan = multicastChannel();\n  var put = chan.put;\n\n  chan.put = function (input) {\n    if (input[SAGA_ACTION]) {\n      put(input);\n      return;\n    }\n\n    asap(function () {\n      put(input);\n    });\n  };\n\n  return chan;\n}\n\nvar RUNNING = 0;\nvar CANCELLED = 1;\nvar ABORTED = 2;\nvar DONE = 3;\n\nfunction resolvePromise(promise, cb) {\n  var cancelPromise = promise[CANCEL];\n\n  if (func(cancelPromise)) {\n    cb.cancel = cancelPromise;\n  }\n\n  promise.then(cb, function (error) {\n    cb(error, true);\n  });\n}\n\nvar current = 0;\nvar nextSagaId = (function () {\n  return ++current;\n});\n\nvar _effectRunnerMap;\n\nfunction getIteratorMetaInfo(iterator, fn) {\n  if (iterator.isSagaIterator) {\n    return {\n      name: iterator.meta.name\n    };\n  }\n\n  return getMetaInfo(fn);\n}\n\nfunction createTaskIterator(_ref) {\n  var context = _ref.context,\n      fn = _ref.fn,\n      args = _ref.args;\n\n  // catch synchronous failures; see #152 and #441\n  try {\n    var result = fn.apply(context, args); // i.e. a generator function returns an iterator\n\n    if (iterator(result)) {\n      return result;\n    }\n\n    var resolved = false;\n\n    var next = function next(arg) {\n      if (!resolved) {\n        resolved = true; // Only promises returned from fork will be interpreted. See #1573\n\n        return {\n          value: result,\n          done: !promise(result)\n        };\n      } else {\n        return {\n          value: arg,\n          done: true\n        };\n      }\n    };\n\n    return makeIterator(next);\n  } catch (err) {\n    // do not bubble up synchronous failures for detached forks\n    // instead create a failed task. See #152 and #441\n    return makeIterator(function () {\n      throw err;\n    });\n  }\n}\n\nfunction runPutEffect(env, _ref2, cb) {\n  var channel = _ref2.channel,\n      action = _ref2.action,\n      resolve = _ref2.resolve;\n\n  /**\n   Schedule the put in case another saga is holding a lock.\n   The put will be executed atomically. ie nested puts will execute after\n   this put has terminated.\n   **/\n  asap(function () {\n    var result;\n\n    try {\n      result = (channel ? channel.put : env.dispatch)(action);\n    } catch (error) {\n      cb(error, true);\n      return;\n    }\n\n    if (resolve && promise(result)) {\n      resolvePromise(result, cb);\n    } else {\n      cb(result);\n    }\n  }); // Put effects are non cancellables\n}\n\nfunction runTakeEffect(env, _ref3, cb) {\n  var _ref3$channel = _ref3.channel,\n      channel = _ref3$channel === void 0 ? env.channel : _ref3$channel,\n      pattern = _ref3.pattern,\n      maybe = _ref3.maybe;\n\n  var takeCb = function takeCb(input) {\n    if (input instanceof Error) {\n      cb(input, true);\n      return;\n    }\n\n    if (isEnd(input) && !maybe) {\n      cb(TERMINATE);\n      return;\n    }\n\n    cb(input);\n  };\n\n  try {\n    channel.take(takeCb, notUndef(pattern) ? matcher(pattern) : null);\n  } catch (err) {\n    cb(err, true);\n    return;\n  }\n\n  cb.cancel = takeCb.cancel;\n}\n\nfunction runCallEffect(env, _ref4, cb, _ref5) {\n  var context = _ref4.context,\n      fn = _ref4.fn,\n      args = _ref4.args;\n  var task = _ref5.task;\n\n  // catch synchronous failures; see #152\n  try {\n    var result = fn.apply(context, args);\n\n    if (promise(result)) {\n      resolvePromise(result, cb);\n      return;\n    }\n\n    if (iterator(result)) {\n      // resolve iterator\n      proc(env, result, task.context, current, getMetaInfo(fn),\n      /* isRoot */\n      false, cb);\n      return;\n    }\n\n    cb(result);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runCPSEffect(env, _ref6, cb) {\n  var context = _ref6.context,\n      fn = _ref6.fn,\n      args = _ref6.args;\n\n  // CPS (ie node style functions) can define their own cancellation logic\n  // by setting cancel field on the cb\n  // catch synchronous failures; see #152\n  try {\n    var cpsCb = function cpsCb(err, res) {\n      if (undef(err)) {\n        cb(res);\n      } else {\n        cb(err, true);\n      }\n    };\n\n    fn.apply(context, args.concat(cpsCb));\n\n    if (cpsCb.cancel) {\n      cb.cancel = cpsCb.cancel;\n    }\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runForkEffect(env, _ref7, cb, _ref8) {\n  var context = _ref7.context,\n      fn = _ref7.fn,\n      args = _ref7.args,\n      detached = _ref7.detached;\n  var parent = _ref8.task;\n  var taskIterator = createTaskIterator({\n    context: context,\n    fn: fn,\n    args: args\n  });\n  var meta = getIteratorMetaInfo(taskIterator, fn);\n  immediately(function () {\n    var child = proc(env, taskIterator, parent.context, current, meta, detached, undefined);\n\n    if (detached) {\n      cb(child);\n    } else {\n      if (child.isRunning()) {\n        parent.queue.addTask(child);\n        cb(child);\n      } else if (child.isAborted()) {\n        parent.queue.abort(child.error());\n      } else {\n        cb(child);\n      }\n    }\n  }); // Fork effects are non cancellables\n}\n\nfunction runJoinEffect(env, taskOrTasks, cb, _ref9) {\n  var task = _ref9.task;\n\n  var joinSingleTask = function joinSingleTask(taskToJoin, cb) {\n    if (taskToJoin.isRunning()) {\n      var joiner = {\n        task: task,\n        cb: cb\n      };\n\n      cb.cancel = function () {\n        if (taskToJoin.isRunning()) remove(taskToJoin.joiners, joiner);\n      };\n\n      taskToJoin.joiners.push(joiner);\n    } else {\n      if (taskToJoin.isAborted()) {\n        cb(taskToJoin.error(), true);\n      } else {\n        cb(taskToJoin.result());\n      }\n    }\n  };\n\n  if (array$1(taskOrTasks)) {\n    if (taskOrTasks.length === 0) {\n      cb([]);\n      return;\n    }\n\n    var childCallbacks = createAllStyleChildCallbacks(taskOrTasks, cb);\n    taskOrTasks.forEach(function (t, i) {\n      joinSingleTask(t, childCallbacks[i]);\n    });\n  } else {\n    joinSingleTask(taskOrTasks, cb);\n  }\n}\n\nfunction cancelSingleTask(taskToCancel) {\n  if (taskToCancel.isRunning()) {\n    taskToCancel.cancel();\n  }\n}\n\nfunction runCancelEffect(env, taskOrTasks, cb, _ref10) {\n  var task = _ref10.task;\n\n  if (taskOrTasks === SELF_CANCELLATION) {\n    cancelSingleTask(task);\n  } else if (array$1(taskOrTasks)) {\n    taskOrTasks.forEach(cancelSingleTask);\n  } else {\n    cancelSingleTask(taskOrTasks);\n  }\n\n  cb(); // cancel effects are non cancellables\n}\n\nfunction runAllEffect(env, effects, cb, _ref11) {\n  var digestEffect = _ref11.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n\n  if (keys.length === 0) {\n    cb(array$1(effects) ? [] : {});\n    return;\n  }\n\n  var childCallbacks = createAllStyleChildCallbacks(effects, cb);\n  keys.forEach(function (key) {\n    digestEffect(effects[key], effectId, childCallbacks[key], key);\n  });\n}\n\nfunction runRaceEffect(env, effects, cb, _ref12) {\n  var digestEffect = _ref12.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n  var response = array$1(effects) ? createEmptyArray(keys.length) : {};\n  var childCbs = {};\n  var completed = false;\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        // Race Auto cancellation\n        cb.cancel();\n        cb(res, isErr);\n      } else {\n        cb.cancel();\n        completed = true;\n        response[key] = res;\n        cb(response);\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCbs[key] = chCbAtKey;\n  });\n\n  cb.cancel = function () {\n    // prevents unnecessary cancellation\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCbs[key].cancel();\n      });\n    }\n  };\n\n  keys.forEach(function (key) {\n    if (completed) {\n      return;\n    }\n\n    digestEffect(effects[key], effectId, childCbs[key], key);\n  });\n}\n\nfunction runSelectEffect(env, _ref13, cb) {\n  var selector = _ref13.selector,\n      args = _ref13.args;\n\n  try {\n    var state = selector.apply(void 0, [env.getState()].concat(args));\n    cb(state);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runChannelEffect(env, _ref14, cb) {\n  var pattern = _ref14.pattern,\n      buffer = _ref14.buffer;\n  var chan = channel(buffer);\n  var match = matcher(pattern);\n\n  var taker = function taker(action) {\n    if (!isEnd(action)) {\n      env.channel.take(taker, match);\n    }\n\n    chan.put(action);\n  };\n\n  var close = chan.close;\n\n  chan.close = function () {\n    taker.cancel();\n    close();\n  };\n\n  env.channel.take(taker, match);\n  cb(chan);\n}\n\nfunction runCancelledEffect(env, data, cb, _ref15) {\n  var task = _ref15.task;\n  cb(task.isCancelled());\n}\n\nfunction runFlushEffect(env, channel, cb) {\n  channel.flush(cb);\n}\n\nfunction runGetContextEffect(env, prop, cb, _ref16) {\n  var task = _ref16.task;\n  cb(task.context[prop]);\n}\n\nfunction runSetContextEffect(env, props, cb, _ref17) {\n  var task = _ref17.task;\n  assignWithSymbols(task.context, props);\n  cb();\n}\n\nvar effectRunnerMap = (_effectRunnerMap = {}, _effectRunnerMap[TAKE] = runTakeEffect, _effectRunnerMap[PUT] = runPutEffect, _effectRunnerMap[ALL] = runAllEffect, _effectRunnerMap[RACE] = runRaceEffect, _effectRunnerMap[CALL] = runCallEffect, _effectRunnerMap[CPS] = runCPSEffect, _effectRunnerMap[FORK] = runForkEffect, _effectRunnerMap[JOIN] = runJoinEffect, _effectRunnerMap[CANCEL$1] = runCancelEffect, _effectRunnerMap[SELECT] = runSelectEffect, _effectRunnerMap[ACTION_CHANNEL] = runChannelEffect, _effectRunnerMap[CANCELLED$1] = runCancelledEffect, _effectRunnerMap[FLUSH] = runFlushEffect, _effectRunnerMap[GET_CONTEXT] = runGetContextEffect, _effectRunnerMap[SET_CONTEXT] = runSetContextEffect, _effectRunnerMap);\n\n/**\n Used to track a parent task and its forks\n In the fork model, forked tasks are attached by default to their parent\n We model this using the concept of Parent task && main Task\n main task is the main flow of the current Generator, the parent tasks is the\n aggregation of the main tasks + all its forked tasks.\n Thus the whole model represents an execution tree with multiple branches (vs the\n linear execution tree in sequential (non parallel) programming)\n\n A parent tasks has the following semantics\n - It completes if all its forks either complete or all cancelled\n - If it's cancelled, all forks are cancelled as well\n - It aborts if any uncaught error bubbles up from forks\n - If it completes, the return value is the one returned by the main task\n **/\n\nfunction forkQueue(mainTask, onAbort, cont) {\n  var tasks = [];\n  var result;\n  var completed = false;\n  addTask(mainTask);\n\n  var getTasks = function getTasks() {\n    return tasks;\n  };\n\n  function abort(err) {\n    onAbort();\n    cancelAll();\n    cont(err, true);\n  }\n\n  function addTask(task) {\n    tasks.push(task);\n\n    task.cont = function (res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      remove(tasks, task);\n      task.cont = noop;\n\n      if (isErr) {\n        abort(res);\n      } else {\n        if (task === mainTask) {\n          result = res;\n        }\n\n        if (!tasks.length) {\n          completed = true;\n          cont(result);\n        }\n      }\n    };\n  }\n\n  function cancelAll() {\n    if (completed) {\n      return;\n    }\n\n    completed = true;\n    tasks.forEach(function (t) {\n      t.cont = noop;\n      t.cancel();\n    });\n    tasks = [];\n  }\n\n  return {\n    addTask: addTask,\n    cancelAll: cancelAll,\n    abort: abort,\n    getTasks: getTasks\n  };\n}\n\n// there can be only a single saga error created at any given moment\n\nfunction formatLocation(fileName, lineNumber) {\n  return fileName + \"?\" + lineNumber;\n}\n\nfunction effectLocationAsString(effect) {\n  var location = getLocation(effect);\n\n  if (location) {\n    var code = location.code,\n        fileName = location.fileName,\n        lineNumber = location.lineNumber;\n    var source = code + \"  \" + formatLocation(fileName, lineNumber);\n    return source;\n  }\n\n  return '';\n}\n\nfunction sagaLocationAsString(sagaMeta) {\n  var name = sagaMeta.name,\n      location = sagaMeta.location;\n\n  if (location) {\n    return name + \"  \" + formatLocation(location.fileName, location.lineNumber);\n  }\n\n  return name;\n}\n\nfunction cancelledTasksAsString(sagaStack) {\n  var cancelledTasks = flatMap(function (i) {\n    return i.cancelledTasks;\n  }, sagaStack);\n\n  if (!cancelledTasks.length) {\n    return '';\n  }\n\n  return ['Tasks cancelled due to error:'].concat(cancelledTasks).join('\\n');\n}\n\nvar crashedEffect = null;\nvar sagaStack = [];\nvar addSagaFrame = function addSagaFrame(frame) {\n  frame.crashedEffect = crashedEffect;\n  sagaStack.push(frame);\n};\nvar clear = function clear() {\n  crashedEffect = null;\n  sagaStack.length = 0;\n}; // this sets crashed effect for the soon-to-be-reported saga frame\n// this slightly streatches the singleton nature of this module into wrong direction\n// as it's even less obvious what's the data flow here, but it is what it is for now\n\nvar setCrashedEffect = function setCrashedEffect(effect) {\n  crashedEffect = effect;\n};\n/**\n  @returns {string}\n\n  @example\n  The above error occurred in task errorInPutSaga {pathToFile}\n  when executing effect put({type: 'REDUCER_ACTION_ERROR_IN_PUT'}) {pathToFile}\n      created by fetchSaga {pathToFile}\n      created by rootSaga {pathToFile}\n*/\n\nvar toString = function toString() {\n  var firstSaga = sagaStack[0],\n      otherSagas = sagaStack.slice(1);\n  var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;\n  var errorMessage = \"The above error occurred in task \" + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? \" \\n when executing effect \" + crashedEffectLocation : '');\n  return [errorMessage].concat(otherSagas.map(function (s) {\n    return \"    created by \" + sagaLocationAsString(s.meta);\n  }), [cancelledTasksAsString(sagaStack)]).join('\\n');\n};\n\nfunction newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {\n  var _task;\n\n  if (cont === void 0) {\n    cont = noop;\n  }\n\n  var status = RUNNING;\n  var taskResult;\n  var taskError;\n  var deferredEnd = null;\n  var cancelledDueToErrorTasks = [];\n  var context = Object.create(parentContext);\n  var queue = forkQueue(mainTask, function onAbort() {\n    cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function (t) {\n      return t.meta.name;\n    }));\n  }, end);\n  /**\n   This may be called by a parent generator to trigger/propagate cancellation\n   cancel all pending tasks (including the main task), then end the current task.\n    Cancellation propagates down to the whole execution tree held by this Parent task\n   It's also propagated to all joiners of this task and their execution tree/joiners\n    Cancellation is noop for terminated/Cancelled tasks tasks\n   **/\n\n  function cancel() {\n    if (status === RUNNING) {\n      // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped\n      // effects in the iterator's finally block will still be executed\n      status = CANCELLED;\n      queue.cancelAll(); // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners\n\n      end(TASK_CANCEL, false);\n    }\n  }\n\n  function end(result, isErr) {\n    if (!isErr) {\n      // The status here may be RUNNING or CANCELLED\n      // If the status is CANCELLED, then we do not need to change it here\n      if (result === TASK_CANCEL) {\n        status = CANCELLED;\n      } else if (status !== CANCELLED) {\n        status = DONE;\n      }\n\n      taskResult = result;\n      deferredEnd && deferredEnd.resolve(result);\n    } else {\n      status = ABORTED;\n      addSagaFrame({\n        meta: meta,\n        cancelledTasks: cancelledDueToErrorTasks\n      });\n\n      if (task.isRoot) {\n        var sagaStack = toString(); // we've dumped the saga stack to string and are passing it to user's code\n        // we know that it won't be needed anymore and we need to clear it\n\n        clear();\n        env.onError(result, {\n          sagaStack: sagaStack\n        });\n      }\n\n      taskError = result;\n      deferredEnd && deferredEnd.reject(result);\n    }\n\n    task.cont(result, isErr);\n    task.joiners.forEach(function (joiner) {\n      joiner.cb(result, isErr);\n    });\n    task.joiners = null;\n  }\n\n  function setContext(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('task', props));\n    }\n\n    assignWithSymbols(context, props);\n  }\n\n  function toPromise() {\n    if (deferredEnd) {\n      return deferredEnd.promise;\n    }\n\n    deferredEnd = deferred();\n\n    if (status === ABORTED) {\n      deferredEnd.reject(taskError);\n    } else if (status !== RUNNING) {\n      deferredEnd.resolve(taskResult);\n    }\n\n    return deferredEnd.promise;\n  }\n\n  var task = (_task = {}, _task[TASK] = true, _task.id = parentEffectId, _task.meta = meta, _task.isRoot = isRoot, _task.context = context, _task.joiners = [], _task.queue = queue, _task.cancel = cancel, _task.cont = cont, _task.end = end, _task.setContext = setContext, _task.toPromise = toPromise, _task.isRunning = function isRunning() {\n    return status === RUNNING;\n  }, _task.isCancelled = function isCancelled() {\n    return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;\n  }, _task.isAborted = function isAborted() {\n    return status === ABORTED;\n  }, _task.result = function result() {\n    return taskResult;\n  }, _task.error = function error() {\n    return taskError;\n  }, _task);\n  return task;\n}\n\nfunction proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {\n  if (process.env.NODE_ENV !== 'production' && iterator$1[asyncIteratorSymbol]) {\n    throw new Error(\"redux-saga doesn't support async generators, please use only regular ones\");\n  }\n\n  var finalRunEffect = env.finalizeRunEffect(runEffect);\n  /**\n    Tracks the current effect cancellation\n    Each time the generator progresses. calling runEffect will set a new value\n    on it. It allows propagating cancellation to child effects\n  **/\n\n  next.cancel = noop;\n  /** Creates a main task to track the main flow */\n\n  var mainTask = {\n    meta: meta,\n    cancel: cancelMain,\n    status: RUNNING\n  };\n  /**\n   Creates a new task descriptor for this generator.\n   A task is the aggregation of it's mainTask and all it's forked tasks.\n   **/\n\n  var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);\n  var executingContext = {\n    task: task,\n    digestEffect: digestEffect\n  };\n  /**\n    cancellation of the main task. We'll simply resume the Generator with a TASK_CANCEL\n  **/\n\n  function cancelMain() {\n    if (mainTask.status === RUNNING) {\n      mainTask.status = CANCELLED;\n      next(TASK_CANCEL);\n    }\n  }\n  /**\n    attaches cancellation logic to this task's continuation\n    this will permit cancellation to propagate down the call chain\n  **/\n\n\n  if (cont) {\n    cont.cancel = task.cancel;\n  } // kicks up the generator\n\n\n  next(); // then return the task descriptor to the caller\n\n  return task;\n  /**\n   * This is the generator driver\n   * It's a recursive async/continuation function which calls itself\n   * until the generator terminates or throws\n   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.\n   * @param {boolean} isErr - the flag shows if effect finished with an error\n   *\n   * receives either (command | effect result, false) or (any thrown thing, true)\n   */\n\n  function next(arg, isErr) {\n    try {\n      var result;\n\n      if (isErr) {\n        result = iterator$1.throw(arg); // user handled the error, we can clear bookkept values\n\n        clear();\n      } else if (shouldCancel(arg)) {\n        /**\n          getting TASK_CANCEL automatically cancels the main task\n          We can get this value here\n           - By cancelling the parent task manually\n          - By joining a Cancelled task\n        **/\n        mainTask.status = CANCELLED;\n        /**\n          Cancels the current effect; this will propagate the cancellation down to any called tasks\n        **/\n\n        next.cancel();\n        /**\n          If this Generator has a `return` method then invokes it\n          This will jump to the finally block\n        **/\n\n        result = func(iterator$1.return) ? iterator$1.return(TASK_CANCEL) : {\n          done: true,\n          value: TASK_CANCEL\n        };\n      } else if (shouldTerminate(arg)) {\n        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)\n        result = func(iterator$1.return) ? iterator$1.return() : {\n          done: true\n        };\n      } else {\n        result = iterator$1.next(arg);\n      }\n\n      if (!result.done) {\n        digestEffect(result.value, parentEffectId, next);\n      } else {\n        /**\n          This Generator has ended, terminate the main task and notify the fork queue\n        **/\n        if (mainTask.status !== CANCELLED) {\n          mainTask.status = DONE;\n        }\n\n        mainTask.cont(result.value);\n      }\n    } catch (error) {\n      if (mainTask.status === CANCELLED) {\n        throw error;\n      }\n\n      mainTask.status = ABORTED;\n      mainTask.cont(error, true);\n    }\n  }\n\n  function runEffect(effect, effectId, currCb) {\n    /**\n      each effect runner must attach its own logic of cancellation to the provided callback\n      it allows this generator to propagate cancellation downward.\n       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]\n      And the setup must occur before calling the callback\n       This is a sort of inversion of control: called async functions are responsible\n      of completing the flow by calling the provided continuation; while caller functions\n      are responsible for aborting the current flow by calling the attached cancel function\n       Library users can attach their own cancellation logic to promises by defining a\n      promise[CANCEL] method in their returned promises\n      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect\n    **/\n    if (promise(effect)) {\n      resolvePromise(effect, currCb);\n    } else if (iterator(effect)) {\n      // resolve iterator\n      proc(env, effect, task.context, effectId, meta,\n      /* isRoot */\n      false, currCb);\n    } else if (effect && effect[IO]) {\n      var effectRunner = effectRunnerMap[effect.type];\n      effectRunner(env, effect.payload, currCb, executingContext);\n    } else {\n      // anything else returned as is\n      currCb(effect);\n    }\n  }\n\n  function digestEffect(effect, parentEffectId, cb, label) {\n    if (label === void 0) {\n      label = '';\n    }\n\n    var effectId = nextSagaId();\n    env.sagaMonitor && env.sagaMonitor.effectTriggered({\n      effectId: effectId,\n      parentEffectId: parentEffectId,\n      label: label,\n      effect: effect\n    });\n    /**\n      completion callback and cancel callback are mutually exclusive\n      We can't cancel an already completed effect\n      And We can't complete an already cancelled effectId\n    **/\n\n    var effectSettled; // Completion callback passed to the appropriate effect runner\n\n    function currCb(res, isErr) {\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      cb.cancel = noop; // defensive measure\n\n      if (env.sagaMonitor) {\n        if (isErr) {\n          env.sagaMonitor.effectRejected(effectId, res);\n        } else {\n          env.sagaMonitor.effectResolved(effectId, res);\n        }\n      }\n\n      if (isErr) {\n        setCrashedEffect(effect);\n      }\n\n      cb(res, isErr);\n    } // tracks down the current cancel\n\n\n    currCb.cancel = noop; // setup cancellation logic on the parent cb\n\n    cb.cancel = function () {\n      // prevents cancelling an already completed effect\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      currCb.cancel(); // propagates cancel downward\n\n      currCb.cancel = noop; // defensive measure\n\n      env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);\n    };\n\n    finalRunEffect(effect, effectId, currCb);\n  }\n}\n\nvar RUN_SAGA_SIGNATURE = 'runSaga(options, saga, ...args)';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + \": saga argument must be a Generator function!\";\nfunction runSaga(_ref, saga) {\n  var _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      sagaMonitor = _ref.sagaMonitor,\n      effectMiddlewares = _ref.effectMiddlewares,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? logError : _ref$onError;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(saga, func, NON_GENERATOR_ERR);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator$1 = saga.apply(void 0, args);\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(iterator$1, iterator, NON_GENERATOR_ERR);\n  }\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let's fill-in any missing ones\n    sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || noop;\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || noop;\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || noop;\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || noop;\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || noop;\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || noop;\n    sagaMonitor.rootSagaStarted({\n      effectId: effectId,\n      saga: saga,\n      args: args\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (notUndef(dispatch)) {\n      check(dispatch, func, 'dispatch must be a function');\n    }\n\n    if (notUndef(getState)) {\n      check(getState, func, 'getState must be a function');\n    }\n\n    if (notUndef(effectMiddlewares)) {\n      var MIDDLEWARE_TYPE_ERROR = 'effectMiddlewares must be an array of functions';\n      check(effectMiddlewares, array$1, MIDDLEWARE_TYPE_ERROR);\n      effectMiddlewares.forEach(function (effectMiddleware) {\n        return check(effectMiddleware, func, MIDDLEWARE_TYPE_ERROR);\n      });\n    }\n\n    check(onError, func, 'onError passed to the redux-saga is not a function!');\n  }\n\n  var finalizeRunEffect;\n\n  if (effectMiddlewares) {\n    var middleware = compose.apply(void 0, effectMiddlewares);\n\n    finalizeRunEffect = function finalizeRunEffect(runEffect) {\n      return function (effect, effectId, currCb) {\n        var plainRunEffect = function plainRunEffect(eff) {\n          return runEffect(eff, effectId, currCb);\n        };\n\n        return middleware(plainRunEffect)(effect);\n      };\n    };\n  } else {\n    finalizeRunEffect = identity;\n  }\n\n  var env = {\n    channel: channel,\n    dispatch: wrapSagaDispatch(dispatch),\n    getState: getState,\n    sagaMonitor: sagaMonitor,\n    onError: onError,\n    finalizeRunEffect: finalizeRunEffect\n  };\n  return immediately(function () {\n    var task = proc(env, iterator$1, context, effectId, getMetaInfo(saga),\n    /* isRoot */\n    true, undefined);\n\n    if (sagaMonitor) {\n      sagaMonitor.effectResolved(effectId, task);\n    }\n\n    return task;\n  });\n}\n\nfunction sagaMiddlewareFactory(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      sagaMonitor = _ref.sagaMonitor,\n      options = _objectWithoutPropertiesLoose(_ref, [\"context\", \"channel\", \"sagaMonitor\"]);\n\n  var boundRunSaga;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel, channel$1, 'options.channel passed to the Saga middleware is not a channel');\n  }\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n    boundRunSaga = runSaga.bind(null, _extends({}, options, {\n      context: context,\n      channel: channel,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor\n    }));\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n\n        var result = next(action); // hit reducers\n\n        channel.put(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    if (process.env.NODE_ENV !== 'production' && !boundRunSaga) {\n      throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');\n    }\n\n    return boundRunSaga.apply(void 0, arguments);\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('sagaMiddleware', props));\n    }\n\n    assignWithSymbols(context, props);\n  };\n\n  return sagaMiddleware;\n}\n\nexport default sagaMiddlewareFactory;\nexport { END, channel, eventChannel, isEnd, multicastChannel, runSaga, stdChannel };\n","import createSagaMiddleware__default from '@redux-saga/core';\nexport * from '@redux-saga/core';\n\n\n\nexport default createSagaMiddleware__default;\n","import { CANCEL } from '@redux-saga/symbols';\n\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, ms, val);\n  });\n\n  promise[CANCEL] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\nexport default delayP;\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","exports.f = Object.getOwnPropertySymbols;\n","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = function isObject(arg) {\n  var type = typeof arg;\n  return Boolean(arg) && (type === 'object' || type === 'function');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","exports.f = require('./_wks');\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","import { logLevels } from './constants'\n\n/**\n * Helper function to validate a \"log level\" string before its used in the library.\n * @method checkLevel\n * @param  {string} level A log level provided by a user.\n * @return {string}       The log level as expected by the library.\n * @throws Will throw an error if the `level` parameter is invalid.\n */\nexport function checkLevel (level) {\n  // Ensure: is defined and is a string.\n  const upperLevel = level && level.toUpperCase && level.toUpperCase()\n\n  // Ensure: is a supported log level.\n  if (upperLevel && logLevels[upperLevel]) {\n    return logLevels[upperLevel]\n  } else {\n    throw new Error('Provided level is not a valid log level.')\n  }\n}\n\n/**\n * Helper function to validate a \"log handler\".\n * Basically just \"is function\" that throws an error if false.\n * @method checkHandler\n * @param  {Function} handler A log handler function, ideally.\n * @return {Function}         The same log handler function, ideally.\n * @throws Will throw an error if the `handler` provided is not a function.\n */\nexport function checkHandler (handler) {\n  if (handler && typeof handler === 'function') {\n    return handler\n  } else {\n    throw new Error('Provided log handler is not a function.')\n  }\n}\n","// Logs plugin.\nimport * as actionTypes from './actionTypes'\n\n/**\n * Action for setting a Logger's level.\n * @method setLevel\n * @param  {string} level  The level to be set.\n * @param  {string} [type] The type of Logger to set it for.\n */\nexport function setLevel (level, type) {\n  return {\n    type: actionTypes.SET_LEVEL,\n    payload: { level, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log level.\n * @method levelsChanged\n * @param  {Object} levelMap Mapping of logger type to level.\n * @return {Object}\n */\nexport function levelsChanged (levelMap) {\n  return {\n    type: actionTypes.LEVELS_CHANGE,\n    payload: levelMap\n  }\n}\n\n/**\n * Action for setting a Logger's handler.\n * @method setHandler\n * @param  {Function} handler A LogHandler function.\n * @param  {string}   [type]  The type of Logger to set it for.\n */\nexport function setHandler (handler, type) {\n  return {\n    type: actionTypes.SET_HANDLER,\n    payload: { handler, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log handler.\n * @method handlersChanged\n * @param  {Object} handlerMap Mapping of logger type to handler.\n * @return {Object}\n */\nexport function handlersChanged (handlerMap) {\n  return {\n    type: actionTypes.HANDLERS_CHANGE,\n    payload: handlerMap\n  }\n}\n","const prefix = '@@KANDY/LOGS/'\n\nexport const SET_LEVEL = prefix + 'SET_LEVEL'\nexport const LEVELS_CHANGE = prefix + 'LEVELS_CHANGE'\n\nexport const SET_HANDLER = prefix + 'SET_HANDLER'\nexport const HANDLERS_CHANGE = prefix + 'HANDLERS_CHANGE'\n","const PREFIX = '@@KANDY/'\n\nexport const EVENTS_ON = PREFIX + 'EVENTS_ON'\nexport const EVENTS_OFF = PREFIX + 'EVENTS_OFF'\nexport const EVENTS_SUBSCRIBE = PREFIX + 'EVENTS_SUBSCRIBE'\nexport const EVENTS_UNSUBSCRIBE = PREFIX + 'EVENTS_UNSUBSCRIBE'\nexport const EVENTS_ALIAS = PREFIX + 'EVENTS_ALIAS'\nexport const EVENTS_EMIT = PREFIX + 'EVENTS_EMIT'\nexport const MAP_EVENTS = PREFIX + 'MAP_EVENTS'\n","import * as localVideoActionsImport from './localVideo'\nimport * as mediaActionsImport from './media'\nimport * as devicesActionsImport from './devices'\nimport * as callsActionsImport from './calls'\nimport * as audioBridgeActionsImport from './audioBridge'\n\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\nexport const localVideoActions = localVideoActionsImport\nexport const mediaActions = mediaActionsImport\nexport const devicesActions = devicesActionsImport\nexport const callsActions = callsActionsImport\nexport const audioBridgeActions = audioBridgeActionsImport\n","import { cloneDeep, find } from 'lodash/fp'\n\n/**\n * Retrieves the config options provided by the call plugin.\n * @method getCallConfig\n * @return {Object}\n */\nexport function getCallConfig (state) {\n  return cloneDeep(state.config.call)\n}\n\n/**\n * Retrieves all calls in state.\n * @method getCalls\n * @param  {Object} state    Redux state.\n * @return {Array} Call objects.\n */\nexport function getCalls (state) {\n  return cloneDeep(state.call.calls)\n}\n\n/**\n * Retrieves a call from state with a specific call ID.\n * @method getCallById\n * @param  {Object}    state  Redux state.\n * @param  {string}    callId The ID of the call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallById (state, callId) {\n  return find(call => call.id === callId, getCalls(state))\n}\n\n/**\n * Retrieves custom parameters from a call with a specific call ID.\n * @method getCustomParametersById\n * @param  {Object}    state  Redux state.\n * @param  {string}    callId The ID of the call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCustomParametersById (state, callId) {\n  const call = find(call => call.id === callId, getCalls(state))\n  if (call && call.customParameters) {\n    return call.customParameters\n  }\n  return []\n}\n\n/**\n * Retrieves media devices available on the system.\n * @method getDevices\n * @param  {Object}    state  Redux state.\n * @return {Object}\n */\nexport function getDevices (state) {\n  return cloneDeep(state.call.devices)\n}\n\n/**\n * Retrieves media support information.\n * @method getMediaInfo\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getMediaInfo (state) {\n  return cloneDeep(state.call.media)\n}\n\n/**\n * Retrieves audio bridge information.\n * @method getAudioBridges\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getAudioBridges (state) {\n  return cloneDeep(state.call.audioBridges)\n}\n\n/**\n * Retrieve all calls currently part of an audio bridge.\n * @method getBridgeCalls\n * @param state\n * @param bridgeId\n * @return {Array} List of calls currently part of the specified audio bridge.\n */\nexport function getBridgeCalls (state, bridgeId) {\n  return cloneDeep(find(bridge => bridge.id === bridgeId, getAudioBridges(state)).calls)\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Represents a request to fetch call logs.\n * @method retrieveCallLogs\n * @param  {number} amount The number of records to retrieve.\n * @param  {number} offset Starting offset for records to retrieve.\n * @return {Object} A flux standard action.\n */\nexport function retrieveCallLogs (amount, offset) {\n  return {\n    type: actionTypes.FETCH_CALL_HISTORY,\n    payload: {\n      amount,\n      offset\n    }\n  }\n}\n\n/**\n * Represents a received response from fetching call logs.\n * @method retrieveCallLogsFinish\n * @param  {Object} $0\n * @param  {Object} $0.logs Retrieved call logs.\n * @param  {BasicError} $0.error  Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function retrieveCallLogsFinish ({ logs, error }) {\n  return {\n    type: actionTypes.FETCH_CALL_HISTORY_FINISH,\n    error: !!error,\n    payload: error || logs\n  }\n}\n\n/**\n * Represents a request to delete call logs.\n * @method removeCallLogs\n * @param  {number} recordId Which logs to delete.\n * @return {Object} A flux standard action.\n */\nexport function removeCallLogs (recordId) {\n  return {\n    type: actionTypes.DELETE_CALL_HISTORY,\n    payload: recordId\n  }\n}\n\n/**\n * Represents a received response from deleting call logs.\n * @method removeCallLogsFinish\n * @param  {Object} $0\n * @param  {number|string} $0.recordId The ID of the removed record. Can also be 'all'.\n * @param  {BasicError} $0.error  Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function removeCallLogsFinish ({ recordId, error }) {\n  return {\n    type: actionTypes.DELETE_CALL_HISTORY_FINISH,\n    error: !!error,\n    payload: error || recordId\n  }\n}\n\n/**\n * Represents a request to add a new entry to the call logs.\n * @method addCallLogEntry\n * @param  {Object} $0 The call log entry to add\n * @return {Object} A flux standard action.\n */\nexport function addCallLogEntry (logEntry) {\n  return {\n    type: actionTypes.ADD_CALL_HISTORY_ENTRY,\n    payload: logEntry\n  }\n}\n\n/**\n * Represents a call to set the cache in the call history\n * @method setCache\n * @param  {Object} $0 call log state to hydrate into app state\n * @return {Object} A flux standard action.\n */\nexport function setCache (data) {\n  return {\n    type: actionTypes.SET_CACHE,\n    payload: data\n  }\n}\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\n/**\n * Helper function for funneling all notification types into a single action.\n * @method notificationHelper\n * @param  {string} channel - The channel that the notification came from.\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nfunction notificationHelper (channel, notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION,\n    payload: notification,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents an application request to process a websocket notification.\n * @method websocketNotification\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function websocketNotification (notification, platform = platforms.LINK) {\n  return notificationHelper('WEBSOCKET', notification, platform)\n}\n\n/**\n * Represents an application request to process an external notification.\n * @method externalNotification\n * @param  {Object} notification\n * @param  {string} [channel='PUSH'] - The channel that the notification came from.\n * @return {Object} A flux standard action.\n */\nexport function externalNotification (notification, channel = 'PUSH', platform) {\n  // TODO: Are external notifications _only_ for Link?\n  return notificationHelper(channel.toUpperCase(), notification, platform)\n}\n\n/**\n * Represents a received notification.\n * @method notificationReceived\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function notificationReceived (notification, platform, channel) {\n  return {\n    type: actionTypes.NOTIFICATION_RECEIVED,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents a received notification.\n * @method processNotificationFinish\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function processNotificationFinish (notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION_FINISH,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method enableNotificationChannel\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} params\n * @param  {boolean} params.channelEnabled - Whether to enable the channel or not.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannel (channel, params = {}) {\n  return {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL,\n    payload: {\n      ...params\n    },\n    meta: {\n      channel\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerApplePushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerApplePushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'apple'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerAndroidPushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerAndroidPushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'google'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterApplePushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterApplePushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterAndroidPushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterAndroidPushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents the response of a change in a notification channel status.\n * @method enableNotificationChannelFinish\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} $1\n * @param  {Object} $1.params - Information about the channel change.\n * @param  {Object} $1.params.channelEnabled - Whether the channel was enabled or not.\n * @param  {Object} $1.error - Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannelFinish (channel, { params, error } = {}) {\n  var action = {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH,\n    meta: {\n      channel\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = new Error(error)\n    action.payload.channelEnabled = params.channelEnabled\n  } else {\n    action.payload = {\n      ...params\n    }\n  }\n\n  return action\n}\n","import * as messageActionsImport from './messages'\nimport * as convoActionsImport from './conversations'\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\n\n/**\n * The messaging plugin's actions are organized into three types:\n *  - message actions: those which act on message object,\n *  - convo actions: those which act on conversation objects,\n *  - group actions: those which manage groups.\n */\nexport const messageActions = messageActionsImport\nexport const convoActions = convoActionsImport\n","import { cloneDeep, isEqual } from 'lodash/fp'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to retrieve\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the config options provided by the messaging plugin.\n * @method getMessagingConfig\n * @return {Object}\n */\nexport function getMessagingConfig (state) {\n  return cloneDeep(state.config.messaging)\n}\n\n/**\n * Retrieves conversations from the store pertaining to messaging.\n * @method getConversations\n * @return {Object}\n */\nexport function getConversations (state) {\n  return cloneDeep(state.messaging.conversations)\n}\n\n/**\n * Retrieves the messages from the store pertaining to a specific messaging\n * conversation.\n * @method getMessages\n * @return {Object}\n */\nexport function getMessages (state, conversationId) {\n  return cloneDeep(state.messaging.conversations[conversationId].messages)\n}\n\n/**\n * Searches for a conversation by its destination, which represents the destination\n * for all messages being sent to this conversation from this instance of the SDK\n *\n * @param state\n * @param {Array} destination A subscriber handle or a comma-separated list\n * of subscriber handles\n * @param {string} type The type of conversation: can be one of 'im', 'sms' or 'group'\n * @returns {Object}\n */\nexport function findConversation (state, destination, type = 'im') {\n  return cloneDeep(\n    state.messaging.conversations.find(conversation => {\n      return isEqual(conversation.destination, destination) && conversation.type === type\n    })\n  )\n}\n\n/**\n * Searches for a member in a conversation and returns their name\n *\n * @param state\n * @param {string} destination A subscriber handle or a comma-separated list\n * of subscriber handles\n * @param id {number} User ID for the specific conversation member for whom we are searching\n * @returns {*}\n */\nexport function findMember (state, destination, id) {\n  const conv = state.messaging.conversations.find(conversation => conversation.destination === destination)\n  if (conv) {\n    return cloneDeep(conv.members.find(member => member.id === id))\n  }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var isArray = require('@stamp/is/array');\nvar isFunction = require('@stamp/is/function');\nvar isObject = require('@stamp/is/object');\nvar isStamp = require('@stamp/is/stamp');\nvar isComposable = require('@stamp/is/composable');\n\nvar assign = require('@stamp/core/assign');\nvar merge = require('@stamp/core/merge');\n\nvar slice = Array.prototype.slice;\n\n/**\n * Creates new factory instance.\n * @returns {Function} The new factory function.\n */\nfunction createFactory() {\n  return function Stamp(options) {\n    var descriptor = Stamp.compose || {};\n    // Next line was optimized for most JS VMs. Please, be careful here!\n    var obj = {__proto__: descriptor.methods}; // jshint ignore:line\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) return obj;\n\n    if (options === undefined) options = {};\n    var inits = descriptor.initializers;\n    var length = inits.length;\n    for (var i = 0; i < length; i += 1) {\n      var initializer = inits[i];\n      if (isFunction(initializer)) {\n        var returnedValue = initializer.call(obj, options,\n          {instance: obj, stamp: Stamp, args: slice.apply(arguments)});\n        obj = returnedValue === undefined ? obj : returnedValue;\n      }\n    }\n\n    return obj;\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {Descriptor} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Compose} composeFunction The \"compose\" function implementation.\n * @returns {Stamp}\n */\nfunction createStamp(descriptor, composeFunction) {\n  var Stamp = createFactory();\n\n  if (descriptor.staticDeepProperties) {\n    merge(Stamp, descriptor.staticDeepProperties);\n  }\n  if (descriptor.staticProperties) {\n    assign(Stamp, descriptor.staticProperties);\n  }\n  if (descriptor.staticPropertyDescriptors) {\n    Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors);\n  }\n\n  var composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose() {\n    'use strict'; // to make sure `this` is not pointing to `global` or `window`\n    return composeImplementation.apply(this, arguments);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\nfunction concatAssignFunctions(dstObject, srcArray, propName) {\n  if (!isArray(srcArray)) return;\n\n  var length = srcArray.length;\n  var dstArray = dstObject[propName] || [];\n  dstObject[propName] = dstArray;\n  for (var i = 0; i < length; i += 1) {\n    var fn = srcArray[i];\n    if (isFunction(fn) && dstArray.indexOf(fn) < 0) {\n      dstArray.push(fn);\n    }\n  }\n}\n\n\nfunction combineProperties(dstObject, srcObject, propName, action) {\n  if (!isObject(srcObject[propName])) return;\n  if (!isObject(dstObject[propName])) dstObject[propName] = {};\n  action(dstObject[propName], srcObject[propName]);\n}\n\nfunction deepMergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, merge);\n}\nfunction mergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, assign);\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {Descriptor} dstDescriptor The descriptor object to merge into.\n * @param {Composable} [srcComposable] The composable\n * (either descriptor or stamp) to merge data form.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  var srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n\n  mergeAssign(dstDescriptor, srcDescriptor, 'methods');\n  mergeAssign(dstDescriptor, srcDescriptor, 'properties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'propertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticProperties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'staticDeepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticPropertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'configuration');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepConfiguration');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.initializers, 'initializers');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.composers, 'composers');\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @typedef {Function} Compose\n * @param {...(Composable)} [arguments] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nmodule.exports = function compose() {\n  'use strict'; // to make sure `this` is not pointing to `global` or `window`\n  var descriptor = {};\n  var composables = [];\n  if (isComposable(this)) {\n    mergeComposable(descriptor, this);\n    composables.push(this);\n  }\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (isComposable(arg)) {\n      mergeComposable(descriptor, arg);\n      composables.push(arg);\n    }\n  }\n\n  var stamp = createStamp(descriptor, compose);\n\n  var composers = descriptor.composers;\n  if (isArray(composers) && composers.length > 0) {\n    for (var j = 0; j < composers.length; j += 1) {\n      var composer = composers[j];\n      var returnedValue = composer({stamp: stamp, composables: composables});\n      stamp = isStamp(returnedValue) ? returnedValue : stamp;\n    }\n  }\n\n  return stamp;\n};\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Array<Function>} [composers] List of callbacks called each time a composition happens\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n\n/**\n * A composable object - stamp or descriptor\n * @typedef {Stamp|Descriptor} Composable\n */\n\n","module.exports = Array.isArray;\n","module.exports = function isFunction(arg) {\n  return typeof arg === 'function';\n};\n","module.exports = require('./_hide');\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","import createManager from './logManager'\nimport defaultLogFormatter from './logFormatter'\nimport { logLevels as levelImport } from './constants'\n\n/**\n * Package main.\n */\n\n// Main export is the manager's factory function.\nexport default createManager\n\n// Named export for the log level constants the package uses / expects.\nexport const logLevels = levelImport\n\n// Default log formatter used by the defaultLogHandler\nexport const logFormatter = defaultLogFormatter\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","/**\n * Default function for the SDK to use for log formatting.\n *    Uses entry information to form a prefix.\n * @method defaultLogFormatter\n * @param  {LogEntry} entry\n */\nexport default function defaultLogFormatter (entry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = entry\n\n  // Find a short name to reference which Logger this log is from.\n  //    This is mostly to cut down the ID if it's too long for a human to read.\n  const shortId = target.id && target.id.length > 8 ? target.id.substring(0, 6) : target.id\n  const shortName = shortId ? `${target.type}/${shortId}` : target.type\n\n  const logInfo = `${timestamp} - ${shortName} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const log = entry.messages[0]\n\n  return `${logInfo} - ${log}`\n}\n","import defaultActionHandler from './actions/actionHandler'\n\n/**\n * Configuration options for the Logs feature.\n *\n * The SDK will log information about the operations it is performing. The\n *    amount of information will depend on how the Logs feature is configured.\n *\n * The format of logs can also be customized by providing a\n *    {@link logger.LogHandler LogHandler}. This function will receive a\n *    {@link logger.LogEntry LogEntry} which it can handle as it sees fit. By\n *    default, the SDK will log information to the console. For more\n *    information, see the {@link logger Logs feature} description.\n *\n * @public\n * @static\n * @name config.logs\n * @memberof config\n * @requires logs\n * @instance\n * @param {Object} logs Logs configs.\n * @param {string} [logs.logLevel='debug'] Log level to be set. See {@link logger.levels}.\n * @param {logger.LogHandler} [logs.handler] The function to receive log entries from the\n *    SDK. If not provided, a default handler will be used that logs entries\n *    to the console.\n * @param  {boolean} [logs.enableFcsLogs=true] Enable the detailed call logger\n *    for v3.X. Requires log level debug.\n * @param {Object|boolean} [logs.logActions=false] Options specifically for action logs when\n *    logLevel is at DEBUG+ levels. Set this to false to not output action logs.\n * @param {logger.LogHandler} [logs.logActions.handler] The function to receive action\n *    log entries from the SDK. If not provided, a default handler will be used\n *    that logs actions to the console.\n * @param {boolean} [logs.logActions.actionOnly=false] Only output information\n *    about the action itself. Omits the SDK context for when it occurred.\n * @param {boolean} [logs.logActions.collapsed=false] Whether logs should be\n *    minimized when initially output. The full log is still output and can be\n *    inspected on the console.\n * @param {boolean} [logs.logActions.diff=false] Include a diff of what SDK\n *    context was changed by the action.\n * @param {string}  [logs.logActions.level='debug'] Log level to be set\n *    on the action logs\n * @param {boolean} [logs.logActions.exposePayloads=true] Allow action payloads\n *    to be exposed in the logs, potentially displaying sensitive information.\n */\nexport const defaultOptions = {\n  logLevel: 'debug',\n  handler: undefined,\n  enableFcsLogs: true,\n  logActions: false\n}\n\nexport const partialDefaultLogActions = {\n  handler: defaultActionHandler,\n  actionOnly: false,\n  collapsed: false,\n  diff: false,\n  level: 'debug',\n  exposePayloads: true\n}\n/*\n * TODO: Figure out a way to work around this.\n * Can't use validation in logging because validation uses logging to output errors.\n * Circular dependency, have to refactor.\n * Code:\n ```javascript\n// Parse and/or Validate\n// import { enums, validation as v8n, parse } from '../common/validation'\nconst defaultValidation = v8n.schema({\n  logLevel: enums(['silent', 'error', 'warn', 'info', 'debug']),\n  handler: v8n.optional(v8n.function()),\n  enableFcsLogs: v8n.boolean(),\n  logActions: v8n.optional(\n    v8n.passesAnyOf(\n      v8n.schema({\n        handler: v8n.optional(v8n.function()),\n        actionOnly: v8n.boolean(),\n        collapsed: v8n.boolean(),\n        diff: v8n.boolean(),\n        exposePayloads: v8n.boolean()\n      }),\n      // OR\n      v8n.boolean()\n    )\n  )\n})\n\nexport const parseLogConfig = parse('logger', defaultValidation)\n```\n*/\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","const PREFIX = '@@KANDY/'\n\nexport const CONFIG_UPDATE = PREFIX + 'CONFIG_UPDATE'\n\nexport const SET_SDP_HANDLERS = PREFIX + 'SET_SDP_HANDLERS'\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves configuration Object stored in state\n *\n * @method getConfiguration\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getConfiguration (state) {\n  return cloneDeep(state.config)\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Creates a connect action that takes a credentials object.\n *\n * @method connect\n * @param {Object} credentials The credentials to pass to the connect action.\n * @param {Object} [options] Any parameters that aren't credentials.\n * @return {Object} A flux standard action.\n */\nexport function connect (credentials, options) {\n  return {\n    type: actionTypes.CONNECT,\n    payload: { credentials, options },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a set connection info action that takes a connection and user info object\n *\n * @method setConnectionInfo\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @return {Object} A flux standard action.\n */\nexport function setConnectionInfo ({ userInfo, connection }, platform) {\n  return {\n    type: actionTypes.SET_CONNECTION_INFO,\n    payload: { userInfo, connection },\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Connection occurred action.\n * Signifies that a connection has been made to a service, but that the connection\n *      workflow has not finished yet. Intended for use in scenarios where the\n *      workflow connects to multiple services, to represent the \"intermediate\"\n *      connections.\n *\n * @method connectionOccurred\n * @param  {Object} $0\n * @param  {Object} $0.subscription\n * @param  {Object} $0.connection\n * @param  {Object} [$0.error] An error message. Only present if an error occurred.\n * @param  {string} platform The backend platform used for the connection.\n * @return {Object} A flux standard action.\n */\nexport function connectionOccurred ({ subscription, connection, error }, platform) {\n  // TODO: Is this action used anywhere?\n  var action = {\n    type: actionTypes.CONNECTION_OCCURRED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, connection }\n  }\n\n  return action\n}\n\n/**\n * Create a connect finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method connectFinished\n * @param {Object} $0\n * @param {Object} $0.subscription A subscription object. Contains what services to subscribe to.\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @param {boolean} isSSO Boolean for whether the current connection scenario is SSO or not.\n * @return {Object} A flux standard action.\n */\nexport function connectFinished ({ subscription, userInfo, connection, error }, platform, isSSO = false) {\n  var action = {\n    type: actionTypes.CONNECT_FINISHED,\n    meta: {\n      platform,\n      isSSO,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, userInfo, connection }\n  }\n\n  return action\n}\n\n/**\n * Creates a getUserDetails action\n *\n * @method getUserDetails\n * @return {Object} A flux standard action.\n */\nexport function getUserDetails () {\n  return { type: actionTypes.GET_USER_DETAILS }\n}\n\n/**\n * Create a user details received action\n *\n * @method userDetailsReceived\n * @param  {Object} userDetailsResponse An object representing the REST response of a user details request.\n * @return {Object} A flux standard action.\n */\nexport function userDetailsReceived (userDetailsResponse) {\n  var action = {\n    type: actionTypes.USER_DETAILS_RECEIVED,\n    payload: {\n      firstName: userDetailsResponse.firstName || userDetailsResponse.user_first_name,\n      user_first_name: userDetailsResponse.user_first_name || userDetailsResponse.firstName,\n      lastName: userDetailsResponse.lastName || userDetailsResponse.user_last_name,\n      user_last_name: userDetailsResponse.user_last_name || userDetailsResponse.lastName,\n      photoURL: userDetailsResponse.photoURL,\n      emailAddress: userDetailsResponse.emailAddress || userDetailsResponse.user_email,\n      user_email: userDetailsResponse.user_email || userDetailsResponse.emailAddress,\n      username: userDetailsResponse.username\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a disconnect action.\n *\n * @method disconnect\n * @return {Object} A flux standard action.\n */\nexport function disconnect () {\n  return { type: actionTypes.DISCONNECT }\n}\n\n/**\n * Create a disconnectFinished action that possibly takes an error object on failure.\n *\n * @method disconnectFinished\n * @param {Object} params\n * @param {string} [params.error] An error message. Only present if an error occurred.\n * @param {string} [params.reason] Why the disconnectFinished action is being dispatched.\n * @param {number} [params.retryAfter] The time (in seconds) when SDK should retry the operation.\n * @return {Object} A flux standard action.\n */\nexport function disconnectFinished ({ error, reason, retryAfter } = {}) {\n  const action = {\n    type: actionTypes.DISCONNECT_FINISHED,\n    payload: {}\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  if (reason) {\n    action.payload.reason = reason\n  }\n\n  if (retryAfter) {\n    action.payload.retryAfter = retryAfter\n  }\n  return action\n}\n\n/**\n * Action creator representing the finish of a resubscription request.\n * Payload mirrors a connect finished action.\n *\n * @method resubscribeFinished\n * @param {Object} $0\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} [$0.attemptNum] The attempt number of this resubscription.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function resubscribeFinished ({ error, attemptNum }, platform) {\n  var action = {\n    type: actionTypes.RESUBSCRIPTION_FINISHED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n    action.payload.attemptNum = attemptNum\n  } else {\n    action.payload = {\n      attemptNum\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a refreshTokens action with the given credentials as a payload.\n *\n * @method refreshTokens\n * @param {Object} credentials A credentials object containing tokens.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokens (credentials) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS,\n    payload: { credentials }\n  }\n  return action\n}\n\n/**\n * Creates a refreshTokensFinished action with connection and platform information.\n * Optionally includes an error.\n *\n * @method refreshTokensFinished\n * @param {Object} $0\n * @param {Object} [$0.error] An optional error object.\n * @param {Object} $0.connection Connection information.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokensFinished ({ error, connection }, platform) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS_FINISHED,\n    payload: { connection },\n    meta: { platform }\n  }\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  return action\n}\n\n/**\n * Represents a request to update a current subscription.\n * @method updateSubscription\n * @param  {Object} subscription Information used to update subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscription (subscription) {\n  return {\n    type: actionTypes.UPDATE_SUBSCRIPTION,\n    payload: subscription\n  }\n}\n\n/**\n * Represents that the current subscription has been updated.\n * @method updateSubscriptionFinished\n * @param  {Object} $0\n * @param  {Object} $0.subscription New subscription state to be updated.\n * @param  {Object} [$0.error] Error object, in the case of an error.\n * @param  {string} platform The backend platform used for the subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscriptionFinished ({ subscription, error }, platform) {\n  var action = {\n    type: actionTypes.UPDATE_SUBSCRIPTION_FINISH,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = subscription\n  }\n  return action\n}\n\n/**\n * Sets the token information in the state.\n * @method setTokens\n * @param {Object} params Dictionary object of parameters.\n * @param {string} accessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} idToken An identity token retrieved using the authentication APIs of the platform.\n * @return {Object} A flux standard action.\n */\nexport function setTokens ({ accessToken, idToken }) {\n  return {\n    type: actionTypes.SET_TOKEN,\n    payload: { accessToken, idToken }\n  }\n}\n\n/**\n * Creates a setCredentials action that takes a credentials object.\n *\n * @method setCredentials\n * @param {Object} $0\n * @param {string} $0.username The username.\n * @param {string} $0.password The user's password.\n * @param {string} $0.authname The user's authorization name.\n * @param {string} $0.hmacToken An HMAC token for the user with the provided user ID.\n * @param {string} $0.bearerAccessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} $0.idToken An identity token retrieved using the authentication APIs of the platform.\n * @return {Object} A flux standard action.\n */\nexport function setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken }) {\n  return {\n    type: actionTypes.SET_CREDENTIALS,\n    payload: { username, password, authname, hmacToken, bearerAccessToken, idToken },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a setCredentials finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method setCredentialsFinished\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function setCredentialsFinished ({ userInfo, connection, error }, platform) {\n  var action = {\n    type: actionTypes.SET_CREDENTIALS_FINISH,\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { userInfo, connection }\n  }\n\n  return action\n}\n\n/**\n * Creates an updateToken action with connection and platform information.\n *\n * @method updateToken\n * @param {string} token A session id retrieved after a successful subscription on the platform.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function updateHmacToken (token, platform) {\n  var action = {\n    type: actionTypes.UPDATE_HMAC_TOKEN,\n    payload: token,\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n\n  return action\n}\n","import * as actionTypes from './actionTypes'\n\nvar nextRequestId = 0\nfunction generateRequestId () {\n  return nextRequestId++\n}\n\n/**\n * Creates a request action.\n * @param {Object} options\n * @param {string} options.url The url for the request\n * @param {Object} [options.queryParams] Query parameters to be added to the url string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n */\nexport function request (options) {\n  return {\n    type: actionTypes.REQUEST,\n    payload: options,\n    meta: {\n      requestId: generateRequestId()\n    }\n  }\n}\n\n/**\n * Creates a response action.\n */\nexport function response (requestId, result, error = false) {\n  return {\n    type: actionTypes.RESPONSE,\n    payload: result,\n    error,\n    meta: {\n      requestId: requestId\n    }\n  }\n}\n\n/**\n * Action to signify a REST request has encountered an authorization error.\n * @param  {BasicError} error\n * @return {Action}\n */\nexport function authorizationError (error) {\n  return {\n    error: true,\n    type: actionTypes.AUTHORIZATION_ERROR,\n    payload: error\n  }\n}\n","const name = 'connectivity'\nexport default name\n","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","// Base64 by Kevin van Zonneveld - Public Domain\n// Original Source: http://kevin.vanzonneveld.net/\n\nexport function base64_encode (data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Bayron Guevara\n    // +   improved by: Thunder.m\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // -    depends on: utf8_encode\n    // *     example 1: base64_encode('Kevin van Zonneveld');\n    // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['atob'] == 'function') {\n    //    return atob(data);\n    //}\n\n    var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc='', tmp_arr = [];\n\n    if (!data) {\n        return data;\n    }\n\n    data = utf8_encode(data+'');\n\n    do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1<<16 | o2<<8 | o3;\n\n        h1 = bits>>18 & 0x3f;\n        h2 = bits>>12 & 0x3f;\n        h3 = bits>>6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    } while (i < data.length);\n\n    enc = tmp_arr.join('');\n\n    switch (data.length % 3) {\n    case 1:\n        enc = enc.slice(0, -2) + '==';\n        break;\n    case 2:\n        enc = enc.slice(0, -1) + '=';\n        break;\n    }\n\n    return enc;\n}\n\n\n\nexport function base64_decode (data) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Tyler Akins (http://rumkin.com)\n    // +   improved by: Thunder.m\n    // +      input by: Aman Gupta\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   bugfixed by: Pellentesque Malesuada\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +      input by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // -    depends on: utf8_decode\n    // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n    // *     returns 1: 'Kevin van Zonneveld'\n\n    // mozilla has this native\n    // - but breaks in 2.0.0.12!\n    //if (typeof this.window['btoa'] == 'function') {\n    //    return btoa(data);\n    //}\n\n    var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, dec = '', tmp_arr = [];\n\n    if (!data) {\n        return data;\n    }\n\n    data += '';\n\n    do {  // unpack four hexets into three octets using index points in b64\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n\n        bits = h1<<18 | h2<<12 | h3<<6 | h4;\n\n        o1 = bits>>16 & 0xff;\n        o2 = bits>>8 & 0xff;\n        o3 = bits & 0xff;\n\n        if (h3 === 64) {\n            tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 === 64) {\n            tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n            tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n    } while (i < data.length);\n\n    dec = tmp_arr.join('');\n    dec = utf8_decode(dec);\n\n    return dec;\n}\n\n\nfunction utf8_encode ( argString ) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Webtoolkit.info (http://www.webtoolkit.info/)\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: sowberry\n    // +    tweaked by: Jack\n    // +   bugfixed by: Onno Marsman\n    // +   improved by: Yves Sucaet\n    // +   bugfixed by: Onno Marsman\n    // +   bugfixed by: Ulrich\n    // *     example 1: utf8_encode('Kevin van Zonneveld');\n    // *     returns 1: 'Kevin van Zonneveld'\n\n    var string = (argString+''); // .replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n\n    var utftext = '';\n    var start, end;\n    var stringl = 0;\n\n    start = end = 0;\n    stringl = string.length;\n    for (var n = 0; n < stringl; n++) {\n        var c1 = string.charCodeAt(n);\n        var enc = null;\n\n        if (c1 < 128) {\n            end++;\n        } else if (c1 > 127 && c1 < 2048) {\n            enc = String.fromCharCode((c1 >> 6) | 192) + String.fromCharCode((c1 & 63) | 128);\n        } else {\n            enc = String.fromCharCode((c1 >> 12) | 224) + String.fromCharCode(((c1 >> 6) & 63) | 128) + String.fromCharCode((c1 & 63) | 128);\n        }\n        if (enc !== null) {\n            if (end > start) {\n                utftext += string.substring(start, end);\n            }\n            utftext += enc;\n            start = end = n+1;\n        }\n    }\n\n    if (end > start) {\n        utftext += string.substring(start, string.length);\n    }\n\n    return utftext;\n}\n\nfunction utf8_decode ( str_data ) {\n    // http://kevin.vanzonneveld.net\n    // +   original by: Webtoolkit.info (http://www.webtoolkit.info/)\n    // +      input by: Aman Gupta\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   improved by: Norman \"zEh\" Fuchs\n    // +   bugfixed by: hitwork\n    // +   bugfixed by: Onno Marsman\n    // +      input by: Brett Zamir (http://brett-zamir.me)\n    // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: utf8_decode('Kevin van Zonneveld');\n    // *     returns 1: 'Kevin van Zonneveld'\n\n    var tmp_arr = [], i = 0, ac = 0, c1 = 0, c2 = 0, c3 = 0;\n\n    str_data += '';\n\n    while ( i < str_data.length ) {\n        c1 = str_data.charCodeAt(i);\n        if (c1 < 128) {\n            tmp_arr[ac++] = String.fromCharCode(c1);\n            i++;\n        } else if ((c1 > 191) && (c1 < 224)) {\n            c2 = str_data.charCodeAt(i+1);\n            tmp_arr[ac++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n            i += 2;\n        } else {\n            c2 = str_data.charCodeAt(i+1);\n            c3 = str_data.charCodeAt(i+2);\n            tmp_arr[ac++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n            i += 3;\n        }\n    }\n\n    return tmp_arr.join('');\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Helper function for formatting call actions.\n * @method callActionHelper\n * @param  {string} type - Action type.\n * @param  {string} callId - Id of the call being acted on.\n * @param  {Object} $2\n * @param  {Object} $2.callInfo - Call state properties.\n * @param  {Object} $2.error\n * @return {Object} A flux standard action.\n */\nexport function callActionHelper (type, callId, { callInfo, error, params } = {}) {\n  const action = {\n    type,\n    payload: {}\n  }\n\n  if (error) {\n    action.error = true\n    const message = typeof error === 'string' ? error : error.message\n    action.payload = new Error(message)\n    // TODO: Ensure the middleware uses consistent error objects.\n    // Ensure the action has the entire error object.\n    action.payload.error = error\n  }\n\n  if (callInfo) {\n    action.payload.callInfo = callInfo\n  }\n  if (params) {\n    action.payload.params = params\n  }\n  action.payload.callId = callId\n\n  return action\n}\n\n/**\n * Creates a make call action to start an outgoing call.\n * @method makeCall\n * @param  {string} callee       Full user ID of the call recipient.\n * @param  {string} callId       A unique identifier for the call.\n * @param  {Object} [options={}] Call options.\n * @returns {Object} A flux standard action representing the make call action.\n */\nexport function makeCall (callee, callId, options = {}) {\n  const callInfo = {\n    ...options,\n    to: callee\n  }\n  return callActionHelper(actionTypes.MAKE_CALL, callId, {\n    callInfo\n  })\n}\n\n/**\n * Creates a make call finish action.\n * @method makeCallFinish\n * @param  {string} callId The outgoing call ID.\n * @param  {Object} callInfo Information about the call.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action representing the make call finish action.\n */\nexport function makeCallFinish (callId, callInfo, error) {\n  return callActionHelper(actionTypes.MAKE_CALL_FINISH, callId, {\n    callInfo,\n    error\n  })\n}\n\n/**\n * Create a call incoming action.\n * @method callIncoming\n * @param  {string} callId The outgoing call ID.\n * @param  {Object} callInfo Information about the call.\n * @returns {Object} A flux standard action representing the call incoming action.\n */\nexport function callIncoming (callId, callInfo) {\n  return callActionHelper(actionTypes.CALL_INCOMING, callId, {\n    callInfo\n  })\n}\n\n/**\n * Creating an answer call action.\n * @method answerCall\n * @param  {string}   callId  The ID of the call to answer.\n * @param  {Object}   [options={}] Call options.\n * @returns {Object} A flux standard action representing the answer call action.\n */\nexport function answerCall (callId, options = {}) {\n  return callActionHelper(actionTypes.ANSWER_CALL, callId, {\n    callInfo: options\n  })\n}\n\n/**\n * Creating an answer call finish action.\n * @method answerCall\n * @param  {string}   callId  The ID of the call that was answered.\n * @param  {Object}   [error] The error object, in the case of an error.\n * @returns {Object} A flux standard action representing the answer call finish action.\n */\nexport function answerCallFinish (callId, callInfo, error) {\n  return callActionHelper(actionTypes.ANSWER_CALL_FINISH, callId, {\n    callInfo,\n    error\n  })\n}\n\n/**\n * Creates an ignore call action.\n * @method ignoreCall\n * @param  {string}   callId  The ID of the call to ignore.\n * @returns {Object} A flux standard action representing the ignore call action.\n */\nexport function ignoreCall (callId) {\n  return callActionHelper(actionTypes.IGNORE_CALL, callId)\n}\n\n/**\n * Creates an ignore call finish action.\n * @method ignoreCallFinish\n * @param  {string}   callId  The ID of the ignored call.\n * @param  {Object}   [error] The error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function ignoreCallFinish (callId, error) {\n  return callActionHelper(actionTypes.IGNORE_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Creates an reject call action.\n * @method rejectCall\n * @param  {string}   callId  The ID of the call to reject.\n * @returns {Object} A flux standard action representing the reject call action.\n */\nexport function rejectCall (callId) {\n  return callActionHelper(actionTypes.REJECT_CALL, callId)\n}\n\n/**\n * Creates an reject call finish action.\n * @method rejectCallFinish\n * @param  {string}   callId  The ID of the rejected call.\n * @param  {Object}   [error] The error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function rejectCallFinish (callId, error) {\n  return callActionHelper(actionTypes.REJECT_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Create an end call action.\n * @method endCall\n * @param  {string} callId The outgoing call ID.\n * @returns {Object} A flux standard action representing the end call action.\n */\nexport function endCall (callId) {\n  return callActionHelper(actionTypes.END_CALL, callId)\n}\n\n/**\n * Creates an end call finish action.\n * @method endCallFinish\n * @param  {string} callId Id of the call that was ended.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action representing the end call finish action.\n */\nexport function endCallFinish (callId, error) {\n  return callActionHelper(actionTypes.END_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action about a call state changing.\n * @method callStateChange\n * @param  {string} callId   Id of the call that changed.\n * @param  {string} state    The new call state.\n * @param  {Object} transition   Information about the state change.\n * @param  {Object} callInfo Meta information about the call.\n * @returns {Object} A flux standard action.\n */\nexport function callStateChange (callId, state, transition, callInfo) {\n  // TODO: Error action if error state change?\n  return {\n    type: actionTypes.CALL_STATE_CHANGE,\n    payload: {\n      callId,\n      state,\n      transition,\n      callInfo\n    }\n  }\n}\n\n/**\n * Represents that a call's media state has changed.\n * @method callMediaStateChange\n * @param  {string} callId   Id of the call that changed.\n * @param  {number} mediaState The new call media state.\n * @returns {Object} A flux standard action.\n */\nexport function callMediaStateChange (callId, mediaState) {\n  return {\n    type: actionTypes.CALL_MEDIA_STATE_CHANGE,\n    payload: {\n      callId,\n      mediaState\n    }\n  }\n}\n\n/**\n * Represents an action to mute a call.\n * @method muteCall\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function muteCall (callId) {\n  return callActionHelper(actionTypes.MUTE_CALL, callId)\n}\n\n/**\n * Represents the finish of an action to mute a call.\n * @method muteCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function muteCallFinish (callId, error) {\n  return callActionHelper(actionTypes.MUTE_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to unmute a call.\n * @method unMuteCall\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function unMuteCall (callId) {\n  return callActionHelper(actionTypes.UNMUTE_CALL, callId)\n}\n\n/**\n * Represents the finish of an action to unmute a call.\n * @method unMuteCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function unMuteCallFinish (callId, error) {\n  return callActionHelper(actionTypes.UNMUTE_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to silence a call.\n * @method silenceCall\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function silenceCall (callId) {\n  return callActionHelper(actionTypes.SILENCE_CALL, callId)\n}\n\n/**\n * Represents the finish of an action to silence a call.\n * @method silenceCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function silenceCallFinish (callId, error) {\n  return callActionHelper(actionTypes.SILENCE_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to unsilence a call.\n * @method unSilenceCall\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function unSilenceCall (callId) {\n  return callActionHelper(actionTypes.UNSILENCE_CALL, callId)\n}\n\n/**\n * Represents the finish of an action to unsilence a call.\n * @method unSilenceCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function unSilenceCallFinish (callId, error) {\n  return callActionHelper(actionTypes.UNSILENCE_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to set parameters.\n * @method setCustomParameters\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Array.<{name: string, value:string}>} customParameters Custom parameters.\n * @returns {Object} A flux standard action.\n */\nexport function setCustomParameters (callId, customParameters = []) {\n  return {\n    type: actionTypes.SET_CUSTOM_PARAMETERS,\n    payload: {\n      callId,\n      customParameters\n    }\n  }\n}\n\n/**\n * Represents an action to start video for a call.\n * @method startVideo\n * @param  {string} callId The ID of the call being acted on.\n * @param {Object} [params]\n * @param {Object} [params.videoResolution]\n * @returns {Object} A flux standard action.\n */\nexport function startVideo (callId, params = {}) {\n  return callActionHelper(actionTypes.START_VIDEO, callId, {\n    callInfo: params\n  })\n}\n\n/**\n * Represents the finish of an action to start video for a call.\n * @method startVideoFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} [error] The error object, in the case of an error.\n * @param {Object} [params]\n * @param {Object} [params.videoResolution]\n * @returns {Object} A flux standard action.\n */\nexport function startVideoFinish (callId, params, error) {\n  return callActionHelper(actionTypes.START_VIDEO_FINISH, callId, {\n    callInfo: params,\n    error\n  })\n}\n\n/**\n * Represents an action to stop video for a call.\n * @method stopVideo\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function stopVideo (callId) {\n  return callActionHelper(actionTypes.STOP_VIDEO, callId)\n}\n\n/**\n * Represents the finish of an action to stop video for a call.\n * @method stopVideoFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} [error] The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function stopVideoFinish (callId, error) {\n  return callActionHelper(actionTypes.STOP_VIDEO_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to hold a call.\n * @method holdCall\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function holdCall (callId) {\n  return callActionHelper(actionTypes.HOLD_CALL, callId)\n}\n\n/**\n * Represents the finish of an action to hold a call.\n * @method holdCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function holdCallFinish (callId, error) {\n  return callActionHelper(actionTypes.HOLD_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to unhold a call.\n * @method unHoldCall\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function unHoldCall (callId) {\n  return callActionHelper(actionTypes.UNHOLD_CALL, callId)\n}\n\n/**\n * Represents the finish of an action to unhold a call.\n * @method unHoldCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function unHoldCallFinish (callId, error) {\n  return callActionHelper(actionTypes.UNHOLD_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to start screensharing over a call.\n * @method startScreenshare\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} params\n * @param  {Number} [params.width=1024] The width of the screen to request.\n * @param  {Number} [params.height=768] The height of the screen to request.\n * @param  {Number} [params.frameRate=15] The number of frames per second to request.\n * @returns {Object} A flux standard action.\n */\nexport function startScreenshare (callId, params = {}) {\n  return callActionHelper(actionTypes.START_SCREENSHARE, callId, {\n    callInfo: {\n      screenshareOptions: params\n    }\n  })\n}\n\n/**\n * Represents the finish of an action to start screensharing over a call.\n * @method startScreenshareFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @param  {Object} params\n * @param  {Number} [params.width=1024] The width of the screen to request.\n * @param  {Number} [params.height=768] The height of the screen to request.\n * @param  {Number} [params.frameRate=15] The number of frames per second to request.\n * @returns {Object} A flux standard action.\n */\nexport function startScreenshareFinish (callId, params, error) {\n  return callActionHelper(actionTypes.START_SCREENSHARE_FINISH, callId, {\n    callInfo: {\n      screenshareOptions: params\n    },\n    error\n  })\n}\n\n/**\n * Represents an action to stop screensharing over a call.\n * @method stopScreenshare\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function stopScreenshare (callId) {\n  return callActionHelper(actionTypes.STOP_SCREENSHARE, callId)\n}\n\n/**\n * Represents the finish of an action to stop screensharing over a call.\n * @method stopScreenshareFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function stopScreenshareFinish (callId, error) {\n  return callActionHelper(actionTypes.STOP_SCREENSHARE_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents an action to send a DTMF tone over a call.\n * @method sendDTMF\n * @param  {string} callId The ID of the call being acted on.\n * @param {string} tone DTMF tone to send.\n * @returns {Object} A flux standard action.\n */\nexport function sendDTMF (callId, tone) {\n  return callActionHelper(actionTypes.SEND_DTMF, callId, {\n    params: { tone }\n  })\n}\n\n/**\n * Represents the finish of an action to send a DTMF tone.\n * Error action only.\n * @method sendDTMFFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error\n * @returns {Object} A flux standard action.\n */\nexport function sendDTMFFinish (callId, error) {\n  var payload = new Error(error)\n  payload.callId = callId\n\n  return {\n    type: actionTypes.SEND_DTMF_FINISH,\n    error: true,\n    payload\n  }\n}\n\n/**\n * Represents the request to send custom parameters.\n * @method sendCustomParameters\n * @param  {string} callId The ID of the call being acted on.\n * @returns {Object} A flux standard action.\n */\nexport function sendCustomParameters (callId) {\n  return callActionHelper(actionTypes.SEND_CUSTOM_PARAMETERS, callId)\n}\n\n/**\n * Represents the finish of an action to send custom parameters.\n * Error action only.\n * @method sendCustomParametersFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function sendCustomParametersFinish (callId, error) {\n  var payload = new Error(error)\n  payload.callId = callId\n\n  return {\n    type: actionTypes.SEND_CUSTOM_PARAMETERS_FINISH,\n    error: true,\n    payload\n  }\n}\n\n/**\n * Represents the request to forward an incoming call.\n * @method forwardCall\n * @param  {string} callId The ID of the call being acted on.\n * @param  {string} destination The user the call is to be forwarded to.\n * @returns {Object} A flux standard action.\n */\nexport function forwardCall (callId, destination) {\n  return callActionHelper(actionTypes.FORWARD_CALL, callId, {\n    params: { destination }\n  })\n}\n\n/**\n * Represents the finish of an action to forward a call.\n * @method forwardCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * * @returns {Object} A flux standard action.\n */\nexport function forwardCallFinish (callId, error) {\n  return callActionHelper(actionTypes.FORWARD_CALL_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents the request to transfer a call (direct transfer).\n * @method directTransfer\n * @param  {string} callId The ID of the call being acted on.\n * @param  {string} destination The user the call is to be transferred to.\n * @returns {Object} A flux standard action.\n */\nexport function directTransfer (callId, destination) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER, callId, {\n    params: { destination }\n  })\n}\n\n/**\n * Represents the finish of an action to transfer a call.\n * @method directTransferFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * * @returns {Object} A flux standard action.\n */\nexport function directTransferFinish (callId, error) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents the request to transfer a call (consultative transfer).\n * @method consultativeTransfer\n * @param  {string} callId The ID of the call being acted on.\n * @param  {string} destination The callId to be transferred to.\n * @returns {Object} A flux standard action.\n */\nexport function consultativeTransfer (callId, destination) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER, callId, {\n    params: { destination }\n  })\n}\n\n/**\n * Represents the finish of an action to transfer a call.\n * @method consultativeTransferFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Object} error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function consultativeTransferFinish (callId, error) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER_FINISH, callId, {\n    error\n  })\n}\n\n/**\n * Represents the request to join two calls.\n * @method joinCall\n * @param  {string} callId The ID of the call being acted on.\n * @param  {string} destination The callId to be joined with.\n * @returns {Object} A flux standard action.\n */\nexport function joinCall (callId, destination, callInfo) {\n  return callActionHelper(actionTypes.JOIN_CALL, callId, {\n    callInfo,\n    params: { destination }\n  })\n}\n\n/**\n * Represents the finish of an action to join two calls.\n * @method joinCallFinish\n * @param  {string} callId The ID of the call being acted on.\n * @param  {Array} joinedCalls List of call IDs that were joined.\n * @param  {Object} $2\n * @param  {Object} $2.callInfo Call state properties.\n * @param  {Object} $2.error The error object, in the case of an error.\n * @returns {Object} A flux standard action.\n */\nexport function joinCallFinish (callId, joinedCalls, { callInfo, error }) {\n  return callActionHelper(actionTypes.JOIN_CALL_FINISH, callId, {\n    error,\n    callInfo,\n    params: { joinedCalls }\n  })\n}\n\n/**\n * Represents a request to start the anonymous call process.\n * @method makeAnonymousCall\n * @param  {string} callee       Full user ID of the call recipient.\n * @param  {string} callId       A unique identifier for the call.\n * @param  {Object} credentials  Information needed to validate a token anonymous call.\n * @param  {Object} [options={}] Call options.\n * @returns {Object} A flux standard action.\n */\nexport function makeAnonymousCall (callee, callId, credentials = {}, options = {}) {\n  return {\n    type: actionTypes.MAKE_CALL_ANONYMOUS,\n    payload: {\n      callee,\n      callId,\n      credentials,\n      callInfo: {\n        ...options\n      }\n    }\n  }\n}\n","const callPrefix = '@@KANDY/CALL/'\n\n/**\n * Basic call operation actions.\n */\nexport const MAKE_CALL = callPrefix + 'MAKE'\nexport const PENDING_MAKE_CALL = callPrefix + 'PENDING_MAKE'\nexport const SESSION_CREATED = callPrefix + 'SESSION_CREATED'\nexport const MAKE_CALL_FINISH = callPrefix + 'MAKE_FINISH'\n\nexport const MAKE_ANONYMOUS_CALL = callPrefix + 'MAKE_ANONYMOUS_CALL'\nexport const MAKE_ANONYMOUS_CALL_FINISH = callPrefix + 'MAKE_ANONYMOUS_CALL_FINISH'\n\nexport const CALL_INCOMING = callPrefix + 'INCOMING'\n\nexport const SEND_RINGING_FEEDBACK = callPrefix + 'SEND_RINGING_FEEDBACK'\nexport const SEND_RINGING_FEEDBACK_FINISH = callPrefix + 'SEND_RINGING_FEEDBACK_FINISH'\n\nexport const CALL_RINGING = callPrefix + 'RINGING'\nexport const SESSION_PROGRESS = callPrefix + 'SESSION_PROGRESS'\nexport const CALL_CANCELLED = callPrefix + 'CANCELLED'\n\nexport const ANSWER_CALL = callPrefix + 'ANSWER'\nexport const ANSWER_CALL_FINISH = callPrefix + 'ANSWER_FINISH'\n\nexport const REJECT_CALL = callPrefix + 'REJECT'\nexport const REJECT_CALL_FINISH = callPrefix + 'REJECT_FINISH'\n\nexport const IGNORE_CALL = callPrefix + 'IGNORE'\nexport const IGNORE_CALL_FINISH = callPrefix + 'IGNORE_FINISH'\n\nexport const CALL_ACCEPTED = callPrefix + 'ACCEPTED'\n\nexport const END_CALL = callPrefix + 'END'\nexport const END_CALL_FINISH = callPrefix + 'END_FINISH'\n\nexport const FORWARD_CALL = callPrefix + 'FORWARD_CALL'\nexport const FORWARD_CALL_FINISH = callPrefix + 'FORWARD_CALL_FINISH'\n\nexport const PENDING_OPERATION = callPrefix + 'PENDING_OPERATION'\n\n/**\n * Mid-call operation actions.\n */\n\nexport const UPDATE_CALL = callPrefix + 'UPDATE_CALL'\n\nexport const CALL_HOLD = callPrefix + 'HOLD'\nexport const CALL_HOLD_FINISH = callPrefix + 'HOLD_FINISH'\n\nexport const CALL_UNHOLD = callPrefix + 'UNHOLD'\nexport const CALL_UNHOLD_FINISH = callPrefix + 'UNHOLD_FINISH'\n\nexport const SET_CUSTOM_PARAMETERS = callPrefix + 'SET_CUSTOM_PARAMETERS'\n\nexport const SEND_CUSTOM_PARAMETERS = callPrefix + 'SEND_CUSTOM_PARAMETERS'\nexport const SEND_CUSTOM_PARAMETERS_FINISH = callPrefix + 'SEND_CUSTOM_PARAMETERS_FINISH'\n\nexport const ADD_MEDIA = callPrefix + 'ADD_MEDIA'\nexport const ADD_MEDIA_FINISH = callPrefix + 'ADD_MEDIA_FINISH'\nexport const ADD_BASIC_MEDIA = callPrefix + 'ADD_BASIC_MEDIA'\n\nexport const REMOVE_MEDIA = callPrefix + 'REMOVE_MEDIA'\nexport const REMOVE_MEDIA_FINISH = callPrefix + 'REMOVE_MEDIA_FINISH'\nexport const REMOVE_BASIC_MEDIA = callPrefix + 'REMOVE_BASIC_MEDIA'\n\nexport const RENEGOTIATE = callPrefix + 'RENEGOTIATE'\nexport const RENEGOTIATE_FINISH = callPrefix + 'RENEGOTIATE_FINISH'\n\nexport const MUSIC_ON_HOLD = callPrefix + 'MUSIC_ON_HOLD'\n\nexport const SEND_DTMF = callPrefix + 'SEND_DTMF'\nexport const SEND_DTMF_FINISH = callPrefix + 'SEND_DTMF_FINISH'\n\nexport const GET_STATS = callPrefix + 'GET_STATS'\nexport const GET_STATS_FINISH = callPrefix + 'GET_STATS_FINISH'\n\nexport const CONSULTATIVE_TRANSFER = callPrefix + 'CONSULTATIVE_TRANSFER'\nexport const PENDING_CONSULTATIVE_TRANSFER = callPrefix + 'PENDING_CONSULTATIVE_TRANSFER'\nexport const CONSULTATIVE_TRANSFER_FINISH = callPrefix + 'CONSULTATIVE_TRANSFER_FINISH'\n\nexport const DIRECT_TRANSFER = callPrefix + 'DIRECT_TRANSFER'\nexport const DIRECT_TRANSFER_FINISH = callPrefix + 'DIRECT_TRANSFER_FINISH'\n\nexport const JOIN = callPrefix + 'JOIN'\nexport const PENDING_JOIN = callPrefix + 'PENDING_JOIN'\nexport const JOIN_FINISH = callPrefix + 'JOIN_FINISH'\n\nexport const REPLACE_TRACK = callPrefix + 'REPLACE_TRACK'\nexport const REPLACE_TRACK_FINISH = callPrefix + 'REPLACE_TRACK_FINISH'\n\nexport const MEDIA_RESTART = callPrefix + 'MEDIA_RESTART'\nexport const MEDIA_RESTART_FINISH = callPrefix + 'MEDIA_RESTART_FINISH'\n\n/**\n * Miscellaneous call actions\n */\nexport const CUSTOM_PARAMETERS_RECEIVED = callPrefix + 'CUSTOM_PARAMETERS_RECEIVED'\nexport const GET_AVAILABLE_CODECS = callPrefix + 'GET_AVAILABLE_CODECS'\nexport const AVAILABLE_CODECS_RETRIEVED = callPrefix + 'AVAILABLE_CODECS_RETRIEVED'\n\n/**\n * Remote operation actions.\n */\nexport const CALL_REMOTE_HOLD_FINISH = callPrefix + 'REMOTE_HOLD_FINISH'\nexport const CALL_REMOTE_UNHOLD_FINISH = callPrefix + 'REMOTE_UNHOLD_FINISH'\nexport const REMOTE_ADD_MEDIA_FINISH = callPrefix + 'REMOTE_ADD_MEDIA_FINISH'\nexport const REMOTE_REMOVE_MEDIA_FINISH = callPrefix + 'REMOTE_REMOVE_MEDIA_FINISH'\nexport const REMOTE_START_MOH_FINISH = callPrefix + 'REMOTE_START_MOH_FINISH'\nexport const REMOTE_STOP_MOH_FINISH = callPrefix + 'REMOTE_STOP_MOH_FINISH'\nexport const REMOTE_SLOW_START = callPrefix + 'REMOTE_SLOW_START'\n\n/**\n * Turn action types.\n */\nconst turnPrefix = callPrefix + 'TURN/'\n\nexport const TURN_CHANGED = turnPrefix + 'CHANGED'\n\n/**\n * Track action types.\n */\nconst trackPrefix = callPrefix + 'TRACK/'\n\nexport const TRACK_ADDED = trackPrefix + 'ADDED'\nexport const TRACK_REMOVED = trackPrefix + 'REMOVED'\n","// Call plugin.\nimport { CALL_STATES } from '../constants'\n\n// Webrtc plugin.\nimport { getSessionById } from '../../webrtc/interface/selectors'\n\n/**\n * Call selectors.\n * Handles retrieving data from the `state.call.calls` substate.\n */\n\n/**\n * Helper function for adding track information to call state.\n * @method addTracksToCall\n * @param  {Object} state\n * @param  {Object} callState\n * @return {Object} Track augmented call state.\n */\nfunction addTracksToCall (state, callState) {\n  const session = getSessionById(state, callState.webrtcSessionId)\n  if (session) {\n    return {\n      ...callState,\n      localTracks: session.localTracks,\n      remoteTracks: session.remoteTracks\n    }\n  } else {\n    return {\n      ...callState,\n      localTracks: [],\n      remoteTracks: []\n    }\n  }\n}\n\n/**\n * Get the list of all calls this session.\n * @method getCalls\n * @param  {Object} state Redux state.\n * @return {Array} A list of all call objects.\n */\nexport function getCalls (state) {\n  // TODO: cloneDeep?\n  return state.call.calls.map(callState => addTracksToCall(state, callState))\n}\n\n/**\n * Retrieves the list of all on-going calls.\n * @method getActiveCalls\n * @param {Object} state Redux state.\n * @return {Array} A list of call objects.\n */\nexport function getActiveCalls (state) {\n  const endedStates = [CALL_STATES.ENDED, CALL_STATES.CANCELLED]\n\n  return getCalls(state).filter(call => !endedStates.includes(call.state))\n}\n\n/**\n * Get the call object of a specific call.\n * @method getCallById\n * @param  {Object} state Redux state.\n * @param  {string} callId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallById (state, callId) {\n  return getCalls(state).find(call => call.id === callId)\n}\n\n/**\n * Get the call object with a specific wrtcsSessionId (backend ID).\n * @method getCallByWrtcsSessionId\n * @param  {Object} state Redux state.\n * @param  {string} wrtcsSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWrtcsSessionId (state, wrtcsSessionId) {\n  return getCalls(state).find(call => call.wrtcsSessionId === wrtcsSessionId)\n}\n\n/**\n * Get the call object with a specific webrtcSessionId.\n * @method getCallByWebrtcSessionId\n * @param  {Object} state Redux state.\n * @param  {string} webrtcSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWebrtcSessionId (state, webrtcSessionId) {\n  return getCalls(state).find(call => call.webrtcSessionId === webrtcSessionId)\n}\n\n/**\n * Retrieve the call plugin's options.\n * @method getOptions\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getOptions (state) {\n  return state.config.call\n}\n\n/**\n * Retrieve TURN server/credential information.\n */\nexport function getTurnInfo (state) {\n  return state.call.turn\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Represents a request to POST clickToCall data.\n * @method clickToCall\n * @param  {string} callId\n * @param  {string} caller\n * @param  {string} callee\n * @return {Action} A redux action.\n */\nexport function clickToCall (callId, caller, callee) {\n  return {\n    type: actionTypes.CLICK_TO_CALL,\n    payload: {\n      callId,\n      caller,\n      callee\n    }\n  }\n}\n\n/**\n * Represents that a response was received for a clickToCall request.\n * @method clickToCallFinish\n * @param  {string} callId\n * @param  {string} caller\n * @param  {string} callee\n * @param  {number} requestTime time that the request was made at\n * @param  {Boolean}  [error] A parameter to indicate if there was an issue.\n * @return {Action} A redux action.\n */\nexport function clickToCallFinish ({ callId, caller, callee, requestTime, error }) {\n  if (error) {\n    return {\n      type: actionTypes.CLICK_TO_CALL_FINISH,\n      error: true,\n      payload: {\n        error\n      }\n    }\n  } else {\n    return {\n      type: actionTypes.CLICK_TO_CALL_FINISH,\n      error: false,\n      payload: {\n        callId,\n        caller,\n        callee,\n        requestTime\n      }\n    }\n  }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n// Auth selectors for backwards compatibility.\nimport { getSubscriptionInfo as getAuthSubscriptionInfo } from '../../auth/interface/selectors'\n\n// Utilities.\nimport { mergeValues } from '../../common/utils'\n\n/**\n * Retrieves the config options provided by the subscription plugin.\n * NOTE: This is only used by CPaaS currently and won't work with\n * the old auth/subscription config on link.  It will work with the new\n * auth/subscription config on link.\n * @method getSubscriptionConfig\n * @return {Object}\n */\nexport function getSubscriptionConfig (state) {\n  return cloneDeep(state.config.subscription)\n}\n\n/**\n * Retrieves the list of services that plugins have registered for.\n * @method getRegisteredServices\n * @return {Array}\n */\nexport function getRegisteredServices (state) {\n  return cloneDeep(state.subscription.registeredServices)\n}\n\n/**\n * Retrieves the open notifications channels' info and their active subscriptions.\n * @method getNotificationChannels\n * @return {Object}\n */\n// TODO: Rename this selector. It gets more than notification channels.\nexport function getNotificationChannels (state) {\n  return cloneDeep({\n    notificationChannels: state.subscription.notificationChannels,\n    subscriptions: state.subscription.subscriptions\n  })\n}\n\n/**\n * Retrieve the list of services with current subscriptions.\n * @method getSubscribedServices\n * @param {string} type the type of subscription we want to get specifically\n * @return {Array}\n */\nexport function getSubscribedServices (state, type) {\n  const info = getSubscriptionInfo(state)\n  // For backwards compatibility, make sure that this is an array. It isn't when\n  //    the old Auth plugin is being used (eg. Link v3.X).\n  let subscriptions = Array.isArray(info) ? info : [info]\n\n  // If a type was specified, filter out subscriptions of other types.\n  if (type) {\n    subscriptions = subscriptions.filter(subscription => subscription.channelType === type)\n  }\n\n  // Massage the subscriptions to be a list of service names.\n\n  // For Link, subscription.service is an array of strings (all services).\n  // For CPaaS, subscription.service is a string (single service).\n  // Process the subscriptions in a way that will provide an array of strings in\n  //    both cases.\n  return subscriptions.reduce((acc, currentSub) => {\n    return acc.concat(currentSub.service)\n  }, [])\n}\n\n/**\n * Retrieves the subscription information.\n * @method getSubscriptionInfo\n * @return {Object}\n */\nexport function getSubscriptionInfo (state) {\n  if (state.subscription) {\n    return cloneDeep(state.subscription.subscriptions)\n  } else {\n    // For backwards compatibility, also check if the authentication substate\n    //    has subscription info. It will have the info when the oldAuth plugin\n    //    is being used (eg. Link v3.X).\n    // Warning: This returns an object, unlike the above which returns an array.\n    return cloneDeep(getAuthSubscriptionInfo(state))\n  }\n}\n\n/**\n * Retrieve the list of subscriptions matching a given channel type and service name.\n * @method getSubscriptions\n * @param {string} service the name of the service we want to get specifically (e.g. smsinbound)\n * @param {string} type the type of communication channel we want to get specifically (e.g. websocket)\n * @return {Array}\n */\nexport function getSubscriptions (state, service, type) {\n  let subscriptions = state.subscription.subscriptions\n  subscriptions = subscriptions.filter(\n    subscription => subscription.service === service && subscription.channelType === type\n  )\n  return cloneDeep(subscriptions)\n}\n\n/**\n * Retrieve the subscription expiry time from config.\n * @method getSubscriptionExpiry\n * @return {number}\n */\nexport function getSubscriptionExpiry (state) {\n  const subConfig = state.config.subscription\n  const authConfig = state.config.authentication\n\n  // In order to maintain backwards compatibility with the auth plugin config\n  // we need to first check if this setting is provided in the authentication plugin\n  // config, and if not use the one from subscription plugin.  We need to check\n  // authentication config first because if no value is provided in the subscription\n  // plugin, a default value will be used and we don't want that if one is provided in\n  // the authentication plugin.\n  const expires =\n    authConfig.subscription && authConfig.subscription.expires ? authConfig.subscription.expires : subConfig.expires\n\n  return expires\n}\n\n/**\n * Retrieve the websocket info from config. We merge the websocket config\n * from auth plugin with the one from subscription plugin giving precedence to\n * the websocket config in auth plugin since we need to maintain backwards compatibility\n * with the old format config.\n * @method getSubscriptionExpiry\n * @return {number}\n */\nexport function getWebsocketConfig (state) {\n  const subConfig = state.config.subscription\n  const authConfig = state.config.authentication\n\n  // In order to support legacy configurations, we need to do the following:\n  // Take the values (including defaults) from subscription config.  Merge into\n  // that any client provided values from the authentication config.  All keys existing\n  // in authentication config will overwrite those from subscription config.  However,\n  // since defaults are not set for websocket in the authentication plugin, only client\n  // provided values for websocket will be used from authentication config and defaults\n  // will come from the subscription plugin.\n  return mergeValues(subConfig.websocket, authConfig.websocket)\n}\n","/**\n * A new conversation has been created and added to the state.\n *\n * @public\n * @memberof conversation\n * @event conversations:new\n */\nexport const CONVERSATIONS_NEW = 'conversations:new'\n\n/**\n * A change has occurred in the conversation list.\n *\n * @public\n * @memberof conversation\n * @event conversations:change\n * @param {Array} params An array of objects containing information about the conversations that have changed\n * @param {Array} params.destination The destination for messages created in this conversation.\n * @param {string} params.type The type of conversation to create. Can be one of \"chat\", \"im\", \"sms\" or \"group\"\n */\nexport const CONVERSATIONS_CHANGE = 'conversations:change'\n\n/**\n * A change has occurred in a specific conversations message list.\n * If a single message was affected/created, `messageId` will be present\n * as part of the event argument.\n *\n * @public\n * @memberof conversation\n * @event messages:change\n * @param {Object} params\n * @param {string} params.destination The destination for messages created in this conversation.\n * @param {string} params.type The type of conversation to create. Can be one of \"chat\", \"im\", \"sms\" or \"group\"\n * @param {string} [params.messageId] The ID of the message affected.\n * @param {string} [params.sender] The username of the sender of the message which caused the `messages:change` event to be triggered.\n */\nexport const MESSAGES_CHANGE = 'messages:change'\n\n/**\n * An error occurred with messaging.\n *\n * @public\n * @memberof conversation\n * @event messages:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const MESSAGES_ERROR = 'messages:error'\n","import * as actionTypes from './actionTypes'\n\n/**\n * Creates a message waiting indicator update action.\n *\n * @method mwiUpdate\n * @param {Object} $0\n * @param {string} $0.mwiEvent An mwiEvent object from spidr.\n * @param {Object} $0.error A Basic error object.\n * @returns {Object} A flux standard action.\n */\nexport function mwiUpdate ({ mwiData, error }) {\n  if (error) {\n    return {\n      type: actionTypes.MWI_UPDATE,\n      payload: error,\n      error: true\n    }\n  } else {\n    return {\n      type: actionTypes.MWI_UPDATE,\n      payload: {\n        ...mwiData\n      }\n    }\n  }\n}\n\n/**\n * Creates a fetch message waiting indicator action.\n *\n * @method fetchMwi\n * @returns {Object} A flux standard action.\n */\nexport function fetchMwi () {\n  return {\n    type: actionTypes.FETCH_MWI\n  }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the notifications state.\n * @method getNotificationsInfo\n * @param  {String} [channel] - Specific notification channel information to retrieve.\n * @return {Object}\n */\nexport function getNotificationsInfo (state, channel = undefined) {\n  if (channel) {\n    return state.notifications[channel]\n  } else {\n    return state.notifications\n  }\n}\n\n/**\n * Retrieves notification config.\n * @method getNotificationConfig\n * @return {Object}\n */\nexport function getNotificationConfig (state) {\n  return cloneDeep(state.config.notifications)\n}\n","// Request\nimport request from '../../request/effects'\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Registers a device token with On-Prem services.\n * @method pushNotificationsRegistration\n * @param  {Object} connection - Information for formatting the request.\n * @param  {Object} options\n * @param  {string[]} options.services - Push service to register to; either 'google' or 'apple'.\n * @param {string} options.pushProvider - The push provider, can be either 'apple' or 'google'.\n * @param  {string} options.bundleId - The bundle id to use for registration.\n * @param  {string} options.deviceToken\n * @param {string} options.voipDeviceToken - Token for call related service.\n * @param {string} options.standardDeviceToken - Token for non-call related service.\n * @param  {string} options.clientCorrelator - Unique identifier for a client device.\n * @param {string} options.realm - The realm used by the push registration service to identify\n *                                and establish a connection with the service gateway.\n * @param {boolean} options.isProduction - If true, push notification will be sent to production. If false, push notification will be sent to sandbox.\n * @return {Object} response\n */\nexport function * pushNotificationsRegistration (\n  connection,\n  {\n    services,\n    pushProvider,\n    bundleId,\n    deviceToken,\n    voipDeviceToken,\n    standardDeviceToken,\n    clientCorrelator,\n    realm,\n    isProduction\n  }\n) {\n  const { server } = connection\n  pushProvider = pushProvider.toLowerCase()\n  const url =\n    `${server.protocol}://${server.server}:${server.port}/` +\n    `rest/version/${server.version}/` +\n    `user/${connection.username}/` +\n    'push/' +\n    pushProvider +\n    '/devices/'\n  const method = 'POST'\n  let body = {\n    bundleID: bundleId,\n    service: services,\n    clientCorrelator: clientCorrelator,\n    realm: realm,\n    isProduction: isProduction\n  }\n\n  if (pushProvider === 'apple') {\n    body.voipDeviceToken = voipDeviceToken\n    body.standardDeviceToken = standardDeviceToken\n  } else {\n    body.deviceToken = deviceToken\n  }\n\n  body = JSON.stringify(body)\n  log.debug(`Sending PUSH register request: ${method} ${url}`)\n\n  const response = yield request({ url, method, body })\n\n  let registrationResponse\n  const responseName = pushProvider + 'DeviceRegistrationResponse'\n  if (response.payload.body && response.payload.body[responseName]) {\n    registrationResponse = response.payload.body[responseName]\n  }\n\n  if (response.error) {\n    log.info('Failed to register device token for PUSH notifications.')\n    if (registrationResponse) {\n      // Handle errors from the server.\n      const statusCode = registrationResponse.statusCode\n      log.debug(`Device registration request for PUSH notifications failed with status code: ${statusCode}`)\n\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to register device token for PUSH notifications. Code: ${statusCode}`\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Device registration request for PUSH notifications failed with message: ${message}.`)\n\n      return {\n        error: true,\n        status: response.payload.result.code,\n        text: `Failed to register device token for PUSH notifications. Error: ${response.payload.result.message}`\n      }\n    }\n  } else if (registrationResponse && registrationResponse.statusCode !== 0) {\n    log.info(`Failed to register device token for PUSH notifications. Code: ${registrationResponse.statuscode}`)\n    // TODO: Is this else-if needed?\n    return {\n      error: true,\n      status: registrationResponse.statuscode,\n      text: `Failed to register device token for PUSH notifications. Error: ${registrationResponse.statusCode}`\n    }\n  } else {\n    log.info('Successfully registered device token for PUSH notifications.')\n    return {\n      error: false,\n      ...registrationResponse\n    }\n  }\n}\n\n/**\n * De-Registers a device token with On-Prem services.\n * @method pushNotificationsDeRegistration\n * @param  {Object} connection - Information for formatting the request.\n * @param  {Object} options\n * @param  {string} options.registration\n * @return {Object} response\n */\nexport function * pushNotificationsDeRegistration (connection, { registration }) {\n  const { server } = connection\n  const url = `${server.protocol}://${server.server}:${server.port}${registration}`\n  const method = 'DELETE'\n  const responseType = 'none'\n\n  log.debug(`Sending PUSH unregister request: ${method} ${url}`)\n  const response = yield request({ url, method, responseType })\n\n  if (response.error) {\n    log.info('Failed to unregister device token for PUSH notifications.')\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body\n      log.debug(`Failed to unregister device token for PUSH notifications. Status code: ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to unregister device token for PUSH notifications. Code: ${statusCode}.`\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Device token unregistration request failed for PUSH notifications: ${message}`)\n      // TODO: Proper error.\n      return {\n        error: true,\n        status: response.payload.result.code,\n        text: `Device token unregistration request failed for PUSH notifications: ${message}`\n      }\n    }\n  } else {\n    log.info('Successfully unregistered device token for PUSH notifications.')\n    // Successful de-register has no response.\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Fetches SDP data from a given partial URL.\n * @method fetchSDP\n * @param  {Object} partialUrl - A partial URL. Contains everything after the protocol://server:port\n * @return {Object} response A response payload\n */\nexport function * fetchSDP (connection, partialUrl) {\n  const { server } = connection\n  const method = 'GET'\n  const url = `${server.protocol}://${server.server}:${server.port}${partialUrl}`\n  log.debug(`Sending request to fetch SDP: ${method} ${url}`)\n\n  const response = yield request({\n    url,\n    method\n  })\n\n  if (!response.error) {\n    log.info('SDP fetched successfully.')\n    // TODO: test and see what this format actually is.\n    return response.payload.body\n  } else {\n    log.debug(`Failed to fetch SDP. Error is: ${JSON.stringify(response.error)}`)\n  }\n}\n","// Presence plugin.\nimport * as actionTypes from './actionTypes'\n\n// Other plugins.\nimport BasicError from '../../errors'\n\n/**\n * Update the presence for the current user\n * @param  {string} status   The status of the presence state\n * @param  {string} activity The activity to be shown as presence state\n * @param  {string} note     The note to be shown as alternative presence state\n *                           which is determined by the user. The note entry is\n *                           effective on the remote sip client when the\n *                           activity is “other”.\n * @return {Object}          A Flux Standard Action for UPDATE_PRESENCE\n */\nexport function updatePresence (status, activity, note) {\n  return {\n    type: actionTypes.UPDATE,\n    payload: {\n      status,\n      activity,\n      note\n    }\n  }\n}\n\nexport function updatePresenceFinish (payload) {\n  return {\n    type: actionTypes.UPDATE_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Get the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for GET_PRESENCE\n */\nexport function getPresence (users) {\n  return {\n    type: actionTypes.GET,\n    payload: users\n  }\n}\n\nexport function getPresenceFinish (payload) {\n  return {\n    type: actionTypes.GET_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Subscribe to the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for SUBSCRIBE_PRESENCE\n */\nexport function subscribePresence (users) {\n  return {\n    type: actionTypes.SUBSCRIBE,\n    payload: users\n  }\n}\n\nexport function subscribePresenceFinish (result) {\n  if (!Array.isArray(result.presentityUserId)) {\n    result.presentityUserId = [result.presentityUserId]\n  }\n  return {\n    type: actionTypes.SUBSCRIBE_FINISH,\n    error: result instanceof Error || result instanceof BasicError,\n    payload: result\n  }\n}\n\n/**\n * Unsubscribe from the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function unsubscribePresence (users) {\n  return {\n    type: actionTypes.UNSUBSCRIBE,\n    payload: users\n  }\n}\n\nexport function unsubscribePresenceFinish (result) {\n  if (result.presentityUserId && !Array.isArray(result.presentityUserId)) {\n    result.presentityUserId = [result.presentityUserId]\n  }\n  return {\n    type: actionTypes.UNSUBSCRIBE_FINISH,\n    error: result instanceof Error || result instanceof BasicError,\n    payload: result\n  }\n}\n\n/**\n * Create a new presence list\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function createPresenceList (users) {\n  return {\n    type: actionTypes.CREATE_PRESENCE_LIST,\n    payload: users\n  }\n}\n\n/**\n * Delete a presence list\n * @param  {string} presenceListId  The ID of the presence list to delete.\n * @return {Object}                 A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function deletePresenceList (presenceListId) {\n  return {\n    type: actionTypes.DELETE_PRESENCE_LIST,\n    payload: presenceListId\n  }\n}\n\n/**\n * Retrieve a presence list\n * @param  {string} presenceListId  The ID of the presence list to delete.\n * @return {Object}                 A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function getPresenceList (presenceListId) {\n  return {\n    type: actionTypes.GET_PRESENCE_LIST,\n    payload: presenceListId\n  }\n}\n\nexport function createListFinish (payload) {\n  return {\n    type: actionTypes.CREATE_PRESENCE_LIST_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\nexport function presenceReceived (presence) {\n  return {\n    type: actionTypes.RECEIVED,\n    payload: presence\n  }\n}\n","export function getPresence (state, users) {\n  // If no users specified, return them all\n  if (!users) {\n    return state.presence.users\n  }\n\n  // Grab all users that match the passed in IDs, return\n  return Object.values(state.presence.users).filter(user => users.indexOf(user.userId) !== -1)\n}\n\n/**\n * Retrieves presence information for all users.\n * @method getAllPresence\n * @param  {Object} state Redux state.\n * @return {Array}  List of presence information for users.\n */\nexport function getAllPresence (state) {\n  return Object.values(state.presence.users)\n}\n\n/**\n * Retrieves the current user's self presence.\n * @method getSelfPresence\n * @param  {Object} state Redux state.\n * @return {Object} Self-presence information.\n */\nexport function getSelfPresence (state) {\n  return state.presence.self\n}\n","/**\n * The status of the presence state\n * @name STATUS\n */\nexport const STATUS = {\n  OPEN: 'open',\n  CLOSED: 'closed'\n}\n\n/**\n * The presence activity\n * @name ACTIVITY\n */\nexport const ACTIVITY = {\n  ACTIVE: 'active',\n  IDLE: 'idle',\n  AWAY: 'away',\n  LUNCH: 'lunch',\n  OTHER: 'other',\n  BUSY: 'busy',\n  VACATION: 'vacation',\n  ON_THE_PHONE: 'on-the-phone',\n  UNKNOWN: 'unknown'\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves information about a sip event.\n * @method getSipEventInfo\n * @param  {string} eventType\n * @return {Object}\n */\nexport function getSipEventInfo (state, eventType) {\n  if (eventType) {\n    return cloneDeep(state.sipEvents[eventType])\n  } else {\n    return cloneDeep(state.sipEvents)\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n// Helper function for formatting _FINISH actions.\nfunction finishActionHelper (actionType, { response, error }) {\n  return {\n    type: actionType,\n    error: !!error,\n    payload: error || response\n  }\n}\n\n/**\n * Represents a request to subscribe to a specific sip event.\n * @method sipEventSubscribe\n * @param  {string} eventType\n * @param  {Array}  subscribeUserList\n * @param  {string} clientCorrelator\n * @param  {Object} customParameters\n * @returns {Object} A flux standard action.\n */\nexport function sipEventSubscribe (eventType, subscribeUserList, clientCorrelator, customParameters) {\n  return {\n    type: actionTypes.SIP_EVENT_SUBSCRIBE,\n    payload: {\n      eventType,\n      subscribeUserList,\n      clientCorrelator,\n      customParameters\n    }\n  }\n}\n\n/**\n * Represents the response/error of a sip event subscription request.\n * @method sipEventSubscribeFinish\n * @param  {Object} $0\n * @param  {Object} $0.response Information about the subscription response.\n * @param  {BasicError} $0.error An error object, in the case of an issue.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventSubscribeFinish ({ response, error }) {\n  return finishActionHelper(actionTypes.SIP_EVENT_SUBSCRIBE_FINISH, {\n    response,\n    error\n  })\n}\n\n/**\n * Represents a request to update a sip event subscription or resubscribe for it.\n * @method sipEventUpdate\n * @param  {string} eventType\n * @param  {Object} userLists\n * @param  {Object} customParameters\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUpdate (eventType, userLists = {}, customParameters) {\n  // If no userList changes, this should just be a resubscription.\n  const isResub = Object.keys(userLists).length === 0\n  return {\n    type: actionTypes.SIP_EVENT_UPDATE,\n    payload: {\n      eventType,\n      subscribeUserList: userLists.subscribeUserList || [],\n      unsubscribeUserList: userLists.unsubscribeUserList || [],\n      customParameters\n    },\n    meta: isResub ? { isResub: true } : {}\n  }\n}\n\n/**\n * Represents the response/error of a sip event update/resub request.\n * @method sipEventUpdateFinish\n * @param  {Object} $0\n * @param  {Object} $0.response Information about the update/resub response.\n * @param  {BasicError} $0.error An error object, in the case of an issue.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUpdateFinish ({ response, error }) {\n  return finishActionHelper(actionTypes.SIP_EVENT_UPDATE_FINISH, {\n    response,\n    error\n  })\n}\n\n/**\n * Represents a request to unsubscribe from sip event subscriptions.\n * @method sipEventUnsubscribe\n * @param  {string} eventType The sip event subscription to unsubscribe from.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUnsubscribe (eventType) {\n  return {\n    type: actionTypes.SIP_EVENT_UNSUBSCRIBE,\n    payload: eventType\n  }\n}\n\n/**\n * Represents the response/error of a sip event unsubscribe request.\n * @method sipEventUnsubscribeFinish\n * @param  {Object} $0\n * @param  {Object} $0.response Information about the unsubscribe response.\n * @param  {BasicError} $0.error An error object, in the case of an issue.\n * @returns {Object} A flux standard action.\n */\nexport function sipEventUnsubscribeFinish ({ response, error }) {\n  return finishActionHelper(actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH, {\n    response,\n    error\n  })\n}\n\n/**\n * Represents that a sip event notification has been received.\n * @method sipEventReceived\n * @param  {Object} sipEvent\n * @param {string} callId\n * @returns {Object} A flux standard action.\n */\nexport function sipEventReceived (sipEvent, callId) {\n  return {\n    type: actionTypes.SIP_EVENT_RECEIVED,\n    payload: {\n      event: sipEvent,\n      callId\n    }\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Action for fetching the current user's profile data.\n * @returns {Object} A flux standard action\n */\nexport function fetchSelfInfo () {\n  return {\n    type: actionTypes.FETCH_SELF_INFO\n  }\n}\n\n/**\n * The finishing action to follow the FETCH_SELF_INFO action\n * @returns {Object} A flux standard action representing the FETCH_SELF_INFO_FINISH action\n */\nexport function fetchSelfInfoFinish (self, error) {\n  return {\n    type: actionTypes.FETCH_SELF_INFO_FINISH,\n    payload: error || self,\n    error: Boolean(error)\n  }\n}\n\n/**\n *\n * @param {string} userId The URI uniquely identifying the user.\n * @returns {Object} A flux standard action representing the FETCH_USER action\n */\nexport function fetchUser (userId) {\n  return {\n    type: actionTypes.FETCH_USER,\n    payload: userId\n  }\n}\n\n/**\n * Create a finish action to follow a FETCH_USER action.\n *\n * @param {Object} user A user object\n * @param {Object} [error] An error object.\n * @returns {Object} A flux standard action representing the USER_FETCH_FINISH action.\n */\nexport function fetchUserFinish (user, error) {\n  return {\n    type: actionTypes.FETCH_USER_FINISH,\n    payload: error || user,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Create an action that searches the directory.\n *\n * @param {Object} filters Query filter options.\n * @param {string} [filters.name] Matches firstName or lastName.\n * @param {string} [filters.firstName] Matches firstName.\n * @param {string} [filters.lastName] Matches lastName.\n * @param {string} [filters.userName] Matches userName.\n * @param {string} [filters.phoneNumber] Matches phoneNumber.\n * @param {Object} [options] Sorting options\n * @param {string} [options.sortBy] The attribute upon which to sort results. This can be any of the above listed filters which describe a user attribute.\n * @param {string} [options.order] Order by which to return results. Can be one of \"asc\" or \"desc\".\n * @param {number} [options.max] The maximum number of results to return.\n * @param {string} [options.next] The pointer for a chunk of results, which may be returned from other a previous query.\n * @returns {Object} A flux standard action representing the SEARCH_DIRECTORY action.\n */\nexport function searchDirectory (filters, options) {\n  return {\n    type: actionTypes.SEARCH_DIRECTORY,\n    payload: { filters, options }\n  }\n}\n\n/**\n * Create a finish action to follow the SEARCH_DIRECTORY action.\n *\n * @param {Object} $0 A dictionary object of parameters\n * @param {Array} [$0.users] The user objects\n * @param {Object} [$0.error] An error object.\n * @returns {Object} A flux standard action representing the DIRECTORY_CHANGED action.\n */\nexport function searchDirectoryFinish ({ users, error }) {\n  return {\n    type: actionTypes.SEARCH_DIRECTORY_FINISH,\n    payload: error || users,\n    error: Boolean(error)\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Refresh the contact list.\n * @returns {Object} A flux standard action representing the REFRESH_CONTACTS action.\n */\nexport function refreshContacts () {\n  return {\n    type: actionTypes.REFRESH_CONTACTS,\n    payload: null\n  }\n}\n\n/**\n * The finishing action which follows the REFRESH_CONTACTS action\n * @param {Object} $0\n * @param  {Array} [$0.contacts] An array of contact objects.\n * @param  {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the REFRESH_CONTACTS_FINISH action.\n */\nexport function refreshContactsFinish ({ contacts, error }) {\n  return {\n    type: actionTypes.REFRESH_CONTACTS_FINISH,\n    payload: error || contacts,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Adds a contact to the Address Book\n * @param {Object} contact The contact object.\n * @returns {Object} A flux standard action representing the ADD_CONTACT action.\n */\nexport function addContact (contact) {\n  return {\n    type: actionTypes.ADD_CONTACT,\n    payload: contact\n  }\n}\n\n/**\n * The finishing action which follows the ADD_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the ADD_CONTACT_FINISH action.\n */\nexport function addContactFinish ({ contact, error }) {\n  return {\n    payload: error || contact,\n    error: Boolean(error),\n    type: actionTypes.ADD_CONTACT_FINISH\n  }\n}\n\n/**\n * Fetch a contact from the user's personal address book\n * @param {string} contactId The ID of the contact to be fetched\n * @returns {Object} A flux standard action representing the FETCH_CONTACT action.\n */\nexport function fetchContact (contactId) {\n  return {\n    type: actionTypes.FETCH_CONTACT,\n    payload: contactId\n  }\n}\n\n/**\n * The finishing action which follows a FETCH_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] A Basic error object\n * @returns {Object} A flux standard action representing the FETCH_CONTACT_FINISH action.\n */\nexport function fetchContactFinish ({ contact, error }) {\n  return {\n    type: actionTypes.FETCH_CONTACT_FINISH,\n    payload: error || contact,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Removes a contact from the Address Book\n * @param {string} contactId The id of the contact whom it has been requested to delete from the address book\n * @returns {Object} A flux standard action representing the REMOVE_CONTACT action.\n */\nexport function removeContact (contactId) {\n  return {\n    type: actionTypes.REMOVE_CONTACT,\n    payload: contactId\n  }\n}\n\n/**\n * The finishing action which follows a REMOVE_CONTACT action\n * @param {Object} $0\n * @param {string} [$0.contactId] The id of the contact whom it has been requested to delete from the address book\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the REMOVE_CONTACT_FINISH action.\n */\nexport function removeContactFinish ({ contactId, error }) {\n  return {\n    type: actionTypes.REMOVE_CONTACT_FINISH,\n    payload: contactId || error,\n    error: !!error\n  }\n}\n\n/**\n * Updates the data for a contact in the Address Book\n * @param {Object} contact The contact object. The contact object must include the ID of the contact being targeted for an update action.\n * @returns {Object} A flux standard action representing the UPDATE_CONTACT action.\n */\nexport function updateContact (contact) {\n  return {\n    type: actionTypes.UPDATE_CONTACT,\n    payload: { contact }\n  }\n}\n\n/**\n * The finishing action which follows a UPDATE_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] A Basic error object\n * @returns {Object} A flux standard action representing the UPDATE_CONTACT_FINISH action.\n */\nexport function updateContactFinish ({ contact, error }) {\n  return {\n    type: actionTypes.UPDATE_CONTACT_FINISH,\n    payload: error || contact,\n    error: !!error\n  }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to Retrieves\n *      specific portions of the state.\n */\n\n/**\n * Gets the contacts from state.\n * @method getContacts\n * @return {Object}\n */\nexport function getContacts (state) {\n  return cloneDeep(state.users.contacts)\n}\n\n/**\n * Gets a contact from the state whose ID matches the supplied parameter\n * @method getContact\n * @return {Object}\n */\nexport function getContact (state, id) {\n  return cloneDeep(state.users.contacts[id])\n}\n\n/**\n * Gets the users from state.\n * @method getUsers\n * @return {Array<User>} An array of all the User objects.\n */\nexport function getUsers (state) {\n  const allUsers = cloneDeep(state.users.users)\n  return Object.values(allUsers)\n}\n\n/**\n * Gets the users from state.\n * @method getUser\n * @return {Object}\n */\nexport function getUser (state, name) {\n  return cloneDeep(state.users.users[name])\n}\n","// Contacts actions\n/**\n * A new contact has been added to the address book.\n * @public\n * @memberof contacts\n * @event contacts:new\n * @param {Object} contact The new contact.\n */\nexport const CONTACTS_NEW = 'contacts:new'\n\n/**\n * An error occurred while performing a contact operation.\n * @public\n * @memberof contacts\n * @event contacts:error\n * @param {Object} params\n * @param {Object} params.error The Basic error object.\n */\nexport const CONTACTS_ERROR = 'contacts:error'\n\n/**\n * The contacts list has changed.\n * @public\n * @memberof contacts\n * @event contacts:change\n * @example\n * client.on('contacts:change', function () {\n *    // Get the updated list of contacts.\n *    const contacts = client.contacts.getAll()\n *    ...\n * })\n */\nexport const CONTACTS_CHANGE = 'contacts:change'\n\n// Users actions\n/**\n * The directory has changed.\n * @public\n * @static\n * @memberof user\n * @event directory:change\n * @param {Object} params\n * @param {Array<user.User>} params.results The Users' information returned by the\n *    operation.\n */\nexport const DIRECTORY_CHANGE = 'directory:change'\n\n/**\n * An error occurred while performing a directory operation.\n * @public\n * @memberof user\n * @event directory:error\n * @param {Object} params\n * @param {Object} params.error The Basic error object.\n */\nexport const DIRECTORY_ERROR = 'directory:error'\n\n/**\n * A change has occurred in the users list\n * @public\n * @static\n * @memberof user\n * @event users:change\n * @param {Object} params\n * @param {Array<user.User>} params.results The Users' information returned by the\n *    operation.\n */\nexport const USERS_CHANGE = 'users:change'\n\n/**\n * An error occurred while retrieving the user information\n * @public\n * @static\n * @memberof user\n * @event users:error\n * @param {Object} params\n * @param {Object} params.error params.error The Basic error object.\n */\nexport const USERS_ERROR = 'users:error'\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","module.exports = curry;\n\n/*\n  function add(a, b, c) {\n    return a + b + c;\n  }\n  curry(add)(1)(2)(3); // 6\n  curry(add)(1)(2)(2); // 5\n  curry(add)(2)(4, 3); // 9\n\n  function add(...args) {\n    return args.reduce((sum, n) => sum + n, 0)\n  }\n  var curryAdd4 = curry(add, 4)\n  curryAdd4(1)(2, 3)(4); // 10\n\n  function converter(ratio, input) {\n    return (input*ratio).toFixed(1);\n  }\n  const curriedConverter = curry(converter)\n  const milesToKm = curriedConverter(1.62);\n  milesToKm(35); // 56.7\n  milesToKm(10); // 16.2\n*/\n\nfunction curry(fn, arity) {\n  return function curried() {\n    if (arity == null) {\n      arity = fn.length;\n    }\n    var args = [].slice.call(arguments);\n    if (args.length >= arity) {\n      return fn.apply(this, args);\n    } else {\n      return function() {\n        return curried.apply(this, args.concat([].slice.call(arguments)));\n      };\n    }\n  };\n}\n","import commonIndex from '../core'\n\nimport basePlugins from '../core/basePlugins'\nimport auth from '../../packages/kandy/src/auth/oldLink'\nimport call from '../../packages/kandy/src/call/oldLink' // TODO: Update when new Link is done.\nimport callHistory from '../../packages/kandy/src/callHistory'\nimport clickToCall from '../../packages/kandy/src/clickToCall'\nimport connectivity from '../../packages/kandy/src/connectivity/link'\nimport messaging from '../../packages/kandy/src/messaging/link'\nimport mwi from '../../packages/kandy/src/mwi/link'\nimport notifications from '../../packages/kandy/src/notifications/link'\nimport presence from '../../packages/kandy/src/presence/link'\nimport sipEvents from '../../packages/kandy/src/sipEvents'\nimport users from '../../packages/kandy/src/users/link'\nimport request from '../../packages/kandy/src/request'\nimport '../../packages/kandy/src/docs/docs'\n\nimport createCodecRemover from '../../packages/fcs/src/js/sdp/codecRemover'\n\nconst defaultPlugins = [\n  ...basePlugins,\n  { name: 'authentication', fn: auth },\n  { name: 'call', fn: call },\n  { name: 'callHistory', fn: callHistory },\n  { name: 'clickToCall', fn: clickToCall },\n  { name: 'connectivity', fn: connectivity },\n  { name: 'messaging', fn: messaging },\n  { name: 'mwi', fn: mwi },\n  { name: 'notifications', fn: notifications },\n  { name: 'presence', fn: presence },\n  { name: 'sipEvents', fn: sipEvents },\n  { name: 'users', fn: users },\n  { name: 'request', fn: request }\n]\n\nfunction root (options = {}, plugins = []) {\n  console.info(\n    '%cKandy.js 3.x is deprecated and will stop being supported as of November 1, 2020. Please plan to upgrade to 4.x before then. Here it is: ' +\n      'https://github.com/Kandy-IO/kandy-link-js-sdk',\n    'font-weight:bold'\n  )\n\n  return commonIndex(options, [...defaultPlugins, ...plugins])\n}\n\n// Alias 'create' to be equal to the root function\nroot.create = root\n\nroot.sdpHandlers = {\n  createCodecRemover\n}\n\n// Export this way as a work-around, so it can be used as `<export>();`.\n// See: https://github.com/webpack/webpack/issues/706\nmodule.exports = root\n","// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * The SDK creation factory. Create an instance of the SDK by calling this factory with the desired configurations.\n * The SDK instance will be referred as 'api' throughout the rest of the documentation content.\n * @public\n * @method create\n * @param {config} config The configuration object.\n * @return {api} The SDK instance.\n * @example\n * // Instantiate the SDK.\n * import { create } from 'kandy'\n * const client = create({\n *     authentication: { ... },\n *     logs: { ... },\n *     ...\n * });\n * // Use the SDK's API.\n * client.on( ... );\n */\n\n/**\n * The 'api' is the type returned by the create function.\n * It contains various top-level functions that pertain to SDK global instance\n * as well as several nested namespaces that pertain to various features (e.g. call, contacts, presence, etc).\n *\n * @public\n * @module api\n */\n\n/**\n * The configuration object. This object defines what different configuration\n * values you can use when instantiating the SDK using the {@link create} function.\n * @public\n * @module config\n */\n\n// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * A set of {@link call.SdpHandlerFunction SdpHandlerFunction}s for manipulating SDP information.\n * These handlers are used to customize low-level call behaviour for very specific\n * environments and/or scenarios.\n *\n * Note that SDP handlers are exposed on the entry point of the SDK. They can be added during\n * initialization of the SDK using the {@link #configconfigcall config.call.sdpHandlers} configuration\n * parameter. They can also be set after the SDK's creation by using the\n * {@link call.setSdpHandlers} function.\n *\n * @public\n * @namespace sdpHandlers\n * @example\n * import { create, sdpHandlers } from 'kandy';\n * const codecRemover = sdpHandlers.createCodecRemover(['VP8', 'VP9'])\n * const client = create({\n *   call: {\n *     sdpHandlers: [ codecRemover, <Your-SDP-Handler-Function>, ...]\n *   }\n * })\n * @example\n * // Through the Call API post-instantiation\n * client.call.setSdpHandlers([ codecRemover, <Your-SDP-Handler-Function>, ...])\n */\n\n/**\n * An object that represents a selector to match codecs of an RTP map in SDP.\n *\n * @public\n * @static\n * @typedef {Object} CodecSelector\n * @memberof sdpHandlers\n * @property {string} name The name of the codec.\n * @property {Array<string>} fmtpParams An array of strings to match against the \"a=fmtp\" format parameters for the corresponding codec.\n *                                      All of the elements in the array must be contained in the \"a=fmtp\" attribute in order to be a match.\n */\n\n/**\n * This function creates an SDP handler that will remove codecs matching the selectors specified for SDP offers and answers.\n *\n * In some scenarios it's necessary to remove certain codecs being offered by the SDK to remote parties. For example, some legacy call services limit the SDP\n * length (usually to 4KB) and will reject calls that have SDP size above this amount.\n *\n * While creating an SDP handler would allow a user to perform this type of manipulation, it is a non-trivial task that requires in-depth knowledge of WebRTC SDP.\n *\n * To facilitate this common task, the createCodecRemover function creates a codec removal handler that can be used for this purpose. Applications can use this codec\n * removal handler in combination with the {@link call.getAvailableCodecs call.getAvailableCodecs} function in order to build logic to determine the best codecs to use\n * for their application.\n *\n * @public\n * @memberof sdpHandlers\n * @method createCodecRemover\n * @param {Array<CodecSelector> | Array<string>} codecs A list of codec selectors to remove from the SDP. If passing a list of strings, they will be converted into\n *                                                      codec selectors that correspond to those names without any extra FMTP parameters.\n * @returns {call.SdpHandlerFunction} The resulting SDP handler that will remove the codec.\n * @example\n * import { create, sdpHandlers } from 'kandy';\n *\n * const codecRemover = sdpHandlers.createCodecRemover([\n *   // Remove all VP8 and VP9 codecs.\n *   'VP8',\n *   'VP9',\n *\n *   // Remove all H264 codecs with the specified FMTP parameters.\n *   {\n *     name: 'H264',\n *     fmtpParams: ['profile-level-id=4d0032', 'packetization-mode=1']\n *   }\n * ])\n *\n * const client = create({\n *   call: {\n *     sdpHandlers: [codecRemover]\n *   }\n * })\n *\n */\n\n/*\n * Index template file that is used to create pre-defined version of the SDK.\n */\nimport { factory } from '../../packages/kandy/src/factory'\nimport { _ } from 'lodash/fp'\n\n// This is a hack to fix an issue where Lodash will add itself to\n// the window scope even if it's loaded via ES6. You can remove this when\n// we have an answer to https://github.com/lodash/lodash/issues/1798 .\n// eslint-disable-next-line\nif (_) _.noConflict()\n\nexport default function commonIndex (options = {}, plugins = []) {\n  return factory(plugins, options)\n}\n","// Libraries.\nimport { combineReducers, createStore, applyMiddleware, compose as composeWithoutDevTools } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { cloneDeep, map, merge } from 'lodash/fp'\nimport { fork } from 'redux-saga/effects'\nimport compose from '@stamp/compose'\n\n// Helpers.\nimport { autoRestart, mergeValues } from './common/utils'\nimport { getVersion } from './common/version'\n\n// Plugins.\nimport { logManager } from './logs'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from './common/validation'\nconst log = logManager.getLogger('FACTORY')\n\nconst factoryDefaults = {\n  enableReduxDevTools: false,\n  reduxDevToolsName: 'WebRTC SDK',\n  allowProxy: false\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  enableReduxDevTools: v8n.boolean(),\n  reduxDevToolsName: v8n.string(),\n  allowProxy: v8n.boolean()\n})\nconst parseOptions = parse('common', v8nValidation)\n\n/**\n * Creates an instance of the SDK with the specified plugins and configuration.\n *\n * @param {Function[]} pluginFactories - The list of factories to create plugins for this instance of the SDK.\n * @param {Object} [sdkOptions] - Factory and plugin options\n * @param {Object} [sdkOptions.common] - Factory specific options\n * @param {boolean} [sdkOptions.common.enableReduxDevTools] - A flag to indicate whether or not to include Redux Dev Tools\n * @param {string}  [sdkOptions.common.reduxDevToolsName=\"WebRTC SDK\"] - The name of the store that will show up in the\n *                                          Redux Dev tools. This helps differentiate the SDK from other redux instances.\n * @param {boolean} [sdkOptions.allowProxy] Whether the factory should allow the Proxy Plugin to be included.\n */\nexport function factory (pluginFactories, sdkOptions = {}) {\n  // Log the SDK's version (templated by webpack) on initialization.\n  const version = getVersion()\n  log.info(`SDK version: ${version}`)\n\n  // Clone the options so we don't mutate the application's object.\n  const clonedOptions = cloneDeep(sdkOptions)\n  // Separate factory and plugin options.\n  let { common: options, ...pluginOptions } = clonedOptions\n\n  options = mergeValues(factoryDefaults, options)\n  parseOptions(options)\n\n  var sagas = []\n  var store\n  var middlewares = []\n  const apis = []\n  var reducers = {}\n  var initSagas = []\n  var taskDescriptor\n  const shared = {}\n  var context = {\n    capabilities: [],\n    api: {},\n    primitives: {},\n    getState () {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      if (destroyedSDK) {\n        throw Error('State is not available if the SDK has been destroyed')\n      }\n      return store.getState()\n    },\n    dispatch (...args) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.dispatch(...args)\n    },\n    subscribe (fn) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.subscribe(fn)\n    }\n  }\n\n  // Special case middleware for logging.\n  var loggerMiddleware\n\n  var destroyedSDK = false\n  var destroyedSDKMiddleware = store => next => action => {\n    if (destroyedSDK) {\n      return null\n    } else {\n      return next(action)\n    }\n  }\n\n  // Instantiate the plugins.\n  let plugins = map(function (plugin) {\n    // Make sure the plugin factory is actually a function.\n    if (!plugin || !plugin.fn || typeof plugin.fn !== 'function') {\n      return false\n    }\n\n    return plugin.fn(pluginOptions[plugin.name])\n  }, pluginFactories)\n\n  // Remove undefined plugins. Those are plugins that failed to load for some reason.\n  plugins = plugins.filter(plugin => Boolean(plugin))\n\n  // Run all the plugins to build the context.\n  // Set up each plugin component individually.\n  plugins.forEach(function (plugin) {\n    // Ignore the Proxy Plugin if not configured to allow it.\n    if (plugin.name === 'proxy' && !options.allowProxy) {\n      plugin = {}\n    }\n\n    if (plugin.capabilities) {\n      context.capabilities = context.capabilities.concat(plugin.capabilities)\n    }\n    if (plugin.reducer) {\n      reducers[plugin.name] = plugin.reducer\n    }\n    if (plugin.middleware) {\n      if (plugin.name === 'logs') {\n        loggerMiddleware = plugin.middleware\n      } else {\n        middlewares.push(() => plugin.middleware(context)) // pass context to middleware instead of store\n      }\n    }\n    if (plugin.api) {\n      apis.push(plugin.api)\n    }\n    if (plugin.init) {\n      initSagas.push(plugin.init)\n    }\n    if (plugin.sagas) {\n      sagas = sagas.concat(plugin.sagas)\n    }\n    // TODO: Revisit this. Looks a little extreme for a couple stamps...\n    if (plugin.mixins) {\n      // Define a base stamp that all stamps will be composed with.\n      //      This gives stamps access to the factory's context.\n      const baseStamp = {\n        propertyDescriptors: {\n          context: {\n            get () {\n              return context\n            }\n          }\n        }\n      }\n      for (const objName in plugin.mixins) {\n        if (plugin.mixins.hasOwnProperty(objName)) {\n          // Ensure that every stamp starts with the base stamp.\n          if (!context.primitives.hasOwnProperty(objName)) {\n            context.primitives[objName] = baseStamp\n          }\n          context.primitives[objName] = compose(context.primitives[objName], plugin.mixins[objName])\n        }\n      }\n    }\n\n    /**\n     * Plugins are allowed to share data between them by providing it to the\n     *    factory. All shared data will be collected as a single object, and\n     *    that object will be provided to plugins during their `init` saga.\n     * It is intended that a plugin can \"override\" another plugin's shared data.\n     * The order that plugins are given to the factory matters because of this.\n     * `plugin.shared` is expected to be an object.\n     */\n    if (plugin.shared) {\n      for (const key in plugin.shared) {\n        if (shared[key]) {\n          log.debug(`Replacing shared ${key} with ${key} from ${plugin.name}.`)\n          shared[key] = plugin.shared[key]\n        } else {\n          shared[key] = plugin.shared[key]\n        }\n      }\n    }\n  })\n\n  if (loggerMiddleware) {\n    // The redux logger middleware should be the last middleware.\n    middlewares.push(() => loggerMiddleware(context))\n  }\n\n  // Compose the root saga\n  function * rootSaga () {\n    // Give all plugins an opportunity to initialize themselves.\n    // Note: Sagas have not been forked yet, so init cannot use them\n    //      by dispatching actions. See PR #698.\n    // Note: If anything asynchronous is done in an init, it MUST be\n    //      non-blocking (ie. use fork, not call). See PR #699.\n    for (const init of initSagas) {\n      // Note: Yield directly to init. If redux-saga's `call()` is used, then the\n      //      factory returns before the instance is done all inits. See PR #699.\n      // Provide the factory's shared data (from plugins) to the `init` saga.\n      yield * init(shared)\n    }\n    // Run all of the sagas provided by implementation plugins.\n    for (const saga of sagas) {\n      yield fork(autoRestart(saga))\n    }\n  }\n\n  // Alias our composeMiddleware to conditionally include devTools as per the provided configuration flag\n  const composeMiddleware = options.enableReduxDevTools\n    ? composeWithDevTools({ name: options.reduxDevToolsName })\n    : composeWithoutDevTools\n\n  // don't include saga stuff if there are no sagas.\n  if (initSagas.length + sagas.length > 0) {\n    var sagaMiddleware = createSagaMiddleware()\n\n    // Create the store with the plugins (incl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, sagaMiddleware, ...middlewares))\n    )\n\n    taskDescriptor = sagaMiddleware.run(rootSaga)\n  } else {\n    // Create the store with the plugins (excl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, ...middlewares))\n    )\n  }\n\n  // Use the plugins' API factories to build the public API.\n  //    Do this after the store has been created.\n  apis.forEach(apiFactory => {\n    context.api = merge(context.api, apiFactory(context))\n  })\n\n  // setup the API\n  const publicAPI = {\n    ...context.api,\n    state: {\n      get: function () {\n        return store.getState()\n      },\n      subscribe: function (...args) {\n        return store.subscribe(...args)\n      }\n    },\n    /**\n     * Return all the capabilities currently available to the plugin system.\n     *\n     * @memberof api\n     * @method getCapabilities\n     */\n    getCapabilities () {\n      return context.capabilities\n    },\n    /**\n     * Returns the current version of the API.\n     *\n     * @public\n     * @memberof api\n     * @method getVersion\n     */\n    getVersion () {\n      return version\n    },\n    // Disabling eslint for the next comment as we want to be able to use a disallowed word\n    // eslint-disable-next-line no-warning-comments\n    /**\n     * Destroys the SDK, and removes its state, rendering the SDK unusable.\n     * Useful when a user logs out and their call data needs to be destroyed.\n     * The SDK must be recreated to be usable again.\n     * The destroy command is async, and will happen on the next tick\n     *   so as not to interfere with any ongoing events.\n     *\n     * @public\n     * @memberof api\n     * @method destroy\n     * @example\n     * // Instantiate the SDK.\n     * import { create } from 'kandy'\n     * const config = {\n     *     authentication: { ... },\n     *     logs: { ... },\n     *     ...\n     * }\n     * let client = create(config);\n     * client.on( ... )\n     * // Use the SDK\n     * ...\n     * // Destroy the SDK, then recreate on the next step\n     * client.destroy()\n     * client = create(config)\n     * client.on( ... )\n     */\n    destroy () {\n      // TODO: Is it possible for the store to auto-unsubscribe any listeners\n      //    (from client.state.subscribe API)? If not, may be easier to simply\n      //    protect from issues.\n\n      const _destroy = () => {\n        if (destroyedSDK) return\n\n        // Cancel all the sagas\n        if (taskDescriptor) taskDescriptor.cancel()\n\n        // Clear the state\n        function destroyStateReducer (state, action) {\n          return {}\n        }\n        store.replaceReducer(destroyStateReducer)\n\n        // Neuter all actions\n        destroyedSDK = true\n      }\n\n      // setTimeout is necessary so that the destroy\n      //   happens at the start of the next tick for\n      //   when destroy is called inside an event handler\n      const immediately = 0\n      setTimeout(_destroy, immediately)\n    }\n  }\n\n  // Return the public API.\n  return publicAPI\n}\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","'use strict';\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : function () {\n        if (arguments.length === 0) return undefined;\n        if (typeof arguments[0] === 'object') return compose;\n        return compose.apply(null, arguments);\n      };\n\nexports.devToolsEnhancer =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__\n    : function () {\n        return function (noop) {\n          return noop;\n        };\n      };\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&t(n[r],r,n)!==!1;);return n}function e(n,t){for(var r=null==n?0:n.length;r--&&t(n[r],r,n)!==!1;);return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;\nreturn!0}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!!(null==n?0:n.length)&&y(n,t,0)>-1}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);\nreturn r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function p(n){return n.split(\"\")}function _(n){return n.match($t)||[]}function v(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,!1}),e}function g(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function y(n,t,r){return t===t?Z(n,t,r):g(n,b,r)}function d(n,t,r,e){\nfor(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function b(n){return n!==n}function w(n,t){var r=null==n?0:n.length;return r?k(n,t)/r:Cn}function m(n){return function(t){return null==t?X:t[n]}}function x(n){return function(t){return null==n?X:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function A(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}function k(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==X&&(r=r===X?i:r+i);\n}return r}function O(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function I(n,t){return c(t,function(t){return[t,n[t]]})}function R(n){return n?n.slice(0,H(n)+1).replace(Lt,\"\"):n}function z(n){return function(t){return n(t)}}function E(n,t){return c(t,function(t){return n[t]})}function S(n,t){return n.has(t)}function W(n,t){for(var r=-1,e=n.length;++r<e&&y(t,n[r],0)>-1;);return r}function L(n,t){for(var r=n.length;r--&&y(t,n[r],0)>-1;);return r}function C(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;\nreturn e}function U(n){return\"\\\\\"+Yr[n]}function B(n,t){return null==n?X:n[t]}function T(n){return Nr.test(n)}function $(n){return Pr.test(n)}function D(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}function M(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function F(n,t){return function(r){return n(t(r))}}function N(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&o!==cn||(n[r]=cn,i[u++]=r)}return i}function P(n){var t=-1,r=Array(n.size);\nreturn n.forEach(function(n){r[++t]=n}),r}function q(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function Z(n,t,r){for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}function K(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}function V(n){return T(n)?J(n):_e(n)}function G(n){return T(n)?Y(n):p(n)}function H(n){for(var t=n.length;t--&&Ct.test(n.charAt(t)););return t}function J(n){for(var t=Mr.lastIndex=0;Mr.test(n);)++t;return t}function Y(n){return n.match(Mr)||[];\n}function Q(n){return n.match(Fr)||[]}var X,nn=\"4.17.21\",tn=200,rn=\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\",en=\"Expected a function\",un=\"Invalid `variable` option passed into `_.template`\",on=\"__lodash_hash_undefined__\",fn=500,cn=\"__lodash_placeholder__\",an=1,ln=2,sn=4,hn=1,pn=2,_n=1,vn=2,gn=4,yn=8,dn=16,bn=32,wn=64,mn=128,xn=256,jn=512,An=30,kn=\"...\",On=800,In=16,Rn=1,zn=2,En=3,Sn=1/0,Wn=9007199254740991,Ln=1.7976931348623157e308,Cn=NaN,Un=4294967295,Bn=Un-1,Tn=Un>>>1,$n=[[\"ary\",mn],[\"bind\",_n],[\"bindKey\",vn],[\"curry\",yn],[\"curryRight\",dn],[\"flip\",jn],[\"partial\",bn],[\"partialRight\",wn],[\"rearg\",xn]],Dn=\"[object Arguments]\",Mn=\"[object Array]\",Fn=\"[object AsyncFunction]\",Nn=\"[object Boolean]\",Pn=\"[object Date]\",qn=\"[object DOMException]\",Zn=\"[object Error]\",Kn=\"[object Function]\",Vn=\"[object GeneratorFunction]\",Gn=\"[object Map]\",Hn=\"[object Number]\",Jn=\"[object Null]\",Yn=\"[object Object]\",Qn=\"[object Promise]\",Xn=\"[object Proxy]\",nt=\"[object RegExp]\",tt=\"[object Set]\",rt=\"[object String]\",et=\"[object Symbol]\",ut=\"[object Undefined]\",it=\"[object WeakMap]\",ot=\"[object WeakSet]\",ft=\"[object ArrayBuffer]\",ct=\"[object DataView]\",at=\"[object Float32Array]\",lt=\"[object Float64Array]\",st=\"[object Int8Array]\",ht=\"[object Int16Array]\",pt=\"[object Int32Array]\",_t=\"[object Uint8Array]\",vt=\"[object Uint8ClampedArray]\",gt=\"[object Uint16Array]\",yt=\"[object Uint32Array]\",dt=/\\b__p \\+= '';/g,bt=/\\b(__p \\+=) '' \\+/g,wt=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,mt=/&(?:amp|lt|gt|quot|#39);/g,xt=/[&<>\"']/g,jt=RegExp(mt.source),At=RegExp(xt.source),kt=/<%-([\\s\\S]+?)%>/g,Ot=/<%([\\s\\S]+?)%>/g,It=/<%=([\\s\\S]+?)%>/g,Rt=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,zt=/^\\w*$/,Et=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,St=/[\\\\^$.*+?()[\\]{}|]/g,Wt=RegExp(St.source),Lt=/^\\s+/,Ct=/\\s/,Ut=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,Bt=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,Tt=/,? & /,$t=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,Dt=/[()=,{}\\[\\]\\/\\s]/,Mt=/\\\\(\\\\)?/g,Ft=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,Nt=/\\w*$/,Pt=/^[-+]0x[0-9a-f]+$/i,qt=/^0b[01]+$/i,Zt=/^\\[object .+?Constructor\\]$/,Kt=/^0o[0-7]+$/i,Vt=/^(?:0|[1-9]\\d*)$/,Gt=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Ht=/($^)/,Jt=/['\\n\\r\\u2028\\u2029\\\\]/g,Yt=\"\\\\ud800-\\\\udfff\",Qt=\"\\\\u0300-\\\\u036f\",Xt=\"\\\\ufe20-\\\\ufe2f\",nr=\"\\\\u20d0-\\\\u20ff\",tr=Qt+Xt+nr,rr=\"\\\\u2700-\\\\u27bf\",er=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",ur=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\",ir=\"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\",or=\"\\\\u2000-\\\\u206f\",fr=\" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",cr=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",ar=\"\\\\ufe0e\\\\ufe0f\",lr=ur+ir+or+fr,sr=\"['\\u2019]\",hr=\"[\"+Yt+\"]\",pr=\"[\"+lr+\"]\",_r=\"[\"+tr+\"]\",vr=\"\\\\d+\",gr=\"[\"+rr+\"]\",yr=\"[\"+er+\"]\",dr=\"[^\"+Yt+lr+vr+rr+er+cr+\"]\",br=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",wr=\"(?:\"+_r+\"|\"+br+\")\",mr=\"[^\"+Yt+\"]\",xr=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",jr=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",Ar=\"[\"+cr+\"]\",kr=\"\\\\u200d\",Or=\"(?:\"+yr+\"|\"+dr+\")\",Ir=\"(?:\"+Ar+\"|\"+dr+\")\",Rr=\"(?:\"+sr+\"(?:d|ll|m|re|s|t|ve))?\",zr=\"(?:\"+sr+\"(?:D|LL|M|RE|S|T|VE))?\",Er=wr+\"?\",Sr=\"[\"+ar+\"]?\",Wr=\"(?:\"+kr+\"(?:\"+[mr,xr,jr].join(\"|\")+\")\"+Sr+Er+\")*\",Lr=\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",Cr=\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",Ur=Sr+Er+Wr,Br=\"(?:\"+[gr,xr,jr].join(\"|\")+\")\"+Ur,Tr=\"(?:\"+[mr+_r+\"?\",_r,xr,jr,hr].join(\"|\")+\")\",$r=RegExp(sr,\"g\"),Dr=RegExp(_r,\"g\"),Mr=RegExp(br+\"(?=\"+br+\")|\"+Tr+Ur,\"g\"),Fr=RegExp([Ar+\"?\"+yr+\"+\"+Rr+\"(?=\"+[pr,Ar,\"$\"].join(\"|\")+\")\",Ir+\"+\"+zr+\"(?=\"+[pr,Ar+Or,\"$\"].join(\"|\")+\")\",Ar+\"?\"+Or+\"+\"+Rr,Ar+\"+\"+zr,Cr,Lr,vr,Br].join(\"|\"),\"g\"),Nr=RegExp(\"[\"+kr+Yt+tr+ar+\"]\"),Pr=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,qr=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],Zr=-1,Kr={};\nKr[at]=Kr[lt]=Kr[st]=Kr[ht]=Kr[pt]=Kr[_t]=Kr[vt]=Kr[gt]=Kr[yt]=!0,Kr[Dn]=Kr[Mn]=Kr[ft]=Kr[Nn]=Kr[ct]=Kr[Pn]=Kr[Zn]=Kr[Kn]=Kr[Gn]=Kr[Hn]=Kr[Yn]=Kr[nt]=Kr[tt]=Kr[rt]=Kr[it]=!1;var Vr={};Vr[Dn]=Vr[Mn]=Vr[ft]=Vr[ct]=Vr[Nn]=Vr[Pn]=Vr[at]=Vr[lt]=Vr[st]=Vr[ht]=Vr[pt]=Vr[Gn]=Vr[Hn]=Vr[Yn]=Vr[nt]=Vr[tt]=Vr[rt]=Vr[et]=Vr[_t]=Vr[vt]=Vr[gt]=Vr[yt]=!0,Vr[Zn]=Vr[Kn]=Vr[it]=!1;var Gr={\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\n\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\n\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\n\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\n\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\n\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\"\\u017f\":\"s\"},Hr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},Jr={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"},Yr={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Qr=parseFloat,Xr=parseInt,ne=\"object\"==typeof global&&global&&global.Object===Object&&global,te=\"object\"==typeof self&&self&&self.Object===Object&&self,re=ne||te||Function(\"return this\")(),ee=\"object\"==typeof exports&&exports&&!exports.nodeType&&exports,ue=ee&&\"object\"==typeof module&&module&&!module.nodeType&&module,ie=ue&&ue.exports===ee,oe=ie&&ne.process,fe=function(){\ntry{var n=ue&&ue.require&&ue.require(\"util\").types;return n?n:oe&&oe.binding&&oe.binding(\"util\")}catch(n){}}(),ce=fe&&fe.isArrayBuffer,ae=fe&&fe.isDate,le=fe&&fe.isMap,se=fe&&fe.isRegExp,he=fe&&fe.isSet,pe=fe&&fe.isTypedArray,_e=m(\"length\"),ve=x(Gr),ge=x(Hr),ye=x(Jr),de=function p(x){function Z(n){if(cc(n)&&!bh(n)&&!(n instanceof Ct)){if(n instanceof Y)return n;if(bl.call(n,\"__wrapped__\"))return eo(n)}return new Y(n)}function J(){}function Y(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,\nthis.__index__=0,this.__values__=X}function Ct(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Un,this.__views__=[]}function $t(){var n=new Ct(this.__wrapped__);return n.__actions__=Tu(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Tu(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Tu(this.__views__),n}function Yt(){if(this.__filtered__){var n=new Ct(this);n.__dir__=-1,\nn.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function Qt(){var n=this.__wrapped__.value(),t=this.__dir__,r=bh(n),e=t<0,u=r?n.length:0,i=Oi(0,u,this.__views__),o=i.start,f=i.end,c=f-o,a=e?f:o-1,l=this.__iteratees__,s=l.length,h=0,p=Hl(c,this.__takeCount__);if(!r||!e&&u==c&&p==c)return wu(n,this.__actions__);var _=[];n:for(;c--&&h<p;){a+=t;for(var v=-1,g=n[a];++v<s;){var y=l[v],d=y.iteratee,b=y.type,w=d(g);if(b==zn)g=w;else if(!w){if(b==Rn)continue n;break n}}_[h++]=g}return _}function Xt(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function nr(){this.__data__=is?is(null):{},this.size=0}function tr(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t}function rr(n){var t=this.__data__;if(is){var r=t[n];return r===on?X:r}return bl.call(t,n)?t[n]:X}function er(n){var t=this.__data__;return is?t[n]!==X:bl.call(t,n)}function ur(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=is&&t===X?on:t,this}function ir(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function or(){this.__data__=[],this.size=0}function fr(n){var t=this.__data__,r=Wr(t,n);return!(r<0)&&(r==t.length-1?t.pop():Ll.call(t,r,1),--this.size,!0)}function cr(n){var t=this.__data__,r=Wr(t,n);return r<0?X:t[r][1]}function ar(n){return Wr(this.__data__,n)>-1}function lr(n,t){var r=this.__data__,e=Wr(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this}function sr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){\nvar e=n[t];this.set(e[0],e[1])}}function hr(){this.size=0,this.__data__={hash:new Xt,map:new(ts||ir),string:new Xt}}function pr(n){var t=xi(this,n).delete(n);return this.size-=t?1:0,t}function _r(n){return xi(this,n).get(n)}function vr(n){return xi(this,n).has(n)}function gr(n,t){var r=xi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function yr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new sr;++t<r;)this.add(n[t])}function dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn this.__data__.has(n)}function wr(n){this.size=(this.__data__=new ir(n)).size}function mr(){this.__data__=new ir,this.size=0}function xr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function jr(n){return this.__data__.get(n)}function Ar(n){return this.__data__.has(n)}function kr(n,t){var r=this.__data__;if(r instanceof ir){var e=r.__data__;if(!ts||e.length<tn-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new sr(e)}return r.set(n,t),this.size=r.size,this}function Or(n,t){\nvar r=bh(n),e=!r&&dh(n),u=!r&&!e&&mh(n),i=!r&&!e&&!u&&Oh(n),o=r||e||u||i,f=o?O(n.length,hl):[],c=f.length;for(var a in n)!t&&!bl.call(n,a)||o&&(\"length\"==a||u&&(\"offset\"==a||\"parent\"==a)||i&&(\"buffer\"==a||\"byteLength\"==a||\"byteOffset\"==a)||Ci(a,c))||f.push(a);return f}function Ir(n){var t=n.length;return t?n[tu(0,t-1)]:X}function Rr(n,t){return Xi(Tu(n),Mr(t,0,n.length))}function zr(n){return Xi(Tu(n))}function Er(n,t,r){(r===X||Gf(n[t],r))&&(r!==X||t in n)||Br(n,t,r)}function Sr(n,t,r){var e=n[t];\nbl.call(n,t)&&Gf(e,r)&&(r!==X||t in n)||Br(n,t,r)}function Wr(n,t){for(var r=n.length;r--;)if(Gf(n[r][0],t))return r;return-1}function Lr(n,t,r,e){return ys(n,function(n,u,i){t(e,n,r(n),i)}),e}function Cr(n,t){return n&&$u(t,Pc(t),n)}function Ur(n,t){return n&&$u(t,qc(t),n)}function Br(n,t,r){\"__proto__\"==t&&Tl?Tl(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function Tr(n,t){for(var r=-1,e=t.length,u=il(e),i=null==n;++r<e;)u[r]=i?X:Mc(n,t[r]);return u}function Mr(n,t,r){return n===n&&(r!==X&&(n=n<=r?n:r),\nt!==X&&(n=n>=t?n:t)),n}function Fr(n,t,e,u,i,o){var f,c=t&an,a=t&ln,l=t&sn;if(e&&(f=i?e(n,u,i,o):e(n)),f!==X)return f;if(!fc(n))return n;var s=bh(n);if(s){if(f=zi(n),!c)return Tu(n,f)}else{var h=zs(n),p=h==Kn||h==Vn;if(mh(n))return Iu(n,c);if(h==Yn||h==Dn||p&&!i){if(f=a||p?{}:Ei(n),!c)return a?Mu(n,Ur(f,n)):Du(n,Cr(f,n))}else{if(!Vr[h])return i?n:{};f=Si(n,h,c)}}o||(o=new wr);var _=o.get(n);if(_)return _;o.set(n,f),kh(n)?n.forEach(function(r){f.add(Fr(r,t,e,r,n,o))}):jh(n)&&n.forEach(function(r,u){\nf.set(u,Fr(r,t,e,u,n,o))});var v=l?a?di:yi:a?qc:Pc,g=s?X:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),Sr(f,u,Fr(r,t,e,u,n,o))}),f}function Nr(n){var t=Pc(n);return function(r){return Pr(r,n,t)}}function Pr(n,t,r){var e=r.length;if(null==n)return!e;for(n=ll(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===X&&!(u in n)||!i(o))return!1}return!0}function Gr(n,t,r){if(\"function\"!=typeof n)throw new pl(en);return Ws(function(){n.apply(X,r)},t)}function Hr(n,t,r,e){var u=-1,i=o,a=!0,l=n.length,s=[],h=t.length;\nif(!l)return s;r&&(t=c(t,z(r))),e?(i=f,a=!1):t.length>=tn&&(i=S,a=!1,t=new yr(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p);if(p=e||0!==p?p:0,a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function Jr(n,t){var r=!0;return ys(n,function(n,e,u){return r=!!t(n,e,u)}),r}function Yr(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===X?o===o&&!bc(o):r(o,f)))var f=o,c=i}return c}function ne(n,t,r,e){var u=n.length;for(r=kc(r),r<0&&(r=-r>u?0:u+r),\ne=e===X||e>u?u:kc(e),e<0&&(e+=u),e=r>e?0:Oc(e);r<e;)n[r++]=t;return n}function te(n,t){var r=[];return ys(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function ee(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=Li),u||(u=[]);++i<o;){var f=n[i];t>0&&r(f)?t>1?ee(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function ue(n,t){return n&&bs(n,t,Pc)}function oe(n,t){return n&&ws(n,t,Pc)}function fe(n,t){return i(t,function(t){return uc(n[t])})}function _e(n,t){t=ku(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[no(t[r++])];\nreturn r&&r==e?n:X}function de(n,t,r){var e=t(n);return bh(n)?e:a(e,r(n))}function we(n){return null==n?n===X?ut:Jn:Bl&&Bl in ll(n)?ki(n):Ki(n)}function me(n,t){return n>t}function xe(n,t){return null!=n&&bl.call(n,t)}function je(n,t){return null!=n&&t in ll(n)}function Ae(n,t,r){return n>=Hl(t,r)&&n<Gl(t,r)}function ke(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=il(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,z(t))),s=Hl(p.length,s),l[a]=!r&&(t||u>=120&&p.length>=120)?new yr(a&&p):X}p=n[0];\nvar _=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],y=t?t(g):g;if(g=r||0!==g?g:0,!(v?S(v,y):e(h,y,r))){for(a=i;--a;){var d=l[a];if(!(d?S(d,y):e(n[a],y,r)))continue n}v&&v.push(y),h.push(g)}}return h}function Oe(n,t,r,e){return ue(n,function(n,u,i){t(e,r(n),u,i)}),e}function Ie(t,r,e){r=ku(r,t),t=Gi(t,r);var u=null==t?t:t[no(jo(r))];return null==u?X:n(u,t,e)}function Re(n){return cc(n)&&we(n)==Dn}function ze(n){return cc(n)&&we(n)==ft}function Ee(n){return cc(n)&&we(n)==Pn}function Se(n,t,r,e,u){\nreturn n===t||(null==n||null==t||!cc(n)&&!cc(t)?n!==n&&t!==t:We(n,t,r,e,Se,u))}function We(n,t,r,e,u,i){var o=bh(n),f=bh(t),c=o?Mn:zs(n),a=f?Mn:zs(t);c=c==Dn?Yn:c,a=a==Dn?Yn:a;var l=c==Yn,s=a==Yn,h=c==a;if(h&&mh(n)){if(!mh(t))return!1;o=!0,l=!1}if(h&&!l)return i||(i=new wr),o||Oh(n)?pi(n,t,r,e,u,i):_i(n,t,c,r,e,u,i);if(!(r&hn)){var p=l&&bl.call(n,\"__wrapped__\"),_=s&&bl.call(t,\"__wrapped__\");if(p||_){var v=p?n.value():n,g=_?t.value():t;return i||(i=new wr),u(v,g,r,e,i)}}return!!h&&(i||(i=new wr),vi(n,t,r,e,u,i));\n}function Le(n){return cc(n)&&zs(n)==Gn}function Ce(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=ll(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return!1}for(;++u<i;){f=r[u];var c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===X&&!(c in n))return!1}else{var s=new wr;if(e)var h=e(a,l,c,n,t,s);if(!(h===X?Se(l,a,hn|pn,e,s):h))return!1}}return!0}function Ue(n){return!(!fc(n)||Di(n))&&(uc(n)?kl:Zt).test(to(n))}function Be(n){return cc(n)&&we(n)==nt}function Te(n){return cc(n)&&zs(n)==tt;\n}function $e(n){return cc(n)&&oc(n.length)&&!!Kr[we(n)]}function De(n){return\"function\"==typeof n?n:null==n?La:\"object\"==typeof n?bh(n)?Ze(n[0],n[1]):qe(n):Fa(n)}function Me(n){if(!Mi(n))return Vl(n);var t=[];for(var r in ll(n))bl.call(n,r)&&\"constructor\"!=r&&t.push(r);return t}function Fe(n){if(!fc(n))return Zi(n);var t=Mi(n),r=[];for(var e in n)(\"constructor\"!=e||!t&&bl.call(n,e))&&r.push(e);return r}function Ne(n,t){return n<t}function Pe(n,t){var r=-1,e=Hf(n)?il(n.length):[];return ys(n,function(n,u,i){\ne[++r]=t(n,u,i)}),e}function qe(n){var t=ji(n);return 1==t.length&&t[0][2]?Ni(t[0][0],t[0][1]):function(r){return r===n||Ce(r,n,t)}}function Ze(n,t){return Bi(n)&&Fi(t)?Ni(no(n),t):function(r){var e=Mc(r,n);return e===X&&e===t?Nc(r,n):Se(t,e,hn|pn)}}function Ke(n,t,r,e,u){n!==t&&bs(t,function(i,o){if(u||(u=new wr),fc(i))Ve(n,t,o,r,Ke,e,u);else{var f=e?e(Ji(n,o),i,o+\"\",n,t,u):X;f===X&&(f=i),Er(n,o,f)}},qc)}function Ve(n,t,r,e,u,i,o){var f=Ji(n,r),c=Ji(t,r),a=o.get(c);if(a)return Er(n,r,a),X;var l=i?i(f,c,r+\"\",n,t,o):X,s=l===X;\nif(s){var h=bh(c),p=!h&&mh(c),_=!h&&!p&&Oh(c);l=c,h||p||_?bh(f)?l=f:Jf(f)?l=Tu(f):p?(s=!1,l=Iu(c,!0)):_?(s=!1,l=Wu(c,!0)):l=[]:gc(c)||dh(c)?(l=f,dh(f)?l=Rc(f):fc(f)&&!uc(f)||(l=Ei(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Er(n,r,l)}function Ge(n,t){var r=n.length;if(r)return t+=t<0?r:0,Ci(t,r)?n[t]:X}function He(n,t,r){t=t.length?c(t,function(n){return bh(n)?function(t){return _e(t,1===n.length?n[0]:n)}:n}):[La];var e=-1;return t=c(t,z(mi())),A(Pe(n,function(n,r,u){return{criteria:c(t,function(t){\nreturn t(n)}),index:++e,value:n}}),function(n,t){return Cu(n,t,r)})}function Je(n,t){return Ye(n,t,function(t,r){return Nc(n,r)})}function Ye(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=_e(n,o);r(f,o)&&fu(i,ku(o,n),f)}return i}function Qe(n){return function(t){return _e(t,n)}}function Xe(n,t,r,e){var u=e?d:y,i=-1,o=t.length,f=n;for(n===t&&(t=Tu(t)),r&&(f=c(n,z(r)));++i<o;)for(var a=0,l=t[i],s=r?r(l):l;(a=u(f,s,a,e))>-1;)f!==n&&Ll.call(f,a,1),Ll.call(n,a,1);return n}function nu(n,t){for(var r=n?t.length:0,e=r-1;r--;){\nvar u=t[r];if(r==e||u!==i){var i=u;Ci(u)?Ll.call(n,u,1):yu(n,u)}}return n}function tu(n,t){return n+Nl(Ql()*(t-n+1))}function ru(n,t,r,e){for(var u=-1,i=Gl(Fl((t-n)/(r||1)),0),o=il(i);i--;)o[e?i:++u]=n,n+=r;return o}function eu(n,t){var r=\"\";if(!n||t<1||t>Wn)return r;do t%2&&(r+=n),t=Nl(t/2),t&&(n+=n);while(t);return r}function uu(n,t){return Ls(Vi(n,t,La),n+\"\")}function iu(n){return Ir(ra(n))}function ou(n,t){var r=ra(n);return Xi(r,Mr(t,0,r.length))}function fu(n,t,r,e){if(!fc(n))return n;t=ku(t,n);\nfor(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=no(t[u]),a=r;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return n;if(u!=o){var l=f[c];a=e?e(l,c,f):X,a===X&&(a=fc(l)?l:Ci(t[u+1])?[]:{})}Sr(f,c,a),f=f[c]}return n}function cu(n){return Xi(ra(n))}function au(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),r=r>u?u:r,r<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=il(u);++e<u;)i[e]=n[e+t];return i}function lu(n,t){var r;return ys(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function su(n,t,r){\nvar e=0,u=null==n?e:n.length;if(\"number\"==typeof t&&t===t&&u<=Tn){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!bc(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return hu(n,t,La,r)}function hu(n,t,r,e){var u=0,i=null==n?0:n.length;if(0===i)return 0;t=r(t);for(var o=t!==t,f=null===t,c=bc(t),a=t===X;u<i;){var l=Nl((u+i)/2),s=r(n[l]),h=s!==X,p=null===s,_=s===s,v=bc(s);if(o)var g=e||_;else g=a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):!p&&!v&&(e?s<=t:s<t);g?u=l+1:i=l}return Hl(i,Bn)}function pu(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){\nvar o=n[r],f=t?t(o):o;if(!r||!Gf(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function _u(n){return\"number\"==typeof n?n:bc(n)?Cn:+n}function vu(n){if(\"string\"==typeof n)return n;if(bh(n))return c(n,vu)+\"\";if(bc(n))return vs?vs.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function gu(n,t,r){var e=-1,u=o,i=n.length,c=!0,a=[],l=a;if(r)c=!1,u=f;else if(i>=tn){var s=t?null:ks(n);if(s)return P(s);c=!1,u=S,l=new yr}else l=t?[]:a;n:for(;++e<i;){var h=n[e],p=t?t(h):h;if(h=r||0!==h?h:0,c&&p===p){for(var _=l.length;_--;)if(l[_]===p)continue n;\nt&&l.push(p),a.push(h)}else u(l,p,r)||(l!==a&&l.push(p),a.push(h))}return a}function yu(n,t){return t=ku(t,n),n=Gi(n,t),null==n||delete n[no(jo(t))]}function du(n,t,r,e){return fu(n,t,r(_e(n,t)),e)}function bu(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?au(n,e?0:i,e?i+1:u):au(n,e?i+1:0,e?u:i)}function wu(n,t){var r=n;return r instanceof Ct&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mu(n,t,r){var e=n.length;if(e<2)return e?gu(n[0]):[];\nfor(var u=-1,i=il(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=Hr(i[u]||o,n[f],t,r));return gu(ee(i,1),t,r)}function xu(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;){r(o,n[e],e<i?t[e]:X)}return o}function ju(n){return Jf(n)?n:[]}function Au(n){return\"function\"==typeof n?n:La}function ku(n,t){return bh(n)?n:Bi(n,t)?[n]:Cs(Ec(n))}function Ou(n,t,r){var e=n.length;return r=r===X?e:r,!t&&r>=e?n:au(n,t,r)}function Iu(n,t){if(t)return n.slice();var r=n.length,e=zl?zl(r):new n.constructor(r);\nreturn n.copy(e),e}function Ru(n){var t=new n.constructor(n.byteLength);return new Rl(t).set(new Rl(n)),t}function zu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.byteLength)}function Eu(n){var t=new n.constructor(n.source,Nt.exec(n));return t.lastIndex=n.lastIndex,t}function Su(n){return _s?ll(_s.call(n)):{}}function Wu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.length)}function Lu(n,t){if(n!==t){var r=n!==X,e=null===n,u=n===n,i=bc(n),o=t!==X,f=null===t,c=t===t,a=bc(t);\nif(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Cu(n,t,r){for(var e=-1,u=n.criteria,i=t.criteria,o=u.length,f=r.length;++e<o;){var c=Lu(u[e],i[e]);if(c){if(e>=f)return c;return c*(\"desc\"==r[e]?-1:1)}}return n.index-t.index}function Uu(n,t,r,e){for(var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Gl(i-o,0),l=il(c+a),s=!e;++f<c;)l[f]=t[f];for(;++u<o;)(s||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];return l;\n}function Bu(n,t,r,e){for(var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Gl(i-f,0),s=il(l+a),h=!e;++u<l;)s[u]=n[u];for(var p=u;++c<a;)s[p+c]=t[c];for(;++o<f;)(h||u<i)&&(s[p+r[o]]=n[u++]);return s}function Tu(n,t){var r=-1,e=n.length;for(t||(t=il(e));++r<e;)t[r]=n[r];return t}function $u(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):X;c===X&&(c=n[f]),u?Br(r,f,c):Sr(r,f,c)}return r}function Du(n,t){return $u(n,Is(n),t)}function Mu(n,t){return $u(n,Rs(n),t);\n}function Fu(n,r){return function(e,u){var i=bh(e)?t:Lr,o=r?r():{};return i(e,n,mi(u,2),o)}}function Nu(n){return uu(function(t,r){var e=-1,u=r.length,i=u>1?r[u-1]:X,o=u>2?r[2]:X;for(i=n.length>3&&\"function\"==typeof i?(u--,i):X,o&&Ui(r[0],r[1],o)&&(i=u<3?X:i,u=1),t=ll(t);++e<u;){var f=r[e];f&&n(t,f,e,i)}return t})}function Pu(n,t){return function(r,e){if(null==r)return r;if(!Hf(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=ll(r);(t?i--:++i<u)&&e(o[i],i,o)!==!1;);return r}}function qu(n){return function(t,r,e){\nfor(var u=-1,i=ll(t),o=e(t),f=o.length;f--;){var c=o[n?f:++u];if(r(i[c],c,i)===!1)break}return t}}function Zu(n,t,r){function e(){return(this&&this!==re&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=t&_n,i=Gu(n);return e}function Ku(n){return function(t){t=Ec(t);var r=T(t)?G(t):X,e=r?r[0]:t.charAt(0),u=r?Ou(r,1).join(\"\"):t.slice(1);return e[n]()+u}}function Vu(n){return function(t){return l(Ra(ca(t).replace($r,\"\")),n,\"\")}}function Gu(n){return function(){var t=arguments;switch(t.length){\ncase 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=gs(n.prototype),e=n.apply(r,t);return fc(e)?e:r}}function Hu(t,r,e){function u(){for(var o=arguments.length,f=il(o),c=o,a=wi(u);c--;)f[c]=arguments[c];var l=o<3&&f[0]!==a&&f[o-1]!==a?[]:N(f,a);\nreturn o-=l.length,o<e?oi(t,r,Qu,u.placeholder,X,f,l,X,X,e-o):n(this&&this!==re&&this instanceof u?i:t,this,f)}var i=Gu(t);return u}function Ju(n){return function(t,r,e){var u=ll(t);if(!Hf(t)){var i=mi(r,3);t=Pc(t),r=function(n){return i(u[n],n,u)}}var o=n(t,r,e);return o>-1?u[i?t[o]:o]:X}}function Yu(n){return gi(function(t){var r=t.length,e=r,u=Y.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(\"function\"!=typeof i)throw new pl(en);if(u&&!o&&\"wrapper\"==bi(i))var o=new Y([],!0)}for(e=o?e:r;++e<r;){\ni=t[e];var f=bi(i),c=\"wrapper\"==f?Os(i):X;o=c&&$i(c[0])&&c[1]==(mn|yn|bn|xn)&&!c[4].length&&1==c[9]?o[bi(c[0])].apply(o,c[3]):1==i.length&&$i(i)?o[f]():o.thru(i)}return function(){var n=arguments,e=n[0];if(o&&1==n.length&&bh(e))return o.plant(e).value();for(var u=0,i=r?t[u].apply(this,n):e;++u<r;)i=t[u].call(this,i);return i}})}function Qu(n,t,r,e,u,i,o,f,c,a){function l(){for(var y=arguments.length,d=il(y),b=y;b--;)d[b]=arguments[b];if(_)var w=wi(l),m=C(d,w);if(e&&(d=Uu(d,e,u,_)),i&&(d=Bu(d,i,o,_)),\ny-=m,_&&y<a){return oi(n,t,Qu,l.placeholder,r,d,N(d,w),f,c,a-y)}var x=h?r:this,j=p?x[n]:n;return y=d.length,f?d=Hi(d,f):v&&y>1&&d.reverse(),s&&c<y&&(d.length=c),this&&this!==re&&this instanceof l&&(j=g||Gu(j)),j.apply(x,d)}var s=t&mn,h=t&_n,p=t&vn,_=t&(yn|dn),v=t&jn,g=p?X:Gu(n);return l}function Xu(n,t){return function(r,e){return Oe(r,n,t(e),{})}}function ni(n,t){return function(r,e){var u;if(r===X&&e===X)return t;if(r!==X&&(u=r),e!==X){if(u===X)return e;\"string\"==typeof r||\"string\"==typeof e?(r=vu(r),\ne=vu(e)):(r=_u(r),e=_u(e)),u=n(r,e)}return u}}function ti(t){return gi(function(r){return r=c(r,z(mi())),uu(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ri(n,t){t=t===X?\" \":vu(t);var r=t.length;if(r<2)return r?eu(t,n):t;var e=eu(t,Fl(n/V(t)));return T(t)?Ou(G(e),0,n).join(\"\"):e.slice(0,n)}function ei(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=il(l+c),h=this&&this!==re&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];\nreturn n(h,o?e:this,s)}var o=r&_n,f=Gu(t);return i}function ui(n){return function(t,r,e){return e&&\"number\"!=typeof e&&Ui(t,r,e)&&(r=e=X),t=Ac(t),r===X?(r=t,t=0):r=Ac(r),e=e===X?t<r?1:-1:Ac(e),ru(t,r,e,n)}}function ii(n){return function(t,r){return\"string\"==typeof t&&\"string\"==typeof r||(t=Ic(t),r=Ic(r)),n(t,r)}}function oi(n,t,r,e,u,i,o,f,c,a){var l=t&yn,s=l?o:X,h=l?X:o,p=l?i:X,_=l?X:i;t|=l?bn:wn,t&=~(l?wn:bn),t&gn||(t&=~(_n|vn));var v=[n,t,u,p,s,_,h,f,c,a],g=r.apply(X,v);return $i(n)&&Ss(g,v),g.placeholder=e,\nYi(g,n,t)}function fi(n){var t=al[n];return function(n,r){if(n=Ic(n),r=null==r?0:Hl(kc(r),292),r&&Zl(n)){var e=(Ec(n)+\"e\").split(\"e\");return e=(Ec(t(e[0]+\"e\"+(+e[1]+r)))+\"e\").split(\"e\"),+(e[0]+\"e\"+(+e[1]-r))}return t(n)}}function ci(n){return function(t){var r=zs(t);return r==Gn?M(t):r==tt?q(t):I(t,n(t))}}function ai(n,t,r,e,u,i,o,f){var c=t&vn;if(!c&&\"function\"!=typeof n)throw new pl(en);var a=e?e.length:0;if(a||(t&=~(bn|wn),e=u=X),o=o===X?o:Gl(kc(o),0),f=f===X?f:kc(f),a-=u?u.length:0,t&wn){var l=e,s=u;\ne=u=X}var h=c?X:Os(n),p=[n,t,r,e,u,l,s,i,o,f];if(h&&qi(p,h),n=p[0],t=p[1],r=p[2],e=p[3],u=p[4],f=p[9]=p[9]===X?c?0:n.length:Gl(p[9]-a,0),!f&&t&(yn|dn)&&(t&=~(yn|dn)),t&&t!=_n)_=t==yn||t==dn?Hu(n,t,f):t!=bn&&t!=(_n|bn)||u.length?Qu.apply(X,p):ei(n,t,r,e);else var _=Zu(n,t,r);return Yi((h?ms:Ss)(_,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u(v,g,r,e,i)){p=!1;break}}return i.delete(n),i.delete(t),p}function _i(n,t,r,e,u,i,o){switch(r){case ct:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;\nn=n.buffer,t=t.buffer;case ft:return!(n.byteLength!=t.byteLength||!i(new Rl(n),new Rl(t)));case Nn:case Pn:case Hn:return Gf(+n,+t);case Zn:return n.name==t.name&&n.message==t.message;case nt:case rt:return n==t+\"\";case Gn:var f=M;case tt:var c=e&hn;if(f||(f=P),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&\"constructor\"in t&&!(\"function\"==typeof d&&d instanceof d&&\"function\"==typeof b&&b instanceof b)&&(p=!1)}return i.delete(n),\ni.delete(t),p}function gi(n){return Ls(Vi(n,X,_o),n+\"\")}function yi(n){return de(n,Pc,Is)}function di(n){return de(n,qc,Rs)}function bi(n){for(var t=n.name+\"\",r=fs[t],e=bl.call(fs,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function wi(n){return(bl.call(Z,\"placeholder\")?Z:n).placeholder}function mi(){var n=Z.iteratee||Ca;return n=n===Ca?De:n,arguments.length?n(arguments[0],arguments[1]):n}function xi(n,t){var r=n.__data__;return Ti(t)?r[\"string\"==typeof t?\"string\":\"hash\"]:r.map;\n}function ji(n){for(var t=Pc(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,Fi(u)]}return t}function Ai(n,t){var r=B(n,t);return Ue(r)?r:X}function ki(n){var t=bl.call(n,Bl),r=n[Bl];try{n[Bl]=X;var e=!0}catch(n){}var u=xl.call(n);return e&&(t?n[Bl]=r:delete n[Bl]),u}function Oi(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case\"drop\":n+=o;break;case\"dropRight\":t-=o;break;case\"take\":t=Hl(t,n+o);break;case\"takeRight\":n=Gl(n,t-o)}}return{start:n,end:t}}function Ii(n){var t=n.match(Bt);\nreturn t?t[1].split(Tt):[]}function Ri(n,t,r){t=ku(t,n);for(var e=-1,u=t.length,i=!1;++e<u;){var o=no(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&oc(u)&&Ci(o,u)&&(bh(n)||dh(n)))}function zi(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&bl.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}function Ei(n){return\"function\"!=typeof n.constructor||Mi(n)?{}:gs(El(n))}function Si(n,t,r){var e=n.constructor;switch(t){case ft:return Ru(n);\ncase Nn:case Pn:return new e(+n);case ct:return zu(n,r);case at:case lt:case st:case ht:case pt:case _t:case vt:case gt:case yt:return Wu(n,r);case Gn:return new e;case Hn:case rt:return new e(n);case nt:return Eu(n);case tt:return new e;case et:return Su(n)}}function Wi(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?\"& \":\"\")+t[e],t=t.join(r>2?\", \":\" \"),n.replace(Ut,\"{\\n/* [wrapped with \"+t+\"] */\\n\")}function Li(n){return bh(n)||dh(n)||!!(Cl&&n&&n[Cl])}function Ci(n,t){var r=typeof n;\nreturn t=null==t?Wn:t,!!t&&(\"number\"==r||\"symbol\"!=r&&Vt.test(n))&&n>-1&&n%1==0&&n<t}function Ui(n,t,r){if(!fc(r))return!1;var e=typeof t;return!!(\"number\"==e?Hf(r)&&Ci(t,r.length):\"string\"==e&&t in r)&&Gf(r[t],n)}function Bi(n,t){if(bh(n))return!1;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!bc(n))||(zt.test(n)||!Rt.test(n)||null!=t&&n in ll(t))}function Ti(n){var t=typeof n;return\"string\"==t||\"number\"==t||\"symbol\"==t||\"boolean\"==t?\"__proto__\"!==n:null===n}function $i(n){\nvar t=bi(n),r=Z[t];if(\"function\"!=typeof r||!(t in Ct.prototype))return!1;if(n===r)return!0;var e=Os(r);return!!e&&n===e[0]}function Di(n){return!!ml&&ml in n}function Mi(n){var t=n&&n.constructor;return n===(\"function\"==typeof t&&t.prototype||gl)}function Fi(n){return n===n&&!fc(n)}function Ni(n,t){return function(r){return null!=r&&(r[n]===t&&(t!==X||n in ll(r)))}}function Pi(n){var t=Cf(n,function(n){return r.size===fn&&r.clear(),n}),r=t.cache;return t}function qi(n,t){var r=n[1],e=t[1],u=r|e,i=u<(_n|vn|mn),o=e==mn&&r==yn||e==mn&&r==xn&&n[7].length<=t[8]||e==(mn|xn)&&t[7].length<=t[8]&&r==yn;\nif(!i&&!o)return n;e&_n&&(n[2]=t[2],u|=r&_n?0:gn);var f=t[3];if(f){var c=n[3];n[3]=c?Uu(c,f,t[4]):f,n[4]=c?N(n[3],cn):t[4]}return f=t[5],f&&(c=n[5],n[5]=c?Bu(c,f,t[6]):f,n[6]=c?N(n[5],cn):t[6]),f=t[7],f&&(n[7]=f),e&mn&&(n[8]=null==n[8]?t[8]:Hl(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function Zi(n){var t=[];if(null!=n)for(var r in ll(n))t.push(r);return t}function Ki(n){return xl.call(n)}function Vi(t,r,e){return r=Gl(r===X?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Gl(u.length-r,0),f=il(o);++i<o;)f[i]=u[r+i];\ni=-1;for(var c=il(r+1);++i<r;)c[i]=u[i];return c[r]=e(f),n(t,this,c)}}function Gi(n,t){return t.length<2?n:_e(n,au(t,0,-1))}function Hi(n,t){for(var r=n.length,e=Hl(t.length,r),u=Tu(n);e--;){var i=t[e];n[e]=Ci(i,r)?u[i]:X}return n}function Ji(n,t){if((\"constructor\"!==t||\"function\"!=typeof n[t])&&\"__proto__\"!=t)return n[t]}function Yi(n,t,r){var e=t+\"\";return Ls(n,Wi(e,ro(Ii(e),r)))}function Qi(n){var t=0,r=0;return function(){var e=Jl(),u=In-(e-r);if(r=e,u>0){if(++t>=On)return arguments[0]}else t=0;\nreturn n.apply(X,arguments)}}function Xi(n,t){var r=-1,e=n.length,u=e-1;for(t=t===X?e:t;++r<t;){var i=tu(r,u),o=n[i];n[i]=n[r],n[r]=o}return n.length=t,n}function no(n){if(\"string\"==typeof n||bc(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function to(n){if(null!=n){try{return dl.call(n)}catch(n){}try{return n+\"\"}catch(n){}}return\"\"}function ro(n,t){return r($n,function(r){var e=\"_.\"+r[0];t&r[1]&&!o(n,e)&&n.push(e)}),n.sort()}function eo(n){if(n instanceof Ct)return n.clone();var t=new Y(n.__wrapped__,n.__chain__);\nreturn t.__actions__=Tu(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function uo(n,t,r){t=(r?Ui(n,t,r):t===X)?1:Gl(kc(t),0);var e=null==n?0:n.length;if(!e||t<1)return[];for(var u=0,i=0,o=il(Fl(e/t));u<e;)o[i++]=au(n,u,u+=t);return o}function io(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u}function oo(){var n=arguments.length;if(!n)return[];for(var t=il(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return a(bh(r)?Tu(r):[r],ee(t,1));\n}function fo(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),au(n,t<0?0:t,e)):[]}function co(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,0,t<0?0:t)):[]}function ao(n,t){return n&&n.length?bu(n,mi(t,3),!0,!0):[]}function lo(n,t){return n&&n.length?bu(n,mi(t,3),!0):[]}function so(n,t,r,e){var u=null==n?0:n.length;return u?(r&&\"number\"!=typeof r&&Ui(n,t,r)&&(r=0,e=u),ne(n,t,r,e)):[]}function ho(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);\nreturn u<0&&(u=Gl(e+u,0)),g(n,mi(t,3),u)}function po(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==X&&(u=kc(r),u=r<0?Gl(e+u,0):Hl(u,e-1)),g(n,mi(t,3),u,!0)}function _o(n){return(null==n?0:n.length)?ee(n,1):[]}function vo(n){return(null==n?0:n.length)?ee(n,Sn):[]}function go(n,t){return(null==n?0:n.length)?(t=t===X?1:kc(t),ee(n,t)):[]}function yo(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e}function bo(n){return n&&n.length?n[0]:X}function wo(n,t,r){\nvar e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);return u<0&&(u=Gl(e+u,0)),y(n,t,u)}function mo(n){return(null==n?0:n.length)?au(n,0,-1):[]}function xo(n,t){return null==n?\"\":Kl.call(n,t)}function jo(n){var t=null==n?0:n.length;return t?n[t-1]:X}function Ao(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;return r!==X&&(u=kc(r),u=u<0?Gl(e+u,0):Hl(u,e-1)),t===t?K(n,t,u):g(n,b,u,!0)}function ko(n,t){return n&&n.length?Ge(n,kc(t)):X}function Oo(n,t){return n&&n.length&&t&&t.length?Xe(n,t):n;\n}function Io(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,mi(r,2)):n}function Ro(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,X,r):n}function zo(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=mi(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return nu(n,u),r}function Eo(n){return null==n?n:Xl.call(n)}function So(n,t,r){var e=null==n?0:n.length;return e?(r&&\"number\"!=typeof r&&Ui(n,t,r)?(t=0,r=e):(t=null==t?0:kc(t),r=r===X?e:kc(r)),au(n,t,r)):[]}function Wo(n,t){\nreturn su(n,t)}function Lo(n,t,r){return hu(n,t,mi(r,2))}function Co(n,t){var r=null==n?0:n.length;if(r){var e=su(n,t);if(e<r&&Gf(n[e],t))return e}return-1}function Uo(n,t){return su(n,t,!0)}function Bo(n,t,r){return hu(n,t,mi(r,2),!0)}function To(n,t){if(null==n?0:n.length){var r=su(n,t,!0)-1;if(Gf(n[r],t))return r}return-1}function $o(n){return n&&n.length?pu(n):[]}function Do(n,t){return n&&n.length?pu(n,mi(t,2)):[]}function Mo(n){var t=null==n?0:n.length;return t?au(n,1,t):[]}function Fo(n,t,r){\nreturn n&&n.length?(t=r||t===X?1:kc(t),au(n,0,t<0?0:t)):[]}function No(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,t<0?0:t,e)):[]}function Po(n,t){return n&&n.length?bu(n,mi(t,3),!1,!0):[]}function qo(n,t){return n&&n.length?bu(n,mi(t,3)):[]}function Zo(n){return n&&n.length?gu(n):[]}function Ko(n,t){return n&&n.length?gu(n,mi(t,2)):[]}function Vo(n,t){return t=\"function\"==typeof t?t:X,n&&n.length?gu(n,X,t):[]}function Go(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){\nif(Jf(n))return t=Gl(n.length,t),!0}),O(t,function(t){return c(n,m(t))})}function Ho(t,r){if(!t||!t.length)return[];var e=Go(t);return null==r?e:c(e,function(t){return n(r,X,t)})}function Jo(n,t){return xu(n||[],t||[],Sr)}function Yo(n,t){return xu(n||[],t||[],fu)}function Qo(n){var t=Z(n);return t.__chain__=!0,t}function Xo(n,t){return t(n),n}function nf(n,t){return t(n)}function tf(){return Qo(this)}function rf(){return new Y(this.value(),this.__chain__)}function ef(){this.__values__===X&&(this.__values__=jc(this.value()));\nvar n=this.__index__>=this.__values__.length;return{done:n,value:n?X:this.__values__[this.__index__++]}}function uf(){return this}function of(n){for(var t,r=this;r instanceof J;){var e=eo(r);e.__index__=0,e.__values__=X,t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t}function ff(){var n=this.__wrapped__;if(n instanceof Ct){var t=n;return this.__actions__.length&&(t=new Ct(this)),t=t.reverse(),t.__actions__.push({func:nf,args:[Eo],thisArg:X}),new Y(t,this.__chain__)}return this.thru(Eo);\n}function cf(){return wu(this.__wrapped__,this.__actions__)}function af(n,t,r){var e=bh(n)?u:Jr;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function lf(n,t){return(bh(n)?i:te)(n,mi(t,3))}function sf(n,t){return ee(yf(n,t),1)}function hf(n,t){return ee(yf(n,t),Sn)}function pf(n,t,r){return r=r===X?1:kc(r),ee(yf(n,t),r)}function _f(n,t){return(bh(n)?r:ys)(n,mi(t,3))}function vf(n,t){return(bh(n)?e:ds)(n,mi(t,3))}function gf(n,t,r,e){n=Hf(n)?n:ra(n),r=r&&!e?kc(r):0;var u=n.length;return r<0&&(r=Gl(u+r,0)),\ndc(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&y(n,t,r)>-1}function yf(n,t){return(bh(n)?c:Pe)(n,mi(t,3))}function df(n,t,r,e){return null==n?[]:(bh(t)||(t=null==t?[]:[t]),r=e?X:r,bh(r)||(r=null==r?[]:[r]),He(n,t,r))}function bf(n,t,r){var e=bh(n)?l:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ys)}function wf(n,t,r){var e=bh(n)?s:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ds)}function mf(n,t){return(bh(n)?i:te)(n,Uf(mi(t,3)))}function xf(n){return(bh(n)?Ir:iu)(n)}function jf(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),\n(bh(n)?Rr:ou)(n,t)}function Af(n){return(bh(n)?zr:cu)(n)}function kf(n){if(null==n)return 0;if(Hf(n))return dc(n)?V(n):n.length;var t=zs(n);return t==Gn||t==tt?n.size:Me(n).length}function Of(n,t,r){var e=bh(n)?h:lu;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function If(n,t){if(\"function\"!=typeof t)throw new pl(en);return n=kc(n),function(){if(--n<1)return t.apply(this,arguments)}}function Rf(n,t,r){return t=r?X:t,t=n&&null==t?n.length:t,ai(n,mn,X,X,X,X,t)}function zf(n,t){var r;if(\"function\"!=typeof t)throw new pl(en);\nreturn n=kc(n),function(){return--n>0&&(r=t.apply(this,arguments)),n<=1&&(t=X),r}}function Ef(n,t,r){t=r?X:t;var e=ai(n,yn,X,X,X,X,X,t);return e.placeholder=Ef.placeholder,e}function Sf(n,t,r){t=r?X:t;var e=ai(n,dn,X,X,X,X,X,t);return e.placeholder=Sf.placeholder,e}function Wf(n,t,r){function e(t){var r=h,e=p;return h=p=X,d=t,v=n.apply(e,r)}function u(n){return d=n,g=Ws(f,t),b?e(n):v}function i(n){var r=n-y,e=n-d,u=t-r;return w?Hl(u,_-e):u}function o(n){var r=n-y,e=n-d;return y===X||r>=t||r<0||w&&e>=_;\n}function f(){var n=fh();return o(n)?c(n):(g=Ws(f,i(n)),X)}function c(n){return g=X,m&&h?e(n):(h=p=X,v)}function a(){g!==X&&As(g),d=0,h=y=p=g=X}function l(){return g===X?v:c(fh())}function s(){var n=fh(),r=o(n);if(h=arguments,p=this,y=n,r){if(g===X)return u(y);if(w)return As(g),g=Ws(f,t),e(y)}return g===X&&(g=Ws(f,t)),v}var h,p,_,v,g,y,d=0,b=!1,w=!1,m=!0;if(\"function\"!=typeof n)throw new pl(en);return t=Ic(t)||0,fc(r)&&(b=!!r.leading,w=\"maxWait\"in r,_=w?Gl(Ic(r.maxWait)||0,t):_,m=\"trailing\"in r?!!r.trailing:m),\ns.cancel=a,s.flush=l,s}function Lf(n){return ai(n,jn)}function Cf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new pl(en);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Cf.Cache||sr),r}function Uf(n){if(\"function\"!=typeof n)throw new pl(en);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:\nreturn!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function Bf(n){return zf(2,n)}function Tf(n,t){if(\"function\"!=typeof n)throw new pl(en);return t=t===X?t:kc(t),uu(n,t)}function $f(t,r){if(\"function\"!=typeof t)throw new pl(en);return r=null==r?0:Gl(kc(r),0),uu(function(e){var u=e[r],i=Ou(e,0,r);return u&&a(i,u),n(t,this,i)})}function Df(n,t,r){var e=!0,u=!0;if(\"function\"!=typeof n)throw new pl(en);return fc(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),\nWf(n,t,{leading:e,maxWait:t,trailing:u})}function Mf(n){return Rf(n,1)}function Ff(n,t){return ph(Au(t),n)}function Nf(){if(!arguments.length)return[];var n=arguments[0];return bh(n)?n:[n]}function Pf(n){return Fr(n,sn)}function qf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,sn,t)}function Zf(n){return Fr(n,an|sn)}function Kf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,an|sn,t)}function Vf(n,t){return null==t||Pr(n,t,Pc(t))}function Gf(n,t){return n===t||n!==n&&t!==t}function Hf(n){return null!=n&&oc(n.length)&&!uc(n);\n}function Jf(n){return cc(n)&&Hf(n)}function Yf(n){return n===!0||n===!1||cc(n)&&we(n)==Nn}function Qf(n){return cc(n)&&1===n.nodeType&&!gc(n)}function Xf(n){if(null==n)return!0;if(Hf(n)&&(bh(n)||\"string\"==typeof n||\"function\"==typeof n.splice||mh(n)||Oh(n)||dh(n)))return!n.length;var t=zs(n);if(t==Gn||t==tt)return!n.size;if(Mi(n))return!Me(n).length;for(var r in n)if(bl.call(n,r))return!1;return!0}function nc(n,t){return Se(n,t)}function tc(n,t,r){r=\"function\"==typeof r?r:X;var e=r?r(n,t):X;return e===X?Se(n,t,X,r):!!e;\n}function rc(n){if(!cc(n))return!1;var t=we(n);return t==Zn||t==qn||\"string\"==typeof n.message&&\"string\"==typeof n.name&&!gc(n)}function ec(n){return\"number\"==typeof n&&Zl(n)}function uc(n){if(!fc(n))return!1;var t=we(n);return t==Kn||t==Vn||t==Fn||t==Xn}function ic(n){return\"number\"==typeof n&&n==kc(n)}function oc(n){return\"number\"==typeof n&&n>-1&&n%1==0&&n<=Wn}function fc(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function cc(n){return null!=n&&\"object\"==typeof n}function ac(n,t){\nreturn n===t||Ce(n,t,ji(t))}function lc(n,t,r){return r=\"function\"==typeof r?r:X,Ce(n,t,ji(t),r)}function sc(n){return vc(n)&&n!=+n}function hc(n){if(Es(n))throw new fl(rn);return Ue(n)}function pc(n){return null===n}function _c(n){return null==n}function vc(n){return\"number\"==typeof n||cc(n)&&we(n)==Hn}function gc(n){if(!cc(n)||we(n)!=Yn)return!1;var t=El(n);if(null===t)return!0;var r=bl.call(t,\"constructor\")&&t.constructor;return\"function\"==typeof r&&r instanceof r&&dl.call(r)==jl}function yc(n){\nreturn ic(n)&&n>=-Wn&&n<=Wn}function dc(n){return\"string\"==typeof n||!bh(n)&&cc(n)&&we(n)==rt}function bc(n){return\"symbol\"==typeof n||cc(n)&&we(n)==et}function wc(n){return n===X}function mc(n){return cc(n)&&zs(n)==it}function xc(n){return cc(n)&&we(n)==ot}function jc(n){if(!n)return[];if(Hf(n))return dc(n)?G(n):Tu(n);if(Ul&&n[Ul])return D(n[Ul]());var t=zs(n);return(t==Gn?M:t==tt?P:ra)(n)}function Ac(n){if(!n)return 0===n?n:0;if(n=Ic(n),n===Sn||n===-Sn){return(n<0?-1:1)*Ln}return n===n?n:0}function kc(n){\nvar t=Ac(n),r=t%1;return t===t?r?t-r:t:0}function Oc(n){return n?Mr(kc(n),0,Un):0}function Ic(n){if(\"number\"==typeof n)return n;if(bc(n))return Cn;if(fc(n)){var t=\"function\"==typeof n.valueOf?n.valueOf():n;n=fc(t)?t+\"\":t}if(\"string\"!=typeof n)return 0===n?n:+n;n=R(n);var r=qt.test(n);return r||Kt.test(n)?Xr(n.slice(2),r?2:8):Pt.test(n)?Cn:+n}function Rc(n){return $u(n,qc(n))}function zc(n){return n?Mr(kc(n),-Wn,Wn):0===n?n:0}function Ec(n){return null==n?\"\":vu(n)}function Sc(n,t){var r=gs(n);return null==t?r:Cr(r,t);\n}function Wc(n,t){return v(n,mi(t,3),ue)}function Lc(n,t){return v(n,mi(t,3),oe)}function Cc(n,t){return null==n?n:bs(n,mi(t,3),qc)}function Uc(n,t){return null==n?n:ws(n,mi(t,3),qc)}function Bc(n,t){return n&&ue(n,mi(t,3))}function Tc(n,t){return n&&oe(n,mi(t,3))}function $c(n){return null==n?[]:fe(n,Pc(n))}function Dc(n){return null==n?[]:fe(n,qc(n))}function Mc(n,t,r){var e=null==n?X:_e(n,t);return e===X?r:e}function Fc(n,t){return null!=n&&Ri(n,t,xe)}function Nc(n,t){return null!=n&&Ri(n,t,je);\n}function Pc(n){return Hf(n)?Or(n):Me(n)}function qc(n){return Hf(n)?Or(n,!0):Fe(n)}function Zc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,t(n,e,u),n)}),r}function Kc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,e,t(n,e,u))}),r}function Vc(n,t){return Gc(n,Uf(mi(t)))}function Gc(n,t){if(null==n)return{};var r=c(di(n),function(n){return[n]});return t=mi(t),Ye(n,r,function(n,r){return t(n,r[0])})}function Hc(n,t,r){t=ku(t,n);var e=-1,u=t.length;for(u||(u=1,n=X);++e<u;){var i=null==n?X:n[no(t[e])];\ni===X&&(e=u,i=r),n=uc(i)?i.call(n):i}return n}function Jc(n,t,r){return null==n?n:fu(n,t,r)}function Yc(n,t,r,e){return e=\"function\"==typeof e?e:X,null==n?n:fu(n,t,r,e)}function Qc(n,t,e){var u=bh(n),i=u||mh(n)||Oh(n);if(t=mi(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:fc(n)&&uc(o)?gs(El(n)):{}}return(i?r:ue)(n,function(n,r,u){return t(e,n,r,u)}),e}function Xc(n,t){return null==n||yu(n,t)}function na(n,t,r){return null==n?n:du(n,t,Au(r))}function ta(n,t,r,e){return e=\"function\"==typeof e?e:X,\nnull==n?n:du(n,t,Au(r),e)}function ra(n){return null==n?[]:E(n,Pc(n))}function ea(n){return null==n?[]:E(n,qc(n))}function ua(n,t,r){return r===X&&(r=t,t=X),r!==X&&(r=Ic(r),r=r===r?r:0),t!==X&&(t=Ic(t),t=t===t?t:0),Mr(Ic(n),t,r)}function ia(n,t,r){return t=Ac(t),r===X?(r=t,t=0):r=Ac(r),n=Ic(n),Ae(n,t,r)}function oa(n,t,r){if(r&&\"boolean\"!=typeof r&&Ui(n,t,r)&&(t=r=X),r===X&&(\"boolean\"==typeof t?(r=t,t=X):\"boolean\"==typeof n&&(r=n,n=X)),n===X&&t===X?(n=0,t=1):(n=Ac(n),t===X?(t=n,n=0):t=Ac(t)),n>t){\nvar e=n;n=t,t=e}if(r||n%1||t%1){var u=Ql();return Hl(n+u*(t-n+Qr(\"1e-\"+((u+\"\").length-1))),t)}return tu(n,t)}function fa(n){return Qh(Ec(n).toLowerCase())}function ca(n){return n=Ec(n),n&&n.replace(Gt,ve).replace(Dr,\"\")}function aa(n,t,r){n=Ec(n),t=vu(t);var e=n.length;r=r===X?e:Mr(kc(r),0,e);var u=r;return r-=t.length,r>=0&&n.slice(r,u)==t}function la(n){return n=Ec(n),n&&At.test(n)?n.replace(xt,ge):n}function sa(n){return n=Ec(n),n&&Wt.test(n)?n.replace(St,\"\\\\$&\"):n}function ha(n,t,r){n=Ec(n),t=kc(t);\nvar e=t?V(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return ri(Nl(u),r)+n+ri(Fl(u),r)}function pa(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?n+ri(t-e,r):n}function _a(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?ri(t-e,r)+n:n}function va(n,t,r){return r||null==t?t=0:t&&(t=+t),Yl(Ec(n).replace(Lt,\"\"),t||0)}function ga(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),eu(Ec(n),t)}function ya(){var n=arguments,t=Ec(n[0]);return n.length<3?t:t.replace(n[1],n[2])}function da(n,t,r){return r&&\"number\"!=typeof r&&Ui(n,t,r)&&(t=r=X),\n(r=r===X?Un:r>>>0)?(n=Ec(n),n&&(\"string\"==typeof t||null!=t&&!Ah(t))&&(t=vu(t),!t&&T(n))?Ou(G(n),0,r):n.split(t,r)):[]}function ba(n,t,r){return n=Ec(n),r=null==r?0:Mr(kc(r),0,n.length),t=vu(t),n.slice(r,r+t.length)==t}function wa(n,t,r){var e=Z.templateSettings;r&&Ui(n,t,r)&&(t=X),n=Ec(n),t=Sh({},t,e,li);var u,i,o=Sh({},t.imports,e.imports,li),f=Pc(o),c=E(o,f),a=0,l=t.interpolate||Ht,s=\"__p += '\",h=sl((t.escape||Ht).source+\"|\"+l.source+\"|\"+(l===It?Ft:Ht).source+\"|\"+(t.evaluate||Ht).source+\"|$\",\"g\"),p=\"//# sourceURL=\"+(bl.call(t,\"sourceURL\")?(t.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++Zr+\"]\")+\"\\n\";\nn.replace(h,function(t,r,e,o,f,c){return e||(e=o),s+=n.slice(a,c).replace(Jt,U),r&&(u=!0,s+=\"' +\\n__e(\"+r+\") +\\n'\"),f&&(i=!0,s+=\"';\\n\"+f+\";\\n__p += '\"),e&&(s+=\"' +\\n((__t = (\"+e+\")) == null ? '' : __t) +\\n'\"),a=c+t.length,t}),s+=\"';\\n\";var _=bl.call(t,\"variable\")&&t.variable;if(_){if(Dt.test(_))throw new fl(un)}else s=\"with (obj) {\\n\"+s+\"\\n}\\n\";s=(i?s.replace(dt,\"\"):s).replace(bt,\"$1\").replace(wt,\"$1;\"),s=\"function(\"+(_||\"obj\")+\") {\\n\"+(_?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(u?\", __e = _.escape\":\"\")+(i?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+s+\"return __p\\n}\";\nvar v=Xh(function(){return cl(f,p+\"return \"+s).apply(X,c)});if(v.source=s,rc(v))throw v;return v}function ma(n){return Ec(n).toLowerCase()}function xa(n){return Ec(n).toUpperCase()}function ja(n,t,r){if(n=Ec(n),n&&(r||t===X))return R(n);if(!n||!(t=vu(t)))return n;var e=G(n),u=G(t);return Ou(e,W(e,u),L(e,u)+1).join(\"\")}function Aa(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.slice(0,H(n)+1);if(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,0,L(e,G(t))+1).join(\"\")}function ka(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.replace(Lt,\"\");\nif(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,W(e,G(t))).join(\"\")}function Oa(n,t){var r=An,e=kn;if(fc(t)){var u=\"separator\"in t?t.separator:u;r=\"length\"in t?kc(t.length):r,e=\"omission\"in t?vu(t.omission):e}n=Ec(n);var i=n.length;if(T(n)){var o=G(n);i=o.length}if(r>=i)return n;var f=r-V(e);if(f<1)return e;var c=o?Ou(o,0,f).join(\"\"):n.slice(0,f);if(u===X)return c+e;if(o&&(f+=c.length-f),Ah(u)){if(n.slice(f).search(u)){var a,l=c;for(u.global||(u=sl(u.source,Ec(Nt.exec(u))+\"g\")),u.lastIndex=0;a=u.exec(l);)var s=a.index;\nc=c.slice(0,s===X?f:s)}}else if(n.indexOf(vu(u),f)!=f){var h=c.lastIndexOf(u);h>-1&&(c=c.slice(0,h))}return c+e}function Ia(n){return n=Ec(n),n&&jt.test(n)?n.replace(mt,ye):n}function Ra(n,t,r){return n=Ec(n),t=r?X:t,t===X?$(n)?Q(n):_(n):n.match(t)||[]}function za(t){var r=null==t?0:t.length,e=mi();return t=r?c(t,function(n){if(\"function\"!=typeof n[1])throw new pl(en);return[e(n[0]),n[1]]}):[],uu(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})}function Ea(n){\nreturn Nr(Fr(n,an))}function Sa(n){return function(){return n}}function Wa(n,t){return null==n||n!==n?t:n}function La(n){return n}function Ca(n){return De(\"function\"==typeof n?n:Fr(n,an))}function Ua(n){return qe(Fr(n,an))}function Ba(n,t){return Ze(n,Fr(t,an))}function Ta(n,t,e){var u=Pc(t),i=fe(t,u);null!=e||fc(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=fe(t,Pc(t)));var o=!(fc(e)&&\"chain\"in e&&!e.chain),f=uc(n);return r(i,function(r){var e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;\nif(o||t){var r=n(this.__wrapped__);return(r.__actions__=Tu(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function $a(){return re._===this&&(re._=Al),this}function Da(){}function Ma(n){return n=kc(n),uu(function(t){return Ge(t,n)})}function Fa(n){return Bi(n)?m(no(n)):Qe(n)}function Na(n){return function(t){return null==n?X:_e(n,t)}}function Pa(){return[]}function qa(){return!1}function Za(){return{}}function Ka(){return\"\";\n}function Va(){return!0}function Ga(n,t){if(n=kc(n),n<1||n>Wn)return[];var r=Un,e=Hl(n,Un);t=mi(t),n-=Un;for(var u=O(e,t);++r<n;)t(r);return u}function Ha(n){return bh(n)?c(n,no):bc(n)?[n]:Tu(Cs(Ec(n)))}function Ja(n){var t=++wl;return Ec(n)+t}function Ya(n){return n&&n.length?Yr(n,La,me):X}function Qa(n,t){return n&&n.length?Yr(n,mi(t,2),me):X}function Xa(n){return w(n,La)}function nl(n,t){return w(n,mi(t,2))}function tl(n){return n&&n.length?Yr(n,La,Ne):X}function rl(n,t){return n&&n.length?Yr(n,mi(t,2),Ne):X;\n}function el(n){return n&&n.length?k(n,La):0}function ul(n,t){return n&&n.length?k(n,mi(t,2)):0}x=null==x?re:be.defaults(re.Object(),x,be.pick(re,qr));var il=x.Array,ol=x.Date,fl=x.Error,cl=x.Function,al=x.Math,ll=x.Object,sl=x.RegExp,hl=x.String,pl=x.TypeError,_l=il.prototype,vl=cl.prototype,gl=ll.prototype,yl=x[\"__core-js_shared__\"],dl=vl.toString,bl=gl.hasOwnProperty,wl=0,ml=function(){var n=/[^.]+$/.exec(yl&&yl.keys&&yl.keys.IE_PROTO||\"\");return n?\"Symbol(src)_1.\"+n:\"\"}(),xl=gl.toString,jl=dl.call(ll),Al=re._,kl=sl(\"^\"+dl.call(bl).replace(St,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),Ol=ie?x.Buffer:X,Il=x.Symbol,Rl=x.Uint8Array,zl=Ol?Ol.allocUnsafe:X,El=F(ll.getPrototypeOf,ll),Sl=ll.create,Wl=gl.propertyIsEnumerable,Ll=_l.splice,Cl=Il?Il.isConcatSpreadable:X,Ul=Il?Il.iterator:X,Bl=Il?Il.toStringTag:X,Tl=function(){\ntry{var n=Ai(ll,\"defineProperty\");return n({},\"\",{}),n}catch(n){}}(),$l=x.clearTimeout!==re.clearTimeout&&x.clearTimeout,Dl=ol&&ol.now!==re.Date.now&&ol.now,Ml=x.setTimeout!==re.setTimeout&&x.setTimeout,Fl=al.ceil,Nl=al.floor,Pl=ll.getOwnPropertySymbols,ql=Ol?Ol.isBuffer:X,Zl=x.isFinite,Kl=_l.join,Vl=F(ll.keys,ll),Gl=al.max,Hl=al.min,Jl=ol.now,Yl=x.parseInt,Ql=al.random,Xl=_l.reverse,ns=Ai(x,\"DataView\"),ts=Ai(x,\"Map\"),rs=Ai(x,\"Promise\"),es=Ai(x,\"Set\"),us=Ai(x,\"WeakMap\"),is=Ai(ll,\"create\"),os=us&&new us,fs={},cs=to(ns),as=to(ts),ls=to(rs),ss=to(es),hs=to(us),ps=Il?Il.prototype:X,_s=ps?ps.valueOf:X,vs=ps?ps.toString:X,gs=function(){\nfunction n(){}return function(t){if(!fc(t))return{};if(Sl)return Sl(t);n.prototype=t;var r=new n;return n.prototype=X,r}}();Z.templateSettings={escape:kt,evaluate:Ot,interpolate:It,variable:\"\",imports:{_:Z}},Z.prototype=J.prototype,Z.prototype.constructor=Z,Y.prototype=gs(J.prototype),Y.prototype.constructor=Y,Ct.prototype=gs(J.prototype),Ct.prototype.constructor=Ct,Xt.prototype.clear=nr,Xt.prototype.delete=tr,Xt.prototype.get=rr,Xt.prototype.has=er,Xt.prototype.set=ur,ir.prototype.clear=or,ir.prototype.delete=fr,\nir.prototype.get=cr,ir.prototype.has=ar,ir.prototype.set=lr,sr.prototype.clear=hr,sr.prototype.delete=pr,sr.prototype.get=_r,sr.prototype.has=vr,sr.prototype.set=gr,yr.prototype.add=yr.prototype.push=dr,yr.prototype.has=br,wr.prototype.clear=mr,wr.prototype.delete=xr,wr.prototype.get=jr,wr.prototype.has=Ar,wr.prototype.set=kr;var ys=Pu(ue),ds=Pu(oe,!0),bs=qu(),ws=qu(!0),ms=os?function(n,t){return os.set(n,t),n}:La,xs=Tl?function(n,t){return Tl(n,\"toString\",{configurable:!0,enumerable:!1,value:Sa(t),\nwritable:!0})}:La,js=uu,As=$l||function(n){return re.clearTimeout(n)},ks=es&&1/P(new es([,-0]))[1]==Sn?function(n){return new es(n)}:Da,Os=os?function(n){return os.get(n)}:Da,Is=Pl?function(n){return null==n?[]:(n=ll(n),i(Pl(n),function(t){return Wl.call(n,t)}))}:Pa,Rs=Pl?function(n){for(var t=[];n;)a(t,Is(n)),n=El(n);return t}:Pa,zs=we;(ns&&zs(new ns(new ArrayBuffer(1)))!=ct||ts&&zs(new ts)!=Gn||rs&&zs(rs.resolve())!=Qn||es&&zs(new es)!=tt||us&&zs(new us)!=it)&&(zs=function(n){var t=we(n),r=t==Yn?n.constructor:X,e=r?to(r):\"\";\nif(e)switch(e){case cs:return ct;case as:return Gn;case ls:return Qn;case ss:return tt;case hs:return it}return t});var Es=yl?uc:qa,Ss=Qi(ms),Ws=Ml||function(n,t){return re.setTimeout(n,t)},Ls=Qi(xs),Cs=Pi(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(Et,function(n,r,e,u){t.push(e?u.replace(Mt,\"$1\"):r||n)}),t}),Us=uu(function(n,t){return Jf(n)?Hr(n,ee(t,1,Jf,!0)):[]}),Bs=uu(function(n,t){var r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),mi(r,2)):[]}),Ts=uu(function(n,t){\nvar r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),X,r):[]}),$s=uu(function(n){var t=c(n,ju);return t.length&&t[0]===n[0]?ke(t):[]}),Ds=uu(function(n){var t=jo(n),r=c(n,ju);return t===jo(r)?t=X:r.pop(),r.length&&r[0]===n[0]?ke(r,mi(t,2)):[]}),Ms=uu(function(n){var t=jo(n),r=c(n,ju);return t=\"function\"==typeof t?t:X,t&&r.pop(),r.length&&r[0]===n[0]?ke(r,X,t):[]}),Fs=uu(Oo),Ns=gi(function(n,t){var r=null==n?0:n.length,e=Tr(n,t);return nu(n,c(t,function(n){return Ci(n,r)?+n:n}).sort(Lu)),e}),Ps=uu(function(n){\nreturn gu(ee(n,1,Jf,!0))}),qs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),gu(ee(n,1,Jf,!0),mi(t,2))}),Zs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,gu(ee(n,1,Jf,!0),X,t)}),Ks=uu(function(n,t){return Jf(n)?Hr(n,t):[]}),Vs=uu(function(n){return mu(i(n,Jf))}),Gs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),mu(i(n,Jf),mi(t,2))}),Hs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,mu(i(n,Jf),X,t)}),Js=uu(Go),Ys=uu(function(n){var t=n.length,r=t>1?n[t-1]:X;return r=\"function\"==typeof r?(n.pop(),\nr):X,Ho(n,r)}),Qs=gi(function(n){var t=n.length,r=t?n[0]:0,e=this.__wrapped__,u=function(t){return Tr(t,n)};return!(t>1||this.__actions__.length)&&e instanceof Ct&&Ci(r)?(e=e.slice(r,+r+(t?1:0)),e.__actions__.push({func:nf,args:[u],thisArg:X}),new Y(e,this.__chain__).thru(function(n){return t&&!n.length&&n.push(X),n})):this.thru(u)}),Xs=Fu(function(n,t,r){bl.call(n,r)?++n[r]:Br(n,r,1)}),nh=Ju(ho),th=Ju(po),rh=Fu(function(n,t,r){bl.call(n,r)?n[r].push(t):Br(n,r,[t])}),eh=uu(function(t,r,e){var u=-1,i=\"function\"==typeof r,o=Hf(t)?il(t.length):[];\nreturn ys(t,function(t){o[++u]=i?n(r,t,e):Ie(t,r,e)}),o}),uh=Fu(function(n,t,r){Br(n,r,t)}),ih=Fu(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),oh=uu(function(n,t){if(null==n)return[];var r=t.length;return r>1&&Ui(n,t[0],t[1])?t=[]:r>2&&Ui(t[0],t[1],t[2])&&(t=[t[0]]),He(n,ee(t,1),[])}),fh=Dl||function(){return re.Date.now()},ch=uu(function(n,t,r){var e=_n;if(r.length){var u=N(r,wi(ch));e|=bn}return ai(n,e,t,r,u)}),ah=uu(function(n,t,r){var e=_n|vn;if(r.length){var u=N(r,wi(ah));e|=bn;\n}return ai(t,e,n,r,u)}),lh=uu(function(n,t){return Gr(n,1,t)}),sh=uu(function(n,t,r){return Gr(n,Ic(t)||0,r)});Cf.Cache=sr;var hh=js(function(t,r){r=1==r.length&&bh(r[0])?c(r[0],z(mi())):c(ee(r,1),z(mi()));var e=r.length;return uu(function(u){for(var i=-1,o=Hl(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);return n(t,this,u)})}),ph=uu(function(n,t){return ai(n,bn,X,t,N(t,wi(ph)))}),_h=uu(function(n,t){return ai(n,wn,X,t,N(t,wi(_h)))}),vh=gi(function(n,t){return ai(n,xn,X,X,X,t)}),gh=ii(me),yh=ii(function(n,t){\nreturn n>=t}),dh=Re(function(){return arguments}())?Re:function(n){return cc(n)&&bl.call(n,\"callee\")&&!Wl.call(n,\"callee\")},bh=il.isArray,wh=ce?z(ce):ze,mh=ql||qa,xh=ae?z(ae):Ee,jh=le?z(le):Le,Ah=se?z(se):Be,kh=he?z(he):Te,Oh=pe?z(pe):$e,Ih=ii(Ne),Rh=ii(function(n,t){return n<=t}),zh=Nu(function(n,t){if(Mi(t)||Hf(t))return $u(t,Pc(t),n),X;for(var r in t)bl.call(t,r)&&Sr(n,r,t[r])}),Eh=Nu(function(n,t){$u(t,qc(t),n)}),Sh=Nu(function(n,t,r,e){$u(t,qc(t),n,e)}),Wh=Nu(function(n,t,r,e){$u(t,Pc(t),n,e);\n}),Lh=gi(Tr),Ch=uu(function(n,t){n=ll(n);var r=-1,e=t.length,u=e>2?t[2]:X;for(u&&Ui(t[0],t[1],u)&&(e=1);++r<e;)for(var i=t[r],o=qc(i),f=-1,c=o.length;++f<c;){var a=o[f],l=n[a];(l===X||Gf(l,gl[a])&&!bl.call(n,a))&&(n[a]=i[a])}return n}),Uh=uu(function(t){return t.push(X,si),n(Mh,X,t)}),Bh=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),n[t]=r},Sa(La)),Th=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),bl.call(n,t)?n[t].push(r):n[t]=[r]},mi),$h=uu(Ie),Dh=Nu(function(n,t,r){\nKe(n,t,r)}),Mh=Nu(function(n,t,r,e){Ke(n,t,r,e)}),Fh=gi(function(n,t){var r={};if(null==n)return r;var e=!1;t=c(t,function(t){return t=ku(t,n),e||(e=t.length>1),t}),$u(n,di(n),r),e&&(r=Fr(r,an|ln|sn,hi));for(var u=t.length;u--;)yu(r,t[u]);return r}),Nh=gi(function(n,t){return null==n?{}:Je(n,t)}),Ph=ci(Pc),qh=ci(qc),Zh=Vu(function(n,t,r){return t=t.toLowerCase(),n+(r?fa(t):t)}),Kh=Vu(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Vh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Gh=Ku(\"toLowerCase\"),Hh=Vu(function(n,t,r){\nreturn n+(r?\"_\":\"\")+t.toLowerCase()}),Jh=Vu(function(n,t,r){return n+(r?\" \":\"\")+Qh(t)}),Yh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Qh=Ku(\"toUpperCase\"),Xh=uu(function(t,r){try{return n(t,X,r)}catch(n){return rc(n)?n:new fl(n)}}),np=gi(function(n,t){return r(t,function(t){t=no(t),Br(n,t,ch(n[t],n))}),n}),tp=Yu(),rp=Yu(!0),ep=uu(function(n,t){return function(r){return Ie(r,n,t)}}),up=uu(function(n,t){return function(r){return Ie(n,r,t)}}),ip=ti(c),op=ti(u),fp=ti(h),cp=ui(),ap=ui(!0),lp=ni(function(n,t){\nreturn n+t},0),sp=fi(\"ceil\"),hp=ni(function(n,t){return n/t},1),pp=fi(\"floor\"),_p=ni(function(n,t){return n*t},1),vp=fi(\"round\"),gp=ni(function(n,t){return n-t},0);return Z.after=If,Z.ary=Rf,Z.assign=zh,Z.assignIn=Eh,Z.assignInWith=Sh,Z.assignWith=Wh,Z.at=Lh,Z.before=zf,Z.bind=ch,Z.bindAll=np,Z.bindKey=ah,Z.castArray=Nf,Z.chain=Qo,Z.chunk=uo,Z.compact=io,Z.concat=oo,Z.cond=za,Z.conforms=Ea,Z.constant=Sa,Z.countBy=Xs,Z.create=Sc,Z.curry=Ef,Z.curryRight=Sf,Z.debounce=Wf,Z.defaults=Ch,Z.defaultsDeep=Uh,\nZ.defer=lh,Z.delay=sh,Z.difference=Us,Z.differenceBy=Bs,Z.differenceWith=Ts,Z.drop=fo,Z.dropRight=co,Z.dropRightWhile=ao,Z.dropWhile=lo,Z.fill=so,Z.filter=lf,Z.flatMap=sf,Z.flatMapDeep=hf,Z.flatMapDepth=pf,Z.flatten=_o,Z.flattenDeep=vo,Z.flattenDepth=go,Z.flip=Lf,Z.flow=tp,Z.flowRight=rp,Z.fromPairs=yo,Z.functions=$c,Z.functionsIn=Dc,Z.groupBy=rh,Z.initial=mo,Z.intersection=$s,Z.intersectionBy=Ds,Z.intersectionWith=Ms,Z.invert=Bh,Z.invertBy=Th,Z.invokeMap=eh,Z.iteratee=Ca,Z.keyBy=uh,Z.keys=Pc,Z.keysIn=qc,\nZ.map=yf,Z.mapKeys=Zc,Z.mapValues=Kc,Z.matches=Ua,Z.matchesProperty=Ba,Z.memoize=Cf,Z.merge=Dh,Z.mergeWith=Mh,Z.method=ep,Z.methodOf=up,Z.mixin=Ta,Z.negate=Uf,Z.nthArg=Ma,Z.omit=Fh,Z.omitBy=Vc,Z.once=Bf,Z.orderBy=df,Z.over=ip,Z.overArgs=hh,Z.overEvery=op,Z.overSome=fp,Z.partial=ph,Z.partialRight=_h,Z.partition=ih,Z.pick=Nh,Z.pickBy=Gc,Z.property=Fa,Z.propertyOf=Na,Z.pull=Fs,Z.pullAll=Oo,Z.pullAllBy=Io,Z.pullAllWith=Ro,Z.pullAt=Ns,Z.range=cp,Z.rangeRight=ap,Z.rearg=vh,Z.reject=mf,Z.remove=zo,Z.rest=Tf,\nZ.reverse=Eo,Z.sampleSize=jf,Z.set=Jc,Z.setWith=Yc,Z.shuffle=Af,Z.slice=So,Z.sortBy=oh,Z.sortedUniq=$o,Z.sortedUniqBy=Do,Z.split=da,Z.spread=$f,Z.tail=Mo,Z.take=Fo,Z.takeRight=No,Z.takeRightWhile=Po,Z.takeWhile=qo,Z.tap=Xo,Z.throttle=Df,Z.thru=nf,Z.toArray=jc,Z.toPairs=Ph,Z.toPairsIn=qh,Z.toPath=Ha,Z.toPlainObject=Rc,Z.transform=Qc,Z.unary=Mf,Z.union=Ps,Z.unionBy=qs,Z.unionWith=Zs,Z.uniq=Zo,Z.uniqBy=Ko,Z.uniqWith=Vo,Z.unset=Xc,Z.unzip=Go,Z.unzipWith=Ho,Z.update=na,Z.updateWith=ta,Z.values=ra,Z.valuesIn=ea,\nZ.without=Ks,Z.words=Ra,Z.wrap=Ff,Z.xor=Vs,Z.xorBy=Gs,Z.xorWith=Hs,Z.zip=Js,Z.zipObject=Jo,Z.zipObjectDeep=Yo,Z.zipWith=Ys,Z.entries=Ph,Z.entriesIn=qh,Z.extend=Eh,Z.extendWith=Sh,Ta(Z,Z),Z.add=lp,Z.attempt=Xh,Z.camelCase=Zh,Z.capitalize=fa,Z.ceil=sp,Z.clamp=ua,Z.clone=Pf,Z.cloneDeep=Zf,Z.cloneDeepWith=Kf,Z.cloneWith=qf,Z.conformsTo=Vf,Z.deburr=ca,Z.defaultTo=Wa,Z.divide=hp,Z.endsWith=aa,Z.eq=Gf,Z.escape=la,Z.escapeRegExp=sa,Z.every=af,Z.find=nh,Z.findIndex=ho,Z.findKey=Wc,Z.findLast=th,Z.findLastIndex=po,\nZ.findLastKey=Lc,Z.floor=pp,Z.forEach=_f,Z.forEachRight=vf,Z.forIn=Cc,Z.forInRight=Uc,Z.forOwn=Bc,Z.forOwnRight=Tc,Z.get=Mc,Z.gt=gh,Z.gte=yh,Z.has=Fc,Z.hasIn=Nc,Z.head=bo,Z.identity=La,Z.includes=gf,Z.indexOf=wo,Z.inRange=ia,Z.invoke=$h,Z.isArguments=dh,Z.isArray=bh,Z.isArrayBuffer=wh,Z.isArrayLike=Hf,Z.isArrayLikeObject=Jf,Z.isBoolean=Yf,Z.isBuffer=mh,Z.isDate=xh,Z.isElement=Qf,Z.isEmpty=Xf,Z.isEqual=nc,Z.isEqualWith=tc,Z.isError=rc,Z.isFinite=ec,Z.isFunction=uc,Z.isInteger=ic,Z.isLength=oc,Z.isMap=jh,\nZ.isMatch=ac,Z.isMatchWith=lc,Z.isNaN=sc,Z.isNative=hc,Z.isNil=_c,Z.isNull=pc,Z.isNumber=vc,Z.isObject=fc,Z.isObjectLike=cc,Z.isPlainObject=gc,Z.isRegExp=Ah,Z.isSafeInteger=yc,Z.isSet=kh,Z.isString=dc,Z.isSymbol=bc,Z.isTypedArray=Oh,Z.isUndefined=wc,Z.isWeakMap=mc,Z.isWeakSet=xc,Z.join=xo,Z.kebabCase=Kh,Z.last=jo,Z.lastIndexOf=Ao,Z.lowerCase=Vh,Z.lowerFirst=Gh,Z.lt=Ih,Z.lte=Rh,Z.max=Ya,Z.maxBy=Qa,Z.mean=Xa,Z.meanBy=nl,Z.min=tl,Z.minBy=rl,Z.stubArray=Pa,Z.stubFalse=qa,Z.stubObject=Za,Z.stubString=Ka,\nZ.stubTrue=Va,Z.multiply=_p,Z.nth=ko,Z.noConflict=$a,Z.noop=Da,Z.now=fh,Z.pad=ha,Z.padEnd=pa,Z.padStart=_a,Z.parseInt=va,Z.random=oa,Z.reduce=bf,Z.reduceRight=wf,Z.repeat=ga,Z.replace=ya,Z.result=Hc,Z.round=vp,Z.runInContext=p,Z.sample=xf,Z.size=kf,Z.snakeCase=Hh,Z.some=Of,Z.sortedIndex=Wo,Z.sortedIndexBy=Lo,Z.sortedIndexOf=Co,Z.sortedLastIndex=Uo,Z.sortedLastIndexBy=Bo,Z.sortedLastIndexOf=To,Z.startCase=Jh,Z.startsWith=ba,Z.subtract=gp,Z.sum=el,Z.sumBy=ul,Z.template=wa,Z.times=Ga,Z.toFinite=Ac,Z.toInteger=kc,\nZ.toLength=Oc,Z.toLower=ma,Z.toNumber=Ic,Z.toSafeInteger=zc,Z.toString=Ec,Z.toUpper=xa,Z.trim=ja,Z.trimEnd=Aa,Z.trimStart=ka,Z.truncate=Oa,Z.unescape=Ia,Z.uniqueId=Ja,Z.upperCase=Yh,Z.upperFirst=Qh,Z.each=_f,Z.eachRight=vf,Z.first=bo,Ta(Z,function(){var n={};return ue(Z,function(t,r){bl.call(Z.prototype,r)||(n[r]=t)}),n}(),{chain:!1}),Z.VERSION=nn,r([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],function(n){Z[n].placeholder=Z}),r([\"drop\",\"take\"],function(n,t){Ct.prototype[n]=function(r){\nr=r===X?1:Gl(kc(r),0);var e=this.__filtered__&&!t?new Ct(this):this.clone();return e.__filtered__?e.__takeCount__=Hl(r,e.__takeCount__):e.__views__.push({size:Hl(r,Un),type:n+(e.__dir__<0?\"Right\":\"\")}),e},Ct.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),r([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=r==Rn||r==En;Ct.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:mi(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r([\"head\",\"last\"],function(n,t){\nvar r=\"take\"+(t?\"Right\":\"\");Ct.prototype[n]=function(){return this[r](1).value()[0]}}),r([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Ct.prototype[n]=function(){return this.__filtered__?new Ct(this):this[r](1)}}),Ct.prototype.compact=function(){return this.filter(La)},Ct.prototype.find=function(n){return this.filter(n).head()},Ct.prototype.findLast=function(n){return this.reverse().find(n)},Ct.prototype.invokeMap=uu(function(n,t){return\"function\"==typeof n?new Ct(this):this.map(function(r){\nreturn Ie(r,n,t)})}),Ct.prototype.reject=function(n){return this.filter(Uf(mi(n)))},Ct.prototype.slice=function(n,t){n=kc(n);var r=this;return r.__filtered__&&(n>0||t<0)?new Ct(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==X&&(t=kc(t),r=t<0?r.dropRight(-t):r.take(t-n)),r)},Ct.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Ct.prototype.toArray=function(){return this.take(Un)},ue(Ct.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=Z[e?\"take\"+(\"last\"==t?\"Right\":\"\"):t],i=e||/^find/.test(t);\nu&&(Z.prototype[t]=function(){var t=this.__wrapped__,o=e?[1]:arguments,f=t instanceof Ct,c=o[0],l=f||bh(t),s=function(n){var t=u.apply(Z,a([n],o));return e&&h?t[0]:t};l&&r&&\"function\"==typeof c&&1!=c.length&&(f=l=!1);var h=this.__chain__,p=!!this.__actions__.length,_=i&&!h,v=f&&!p;if(!i&&l){t=v?t:new Ct(this);var g=n.apply(t,o);return g.__actions__.push({func:nf,args:[s],thisArg:X}),new Y(g,h)}return _&&v?n.apply(this,o):(g=this.thru(s),_?e?g.value()[0]:g.value():g)})}),r([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){\nvar t=_l[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);Z.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(bh(u)?u:[],n)}return this[r](function(r){return t.apply(bh(r)?r:[],n)})}}),ue(Ct.prototype,function(n,t){var r=Z[t];if(r){var e=r.name+\"\";bl.call(fs,e)||(fs[e]=[]),fs[e].push({name:t,func:r})}}),fs[Qu(X,vn).name]=[{name:\"wrapper\",func:X}],Ct.prototype.clone=$t,Ct.prototype.reverse=Yt,Ct.prototype.value=Qt,Z.prototype.at=Qs,\nZ.prototype.chain=tf,Z.prototype.commit=rf,Z.prototype.next=ef,Z.prototype.plant=of,Z.prototype.reverse=ff,Z.prototype.toJSON=Z.prototype.valueOf=Z.prototype.value=cf,Z.prototype.first=Z.prototype.head,Ul&&(Z.prototype[Ul]=uf),Z},be=de();\"function\"==typeof define&&\"object\"==typeof define.amd&&define.amd?(re._=be,define(function(){return be})):ue?((ue.exports=be)._=be,ee._=be):re._=be}).call(this);","var mapping = require('./_mapping'),\n    fallbackHolder = require('./placeholder');\n\n/** Built-in value reference. */\nvar push = Array.prototype.push;\n\n/**\n * Creates a function, with an arity of `n`, that invokes `func` with the\n * arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} n The arity of the new function.\n * @returns {Function} Returns the new function.\n */\nfunction baseArity(func, n) {\n  return n == 2\n    ? function(a, b) { return func.apply(undefined, arguments); }\n    : function(a) { return func.apply(undefined, arguments); };\n}\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n * any additional arguments.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @param {number} n The arity cap.\n * @returns {Function} Returns the new function.\n */\nfunction baseAry(func, n) {\n  return n == 2\n    ? function(a, b) { return func(a, b); }\n    : function(a) { return func(a); };\n}\n\n/**\n * Creates a clone of `array`.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the cloned array.\n */\nfunction cloneArray(array) {\n  var length = array ? array.length : 0,\n      result = Array(length);\n\n  while (length--) {\n    result[length] = array[length];\n  }\n  return result;\n}\n\n/**\n * Creates a function that clones a given object using the assignment `func`.\n *\n * @private\n * @param {Function} func The assignment function.\n * @returns {Function} Returns the new cloner function.\n */\nfunction createCloner(func) {\n  return function(object) {\n    return func({}, object);\n  };\n}\n\n/**\n * A specialized version of `_.spread` which flattens the spread array into\n * the arguments of the invoked `func`.\n *\n * @private\n * @param {Function} func The function to spread arguments over.\n * @param {number} start The start position of the spread.\n * @returns {Function} Returns the new function.\n */\nfunction flatSpread(func, start) {\n  return function() {\n    var length = arguments.length,\n        lastIndex = length - 1,\n        args = Array(length);\n\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var array = args[start],\n        otherArgs = args.slice(0, start);\n\n    if (array) {\n      push.apply(otherArgs, array);\n    }\n    if (start != lastIndex) {\n      push.apply(otherArgs, args.slice(start + 1));\n    }\n    return func.apply(this, otherArgs);\n  };\n}\n\n/**\n * Creates a function that wraps `func` and uses `cloner` to clone the first\n * argument it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} cloner The function to clone arguments.\n * @returns {Function} Returns the new immutable function.\n */\nfunction wrapImmutable(func, cloner) {\n  return function() {\n    var length = arguments.length;\n    if (!length) {\n      return;\n    }\n    var args = Array(length);\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var result = args[0] = cloner.apply(undefined, args);\n    func.apply(undefined, args);\n    return result;\n  };\n}\n\n/**\n * The base implementation of `convert` which accepts a `util` object of methods\n * required to perform conversions.\n *\n * @param {Object} util The util object.\n * @param {string} name The name of the function to convert.\n * @param {Function} func The function to convert.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n * @param {boolean} [options.curry=true] Specify currying.\n * @param {boolean} [options.fixed=true] Specify fixed arity.\n * @param {boolean} [options.immutable=true] Specify immutable operations.\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction baseConvert(util, name, func, options) {\n  var isLib = typeof name == 'function',\n      isObj = name === Object(name);\n\n  if (isObj) {\n    options = func;\n    func = name;\n    name = undefined;\n  }\n  if (func == null) {\n    throw new TypeError;\n  }\n  options || (options = {});\n\n  var config = {\n    'cap': 'cap' in options ? options.cap : true,\n    'curry': 'curry' in options ? options.curry : true,\n    'fixed': 'fixed' in options ? options.fixed : true,\n    'immutable': 'immutable' in options ? options.immutable : true,\n    'rearg': 'rearg' in options ? options.rearg : true\n  };\n\n  var defaultHolder = isLib ? func : fallbackHolder,\n      forceCurry = ('curry' in options) && options.curry,\n      forceFixed = ('fixed' in options) && options.fixed,\n      forceRearg = ('rearg' in options) && options.rearg,\n      pristine = isLib ? func.runInContext() : undefined;\n\n  var helpers = isLib ? func : {\n    'ary': util.ary,\n    'assign': util.assign,\n    'clone': util.clone,\n    'curry': util.curry,\n    'forEach': util.forEach,\n    'isArray': util.isArray,\n    'isError': util.isError,\n    'isFunction': util.isFunction,\n    'isWeakMap': util.isWeakMap,\n    'iteratee': util.iteratee,\n    'keys': util.keys,\n    'rearg': util.rearg,\n    'toInteger': util.toInteger,\n    'toPath': util.toPath\n  };\n\n  var ary = helpers.ary,\n      assign = helpers.assign,\n      clone = helpers.clone,\n      curry = helpers.curry,\n      each = helpers.forEach,\n      isArray = helpers.isArray,\n      isError = helpers.isError,\n      isFunction = helpers.isFunction,\n      isWeakMap = helpers.isWeakMap,\n      keys = helpers.keys,\n      rearg = helpers.rearg,\n      toInteger = helpers.toInteger,\n      toPath = helpers.toPath;\n\n  var aryMethodKeys = keys(mapping.aryMethod);\n\n  var wrappers = {\n    'castArray': function(castArray) {\n      return function() {\n        var value = arguments[0];\n        return isArray(value)\n          ? castArray(cloneArray(value))\n          : castArray.apply(undefined, arguments);\n      };\n    },\n    'iteratee': function(iteratee) {\n      return function() {\n        var func = arguments[0],\n            arity = arguments[1],\n            result = iteratee(func, arity),\n            length = result.length;\n\n        if (config.cap && typeof arity == 'number') {\n          arity = arity > 2 ? (arity - 2) : 1;\n          return (length && length <= arity) ? result : baseAry(result, arity);\n        }\n        return result;\n      };\n    },\n    'mixin': function(mixin) {\n      return function(source) {\n        var func = this;\n        if (!isFunction(func)) {\n          return mixin(func, Object(source));\n        }\n        var pairs = [];\n        each(keys(source), function(key) {\n          if (isFunction(source[key])) {\n            pairs.push([key, func.prototype[key]]);\n          }\n        });\n\n        mixin(func, Object(source));\n\n        each(pairs, function(pair) {\n          var value = pair[1];\n          if (isFunction(value)) {\n            func.prototype[pair[0]] = value;\n          } else {\n            delete func.prototype[pair[0]];\n          }\n        });\n        return func;\n      };\n    },\n    'nthArg': function(nthArg) {\n      return function(n) {\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n        return curry(nthArg(n), arity);\n      };\n    },\n    'rearg': function(rearg) {\n      return function(func, indexes) {\n        var arity = indexes ? indexes.length : 0;\n        return curry(rearg(func, indexes), arity);\n      };\n    },\n    'runInContext': function(runInContext) {\n      return function(context) {\n        return baseConvert(util, runInContext(context), options);\n      };\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Casts `func` to a function with an arity capped iteratee if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCap(name, func) {\n    if (config.cap) {\n      var indexes = mapping.iterateeRearg[name];\n      if (indexes) {\n        return iterateeRearg(func, indexes);\n      }\n      var n = !isLib && mapping.iterateeAry[name];\n      if (n) {\n        return iterateeAry(func, n);\n      }\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to a curried function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCurry(name, func, n) {\n    return (forceCurry || (config.curry && n > 1))\n      ? curry(func, n)\n      : func;\n  }\n\n  /**\n   * Casts `func` to a fixed arity function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the cast function.\n   */\n  function castFixed(name, func, n) {\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n      var data = mapping.methodSpread[name],\n          start = data && data.start;\n\n      return start  === undefined ? ary(func, n) : flatSpread(func, start);\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to an rearged function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castRearg(name, func, n) {\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n      : func;\n  }\n\n  /**\n   * Creates a clone of `object` by `path`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {Array|string} path The path to clone by.\n   * @returns {Object} Returns the cloned object.\n   */\n  function cloneByPath(object, path) {\n    path = toPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        result = clone(Object(object)),\n        nested = result;\n\n    while (nested != null && ++index < length) {\n      var key = path[index],\n          value = nested[key];\n\n      if (value != null &&\n          !(isFunction(value) || isError(value) || isWeakMap(value))) {\n        nested[key] = clone(index == lastIndex ? value : Object(value));\n      }\n      nested = nested[key];\n    }\n    return result;\n  }\n\n  /**\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n   * version with conversion `options` applied.\n   *\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\n   * @returns {Function} Returns the converted `lodash`.\n   */\n  function convertLib(options) {\n    return _.runInContext.convert(options)(undefined);\n  }\n\n  /**\n   * Create a converter function for `func` of `name`.\n   *\n   * @param {string} name The name of the function to convert.\n   * @param {Function} func The function to convert.\n   * @returns {Function} Returns the new converter function.\n   */\n  function createConverter(name, func) {\n    var realName = mapping.aliasToReal[name] || name,\n        methodName = mapping.remap[realName] || realName,\n        oldOptions = options;\n\n    return function(options) {\n      var newUtil = isLib ? pristine : helpers,\n          newFunc = isLib ? pristine[methodName] : func,\n          newOptions = assign(assign({}, oldOptions), options);\n\n      return baseConvert(newUtil, realName, newFunc, newOptions);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n   * arguments, ignoring any additional arguments.\n   *\n   * @private\n   * @param {Function} func The function to cap iteratee arguments for.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeAry(func, n) {\n    return overArg(func, function(func) {\n      return typeof func == 'function' ? baseAry(func, n) : func;\n    });\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\n   * arranged according to the specified `indexes` where the argument value at\n   * the first index is provided as the first argument, the argument value at\n   * the second index is provided as the second argument, and so on.\n   *\n   * @private\n   * @param {Function} func The function to rearrange iteratee arguments for.\n   * @param {number[]} indexes The arranged argument indexes.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeRearg(func, indexes) {\n    return overArg(func, function(func) {\n      var n = indexes.length;\n      return baseArity(rearg(baseAry(func, n), indexes), n);\n    });\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function() {\n      var length = arguments.length;\n      if (!length) {\n        return func();\n      }\n      var args = Array(length);\n      while (length--) {\n        args[length] = arguments[length];\n      }\n      var index = config.rearg ? 0 : (length - 1);\n      args[index] = transform(args[index]);\n      return func.apply(undefined, args);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` and applys the conversions\n   * rules by `name`.\n   *\n   * @private\n   * @param {string} name The name of the function to wrap.\n   * @param {Function} func The function to wrap.\n   * @returns {Function} Returns the converted function.\n   */\n  function wrap(name, func, placeholder) {\n    var result,\n        realName = mapping.aliasToReal[name] || name,\n        wrapped = func,\n        wrapper = wrappers[realName];\n\n    if (wrapper) {\n      wrapped = wrapper(func);\n    }\n    else if (config.immutable) {\n      if (mapping.mutate.array[realName]) {\n        wrapped = wrapImmutable(func, cloneArray);\n      }\n      else if (mapping.mutate.object[realName]) {\n        wrapped = wrapImmutable(func, createCloner(func));\n      }\n      else if (mapping.mutate.set[realName]) {\n        wrapped = wrapImmutable(func, cloneByPath);\n      }\n    }\n    each(aryMethodKeys, function(aryKey) {\n      each(mapping.aryMethod[aryKey], function(otherName) {\n        if (realName == otherName) {\n          var data = mapping.methodSpread[realName],\n              afterRearg = data && data.afterRearg;\n\n          result = afterRearg\n            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)\n            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);\n\n          result = castCap(realName, result);\n          result = castCurry(realName, result, aryKey);\n          return false;\n        }\n      });\n      return !result;\n    });\n\n    result || (result = wrapped);\n    if (result == func) {\n      result = forceCurry ? curry(result, 1) : function() {\n        return func.apply(this, arguments);\n      };\n    }\n    result.convert = createConverter(realName, func);\n    result.placeholder = func.placeholder = placeholder;\n\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  if (!isObj) {\n    return wrap(name, func, defaultHolder);\n  }\n  var _ = func;\n\n  // Convert methods by ary cap.\n  var pairs = [];\n  each(aryMethodKeys, function(aryKey) {\n    each(mapping.aryMethod[aryKey], function(key) {\n      var func = _[mapping.remap[key] || key];\n      if (func) {\n        pairs.push([key, wrap(key, func, _)]);\n      }\n    });\n  });\n\n  // Convert remaining methods.\n  each(keys(_), function(key) {\n    var func = _[key];\n    if (typeof func == 'function') {\n      var length = pairs.length;\n      while (length--) {\n        if (pairs[length][0] == key) {\n          return;\n        }\n      }\n      func.convert = createConverter(key, func);\n      pairs.push([key, func]);\n    }\n  });\n\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n  each(pairs, function(pair) {\n    _[pair[0]] = pair[1];\n  });\n\n  _.convert = convertLib;\n  _.placeholder = _;\n\n  // Assign aliases.\n  each(keys(_), function(key) {\n    each(mapping.realToAlias[key] || [], function(alias) {\n      _[alias] = _[key];\n    });\n  });\n\n  return _;\n}\n\nmodule.exports = baseConvert;\n","/** Used to map aliases to their real names. */\nexports.aliasToReal = {\n\n  // Lodash aliases.\n  'each': 'forEach',\n  'eachRight': 'forEachRight',\n  'entries': 'toPairs',\n  'entriesIn': 'toPairsIn',\n  'extend': 'assignIn',\n  'extendAll': 'assignInAll',\n  'extendAllWith': 'assignInAllWith',\n  'extendWith': 'assignInWith',\n  'first': 'head',\n\n  // Methods that are curried variants of others.\n  'conforms': 'conformsTo',\n  'matches': 'isMatch',\n  'property': 'get',\n\n  // Ramda aliases.\n  '__': 'placeholder',\n  'F': 'stubFalse',\n  'T': 'stubTrue',\n  'all': 'every',\n  'allPass': 'overEvery',\n  'always': 'constant',\n  'any': 'some',\n  'anyPass': 'overSome',\n  'apply': 'spread',\n  'assoc': 'set',\n  'assocPath': 'set',\n  'complement': 'negate',\n  'compose': 'flowRight',\n  'contains': 'includes',\n  'dissoc': 'unset',\n  'dissocPath': 'unset',\n  'dropLast': 'dropRight',\n  'dropLastWhile': 'dropRightWhile',\n  'equals': 'isEqual',\n  'identical': 'eq',\n  'indexBy': 'keyBy',\n  'init': 'initial',\n  'invertObj': 'invert',\n  'juxt': 'over',\n  'omitAll': 'omit',\n  'nAry': 'ary',\n  'path': 'get',\n  'pathEq': 'matchesProperty',\n  'pathOr': 'getOr',\n  'paths': 'at',\n  'pickAll': 'pick',\n  'pipe': 'flow',\n  'pluck': 'map',\n  'prop': 'get',\n  'propEq': 'matchesProperty',\n  'propOr': 'getOr',\n  'props': 'at',\n  'symmetricDifference': 'xor',\n  'symmetricDifferenceBy': 'xorBy',\n  'symmetricDifferenceWith': 'xorWith',\n  'takeLast': 'takeRight',\n  'takeLastWhile': 'takeRightWhile',\n  'unapply': 'rest',\n  'unnest': 'flatten',\n  'useWith': 'overArgs',\n  'where': 'conformsTo',\n  'whereEq': 'isMatch',\n  'zipObj': 'zipObject'\n};\n\n/** Used to map ary to method names. */\nexports.aryMethod = {\n  '1': [\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n    'uniqueId', 'words', 'zipAll'\n  ],\n  '2': [\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n    'zipObjectDeep'\n  ],\n  '3': [\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',\n    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',\n    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',\n    'xorWith', 'zipWith'\n  ],\n  '4': [\n    'fill', 'setWith', 'updateWith'\n  ]\n};\n\n/** Used to map ary to rearg configs. */\nexports.aryRearg = {\n  '2': [1, 0],\n  '3': [2, 0, 1],\n  '4': [3, 2, 0, 1]\n};\n\n/** Used to map method names to their iteratee ary. */\nexports.iterateeAry = {\n  'dropRightWhile': 1,\n  'dropWhile': 1,\n  'every': 1,\n  'filter': 1,\n  'find': 1,\n  'findFrom': 1,\n  'findIndex': 1,\n  'findIndexFrom': 1,\n  'findKey': 1,\n  'findLast': 1,\n  'findLastFrom': 1,\n  'findLastIndex': 1,\n  'findLastIndexFrom': 1,\n  'findLastKey': 1,\n  'flatMap': 1,\n  'flatMapDeep': 1,\n  'flatMapDepth': 1,\n  'forEach': 1,\n  'forEachRight': 1,\n  'forIn': 1,\n  'forInRight': 1,\n  'forOwn': 1,\n  'forOwnRight': 1,\n  'map': 1,\n  'mapKeys': 1,\n  'mapValues': 1,\n  'partition': 1,\n  'reduce': 2,\n  'reduceRight': 2,\n  'reject': 1,\n  'remove': 1,\n  'some': 1,\n  'takeRightWhile': 1,\n  'takeWhile': 1,\n  'times': 1,\n  'transform': 2\n};\n\n/** Used to map method names to iteratee rearg configs. */\nexports.iterateeRearg = {\n  'mapKeys': [1],\n  'reduceRight': [1, 0]\n};\n\n/** Used to map method names to rearg configs. */\nexports.methodRearg = {\n  'assignInAllWith': [1, 0],\n  'assignInWith': [1, 2, 0],\n  'assignAllWith': [1, 0],\n  'assignWith': [1, 2, 0],\n  'differenceBy': [1, 2, 0],\n  'differenceWith': [1, 2, 0],\n  'getOr': [2, 1, 0],\n  'intersectionBy': [1, 2, 0],\n  'intersectionWith': [1, 2, 0],\n  'isEqualWith': [1, 2, 0],\n  'isMatchWith': [2, 1, 0],\n  'mergeAllWith': [1, 0],\n  'mergeWith': [1, 2, 0],\n  'padChars': [2, 1, 0],\n  'padCharsEnd': [2, 1, 0],\n  'padCharsStart': [2, 1, 0],\n  'pullAllBy': [2, 1, 0],\n  'pullAllWith': [2, 1, 0],\n  'rangeStep': [1, 2, 0],\n  'rangeStepRight': [1, 2, 0],\n  'setWith': [3, 1, 2, 0],\n  'sortedIndexBy': [2, 1, 0],\n  'sortedLastIndexBy': [2, 1, 0],\n  'unionBy': [1, 2, 0],\n  'unionWith': [1, 2, 0],\n  'updateWith': [3, 1, 2, 0],\n  'xorBy': [1, 2, 0],\n  'xorWith': [1, 2, 0],\n  'zipWith': [1, 2, 0]\n};\n\n/** Used to map method names to spread configs. */\nexports.methodSpread = {\n  'assignAll': { 'start': 0 },\n  'assignAllWith': { 'start': 0 },\n  'assignInAll': { 'start': 0 },\n  'assignInAllWith': { 'start': 0 },\n  'defaultsAll': { 'start': 0 },\n  'defaultsDeepAll': { 'start': 0 },\n  'invokeArgs': { 'start': 2 },\n  'invokeArgsMap': { 'start': 2 },\n  'mergeAll': { 'start': 0 },\n  'mergeAllWith': { 'start': 0 },\n  'partial': { 'start': 1 },\n  'partialRight': { 'start': 1 },\n  'without': { 'start': 1 },\n  'zipAll': { 'start': 0 }\n};\n\n/** Used to identify methods which mutate arrays or objects. */\nexports.mutate = {\n  'array': {\n    'fill': true,\n    'pull': true,\n    'pullAll': true,\n    'pullAllBy': true,\n    'pullAllWith': true,\n    'pullAt': true,\n    'remove': true,\n    'reverse': true\n  },\n  'object': {\n    'assign': true,\n    'assignAll': true,\n    'assignAllWith': true,\n    'assignIn': true,\n    'assignInAll': true,\n    'assignInAllWith': true,\n    'assignInWith': true,\n    'assignWith': true,\n    'defaults': true,\n    'defaultsAll': true,\n    'defaultsDeep': true,\n    'defaultsDeepAll': true,\n    'merge': true,\n    'mergeAll': true,\n    'mergeAllWith': true,\n    'mergeWith': true,\n  },\n  'set': {\n    'set': true,\n    'setWith': true,\n    'unset': true,\n    'update': true,\n    'updateWith': true\n  }\n};\n\n/** Used to map real names to their aliases. */\nexports.realToAlias = (function() {\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\n      object = exports.aliasToReal,\n      result = {};\n\n  for (var key in object) {\n    var value = object[key];\n    if (hasOwnProperty.call(result, value)) {\n      result[value].push(key);\n    } else {\n      result[value] = [key];\n    }\n  }\n  return result;\n}());\n\n/** Used to map method names to other names. */\nexports.remap = {\n  'assignAll': 'assign',\n  'assignAllWith': 'assignWith',\n  'assignInAll': 'assignIn',\n  'assignInAllWith': 'assignInWith',\n  'curryN': 'curry',\n  'curryRightN': 'curryRight',\n  'defaultsAll': 'defaults',\n  'defaultsDeepAll': 'defaultsDeep',\n  'findFrom': 'find',\n  'findIndexFrom': 'findIndex',\n  'findLastFrom': 'findLast',\n  'findLastIndexFrom': 'findLastIndex',\n  'getOr': 'get',\n  'includesFrom': 'includes',\n  'indexOfFrom': 'indexOf',\n  'invokeArgs': 'invoke',\n  'invokeArgsMap': 'invokeMap',\n  'lastIndexOfFrom': 'lastIndexOf',\n  'mergeAll': 'merge',\n  'mergeAllWith': 'mergeWith',\n  'padChars': 'pad',\n  'padCharsEnd': 'padEnd',\n  'padCharsStart': 'padStart',\n  'propertyOf': 'get',\n  'rangeStep': 'range',\n  'rangeStepRight': 'rangeRight',\n  'restFrom': 'rest',\n  'spreadFrom': 'spread',\n  'trimChars': 'trim',\n  'trimCharsEnd': 'trimEnd',\n  'trimCharsStart': 'trimStart',\n  'zipAll': 'zip'\n};\n\n/** Used to track methods that skip fixing their arity. */\nexports.skipFixed = {\n  'castArray': true,\n  'flow': true,\n  'flowRight': true,\n  'iteratee': true,\n  'mixin': true,\n  'rearg': true,\n  'runInContext': true\n};\n\n/** Used to track methods that skip rearranging arguments. */\nexports.skipRearg = {\n  'add': true,\n  'assign': true,\n  'assignIn': true,\n  'bind': true,\n  'bindKey': true,\n  'concat': true,\n  'difference': true,\n  'divide': true,\n  'eq': true,\n  'gt': true,\n  'gte': true,\n  'isEqual': true,\n  'lt': true,\n  'lte': true,\n  'matchesProperty': true,\n  'merge': true,\n  'multiply': true,\n  'overArgs': true,\n  'partial': true,\n  'partialRight': true,\n  'propertyOf': true,\n  'random': true,\n  'range': true,\n  'rangeRight': true,\n  'subtract': true,\n  'zip': true,\n  'zipObject': true,\n  'zipObjectDeep': true\n};\n","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","var isFunction = require('./function');\n\nmodule.exports = function isStamp(arg) {\n  return isFunction(arg) && isFunction(arg.compose);\n};\n","// More proper implementation would be\n// isDescriptor(obj) || isStamp(obj)\n// but there is no sense since stamp is function and function is object.\nmodule.exports = require('./object');\n","module.exports = Object.assign;\n","var isPlainObject = require('@stamp/is/plain-object');\nvar isObject = require('@stamp/is/object');\nvar isArray = require('@stamp/is/array');\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst The object to merge into\n * @param src The object to merge from\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) return dst;\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (isArray(src)) return (isArray(dst) ? dst : []).concat(src);\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) return src;\n\n  // See if 'dst' is allowed to be mutated.\n  // If not - it's overridden with a new plain object.\n  var returnValue = isObject(dst) ? dst : {};\n\n  var keys = Object.keys(src);\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    var srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      var dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      var newDst = isPlainObject(dstValue) || isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = function (dst) {\n  for (var i = 1; i < arguments.length; i++) {\n    dst = mergeOne(dst, arguments[i]);\n  }\n  return dst;\n};\n","module.exports = function isPlainObject(value) {\n  return Boolean(value) && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n};\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","module.exports = function () { /* empty */ };\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import createLogger from './logger'\nimport defaultLogHandler from './logHandler'\nimport { logLevels } from './constants'\nimport { checkLevel, checkHandler } from './validation'\n\nconst defaultType = Symbol('Default')\n\n/**\n * Creates a Log Manager.\n * @method createManager\n * @param  {Object}     [options={}]\n * @param  {Function}   [options.handler]      The default log handler used for\n *    Loggers that don't have a handler set.\n * @param  {string}     [options.level='INFO'] The default log level used for\n *    Loggers that don't have a level set.\n * @return {LogManager}\n */\nexport default function createManager (options = {}) {\n  const loggers = {}\n\n  /**\n   * Mapping between a Logger `type` and their default settings. Created Loggers\n   *    will use their `type` settings if they exist. Otherwise the \"global\"\n   *    options provided during Manager creation.\n   * @type {Object}\n   */\n  const settings = {\n    [defaultType]: {\n      handler: options.handler ? checkHandler(options.handler) : defaultLogHandler,\n      level: options.level ? checkLevel(options.level) : logLevels.INFO\n    }\n  }\n\n  /**\n   * Gets a specific logger. If the logger doesn't exist, a new one will be\n   *    created.\n   * @method getLogger\n   * @param  {string} type Human-readable type/name for the logger.\n   * @param  {string} [id] A unique identifier for the logger.\n   * @return {Logger}\n   */\n  function getLogger (type, id = '') {\n    id = String(id)\n\n    // Combine the name and ID to create the \"full\" logger name.\n    const loggerName = id ? `${type}-${id}` : type\n\n    let logger = loggers[loggerName]\n    // If the logger does not exist, create a new one.\n    if (!logger) {\n      // This logger logs items from a specific \"target\".\n      const target = { type, id, name: loggerName }\n      const options = {\n        level: getLevel(type),\n        handler: getHandler(type)\n      }\n\n      logger = createLogger(target, options)\n\n      // Save the new logger to be returned by future getter calls.\n      loggers[loggerName] = logger\n    }\n\n    return logger\n  }\n\n  /**\n   * Gets all created loggers, or Loggers of a specific type.\n   * @method getLoggers\n   * @param {string} [type] The type of Loggers to retrieve.\n   * @return {Array<Logger>} List of Loggers.\n   */\n  function getLoggers (type) {\n    if (type) {\n      return Object.values(loggers).filter(logger => logger.type === type)\n    } else {\n      return Object.values(loggers)\n    }\n  }\n\n  /**\n   * Sets the default `level` to be used when creating Loggers.\n   *\n   * Can set the level \"globally\" or per `type`, depending if `type` is provided\n   *    or not. When set for a specific type, only Loggers of that type will use\n   *    the set level. When set \"globally\", all Loggers without a set type will\n   *    use the level as a default.\n   *\n   * Setting the level only affects Loggers created after that point.\n   * @method setLevel\n   * @param  {string} type  The type of Logger to set the option for.\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // Setting the level for a type sets it for created Loggers of that type.\n   * manager.setLevel('Call', logLevels.DEBUG)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getLevel() === logLevels.DEBUG\n   *\n   * // Loggers created of types without a set level uses the Manager's level.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getLevel() === logLevels.WARN\n   *\n   * // Setting the level without a type changes the Manager's level.\n   * manager.setLevel(logLevels.INFO)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getLevel() === logLevels.INFO\n   *\n   * // Setting the level for a type does not affect previously created Loggers.\n   * manager.setLevel('Auth', logLevels.INFO)\n   * // logger2.getLevel() !== logLevels.INFO\n   * // logger2.getLevel() === logLevels.WARN\n   */\n  function setLevel (type, level) {\n    // Signature can be: `setLevel(type, level)` or `setLevel(level)`.\n    // Normalize the parameters to always be consistent.\n    if (level === undefined) {\n      level = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the level.\n    settings[type].level = checkLevel(level)\n  }\n\n  /**\n   * Gets the default `level` that is used when creating Loggers.\n   *\n   * Can get the level used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setLevel` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getLevel\n   * @param  {string} [type] A type of Logger.\n   * @return {LogLevel}\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // If a type's level has not been set, gets the \"global\" level.\n   * // manager.getLevel('Call') === logLevels.WARN\n   *\n   * // If a type's level has been set, gets its level.\n   * manager.setLevel('Auth', logLevels.DEBUG)\n   * // manager.getLevel('Auth') === logLevels.DEBUG\n   *\n   * // Can get the \"global\" level.\n   * manager.setLevel(logLevels.INFO)\n   * // manager.getLevel() === logLevels.INFO\n   */\n  function getLevel (type) {\n    // Signature can be: `getLevel(type)` or `getLevel()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].level) || settings[defaultType].level\n  }\n\n  /**\n   * Sets the default `handler` to be used when creating Loggers.\n   *\n   * Can set the handler \"globally\" or per `type`, depending if `type` is\n   *    provided or not. When set for a specific type, only Loggers of that type\n   *    will use the set handler. When set \"globally\", all Loggers without a set\n   *    type will use the handler as a default.\n   *\n   * Setting the handler only affects Loggers created after that point.\n   * @method setHandler\n   * @param  {string}     type    The type of Logger to set the option for.\n   * @param  {LogHandler} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // Setting the handler for a type sets it for created Loggers of that type.\n   * manager.setHandler('Call', callHandler)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getHandler() === callHandler\n   *\n   * // Loggers created of types without a set handler uses the Manager's handler.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getHandler() === managerHandler\n   *\n   * // Setting the handler without a type changes the Manager's handler.\n   * manager.setHandler(newHandler)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getHandler() === newHandler\n   *\n   * // Setting the handler for a type does not affect previously created Loggers.\n   * manager.setHandler('Auth', authHandler)\n   * // logger2.getHandler() !== authHandler\n   * // logger2.getHandler() === managerHandler\n   */\n  function setHandler (type, handler) {\n    // Signature can be: `setHandler(type, handler)` or `setHandler(handler)`.\n    // Normalize the parameters to always be consistent.\n    if (typeof type === 'function' && handler === undefined) {\n      handler = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the handler.\n    settings[type].handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the default `handler` that is used when creating Loggers.\n   *\n   * Can get the handler used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setHandler` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getHandler\n   * @param  {string} [type] A type of Logger.\n   * @return {LogHandler}\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // If a type's handler has not been set, gets the \"global\" handler.\n   * // manager.getHandler('Call') === managerHandler\n   *\n   * // If a type's handler has been set, gets its handler.\n   * manager.setHandler('Auth', authHandler)\n   * // manager.getHandler('Auth') === authHandler\n   *\n   * // Can get the \"global\" handler.\n   * manager.setHandler(newHandler)\n   * // manager.getHandler() === newHandler\n   */\n  function getHandler (type) {\n    // Signature can be: `getHandler(type)` or `getHandler()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].handler) || settings[defaultType].handler\n  }\n\n  return {\n    getLogger,\n    getLoggers,\n    setLevel,\n    getLevel,\n    setHandler,\n    getHandler\n  }\n}\n","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","import { levelValues, logMethods, logLevels, timeLevel } from './constants'\nimport { checkLevel, checkHandler } from './validation'\nimport createTimer from './timer'\n\n/**\n * Creates a Logger.\n * @method createLogger\n * @param  {Object}   target          The subject of the logs from this logger.\n * @param  {Object}   options\n * @param  {Function} options.handler The function to receive/handle log entries.\n * @param  {string}   options.level   The log level to be set.\n * @return {Logger}\n */\nexport default function createLogger (target, options = {}) {\n  // Validate provided options. Do not let invalid options be set.\n  const level = checkLevel(options.level)\n  const handler = checkHandler(options.handler)\n\n  /**\n   * Logger data.\n   * @type {Object}\n   * @property {Object}   target  Metadata about the \"target\" of the Logger.\n   * @property {LogLevel} level   The currently set log level.\n   * @property {Function} handler The currently set Log Handler.\n   */\n  const logger = {\n    target,\n    level,\n    handler\n  }\n\n  /**\n   * Currying function to dynamically create the Logger's logging methods.\n   * @method logFunc\n   * @param  {string} method   Name of the logger method to create.\n   * @param  {string} logLevel The log level for the method.\n   * @param  {Object} [injectables] Other values to include in the LogEntry.\n   * @return {Function} A log method.\n   */\n  function logFunc (method, logLevel, injectables) {\n    /*\n     * Return the function that will be used as `log.<method>`.\n     */\n    return function (...args) {\n      // Compare the logged level and the configured level.\n      const shouldLog = levelValues[logLevel] >= levelValues[logger.level]\n      // If this entry shouldn't be logged, don't do anything.\n      if (!shouldLog) {\n        return\n      }\n\n      // Create the Log Entry to be handed off to the handler.\n      const entry = {\n        // Extra data to be added to the LogEntry.\n        ...injectables,\n        // Meta-info about the log.\n        method,\n        timestamp: Date.now(),\n        level: logLevel,\n        target: logger.target,\n        // The actual arguments logged.\n        messages: [...args]\n      }\n\n      logger.handler(entry)\n    }\n  }\n\n  /**\n   * Sets the Logger's current log level.\n   * @method setLevel\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * logger.setLevel(logLevels.INFO)\n   * logger.info('This will be logged.')\n   * logger.debug('This will not be logged.')\n   */\n  function setLevel (level) {\n    logger.level = checkLevel(level)\n  }\n\n  /**\n   * Gets the Logger's current log level.\n   * @method getLevel\n   * @return {string} The log level.\n   * @example\n   * logger.setLevel(logLevels.DEBUG)\n   * const level = logger.getLevel()\n   * // level === logLevels.DEBUG\n   */\n  function getLevel () {\n    return logger.level\n  }\n\n  /**\n   * Sets the Logger's current log handler.\n   * @method setHandler\n   * @param  {Function} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const logger = manager.getLogger('Test', '123')\n   * logger.setHandler((logEntry) => {\n   *    console.log(logEntry.target.name, ...logEntry.messages)\n   * })\n   * logger.info('I am a logged message.')\n   * // logs: \"Test-123 I am a logged message.\"\n   */\n  function setHandler (handler) {\n    logger.handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the Logger's current log handler.\n   * @method getHandler\n   * @return {Function} The log handler.\n   * @example\n   * logger.setHandler(customHandler)\n   * const handler = logger.getHandler()\n   * // handler === customHandler.DEBUG\n   */\n  function getHandler () {\n    return logger.handler\n  }\n\n  const api = {\n    getHandler,\n    setHandler,\n    getLevel,\n    setLevel,\n    get type () {\n      return logger.target.type\n    },\n    get id () {\n      return logger.target.id\n    },\n    get name () {\n      return logger.target.name\n    }\n  }\n\n  // For all supported log methods, create a function on the Logger for it.\n  for (const method in logMethods) {\n    api[method] = logFunc(method, logMethods[method])\n  }\n\n  // Create log functions for the Timer to use.\n  // Follows the same style as above logMethods, but curries it once more\n  //    to align the timer parameters as needed.\n  const timeLog = (message, data) => logFunc(data.event, timeLevel, { timer: data })(message)\n  const timeWarn = (message, data) => logFunc('warn', logLevels.WARN, { timer: data })(message)\n  const timer = createTimer(timeLog, timeWarn)\n\n  return {\n    ...api,\n    ...timer\n  }\n}\n","import { checkHandler } from './validation'\n\n/**\n * Timer factory function.\n * The Timer imitates the Console's Time APIs.\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\n * @method createTimer\n * @param  {Function} log  Function for logging timer information.\n * @param  {Function} warn Function for warning about timer misuse.\n * @return {Timer}\n */\nexport default function createTimer (log, warn) {\n  // Validate that params are a function.\n  //    Uses functions as `log(message, data)`.\n  checkHandler(log)\n  checkHandler(warn)\n\n  /**\n   * Mapping of on-going timers; <name>: <start>.\n   * @type {Object}\n   */\n  const timers = {}\n\n  /**\n   * Starts a timer. Logs a message to indicate it was started.\n   * Logs a warning if the timer has already been started.\n   * @method timeStart\n   * @param  {string} name Name to identify the timer.\n   */\n  function time (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'time',\n      name\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      data.start = timers[name]\n      warn(`Timer ${name} already started.`, data)\n    } else {\n      // Set the new timer.\n      timers[name] = now\n\n      data.start = now\n      log(`Timer ${name} started.`, data)\n    }\n  }\n\n  /**\n   * Ends a timer. Logs a message with the elapsed time.\n   * @method timeEnd\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeEnd (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeEnd',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const start = timers[name]\n      // End the timer.\n      delete timers[name]\n\n      const elapsed = now - start\n      data.end = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} ended, taking ${elapsed}ms.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  /**\n   * Adds a split to the timer. Logs a message with the elapsed time so far.\n   * Logs a warning if the timer has not been started.\n   * @method timeSplit\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeLog (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeLog',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const elapsed = now - timers[name]\n      data.split = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} split, at ${elapsed}ms so far.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  return {\n    time,\n    timeEnd,\n    timeLog\n  }\n}\n","import defaultLogFormatter from './logFormatter'\n/**\n * Default function for the SDK to use for logging.\n *    Uses entry information to form a prefix, then logs to console.\n * @method defaultLogHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultLogHandler (entry) {\n  let { method } = entry\n\n  // For the time-related methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (method.includes('time')) {\n    method = 'debug'\n  }\n\n  const formattedString = defaultLogFormatter(entry)\n  const tail = entry.messages.slice(1)\n  console[method](formattedString, ...tail)\n}\n","/* Helper function for styling logs based on the log type.\n * This function will inspect the log entry and format the log\n * accordingly.\n */\nfunction styleLog (entry) {\n  const { timestamp, level } = entry\n  const logInfo = `${timestamp} - ACTION - ${level}`\n\n  let [logType, payload] = entry.messages\n\n  let prefix\n  let style = ''\n  if (logType.includes('state')) {\n    // If the log is for prev state / next state, display that in the prefix.\n    prefix = `${logInfo} - ${logType.toUpperCase()}`\n  } else if (logType.includes('ADDED') || logType.includes('DELETED') || logType.includes('ARRAY')) {\n    // If the log has added or removed keys from state, log the operation, keys affected and new values.\n    prefix = `${entry.messages[0]}: ${entry.messages[2]}`\n    style = entry.messages[1]\n    payload = entry.messages[3]\n  } else if (logType.includes('CHANGED')) {\n    // If the log has changed keys in state, log the operation, keys, old and new values.\n    prefix = `${entry.messages[0]}: ${entry.messages[2]}`\n    style = entry.messages[1]\n    payload = `${entry.messages[3]} ${entry.messages[4]} ${entry.messages[5]}`\n  } else if (logType.includes('no diff')) {\n    // If action results in no change in state, just log no diff.\n    prefix = `${logInfo} - NO DIFF`\n    payload = ''\n  } else {\n    // Else the log is the action itself, so use the action type.\n    prefix = `${logInfo} - ${payload.type} - ${logType}`\n  }\n\n  return { prefix, style, payload }\n}\n\n/**\n * Default function for the SDK to use for logging actions.\n * Action entries come in 4 different types:\n *    1. start: Log the message directly and \"open the group\".\n *    2. state: Log a prefix, state type, and state itself.\n *      (prev state and next state)\n *    3. payload: Log a prefix, action type, and payload.\n *    4. end: Close the group.\n * @method defaultActionHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultActionHandler (entry) {\n  // Handle the \"start\" and \"stop\" action log entries specifically.\n  if (['group', 'groupCollapsed'].includes(entry.method)) {\n    console[entry.method](...entry.messages)\n    return\n  } else if (entry.method === 'groupEnd') {\n    console.groupEnd()\n    return\n  }\n\n  const { prefix, style, payload } = styleLog(entry)\n  console[entry.method](prefix, style, payload)\n}\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Rule = function () {\n  function Rule(name, fn, args, modifiers) {\n    classCallCheck(this, Rule);\n\n    this.name = name;\n    this.fn = fn;\n    this.args = args;\n    this.modifiers = modifiers;\n  }\n\n  createClass(Rule, [{\n    key: \"_test\",\n    value: function _test(value) {\n      var fn = this.fn;\n\n      try {\n        testAux(this.modifiers.slice(), fn)(value);\n      } catch (ex) {\n        fn = function fn() {\n          return false;\n        };\n      }\n\n      try {\n        return testAux(this.modifiers.slice(), fn)(value);\n      } catch (ex) {\n        return false;\n      }\n    }\n  }, {\n    key: \"_check\",\n    value: function _check(value) {\n      try {\n        testAux(this.modifiers.slice(), this.fn)(value);\n      } catch (ex) {\n        if (testAux(this.modifiers.slice(), function (it) {\n          return it;\n        })(false)) {\n          return;\n        }\n      }\n\n      if (!testAux(this.modifiers.slice(), this.fn)(value)) {\n        throw null;\n      }\n    }\n  }, {\n    key: \"_testAsync\",\n    value: function _testAsync(value) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        testAsyncAux(_this.modifiers.slice(), _this.fn)(value).then(function (valid) {\n          if (valid) {\n            resolve(value);\n          } else {\n            reject(null);\n          }\n        }).catch(function (ex) {\n          return reject(ex);\n        });\n      });\n    }\n  }]);\n  return Rule;\n}();\n\nfunction pickFn(fn) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"simple\";\n\n  return typeof fn === \"object\" ? fn[variant] : fn;\n}\n\nfunction testAux(modifiers, fn) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAux(modifiers, fn);\n    return modifier.perform(nextFn);\n  } else {\n    return pickFn(fn);\n  }\n}\n\nfunction testAsyncAux(modifiers, fn) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAsyncAux(modifiers, fn);\n    return modifier.performAsync(nextFn);\n  } else {\n    return function (value) {\n      return Promise.resolve(pickFn(fn, \"async\")(value));\n    };\n  }\n}\n\nvar Modifier = function Modifier(name, perform, performAsync) {\n  classCallCheck(this, Modifier);\n\n  this.name = name;\n  this.perform = perform;\n  this.performAsync = performAsync;\n};\n\nvar ValidationError = function (_Error) {\n  inherits(ValidationError, _Error);\n\n  function ValidationError(rule, value, cause, target) {\n    classCallCheck(this, ValidationError);\n\n    for (var _len = arguments.length, remaining = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n      remaining[_key - 4] = arguments[_key];\n    }\n\n    var _this = possibleConstructorReturn(this, (ValidationError.__proto__ || Object.getPrototypeOf(ValidationError)).call(this, remaining));\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, ValidationError);\n    }\n    _this.rule = rule;\n    _this.value = value;\n    _this.cause = cause;\n    _this.target = target;\n    return _this;\n  }\n\n  return ValidationError;\n}(Error);\n\nvar Context = function () {\n  function Context() {\n    var chain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var nextRuleModifiers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    classCallCheck(this, Context);\n\n    this.chain = chain;\n    this.nextRuleModifiers = nextRuleModifiers;\n  }\n\n  createClass(Context, [{\n    key: \"_applyRule\",\n    value: function _applyRule(ruleFn, name) {\n      var _this = this;\n\n      return function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.chain.push(new Rule(name, ruleFn.apply(_this, args), args, _this.nextRuleModifiers));\n        _this.nextRuleModifiers = [];\n        return _this;\n      };\n    }\n  }, {\n    key: \"_applyModifier\",\n    value: function _applyModifier(modifier, name) {\n      this.nextRuleModifiers.push(new Modifier(name, modifier.simple, modifier.async));\n      return this;\n    }\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Context(this.chain.slice(), this.nextRuleModifiers.slice());\n    }\n  }, {\n    key: \"test\",\n    value: function test(value) {\n      return this.chain.every(function (rule) {\n        return rule._test(value);\n      });\n    }\n  }, {\n    key: \"testAll\",\n    value: function testAll(value) {\n      var err = [];\n      this.chain.forEach(function (rule) {\n        try {\n          rule._check(value);\n        } catch (ex) {\n          err.push(new ValidationError(rule, value, ex));\n        }\n      });\n      return err;\n    }\n  }, {\n    key: \"check\",\n    value: function check(value) {\n      this.chain.forEach(function (rule) {\n        try {\n          rule._check(value);\n        } catch (ex) {\n          throw new ValidationError(rule, value, ex);\n        }\n      });\n    }\n  }, {\n    key: \"testAsync\",\n    value: function testAsync(value) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        executeAsyncRules(value, _this2.chain.slice(), resolve, reject);\n      });\n    }\n  }]);\n  return Context;\n}();\n\nfunction executeAsyncRules(value, rules, resolve, reject) {\n  if (rules.length) {\n    var rule = rules.shift();\n    rule._testAsync(value).then(function () {\n      executeAsyncRules(value, rules, resolve, reject);\n    }, function (cause) {\n      reject(new ValidationError(rule, value, cause));\n    });\n  } else {\n    resolve(value);\n  }\n}\n\nfunction v8n() {\n  return proxyContext(new Context());\n}\n\n// Custom rules\nvar customRules = {};\n\nv8n.extend = function (newRules) {\n  Object.assign(customRules, newRules);\n};\n\nv8n.clearCustomRules = function () {\n  customRules = {};\n};\n\nfunction proxyContext(context) {\n  return new Proxy(context, {\n    get: function get(obj, prop) {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      var newContext = proxyContext(context._clone());\n\n      if (prop in availableModifiers) {\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      }\n      if (prop in customRules) {\n        return newContext._applyRule(customRules[prop], prop);\n      }\n      if (prop in availableRules) {\n        return newContext._applyRule(availableRules[prop], prop);\n      }\n    }\n  });\n}\n\nvar availableModifiers = {\n  not: {\n    simple: function simple(fn) {\n      return function (value) {\n        return !fn(value);\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.resolve(fn(value)).then(function (result) {\n          return !result;\n        }).catch(function (e) {\n          return true;\n        });\n      };\n    }\n  },\n\n  some: {\n    simple: function simple(fn) {\n      return function (value) {\n        return split(value).some(function (item) {\n          try {\n            return fn(item);\n          } catch (ex) {\n            return false;\n          }\n        });\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.all(split(value).map(function (item) {\n          try {\n            return fn(item).catch(function (e) {\n              return false;\n            });\n          } catch (ex) {\n            return false;\n          }\n        })).then(function (result) {\n          return result.some(Boolean);\n        });\n      };\n    }\n  },\n\n  every: {\n    simple: function simple(fn) {\n      return function (value) {\n        return split(value).every(fn);\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.all(split(value).map(fn)).then(function (result) {\n          return result.every(Boolean);\n        });\n      };\n    }\n  }\n};\n\nfunction split(value) {\n  if (typeof value === \"string\") {\n    return value.split(\"\");\n  }\n  return value;\n}\n\nvar availableRules = {\n  // Value\n\n  equal: function equal(expected) {\n    return function (value) {\n      return value == expected;\n    };\n  },\n\n  exact: function exact(expected) {\n    return function (value) {\n      return value === expected;\n    };\n  },\n\n  // Types\n\n  number: function number() {\n    var allowInfinite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (value) {\n      return typeof value === \"number\" && (allowInfinite || isFinite(value));\n    };\n  },\n\n  integer: function integer() {\n    return function (value) {\n      var isInteger = Number.isInteger || isIntegerPolyfill;\n      return isInteger(value);\n    };\n  },\n\n  numeric: function numeric() {\n    return function (value) {\n      return !isNaN(parseFloat(value)) && isFinite(value);\n    };\n  },\n\n  string: function string() {\n    return testType(\"string\");\n  },\n\n  boolean: function boolean() {\n    return testType(\"boolean\");\n  },\n\n  undefined: function undefined() {\n    return testType(\"undefined\");\n  },\n\n  null: function _null() {\n    return testType(\"null\");\n  },\n\n  array: function array() {\n    return testType(\"array\");\n  },\n\n  object: function object() {\n    return testType(\"object\");\n  },\n\n  instanceOf: function instanceOf(instance) {\n    return function (value) {\n      return value instanceof instance;\n    };\n  },\n\n  // Pattern\n\n  pattern: function pattern(expected) {\n    return function (value) {\n      return expected.test(value);\n    };\n  },\n\n  lowercase: function lowercase() {\n    return function (value) {\n      return (/^([a-z]+\\s*)+$/.test(value)\n      );\n    };\n  },\n\n  uppercase: function uppercase() {\n    return function (value) {\n      return (/^([A-Z]+\\s*)+$/.test(value)\n      );\n    };\n  },\n\n  vowel: function vowel() {\n    return function (value) {\n      return (/^[aeiou]+$/i.test(value)\n      );\n    };\n  },\n\n  consonant: function consonant() {\n    return function (value) {\n      return (/^(?=[^aeiou])([a-z]+)$/i.test(value)\n      );\n    };\n  },\n\n  // Value at\n\n  first: function first(expected) {\n    return function (value) {\n      return value[0] == expected;\n    };\n  },\n\n  last: function last(expected) {\n    return function (value) {\n      return value[value.length - 1] == expected;\n    };\n  },\n\n  // Length\n\n  empty: function empty() {\n    return function (value) {\n      return value.length === 0;\n    };\n  },\n\n  length: function length(min, max) {\n    return function (value) {\n      return value.length >= min && value.length <= (max || min);\n    };\n  },\n\n  minLength: function minLength(min) {\n    return function (value) {\n      return value.length >= min;\n    };\n  },\n\n  maxLength: function maxLength(max) {\n    return function (value) {\n      return value.length <= max;\n    };\n  },\n\n  // Range\n\n  negative: function negative() {\n    return function (value) {\n      return value < 0;\n    };\n  },\n\n  positive: function positive() {\n    return function (value) {\n      return value >= 0;\n    };\n  },\n\n  between: function between(a, b) {\n    return function (value) {\n      return value >= a && value <= b;\n    };\n  },\n\n  range: function range(a, b) {\n    return function (value) {\n      return value >= a && value <= b;\n    };\n  },\n\n  lessThan: function lessThan(n) {\n    return function (value) {\n      return value < n;\n    };\n  },\n\n  lessThanOrEqual: function lessThanOrEqual(n) {\n    return function (value) {\n      return value <= n;\n    };\n  },\n\n  greaterThan: function greaterThan(n) {\n    return function (value) {\n      return value > n;\n    };\n  },\n\n  greaterThanOrEqual: function greaterThanOrEqual(n) {\n    return function (value) {\n      return value >= n;\n    };\n  },\n\n  // Divisible\n\n  even: function even() {\n    return function (value) {\n      return value % 2 === 0;\n    };\n  },\n\n  odd: function odd() {\n    return function (value) {\n      return value % 2 !== 0;\n    };\n  },\n\n  includes: function includes(expected) {\n    return function (value) {\n      return ~value.indexOf(expected);\n    };\n  },\n\n  schema: function schema(_schema) {\n    return testSchema(_schema);\n  },\n\n  // branching\n\n  passesAnyOf: function passesAnyOf() {\n    for (var _len = arguments.length, validations = Array(_len), _key = 0; _key < _len; _key++) {\n      validations[_key] = arguments[_key];\n    }\n\n    return function (value) {\n      return validations.some(function (validation) {\n        return validation.test(value);\n      });\n    };\n  },\n\n  optional: function optional(validation) {\n    var considerTrimmedEmptyString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return function (value) {\n      if (considerTrimmedEmptyString && typeof value === \"string\" && value.trim() === \"\") {\n        return true;\n      }\n\n      if (value !== undefined && value !== null) validation.check(value);\n      return true;\n    };\n  }\n};\n\nfunction testType(expected) {\n  return function (value) {\n    return Array.isArray(value) && expected === \"array\" || value === null && expected === \"null\" || typeof value === expected;\n  };\n}\n\nfunction isIntegerPolyfill(value) {\n  return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction testSchema(schema) {\n  return {\n    simple: function simple(value) {\n      var causes = [];\n      Object.keys(schema).forEach(function (key) {\n        var nestedValidation = schema[key];\n        try {\n          nestedValidation.check((value || {})[key]);\n        } catch (ex) {\n          ex.target = key;\n          causes.push(ex);\n        }\n      });\n      if (causes.length > 0) {\n        throw causes;\n      }\n      return true;\n    },\n    async: function async(value) {\n      var causes = [];\n      var nested = Object.keys(schema).map(function (key) {\n        var nestedValidation = schema[key];\n        return nestedValidation.testAsync((value || {})[key]).catch(function (ex) {\n          ex.target = key;\n          causes.push(ex);\n        });\n      });\n      return Promise.all(nested).then(function (values) {\n        if (causes.length > 0) {\n          throw causes;\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nexport default v8n;\n","import logs from '../../packages/kandy/src/logs/plugin'\nimport config from '../../packages/kandy/src/config'\nimport events from '../../packages/kandy/src/events'\n\n/**\n * This is a list of base plugins that most solutions will need. These plugins provide service-like capabilities\n * to the SDK.\n */\nexport default [\n  { name: 'logs', fn: logs },\n  { name: 'config', fn: config },\n  { name: 'events', fn: events }\n]\n","/**\nNote regarding this file's name:\n\nUsually plugins factories are in the index.js file of their corresponding folder.\nThis used to be the case. However this file was also being used to host the logManager\nthat is being used with the SDK.\n\nSince the logManager is being included in almost every file it was preferable to rename this\nfile rather than point 100s of files to a new place for the logManager.\n**/\n\n// Logs plugin.\nimport api from './interface/api'\nimport reducer from './interface/reducers'\nimport * as actions from './interface/actions'\n\nimport { defaultOptions, partialDefaultLogActions /*,  parseLogConfig */ } from './config'\nimport { setLevelEntry, setHandlerEntry, getLevelMap } from './sagas'\nimport createActionLogger from './actions'\n\n// Other plugins.\nimport { update as updateConfig } from '../config/interface/actions'\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { logLevels } from 'kandy-logger'\nimport { logManager } from './index'\n\n// Include the extra JSDoc items.\nimport './docs'\n\nexport default function logPlugin (options = {}) {\n  const name = 'logs'\n\n  const logger = logManager.getLogger('LOGS')\n\n  // Make sure the configured log handler was a function.\n  if (options.handler && typeof options.handler !== 'function') {\n    delete options.handler\n    logger.warn('Invalid log handler configuration provided; using default instead.')\n  }\n\n  // Make sure configured log level is supported.\n  if (options.logLevel && !Object.keys(logLevels).includes(options.logLevel.toUpperCase())) {\n    delete options.logLevel\n    logger.warn('Invalid log level configuration provided; using default instead.')\n  }\n\n  options = mergeValues(defaultOptions, options)\n\n  // Check if `logActions` is true and apply defaults for action logging\n  if (options.logActions !== false) {\n    if (options.logActions instanceof Object) {\n      options.logActions = mergeValues(partialDefaultLogActions, options.logActions)\n    } else {\n      options.logActions = partialDefaultLogActions\n    }\n  }\n\n  // Now that we have the application's log configs, update everything to\n  //    use those values instead of default values.\n  logManager.setLevel(options.logLevel)\n  if (options.handler) {\n    logManager.setHandler(options.handler)\n  }\n\n  Object.values(logManager.getLoggers()).forEach(logger => {\n    logger.setLevel(options.logLevel)\n    if (options.handler) {\n      logger.setHandler(options.handler)\n    }\n  })\n\n  function * init ({ webRTC }) {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    // Update state with the initial Logger levels.\n    yield put(actions.levelsChanged(getLevelMap(logManager)))\n\n    // Ensure the webRTC object exists. It won't in 3.X.\n    if (webRTC) {\n      // Update everything to\n      //    use those values from the application configs instead of default values in the webrtc Stack.\n      const webRTCLogManager = webRTC.managers.logs\n      if (options.handler) {\n        webRTCLogManager.setHandler(options.handler)\n      }\n      Object.values(webRTCLogManager.getLoggers()).forEach(logger => {\n        logger.setLevel(options.logLevel)\n        if (options.handler) {\n          logger.setHandler(options.handler)\n        }\n      })\n    }\n  }\n\n  const components = {\n    name,\n    capabilities: ['logs'],\n    init,\n    api,\n    reducer,\n    sagas: [setLevelEntry, setHandlerEntry]\n  }\n\n  options.logLevel = options.logLevel.toUpperCase()\n  const setLevel = logLevels[options.logLevel]\n  // Consider actions to be at the INFO log level.\n  // Only export a middleware (for actions) at the appropriate levels.\n  if (setLevel <= logLevels.INFO && options.logActions !== false) {\n    components.middleware = createActionLogger(options)\n  }\n\n  return components\n}\n","// Logs plugin.\nimport { logManager, API_LOG_TAG } from '../index'\nimport * as actions from './actions'\nimport { getLevel, getTypes } from './selectors'\n\n/**\n * The SDK has an internal logging system for providing information about its\n *    behaviour. The SDK will generate logs, at different levels for different\n *    types of information, which are routed to a\n *    \"{@link logger.LogHandler Log Handler}\" for consumption. An application\n *    can provide their own Log Handler (see\n *    {@link #configconfiglogs config.logs}) to customize how the logs are\n *    handled, or allow the default Log Handler to print the logs to the\n *    console.\n *\n * The SDK's default Log Handler is merely a thin wrapper around the browser's\n *    console API (ie. `window.console`). It receives the log generated by the\n *    SDK, called a \"{@link logger.LogEntry Log Entry}\", formats a\n *    human-readable message with it, then uses the console to log it at the\n *    appropriate level. This is important to be aware of, since your browser's\n *    console may affect how you see the SDK's default log messages. Since the\n *    default Log Handler uses the console's levels, the browser may filter\n *    which messages are shown depending on which levels it has configured. For\n *    a user that understands console log levels, this can be helpful for\n *    filtering the logs to only the relevant information. But it can equally\n *    be a hindrance by hiding the more detailed log messages (at the 'debug'\n *    level), since browser can have this level hidden by default. For this\n *    reason, we recommend providing a custom Log Handler to the SDK that is\n *    better suited for your application and its users.\n *\n * @public\n * @namespace logger\n * @requires logs\n */\n\nexport default function api ({ dispatch, getState }) {\n  const log = logManager.getLogger('LOGS')\n\n  const api = {\n    /**\n     * Possible levels for the SDK logger.\n     *\n     * The SDK will provide {@link logger.LogEntry Log Entries} to the\n     *    {@link logger.LogHandler Log Handler} for all logs at or above the set\n     *    log level. 'debug' is considered the lowest level and 'silent' the\n     *    highest level. For example, if the current level is 'info', then the\n     *    {@link logger.LogHandler Log Handler} will receive\n     *    {@link logger.LogEntry Log Entries} for logs at 'info', 'warn', and\n     *    'error', but not for the 'debug' level.\n     * @public\n     * @static\n     * @memberof logger\n     * @method levels\n     * @property {string} SILENT Nothing will be logged.\n     * @property {string} ERROR Unhandled error information will be logged. If\n     *    the SDK encounters an issue it cannot resolve, the error will be included\n     *    in the logs. This likely points to an issue with the SDK itself or an\n     *    issue with how the SDK is being used.\n     * @property {string} WARN Warning messages for the application developer will\n     *    be logged. If the SDK encounters an issue that it can recover and continue,\n     *    a warning about the issue will be included in the logs. These logs point\n     *    to issues that need to be handled by the application. For example, providing\n     *    an invalid configuration to the SDK will cause a warning log that explains\n     *    the issue.\n     * @property {string} INFO General information about the SDK's operations will\n     *    be logged, outlining how the SDK is handling the operations. Reading through\n     *    these logs should provide a high-level view of what the SDK is doing,\n     *    and why it is doing it.\n     * @property {string} DEBUG Detailed information about the SDK's operations,\n     *    meant for debugging issues, will be logged. Specific information and relevant\n     *    operation data are provided for understanding the scenario that the SDK\n     *    was in during the operation.\n     */\n    levels: {\n      SILENT: 'silent',\n      ERROR: 'error',\n      WARN: 'warn',\n      INFO: 'info',\n      DEBUG: 'debug'\n    },\n\n    /**\n     * Update the log level used by the SDK's loggers.\n     *\n     * Changing the log level will affect the amount of logs that the SDK will\n     *    output for debugging purposes.\n     *\n     * See {@link logger.levels} for valid log levels. Other values will not be\n     *    accepted. See the {@link logger.getTypes} API for valid logger types.\n     *    Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setLevel\n     * @param  {string} level The log level to set.\n     * @param  {string} [type] An optional subset of loggers to update.\n     * @example\n     * // Set logs to be at the warn level.\n     * client.logger.setLevel(client.logger.levels.WARN)\n     */\n    setLevel (level, type) {\n      log.debug(API_LOG_TAG + 'logger.setLevel: ', level, type)\n\n      dispatch(actions.setLevel(level, type))\n    },\n\n    /**\n     * Get the currently set log level used by the SDK's loggers.\n     *\n     * @private\n     * @static\n     * @memberof logger\n     * @method getLevel\n     * @param  {string} [type] An optional subset of loggers.\n     * @return {logger.levels} A log level.\n     */\n    getLevel (type) {\n      log.debug(API_LOG_TAG + 'logger.getLevel: ', type)\n\n      return getLevel(getState(), type)\n    },\n\n    /**\n     * Updates the {@link logger.LogHandler LogHandler} used by the SDK's\n     *    loggers.\n     *\n     * Changing the log handler will change how the SDK's logs are handled by\n     *    the application.\n     *\n     * See {@link logger.LogHandler} and {@link logger.LogEntry} for information\n     *    about the handler. See the {@link logger.getTypes} API for valid\n     *    logger types. Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setHandler\n     * @param  {logger.LogEntry} handler A {@link logger.LogHandler} function.\n     * @param  {string}   [type] An optional subset of loggers to update.\n     * @example\n     * // Change the SDK's Log Handler to a custom function.\n     * client.logger.setHandler((logEntry) => {\n     *    // Handle the SDK's logs in a custom way.\n     *    ...\n     * })\n     *\n     */\n    setHandler (handler, type) {\n      log.debug(API_LOG_TAG + 'logger.setHandler: ', handler, type)\n\n      dispatch(actions.setHandler(handler, type))\n    },\n\n    /**\n     * Get the list of logger types used by the SDK.\n     *\n     * Logs for different SDK features can be managed separately from one\n     *    another by specifying the type when using the {@link logger.setLevel}\n     *    and {@link logger.setHandler} APIs.\n     * @private\n     * @static\n     * @memberof logger\n     * @method getTypes\n     * @return {Array<string>} Logger types.\n     * @example\n     * const types = client.logger.getTypes()\n     * // types: ['DEFAULT', 'AUTH', 'CALL', ...]\n     *\n     * // Set the Call logs to be at the debug level.\n     * client.logger.setLevel('DEBUG', 'CALL')\n     */\n    getTypes () {\n      log.debug(API_LOG_TAG + 'logger.getTypes')\n\n      return getTypes(getState())\n    }\n  }\n\n  return {\n    logger: api\n  }\n}\n","// Libraries.\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the log level for a specified logger type, or the default level.\n * @method getLevel\n * @param  {Object} state            SDK redux state.\n * @param  {String} [type='DEFAULT'] A type of Logger.\n * @return {string} A log level.\n */\nexport function getLevel (state, type = 'DEFAULT') {\n  const clonedState = cloneDeep(state)\n  return clonedState.logs[type]\n}\n\n/**\n * Retrieves a list of all of the SDK's Logger types.\n * @method getTypes\n * @param  {Object} state  SDK redux state.\n * @return {Array<string>}\n */\nexport function getTypes (state) {\n  const clonedState = cloneDeep(state)\n  return Object.keys(clonedState.logs)\n}\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\n\n/**\n * Logs state is a mapping between every Logger type (and the default type)\n *    and its set log level.\n * eg. {\n *    DEFAULT: 'DEBUG',\n *    AUTH: 'DEBUG',\n *    CALL: 'INFO',\n *    ...\n * }\n */\n\nconst reducers = {}\n\nreducers[actionTypes.LEVELS_CHANGE] = {\n  next (state, action) {\n    // Replace all levels that have been changed.\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","// Logs plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { logManager } from './index'\n\n// Libraries.\nimport { put, takeEvery } from 'redux-saga/effects'\n\n// The SDK's name for the default/global log level.\nconst defaultType = 'DEFAULT'\n\n/**\n * Taker saga for \"set log level\" actions.\n * @method setLevelEntry\n */\nexport function * setLevelEntry () {\n  yield takeEvery(actionTypes.SET_LEVEL, setLogLevel)\n}\n\n/**\n * Taker saga for \"set log handler\" actions.\n * @method setHandlerEntry\n */\nexport function * setHandlerEntry () {\n  yield takeEvery(actionTypes.SET_HANDLER, setLogHandler)\n}\n\n/**\n * Functionality saga for \"set log level\" actions.\n * @method setLogLevel\n * @param  {Object} action\n * @param  {string} action.level\n * @param  {string} [action.type]\n */\nexport function * setLogLevel (action) {\n  const { level, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setLevel(level)\n      // Update all Loggers' levels.\n      logManager.getLoggers().forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update all Logger levels in state, because changing the default level\n      //    will affect all Loggers without their own explicit level set.\n      yield put(actions.levelsChanged(getLevelMap(logManager)))\n    } else {\n      // Update the Manager's default level for this type.\n      logManager.setLevel(type, level)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update the one type's level in state.\n      yield put(actions.levelsChanged({ [type]: level }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Functionality saga for \"set log handler\" actions.\n * @method setLogHandler\n * @param  {Object}   action\n * @param  {Function} action.handler\n * @param  {string}   [action.type]\n */\nexport function * setLogHandler (action) {\n  const { handler, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setHandler(handler)\n      // Update all Loggers' handlers.\n      logManager.getLoggers().forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that all Logger handlers [may] have changed (because changing\n      //    the default handler will affect all Loggers without their own\n      //    handler explicitly set).\n      yield put(actions.handlersChanged(getHandlerMap(logManager)))\n    } else {\n      // Update the Manager's default handler for this type.\n      logManager.setHandler(type, handler)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that the one type's handler has changed.\n      yield put(actions.handlersChanged({ [type]: handler }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Helper function.\n * Gets the log levels for every Logger type (and default).\n * @method getLevelMap\n * @return {Object} Mapping of Logger type to its log level.\n */\nexport function getLevelMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const levels = {}\n  // Add the default level to the beginning.\n  levels[defaultType] = logManager.getLevel()\n\n  // Get the level for each Logger type.\n  types.forEach(type => {\n    levels[type] = logManager.getLevel(type)\n  })\n\n  return levels\n}\n\n/**\n * Helper function.\n * Gets the log handler for every Logger type (and default).\n * @method getHandlerMap\n * @return {Object} Mapping of Logger type to its log handler.\n */\nexport function getHandlerMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const handlers = {}\n  // Add the default level to the beginning.\n  handlers[defaultType] = logManager.getHandler()\n\n  // Get the handler for each Logger type.\n  types.forEach(type => {\n    handlers[type] = logManager.getHandler(type)\n  })\n\n  return handlers\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/set\"), __esModule: true };","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nrequire('../modules/es7.set.of');\nrequire('../modules/es7.set.from');\nmodule.exports = require('../modules/_core').Set;\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\nrequire('./_set-collection-of')('Set');\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\nrequire('./_set-collection-from')('Set');\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n","// Logs plugin.\nimport { logManager } from '../index'\nimport { logLevels } from 'kandy-logger/src/constants'\n// Action specific.\nimport setupTransformers from './transformers'\nimport { titleFormatter } from './utils'\n\n// Libraries.\nimport { createLogger } from 'redux-logger'\n\n/**\n * Creates a redux middleware for logging actions.\n * @method createActionLogger\n * @param  {Object}     options\n * @return {Middleware}\n */\nexport default function createActionLogger (options) {\n  // Create a Logger for handling the action logs.\n  const logger = logManager.getLogger('ACTION')\n  logger.setHandler(options.logActions.handler)\n  logger.setLevel(options.logActions.level)\n\n  const setLevel = logLevels[options.logLevel]\n\n  let actionOptions = {}\n  // Use different options for redux-logger depending on log level.\n  if (setLevel === logLevels.INFO) {\n    // At the INFO level, hide everything except the action name.\n    actionOptions.level = false\n    actionOptions.diff = false\n  } else {\n    // At the DEBUG+ levels, use the configs.\n    actionOptions = {\n      ...options.logActions\n    }\n  }\n\n  if (options.logActions.actionOnly) {\n    // Hide prevState and nextState.\n    // Log action and error at info level, so the browser won't hide it by default.\n    actionOptions.level = {\n      prevState: false,\n      action: 'info',\n      error: 'info',\n      nextState: false\n    }\n  }\n\n  if (options.logActions.excludeActions) {\n    actionOptions.predicate = excludeActions(options.logActions.excludeActions)\n  }\n\n  // ALWAYS use our own logger\n  actionOptions.logger = logger\n  // ALWAYS remove theming/styling from the action log messages\n  actionOptions.titleFormatter = titleFormatter\n  actionOptions.colors = false\n\n  // Setup the transformers based on the options.\n  const transformers = setupTransformers(options.logActions)\n  // Create the logger middleware.\n\n  return createLogger({\n    ...actionOptions,\n    ...transformers\n  })\n}\n\n/**\n * Logger predicate function that will take an array of action types\n * and exclude them from logs\n * @param {Array} actions An array of action types to exclude from logs\n * @returns {function} A predicate function\n */\nfunction excludeActions (actions) {\n  return (getState, action) => !actions.includes(action.type)\n}\n","// Libraries\nimport { omit } from 'lodash/fp'\n\n/**\n * Determines which redux-logger transformers we need based on options.\n * @method setupTransformers\n * @param  {Object} options\n * @return {Object} An object of transformers to be provided to redux-logger.\n */\nexport default function setupTransformers (options) {\n  // A \"pipeline\" of all redux-logger action transformers.\n  function actionPipeline (transformers) {\n    return function (action) {\n      transformers.forEach(function (transformer) {\n        action = transformer(action)\n      })\n      return action\n    }\n  }\n\n  const transformers = {}\n  const actionTransformers = []\n  if (!options.exposePayloads) {\n    // If exposePayloads is disabled, include the removePayloads transformer\n    actionTransformers.push(removePayloads)\n  } else {\n    // Otherwise, we should still hide passwords\n    actionTransformers.push(passwordHider)\n  }\n  // Create the actionTransformer pipeline with the included transformers.\n  transformers.actionTransformer = actionPipeline(actionTransformers)\n\n  return transformers\n}\n\n// Redux-logger actionTransformer to prevent passwords from being logged.\nfunction passwordHider (action) {\n  if (action.meta && action.meta.isSensitive) {\n    // Only log the action name for actions that have sensitive data in them.\n    return omit('payload', action)\n  }\n  return action\n}\n\n/**\n * Helper function removes secure data if secure mode is enabled\n * @param {Object} action\n */\nfunction removePayloads (action) {\n  if (!(action.meta && action.meta.isSafe)) {\n    return omit('payload', action)\n  }\n  return action\n}\n","/**\n * Standard title formatter function is almost identical to the defaultTitleFormatter found in redux-logger\n * but removes placeholder characters previously used for styling, which is not being used in the logging\n * configuration\n *\n * @param action\n * @param time\n * @param took\n * @returns {string}\n */\nexport function titleFormatter (action, time, took) {\n  var parts = ['action']\n  parts.push(action.type)\n  parts.push('@ ' + time)\n  parts.push('(in ' + took.toFixed(2) + ' ms)')\n\n  return parts.join(' ')\n}\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","module.exports = { \"default\": require(\"core-js/library/fn/object/define-properties\"), __esModule: true };","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","// Other plugins.\nimport { logManager } from '../../logs'\n\nconst log = logManager.getLogger('SDPHANDLER')\n\n/**\n * SDP handler function that should be passed into session object's `processOffer` and `processAnswer` function.\n * This function disables old media encryption method SDES (Modifies sdp by removing crypto).\n * However, if only SDES is available, don't disable it.\n *\n * @method sanitizeSdesFromSdp\n * @param {Object} newSdp The SDP so far (could have been modified by previous handlers).\n * @param {Object} info Information about the session description.\n * @param {RTCSdpType} info.type The session description's type.\n * @param {string} info.step The step that will occur after the Pipeline is run.\n * @param {string} info.endpoint Which end of the connection created the SDP.\n * @param {Object} originalSdp The SDP in its initial state.\n * @return {Object} The sanitized SDP with crypto removed (if fingerprint exists)\n */\nexport function sanitizeSdesFromSdp (newSdp, info, originalSdp) {\n  for (const mLine of newSdp.media) {\n    if (mLine.crypto && mLine.fingerprint) {\n      log.debug('Removing SDES line from SDP media section.')\n      delete mLine.crypto\n    }\n  }\n  return newSdp\n}\n\n/**\n * Function generator for an SDP handler function that changes the DTLS role of the SDP.\n * @method changeDtlsRoleTo\n * @param  {string} role\n * @return {Function} SDP handler.\n */\nexport function changeDtlsRoleTo (role) {\n  return function changeDtlsRole (newSdp, info, originalSdp) {\n    // Grab the original DTLS role for logging purposes.\n    //    Assumed that the DTLS role is the same in every media section.\n    const original = newSdp.media[0].setup\n    log.debug(`Changing SDP DTLS role from ${original} to ${role}.`)\n\n    // Change the DTLS role in every media section.\n    newSdp.media.map(media => {\n      media.setup = role\n      return media\n    })\n\n    return newSdp\n  }\n}\n\n/**\n * An SDP handler that adds bandwidth options to the SDP.\n * Supports Chrome & Firefox by generating 2 types of configs:\n *  - 'AS' for Chrome in kilobits per second\n *  - 'TIAS' for Firefox in bits per second\n * @method modifySdpBandwidth\n * @param {BandwidthControls} bandwidthControls\n * @return {Function} SDP handler.\n */\nexport function modifySdpBandwidth (newSdp, info, originalSdp) {\n  /**\n   * Generates bandwidth configs that Chrome & Firefox can recognize.\n   * @param {number} limit The bandwidth limit in kilobits per second.\n   */\n  function generateBandwidthConfigs (limit) {\n    return [\n      {\n        type: 'AS', // Chrome supports this (in kilobits per second)\n        limit\n      },\n      {\n        type: 'TIAS', // Firefox supports this (in bits per second)\n        limit: limit * 1000\n      }\n    ]\n  }\n\n  if (info.bandwidth) {\n    // For more details on bandwidth controls, see here https://webrtchacks.com/limit-webrtc-bandwidth-sdp/.\n\n    if (info.bandwidth.call) {\n      // Set session level bandwidth limit\n      newSdp.bandwidth = generateBandwidthConfigs(info.bandwidth.call)\n    }\n\n    if (info.bandwidth.audio) {\n      // Set audio bandwidth limit\n      newSdp.media\n        .filter(media => media.type === 'audio')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.audio)\n        })\n    }\n\n    if (info.bandwidth.video) {\n      // Set video bandwidth limit\n      newSdp.media\n        .filter(media => media.type === 'video')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.video)\n        })\n    }\n  }\n  return newSdp\n}\n\n/**\n * Generates extra informational parameters for ending a call.\n *\n * @method generateEndParams\n * @param {string}  currentCallState The state of the current call, before it was ended.\n * @param {boolean} isLocal Specifies if end operation was caused by the local side.\n * @param {Object}  params Extra context information related to the call.\n * @param {string}  [params.reasonText]  Human-readable explanation for the call change.\n * @param {string}  [params.statusCode] Code representing the reason for the call change.\n * @param {string}  params.remoteName   Name of the remote participant.\n * @param {string}  params.remoteNumber Number of the remote participant.\n */\nexport function generateEndParams (currentCallState, isLocal, params) {\n  const endParams = {\n    isLocal,\n    remoteParticipant: {\n      displayNumber: params.remoteNumber,\n      displayName: params.remoteName\n    },\n    transition: {\n      prevState: currentCallState\n    }\n  }\n  if (params.statusCode) {\n    endParams.transition.statusCode = params.statusCode\n  }\n  if (params.reasonText) {\n    endParams.transition.reasonText = params.reasonText\n  }\n  return endParams\n}\n","/*\n * This file contains SDK documentation for stuff defined by the Logger package.\n * They are here to 1) ensure they are picked up by our documentation tool and\n *    2) ensure they are written from the perspective of the SDK (not the Logger\n *    library).\n */\n\n/**\n * A LogEntry object is the data that the SDK compiles when information is\n *    logged. It contains both the logged information and meta-info about when\n *    and who logged it.\n *\n * A {@link logger.LogHandler LogHandler} provided to the SDK (see\n *    {@link #configconfiglogs config.logs}) will need to handle LogEntry\n *    objects.\n *\n * @public\n * @static\n * @typedef {Object} LogEntry\n * @memberof logger\n * @requires logs\n * @property {number} timestamp When the log was created, based on UNIX epoch.\n * @property {string} method The log function that was used to create the log.\n * @property {string} level The level of severity the log.\n * @property {Object} target The subject that the log is about.\n * @property {string} target.type The type of the target. This is also\n *    used as part of the name of the Logger.\n * @property {string} [target.id] A unique identifier for the target.\n * @property {string} target.name A combination of the target type and ID. If no\n *    id was provided, this will be the same as the type.\n * @property {Array} messages The logged information, given to the Logger\n *    method as parameters.\n * @property {Object} [timer] Timing data, if the log method was a timer method.\n * @example\n * function defaultLogHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n */\n\n/**\n * A LogHandler can be used to customize how the SDK should log information. By\n *    default, the SDK will log information to the console, but a LogHandler can\n *    be configured to change this behaviour.\n *\n * A LogHandler can be provided to the SDK as part of its configuration (see\n *    {@link #configconfiglogs config.logs}). The SDK will then provide this\n *    function with the logged information.\n *\n * @public\n * @static\n * @typedef {Function} LogHandler\n * @memberof logger\n * @requires logs\n * @param {Object} LogEntry The LogEntry to be logged.\n * @example\n * // Define a custom function to handle logs.\n * function logHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n *\n * // Provide the LogHandler as part of the SDK configurations.\n * const configs = { ... }\n * configs.logs.handler = logHandler\n * const client = create(configs)\n */\n","/**\n * This file is a plugin for the \"Config\" plugin\n * Reference info: https://confluence.genband.com/display/KSDK/Plugins\n */\nimport pluginInterface from './interface'\n\n/**\n * Config Plugin\n *\n * @method configImplementation\n * @return {Object} An instance of the \"Config\" plugin.\n */\n\n// yarn lint:docs complains if this isn't defined in a plugin.\n/**\n * @module config\n */\nexport default function configImplementation () {\n  return {\n    // Interface Components:\n    name: pluginInterface.name,\n    capabilities: ['config'],\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n","import api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a Config plugin.\n * @type {string}\n */\nconst name = 'config'\n\nexport default {\n  reducer,\n  name,\n  api\n}\n","// Config plugin.\nimport * as actions from './actions'\nimport { getConfiguration } from './selectors'\n\n// Other plugins.\nimport { logManager, API_LOG_TAG } from '../../logs'\nimport parseCallConfigs from '../../call/configs'\n\nimport { cloneDeep } from 'lodash/fp'\n\nconst log = logManager.getLogger('CONFIG')\n\nexport default function api (context) {\n  const configApi = {\n    /**\n     * Gets the current configuration Object. This is the object that is initially set as part of SDK creation using 'create' function.\n     *\n     * @public\n     * @static\n     * @memberof api\n     * @requires config\n     * @method getConfig\n     * @returns {Object} A configuration Object.\n     */\n    getConfig: function () {\n      log.debug(API_LOG_TAG + 'getConfig')\n      return getConfiguration(context.getState())\n    },\n\n    /**\n     * Update the configuration values for the SDK to use.\n     *\n     * This API will only modify the configurations provided, leaving other configurations\n     *   as they were originally set, by performing a merge of the new values into the\n     *   previous values.\n     *\n     * Please note that that the object provided to the `updateConfig` API may be different\n     *   than the object retrieved from the {@link api.getConfig getConfig} API. This may happen when a format\n     *   change has happened and the SDK modifies the provided format to alleviate\n     *   backwards-compatibility issues. We recommend ensuring the configurations you\n     *   provide are as described by the {@link config} section.\n     *\n     * @public\n     * @static\n     * @memberof api\n     * @requires config\n     * @method updateConfig\n     * @param {Object} newConfigValues Key-value pairs that will be placed into the store. See {@link config} for details on what key-value pairs are available for use.\n     * @example\n     * // Instantiate the SDK with certain configs.\n     * const client = create({\n     *   authentication: { ... },\n     *   logs: { ... },\n     *   ...\n     * })\n     *\n     * // Modify a subsection of the configs at a later time.\n     * // This will only update the specified configurations.\n     * client.updateConfig({\n     *     logs: {\n     *       loglevel: 'DEBUG'\n     *     }\n     * })\n     */\n    updateConfig: function (newConfigValues) {\n      log.debug(API_LOG_TAG + 'updateConfig: ', newConfigValues)\n\n      // Clone the configs so we don't mutate the application's object.\n      const configs = cloneDeep(newConfigValues)\n\n      // Validate the new config provided by the application.\n      if (configs.call) {\n        configs.call = parseCallConfigs(configs.call)\n      }\n\n      context.dispatch(actions.update(configs))\n    }\n  }\n\n  return configApi\n}\n","// Other plugins.\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { mergeValues } from '../common/utils'\nimport { getVersion } from '../common/version'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../common/validation'\n\nconst log = logManager.getLogger('CALL')\n\n/*\n * JsDoc documentation for call configs are found in the Call plugin indexes,\n *    since they are slightly different for Link vs. CPaaS.\n */\nconst defaultOptions = {\n  // Native Peer configs.\n  defaultPeerConfig: {\n    sdpSemantics: 'unified-plan',\n    iceServers: []\n  },\n\n  // ICE collection configs.\n  iceCollectionDelay: 1000,\n  maxIceTimeout: 3000,\n  serverTurnCredentials: true,\n  // Defaults set by the Webrtc stack:\n  //    iceCollectionCheck: Has at least one relay candidate.\n\n  // SDP manipulation configs.\n  sdpHandlers: [],\n  removeH264Codecs: true,\n  removeBundling: false,\n\n  // Other.\n  earlyMedia: false,\n  resyncOnConnect: false,\n  mediaBrokerOnly: false,\n  trickleIceMode: 'NONE',\n  normalizeDestination: true,\n  ringingFeedbackMode: 'auto',\n  callAuditTimer: 25000,\n  mediaConnectionRetryDelay: 3000\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  // Native Peer configs.\n  defaultPeerConfig: v8n.schema({\n    sdpSemantics: enums(['unified-plan', 'plan-b']),\n    // Validation for currently supported properties of an RTCPeerConfiguration,\n    // as specified at: https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection\n    // If more params are supported in the future, then we need to extend this validation.\n    iceServers: v8n.array(),\n    iceCandidatePoolSize: v8n.optional(v8n.positive()),\n    iceTransportPolicy: v8n.optional(enums(['all', 'public', 'relay'])),\n    bundlePolicy: v8n.optional(enums(['balanced', 'max-compat', 'max-bundle'])),\n    certificates: v8n.optional(\n      v8n.array().every.schema({\n        expires: v8n.string()\n      })\n    ),\n    peerIdentity: v8n.optional(v8n.string()),\n    rtcpMuxPolicy: v8n.optional(enums(['negotiate', 'require']))\n  }),\n\n  // ICE collection configs.\n  iceCollectionDelay: v8n.positive(),\n  maxIceTimeout: v8n.positive(),\n  serverTurnCredentials: v8n.boolean(),\n  // Defaults set by the Webrtc stack:\n  //    iceCollectionCheck: v8n.optional(v8n.function()),\n\n  // SDP manipulation configs.\n  sdpHandlers: v8n.array(),\n  removeH264Codecs: v8n.boolean(),\n  removeBundling: v8n.boolean(),\n\n  // Other\n  earlyMedia: v8n.boolean(),\n  resyncOnConnect: v8n.boolean(),\n  mediaBrokerOnly: v8n.boolean(),\n  trickleIceMode: v8n.string(),\n  normalizeDestination: v8n.boolean(),\n  ringingFeedbackMode: enums(['auto', 'manual']),\n  callAuditTimer: v8n.positive(),\n  mediaConnectionRetryDelay: v8n.positive()\n})\nconst parseOptions = parse('call', v8nValidation)\n\n/**\n * Helper function to format the Call configs as the plugins expect it to be.\n * @method parseConfigs\n * @param {Object} options Call configs provided by application.\n * @returns {Object} Call configs re-formatted as needed.\n */\nexport default function parseConfigs (options = {}) {\n  // Only parse the configs for v4+.\n  const majorVersion = getVersion()[0]\n  if (majorVersion < 4) {\n    return options\n  }\n\n  /*\n   * For backwards compatibility between doubly old ICE config and old config.\n   */\n  if (options.iceserver && !options.iceServers) {\n    log.warn('Call configuration `iceserver` is being replaced by `iceServers`. Please update to the config.')\n    options.iceServers = options.iceserver\n    delete options.iceserver\n  }\n\n  // If user did not provide this new way of configuration, create it.\n  if (!options.defaultPeerConfig) {\n    options.defaultPeerConfig = {}\n  }\n\n  // If user provided the old way of configuring sdpSemantics\n  if (options.sdpSemantics) {\n    // .. and if new way is not present, then use old way but store it in the new config.\n    if (!options.defaultPeerConfig.sdpSemantics) {\n      // save the old config item under the new way\n      options.defaultPeerConfig.sdpSemantics = options.sdpSemantics\n    }\n\n    // No longer need the old config item\n    delete options.sdpSemantics\n  }\n\n  // Repeat the same algo for iceServers since they need to be stored under\n  // same defaultPeerConfig\n  if (options.iceServers) {\n    if (!options.defaultPeerConfig.iceServers) {\n      // save the old config item under the new way\n      options.defaultPeerConfig.iceServers = options.iceServers\n    }\n\n    // No longer need the old config item\n    delete options.iceServers\n  }\n\n  if (options.ringingFeedbackMode && !['auto', 'manual'].includes(options.ringingFeedbackMode)) {\n    log.warn('Call configuration `ringingFeedbackMode` invalid. Switching to `auto`.')\n    options.ringingFeedbackMode = 'auto'\n  }\n\n  return options\n}\n\n/**\n * Helper function to merge the default Call configs into the application-provided\n *   configs and validate them.\n * @param  {Object} options Call configs with expected formatting.\n * @return {Object} Call configs with defaults included.\n */\nexport function mergeDefaults (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  parseOptions(options)\n\n  return options\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { mergeValues } from '../../common/utils'\n\nconst reducers = {}\n\nreducers[actionTypes.CONFIG_UPDATE] = {\n  next (state, action) {\n    return mergeValues(state, action.payload)\n  }\n}\n\nreducers[actionTypes.SET_SDP_HANDLERS] = {\n  next (state, action) {\n    return {\n      ...state,\n      call: {\n        ...state.call,\n        sdpHandlers: action.payload.sdpHandlers\n      }\n    }\n  }\n}\n\n// Config default state is an empty Object\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Events plugin.\nimport pluginInterface from './interface'\nimport { emitEvent } from './interface/actions'\nimport * as actionTypes from './interface/actionTypes'\n\nimport eventEmitter from './eventEmitter'\n\n// Logs\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('EVENTS')\n\n/**\n * Event Emitter Implementation.\n * Factory function to create the Event Emitter Implementation.\n * Defines the functionality exposed by an Event Emitter Interface.\n */\nexport default function eventsImplementation () {\n  return {\n    name: pluginInterface.name,\n    middleware: middleware,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n\n/**\n * Implementation of Event Emitter Interface.\n * @return {Middleware} middleware Middleware to be applied to the redux store.\n */\nfunction middleware (context) {\n  var emitter = eventEmitter()\n  var eventMap = {}\n\n  /**\n   * Middleware to handle Event Emitter Interface actions.\n   * Redirects Interface actions to the Plugin functionality, and dispatches\n   *      actions to update the store if needed.\n   * @type {Function}\n   */\n  return next => action => {\n    switch (action.type) {\n      case actionTypes.EVENTS_ON:\n        emitter.on(action.payload.eventType, action.payload.listener)\n        break\n      case actionTypes.EVENTS_OFF:\n        emitter.off(action.payload.eventType, action.payload.listener)\n        break\n      case actionTypes.EVENTS_SUBSCRIBE:\n        emitter.subscribe(action.payload)\n        break\n      case actionTypes.EVENTS_UNSUBSCRIBE:\n        emitter.unsubscribe(action.payload)\n        break\n      case actionTypes.EVENTS_ALIAS:\n        emitter.alias(action.payload.eventType, action.payload.alias)\n        break\n      case actionTypes.EVENTS_EMIT:\n        log.info(`Emitting event: ${action.payload.eventType}`, action.payload.args[0])\n        emitter.emit(action.payload.eventType, ...action.payload.args)\n        break\n      case actionTypes.MAP_EVENTS:\n        for (const actionType in action.payload) {\n          if (action.payload.hasOwnProperty(actionType)) {\n            const mapper = action.payload[actionType]\n            if (eventMap.hasOwnProperty(actionType)) {\n              eventMap[actionType].push(mapper)\n            } else {\n              eventMap[actionType] = [mapper]\n            }\n          }\n        }\n        break\n      default:\n        if (eventMap.hasOwnProperty(action.type)) {\n          // Get state both before and after allowing the action to go through\n          //    the reducers. This lets events have compare state changes.\n          const prevState = context.getState()\n          let result = next(action)\n          const state = context.getState()\n\n          // make this compatible with promise middleware by ensuring we\n          // wait for the promise to resolve. It's easier to just always\n          // use a promise, as opposed to handling cases.\n          if (!result || !result.then) {\n            result = Promise.resolve(result)\n          }\n          result.then(function () {\n            for (const mapper of eventMap[action.type]) {\n              // Use the mapper(s) for this specific event to create the event object(s).\n              // Event mappings have access to the action and states pre+post reducer.\n              let events = mapper(action, { prevState, state })\n              if (!events) {\n                events = []\n              } else if (!Array.isArray(events)) {\n                events = [events]\n              }\n              for (const event of events) {\n                if (!event.args) {\n                  event.args = {}\n                }\n                context.dispatch(emitEvent(event.type, event.args))\n              }\n            }\n          })\n          return result\n        }\n        break\n    }\n\n    return next(action)\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for an events plugin.\n * @type {string}\n */\nconst name = 'events'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","// Actions the interface uses.\nimport { on, off, subscribe, unsubscribe } from './actions'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('EVENTS')\n\n/**\n * API for Event Emitter plugin.\n * Defines the public end-points exposed by event plugins.\n * @param  {Object} context The sdk instance context.\n * @returns {Object} api     The interface object.\n */\nexport default function api ({ dispatch }) {\n  var api = {}\n\n  /**\n   * Add an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method on\n   * @param {string} type The event type for which to add the listener.\n   * @param {Function} listener The listener for the event type. The parameters of the listener depend on the event type.\n   * @throws {Error} Invalid event type\n   * @example\n   * // Listen for events of a specific type emitted by the SDK.\n   * client.on('dummy:event', function (params) {\n   *    // Handle the event.\n   * })\n   */\n  api.on = function (type, listener) {\n    log.debug(API_LOG_TAG + 'on: ', type)\n    dispatch(on(type, listener))\n  }\n\n  /**\n   * Removes an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method off\n   * @param {string} type The event type for which to remote the listener.\n   * @param {Function} listener The listener to remove.\n   * @throws {Error} Invalid event type\n   */\n  api.off = function (type, listener) {\n    log.debug(API_LOG_TAG + 'off: ', type)\n    dispatch(off(type, listener))\n  }\n\n  /**\n   * Adds a global event listener to SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method subscribe\n   * @param {Function} listener The event listener to add. The parameters are (type, ...args), where args depend on the event type.\n   * @throws {Error} Listener not a function\n   */\n  api.subscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'subscribe')\n    dispatch(subscribe(listener))\n  }\n\n  /**\n   * Removes a global event listener from SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method unsubscribe\n   * @param {Function} listener The event listener to remove.\n   * @throws {Error} Listener not a function\n   */\n  api.unsubscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'unsubscribe')\n    dispatch(unsubscribe(listener))\n  }\n\n  return api\n}\n","// Events plugin.\nimport * as actionTypes from './actionTypes'\n\n// Libraries.\nimport { update, add, concat, contains } from 'lodash/fp'\n\nfunction eventReducer (state = { aliases: [], count: 0 }, action) {\n  switch (action.type) {\n    case actionTypes.EVENTS_ON:\n      return update('count', add(1), state)\n    case actionTypes.EVENTS_OFF:\n      return update('count', add(-1), state)\n    case actionTypes.EVENTS_ALIAS:\n      return update('aliases', concat(action.payload.alias), state)\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for Event Emitter plugin.\n * Defines the events an Event plugin should dispatch to modify state.\n * @param  {Object} [state={}] The events substate.\n * @param  {Object} action     A Flux Standard action.\n * @returns {Object} state      The new event substate.\n */\nexport default function reducer (state = {}, action) {\n  // Only handle event types.\n  if (!contains(action.type, actionTypes)) {\n    return state\n  }\n\n  return {\n    ...state,\n    [action.payload.eventType]: eventReducer(state[action.payload.eventType], action)\n  }\n}\n","/*\n * Event emitter module. Can be used as a standalone factory or as a mixin.\n *\n * @private\n * @class emitter\n * @example\n * ``` javascript\n * var eventEmitter = emitter(); // Create a new emitter.\n * emitter(myEmittingObject.prototype); // Mixin to an existing object.\n * ```\n */\nexport default function eventEmitter (prototype = {}) {\n  var eventMap = []\n  var subscribeMap = []\n  var strictMode = false\n\n  /*\n   * Check if the event is a valid event type.\n   */\n  function checkEvent (type) {\n    if (strictMode && !eventMap[type]) {\n      throw new Error('Invalid event type: ' + type)\n    }\n  }\n\n  return Object.assign(prototype, {\n    /*\n     * Define an event type with the event emitter.\n     *\n     * @method define\n     * @param {String} type The name for the event type.\n     */\n    define: function (type) {\n      eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Define an alias for an event type.\n     *\n     * @method alias\n     * @param {String} type The event type for which to add an alias.\n     * @param {String} alias The alias name for the event type.\n     * @throws {Error} Invalid event type\n     */\n    alias: function (type, alias) {\n      checkEvent(type)\n\n      eventMap[alias] = eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Add an event listener for the specified event type.\n     *\n     * @method on\n     * @param {String} type The event type for which to add the listener.\n     * @param {Function} listener The listener for the event type. The parameters\n     *                            of the listener depend on the event type.\n     * @throws {Error} Invalid event type\n     */\n    on: function (type, listener) {\n      checkEvent(type)\n      ;(eventMap[type] = eventMap[type] || []).push(listener)\n    },\n\n    /*\n     * Removes an event listener for the specified event type.\n     *\n     * @method off\n     * @param {String} type The event type for which to remote the listener.\n     * @param {Function} listener The listener to remove.\n     * @throws {Error} Invalid event type\n     */\n    off: function (type, listener) {\n      checkEvent(type)\n\n      var list = eventMap[type] || []\n      var i = list.length\n      while (i--) {\n        if (listener === list[i]) {\n          list.splice(i, 1)\n        }\n      }\n    },\n\n    /*\n     * Emits an event of the specified type.\n     *\n     * @method emit\n     * @param {String} type The event type to emit.\n     * @param {any} [...args] The arguments to pass to the listeners of the event.\n     * @throws {Error} Invalid event type\n     */\n    emit: function (type) {\n      checkEvent(type)\n\n      var args = Array.prototype.slice.call(arguments, 1)\n      var list = eventMap[type] || []\n      var i = 0\n\n      for (; i < list.length; i++) {\n        list[i].apply(undefined, args)\n      }\n      for (var j = 0; j < subscribeMap.length; j++) {\n        subscribeMap[j].call(undefined, type, args)\n      }\n    },\n\n    /*\n     * Add a subscription for all event types.\n     *\n     * @method subscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    subscribe: function (listener) {\n      if (typeof listener === 'function') {\n        subscribeMap.push(listener)\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Remove a subscription for all event types.\n     *\n     * @method unsubscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    unsubscribe: function (listener) {\n      if (typeof listener === 'function') {\n        var i = subscribeMap.length\n        while (i--) {\n          if (listener === subscribeMap[i]) {\n            subscribeMap.splice(i, 1)\n          }\n        }\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Sets the emitter in strict mode where it only allows events that have been defined or aliases.\n     *\n     * @method setStrictMode\n     * @param {Boolean} strict Whether to set strict mode for the emitter.\n     */\n    setStrictMode: function (strict) {\n      strictMode = strict\n    }\n  })\n}\n","// Redux-Saga\nimport { put } from 'redux-saga/effects'\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\n// The interface to follow.\nimport { api, reducer, name } from '../interface'\n\n// State setters.\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Utilities.\nimport { mergeValues } from '../../common/utils'\nimport { logManager } from '../../logs'\n\nimport { connectFlow, extendSubscription, updateSubscription, onSubscriptionGone, onConnectionLostEntry } from './sagas'\n\n// Get the logger\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Configuration options for the Authentication feature.\n * @public\n * @name config.authentication\n * @memberof config\n * @instance\n * @param {Object} authentication Authentication configs.\n * @param {Object} authentication.subscription\n * @param {string} authentication.subscription.server Hostname of the server to be used for subscription requests.\n * @param {string} [authentication.subscription.protocol=https] Protocol to be used for subscription requests.\n * @param {Number} [authentication.subscription.port=443] Port to be used for subscription requests.\n * @param {string} [authentication.subscription.version=1] Version of the REST API to be used.\n * @param {Number} [authentication.subscription.expires=3600] Time duration, in seconds, until a subscription should expire.\n * @param {Array} [authentication.subscription.service] Services to subscribe to for notifications.\n * @param {Object} authentication.websocket\n * @param {string} authentication.websocket.server Hostname of the server to be used for websocket notifications.\n * @param {string} [authentication.websocket.protocol=wss] Protocol to be used for websocket notifications.\n * @param {Number} [authentication.websocket.port=443] Port to be used for websocket notifications.\n */\n\n/**\n * On link authentication implementation factory.\n * @method authLink\n * @param {Object} options - Configuration options for authentication. See above.\n * @return {Object} plugin - An authentication plugin.\n */\nexport default function authLink (options = {}) {\n  const defaultOptions = {\n    subscription: {\n      protocol: 'https',\n      port: '443',\n      expires: 3600,\n      service: ['IM', 'Presence', 'call'],\n      version: '1'\n    },\n    websocket: {\n      protocol: 'wss',\n      port: '443'\n    }\n  }\n\n  options = mergeValues(defaultOptions, options)\n\n  if (!options.subscription.server) {\n    log.error('No server configuration provided. Please provide proper authentication configurations.')\n  }\n\n  function * init () {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = ['connect', 'userCredentialsAuth', 'hmacTokenAuth', 'updateConnection', 'services']\n\n  return {\n    sagas: [connectFlow, extendSubscription, updateSubscription, onSubscriptionGone, onConnectionLostEntry],\n    capabilities,\n    init,\n    api,\n    reducer,\n    name\n  }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nfunction authChangedEvent (action) {\n  return {\n    type: action.error ? eventTypes.AUTH_ERROR : eventTypes.AUTH_CHANGE,\n    args: action.error ? { error: action.payload } : {}\n  }\n}\n\nconst eventsMap = {}\n\neventsMap[actionTypes.CONNECT_FINISHED] = authChangedEvent\neventsMap[actionTypes.USER_DETAILS_RECEIVED] = authChangedEvent\neventsMap[actionTypes.CONNECT] = authChangedEvent\neventsMap[actionTypes.DISCONNECT] = authChangedEvent\neventsMap[actionTypes.REFRESH_TOKENS_FINISHED] = authChangedEvent\neventsMap[actionTypes.UPDATE_SUBSCRIPTION_FINISH] = authChangedEvent\neventsMap[actionTypes.SET_CREDENTIALS_FINISH] = authChangedEvent\n\neventsMap[actionTypes.DISCONNECT_FINISHED] = function (action) {\n  const discEvent = authChangedEvent(action)\n  if (action.payload.reason === 'GONE') {\n    discEvent.args.forced = true\n  }\n  if (action.payload.retryAfter) {\n    discEvent.args.retryAfter = action.payload.retryAfter\n  }\n\n  discEvent.args.reason = action.payload.reason\n  return discEvent\n}\n\neventsMap[actionTypes.RESUBSCRIPTION_FINISHED] = function (action) {\n  const resubEvent = {\n    type: eventTypes.AUTH_RESUB,\n    args: {\n      attemptNum: action.payload.attemptNum,\n      isFailure: action.error || false\n    }\n  }\n\n  if (action.error) {\n    resubEvent.args.error = action.payload\n  }\n  return resubEvent\n}\n\neventsMap[actionTypes.SET_CONNECTION_INFO] = function (action) {\n  return {\n    type: eventTypes.AUTH_CREDENTIALS_SET\n  }\n}\n\nexport default eventsMap\n","/**\n * Authentication state has changed. You can get the new state by calling `getConnection()`.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:change\n * @param {Object} params\n * @param {string} params.reason The cause of the authentication change, provided in the event of an unsolicited disconnection. See the `disconnectReasons` API for possible values.\n */\nexport const AUTH_CHANGE = 'auth:change'\n\n/**\n * There was an error with authentication.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n *\n */\nexport const AUTH_ERROR = 'auth:error'\n\n/**\n * An attempt to extend the current user's subscription was made.\n *\n * In a failure scenario, the current user is still connected, and further\n * resubscription attempts will be made, but may become disconnected if the\n * session expires.\n * @public\n * @memberof api\n * @requires connect\n * @event auth:resub\n * @param {Object} params\n * @param {number} params.attemptNum The attempt number of this resubscription.\n * @param {boolean} params.isFailure Whether the resubscription failed or not.\n * @param {api.BasicError} [params.error] The Basic error object.\n */\nexport const AUTH_RESUB = 'auth:resub'\n\n/**\n * The information (credentials) needed for connecting have been set.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:credentialsSet\n */\nexport const AUTH_CREDENTIALS_SET = 'auth:credentialsSet'\n","import reducer from './reducers'\nimport name from './name'\nimport api from './api'\n\nexport { reducer, name, api }\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\nimport { merge } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\nreducers[actionTypes.SET_CONNECTION_INFO] = {\n  next (state, action) {\n    return {\n      ...state,\n      platform: action.meta.platform,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      userInfo: action.payload.userInfo\n    }\n  }\n}\n\nreducers[actionTypes.CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      isConnected: true,\n      isPending: false,\n      error: undefined,\n      isSSO: action.meta.isSSO,\n      platform: action.meta.platform,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be provided to other plugins.\n      connection: action.payload.connection\n        ? { ...state.connection, [action.meta.platform]: action.payload.connection }\n        : { ...state.connection },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo ? action.payload.userInfo : state.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\n// On connection occurred, store the connection information into state, but do\n// not update any status state. The connection has not yet finished.\nreducers[actionTypes.CONNECTION_OCCURRED] = {\n  next (state, action) {\n    return {\n      ...state,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be provided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      }\n    }\n  }\n}\n\nreducers[actionTypes.DISCONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\n/*\n * Clear the authentication state when we disconnect.\n * Note: This should only be for 3.X (and 4.X backwards-compatible connect API)\n *    authentication.\n */\nreducers[actionTypes.DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      isConnected: false,\n      isPending: false,\n      error: undefined\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      // Treat an error as if we are still disconnected.\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\nreducers[actionTypes.REFRESH_TOKENS_FINISHED] = {\n  next (state, action) {\n    // Merge the updated requestOptions into the current state.\n    const requestOptions = merge(\n      state.connection[action.meta.platform].requestOptions,\n      action.payload.connection.requestOptions\n    )\n\n    return {\n      ...state,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: {\n          ...state.connection[action.meta.platform],\n          ...action.payload.connection,\n          requestOptions\n        }\n      },\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.connection.accessToken,\n        refreshToken: action.payload.connection.refreshToken\n      }\n    }\n  }\n}\n\n/*\n * Updates the subscription information for a specified platform.\n */\nreducers[actionTypes.UPDATE_SUBSCRIPTION_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: {\n          ...state.subscription[action.meta.platform],\n          ...action.payload\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_TOKEN] = {\n  next (state, action) {\n    // We received an idToken which is a JWT token that represents the identity of\n    // the user. This token contains information about the user. For now we only need\n    // the username. In the future we might use more from this token.\n    const idTokenPayload = action.payload.idToken\n    return {\n      ...state,\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.accessToken,\n        username: idTokenPayload.preferred_username,\n        identity: idTokenPayload['services-identity']\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_CREDENTIALS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      error: undefined,\n      platform: action.meta.platform,\n      // Store platform connection information to be provided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      error: action.payload\n    }\n  }\n}\n\n/*\n * Remove the x-token from the request header after subscription is successful.\n */\nreducers[actionTypes.UPDATE_HMAC_TOKEN] = {\n  next (state, action) {\n    const { 'x-token': _removed, ...removeXtoken } = state.connection[action.meta.platform].requestOptions.headers\n\n    const headers = {\n      ...removeXtoken,\n      'x-session': action.payload\n    }\n\n    return {\n      ...state,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: {\n          ...state.connection[action.meta.platform],\n          requestOptions: {\n            ...state.connection[action.meta.platform].requestOptions,\n            headers\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Auth Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n * @example\n * Auth state structure example; connected.\n * authState = {\n *     isConnected: true,\n *     isPending: false,\n *     error: undefined,\n *     subscription: { ... },\n *     connection: { ... },\n *     userInfo: { ... }\n * }\n */\nconst reducer = handleActions(reducers, {\n  isConnected: false,\n  isPending: false\n})\nexport default reducer\n","/**\n * This interface is for an authentication plugin.\n * @type {string}\n */\nconst name = 'authentication'\nexport default name\n","import * as actions from './actions'\nimport { getUserInfo as selectUserInfo, getServices } from './selectors'\nimport { SUBSCRIPTION_STATE, DISCONNECT_REASONS } from '../constants'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\nimport jwtDecode from 'jwt-decode'\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Authentication API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param  {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The authentication API object.\n */\nexport default function api ({ dispatch, getState }) {\n  return {\n    /**\n     * Connect with user credentials to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires userCredentialsAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username including the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {string} [credentials.authname] The user's authorization name.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections. Link only.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   password: '********'\n     *   authname: '********'\n     * }, {\n     *   forceLogOut: true\n     * });\n     */\n    /**\n     * Connect with user credentials to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires userCredentialsDAKAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.domainApiKey The Api key for the application's domain.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   domainApiKey: 'DAK1111111111111111111',\n     *   username: 'alfred',\n     *   password: '********'\n     * });\n     */\n    /**\n     * Connect by providing an access token to any backend services that the SDK instance deals with.\n     * You can optionally provide a refresh token and the SDK will automatically get new access tokens.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires accessTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An access token for the user with the provided user Id.\n     * @param {string} [credentials.refreshToken] A refresh token for the same user.\n     * @param {number} [credentials.expires] The time in seconds until the access token will expire.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   accessToken: 'AT0V1fswAiJadokx1iJMQdG04pRf',\n     *   refreshToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT',\n     *   expires: 3600\n     * });\n     */\n    /**\n     * Connect by providing a username and HMAC token. This connects to any backend services that the SDK instance deals with.\n     * An HMAC token is used to verify a user via the user's authorization within an organization.\n     * HMAC tokens are generated by using the HmacSHA1 algorithm and a key on a data object\n     * containing an `authenticationTokenRequest` object with the following properties:\n     * - subscriberId - The user's subscriber ID in the organization.\n     * - organizationId - The ID of the organization the user is a part of.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires hmacTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username.\n     * @param {string} credentials.hmacToken An HMAC token for the user with the provided user ID.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * const hmacToken = HmacSHA1Algorithm({\n     *   authenticationTokenRequest: {\n     *     subscriberId: 'alfred',\n     *     organizationId: 'example.com'\n     *   }\n     * }, key)\n     *\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   hmacToken\n     * }, {\n     *   forceLogOut: true\n     * });\n     */\n    /**\n     * Connect by providing a refresh token, to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires accessTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.refreshToken A refresh token for the same user.\n     * @param {number} [credentials.expires] The time in seconds until the access token will expire.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   refreshToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     *   expires: 3600\n     * });\n     */\n    /**\n     * Connect by providing an OAuth token, to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires oauthToken\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.oauthToken An OAuth token provided by an outside service.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   oauthToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     * });\n     */\n    connect (credentials, options) {\n      // We won't expose oauthToken because it essentially acts as a password being used in conjunction with username\n      // ..and passwords should NOT be logged.\n      log.debug(API_LOG_TAG + 'connect: ', credentials.username)\n      dispatch(actions.connect(credentials, options))\n    },\n\n    /**\n     * Disconnects from the backend. This will close the websocket and you will stop receiving events.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link services.unsubscribe unsubscribe} for new method of disconnecting.\n     * @requires userCredentialsAuth\n     * @requires userCredentialsDAKAuth\n     * @requires accessTokenAuth\n     * @memberof api\n     * @method disconnect\n     */\n    disconnect () {\n      log.debug(API_LOG_TAG + 'disconnect')\n      dispatch(actions.disconnect())\n    },\n\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires accessTokenAuth\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.accessToken The new access token.\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An access token for the user with the provided user Id.\n     */\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires oauthToken\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.oauthToken An OAuth token provided by an outside service.\n     * @example\n     * client.updateToken({\n     *   username: 'alfred@example.com',\n     *   oauthToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     * });\n     */\n    updateToken (credentials) {\n      // We won't expose oauthToken because it essentially acts as a password being used in conjunction with username\n      // ..and passwords should NOT be logged.\n      log.debug(API_LOG_TAG + 'updateToken: ', credentials.username)\n      dispatch(actions.refreshTokens(credentials))\n    },\n\n    /**\n     * Updates the current connection.\n     *\n     * @public\n     * @memberof api\n     * @requires updateConnection\n     * @method updateConnection\n     * @param {Object} connection\n     * @param {Array} connection.services Services to subscribe to for notifications.\n     * @example\n     * client.updateConnection({\n     *   services: ['IM', 'Presence', 'call']\n     * })\n     */\n    updateConnection (connection) {\n      log.debug(API_LOG_TAG + 'updateConnection: ', connection)\n      dispatch(actions.updateSubscription(connection))\n    },\n\n    /**\n     * Retrieves information about the current user.\n     *\n     * @public\n     * @memberof api\n     * @method getUserInfo\n     * @returns {Object} user The user data.\n     * @returns {string} user.username The username of the current user. Note that this username can take different encoded forms.\n     *                                 It's not meant to be displayed to a user.\n     * @returns {string} user.token The current access token.\n     */\n    getUserInfo () {\n      log.debug(API_LOG_TAG + 'getUserInfo')\n      return selectUserInfo(getState())\n    },\n\n    /**\n     * Get the connection state.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @method getConnection\n     * @returns {Object} connection The connection state.\n     * @returns {boolean} connection.isConnected Whether the authenticated user is currently connected.\n     * @returns {boolean} connection.isPending Whether the authenticated user's connection is currently pending.\n     * @returns {Object} connection.error The error object if an error occurred.\n     * @returns {string} connection.error.message The error message.\n     * @returns {string} connection.error.stack The stack trace of the error.\n     */\n    getConnection () {\n      log.debug(API_LOG_TAG + 'getConnection')\n      const { isConnected, isPending, error } = getState().authentication\n      return {\n        isConnected,\n        isPending,\n        error,\n        subscription: getServices(getState())\n      }\n    },\n\n    /**\n     * Retrieves the services that the user is subscribed for.\n     *\n     * @public\n     * @memberof api\n     * @requires services\n     * @method getServices\n     * @return {Array} A list of subscribed-to services.\n     */\n    getServices () {\n      log.debug(API_LOG_TAG + 'getServices')\n      return getServices(getState())\n    },\n\n    /**\n     * Possible subscription states of the user.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} FULL All requested feature subscriptions exist.\n     * @property {string} PARTIAL Some feature subscriptions exist.\n     * @property {string} NONE No feature subscriptions exist.\n     */\n    subscriptionStates: SUBSCRIPTION_STATE,\n\n    /**\n     * Possible reasons for disconnecting.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} GONE Connection was terminated by the server\n     * @property {string} LOST_CONNECTION Internet connection was lost\n     * @property {string} WS_OVERRIDDEN WebSocket was overridden by the server\n     */\n    disconnectReasons: DISCONNECT_REASONS,\n\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The access token\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setTokens\n     * @param {Object} params Dictionary object of parameters.\n     * @param {string} params.accessToken An access token retrieved using the authentication APIs of the platform.\n     * @param {string} params.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setTokens({\n     *   accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * })\n     */\n    setTokens ({ accessToken, idToken }) {\n      // We won't log both tokens, just the id one, so that we can still be able to debug.\n      log.debug(API_LOG_TAG + 'setTokens: ', idToken)\n\n      // validate token\n      try {\n        const jwt = jwtDecode(idToken)\n        dispatch(actions.setTokens({ accessToken, idToken: jwt }))\n      } catch (error) {\n        log.error(`${idToken} is not a valid JWT`)\n      }\n    },\n\n    /**\n     * Sets the user credentials necessary to make requests to the platform.\n     *\n     * @public\n     * @memberof api\n     * @requires userCredentialsAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username including the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {string} [credentials.authname] The user's authorization name.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   password: '********'\n     *   authname: '********'\n     * });\n     */\n    /**\n     * Sets the username and HMAC token necessary to make requests to the platform.\n     * An HMAC token is used to verify a user via the user's authorization within an of organization.\n     * HMAC tokens are generated by using the HmacSHA1 algorithm and a key on a data object\n     * containing an `authenticationTokenRequest` object with the following properties:\n     * - subscriberId - The user's subscriber ID in the organization.\n     * - organizationId - The ID of the organization the user is a part of.\n     *\n     * @public\n     * @memberof api\n     * @requires hmacTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username.\n     * @param {string} credentials.hmacToken An HMAC token for the user with the provided user ID.\n     * @example\n     * const hmacToken = HmacSHA1Algorithm({\n     *   authenticationTokenRequest: {\n     *     subscriberId: 'alfred',\n     *     organizationId: 'example.com'\n     *   }\n     * }, key)\n     *\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   hmacToken\n     * });\n     */\n    /**\n     * Provides a bearerAccessToken to any backend services that the SDK instance deals with.\n     * The bearerAccessToken provided establishes what can be accessed by the SDK.\n     *\n     * @public\n     * @memberof api\n     * @requires bearerAccessTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The bearerAccessToken\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     *                                               The bearerAccessToken is same as the access token for the cpaas platform.\n     * @param {string} credentials.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken }) {\n      log.debug(API_LOG_TAG + 'setCredentials: ', username)\n      // TODO: Refactor into multiple actions for each credential mode\n      // TODO: Validation of two authentication possibility scenario\n      dispatch(\n        actions.setCredentials({\n          username,\n          password,\n          authname,\n          hmacToken,\n          bearerAccessToken,\n          idToken\n        })\n      )\n    }\n  }\n}\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","// Redux-Saga\nimport {\n  actionChannel,\n  call,\n  delay,\n  put,\n  race,\n  select,\n  take,\n  fork,\n  cancel,\n  cancelled,\n  takeEvery\n} from 'redux-saga/effects'\n\n// Auth\nimport * as actions from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport { DISCONNECT_REASONS } from '../constants'\n\n// State selectors\nimport { getAuthConfig, getSubscriptionInfo, getConnectionInfo, getAuthScenario } from '../interface/selectors'\n\n// Constants\nimport { platforms } from '../../constants'\n\n// Errors\nimport BasicError, { authCodes } from '../../errors'\n\n// Requests\nimport { subscribe, unsubscribe, resubscribe } from '../subscription/requests'\n\n// Other plugins.\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\nimport * as connectivityActionTypes from '../../connectivity/interface/actionTypes'\nimport { connectWebsocket, disconnectWebsocket } from '../../connectivity/interface/effects'\nimport { getConnectionState } from '../../connectivity/interface/selectors'\n\n// Libraries\nimport base64 from 'base-64'\nimport utf8 from 'utf8'\nimport { mergeValues } from '../../common/utils'\n\n// Logging\nimport { logManager } from '../../logs'\n\n// This is an Link plugin.\nconst platform = platforms.LINK\n\n// Get the logger\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Link connect saga. This Saga is in charge of the flow for connecting and disconnecting.\n * Handles the workflow of connecting or disconnecting to SPiDR.\n * @method connectFlow\n */\nexport function * connectFlow () {\n  while (true) {\n    // Wait for a CONNECT action.\n    const action = yield take(actionTypes.CONNECT)\n\n    // Retrieve the connection info.\n    const config = yield select(getAuthConfig)\n\n    // Fork off and try to connect.\n    const task = yield fork(connect, action, config)\n\n    // Take the actions for if an error or disconnect occurs.\n    const finishOrError = yield take([actionTypes.CONNECT_FINISHED, actionTypes.DISCONNECT])\n\n    /**\n     * This if block covers 2 of the 3 flows of connect / disconnect.\n     * 1. The first block covers what happens when we receive a DISCONNECT action before we finish connecting.\n     *        IE DISCONNECT comes before a CONNECT_FINISHED.\n     * 2. The second block covers what happens when we get a successful CONNECT_FINISHED event before any DISCONNECT events.\n     * 3. The third scenario is not explicitly covered here. That scenario is when we received a CONNECT_FINISHED event with an error before any disconnect events.\n     *      In this case, there is nothing that we explicitly have to do, since a CONNECT_FINISHED event with an error doesn't place anything into the state.\n     *      Therefore there is no real cleanup for us to do in this scenario. We then want to wait for the next CONNECT ( which we do via the next iteration of the while loop).\n     **/\n    if (finishOrError.type === actionTypes.DISCONNECT) {\n      yield cancel(task)\n    } else if (finishOrError.type === actionTypes.CONNECT_FINISHED && !finishOrError.error) {\n      const disconnectAction = yield take([actionTypes.DISCONNECT, actionTypes.DISCONNECT_FINISHED])\n\n      // if disconnect has finished, we dont need to do a teardown of auth state, or disconnect the websocket, so reset connectFlow\n      if (disconnectAction.type === actionTypes.DISCONNECT_FINISHED) {\n        continue\n      }\n\n      yield call(disconnect)\n    }\n  }\n}\n\n/**\n * Link connect function.\n * Performs the workflow of connecting to SPiDR.\n * @method connect\n */\nexport function * connect (action, config) {\n  // Request options, to be used for all subsequent requests after connect.\n  let requestOptions = {\n    headers: {}\n  }\n  // Determine what type of connect method to use. This determines what extra\n  //      information needs to be added to the request.\n  const { credentials, options } = action.payload\n  if (credentials) {\n    const { username, password, authname, hmacToken } = credentials\n    if (hmacToken) {\n      // Only need the hmacToken in the x-token header when subscribing.\n      // Will need to remove this once subscription succeeds.\n      // Once subscription succeeds, we will receive a sessionId which we will need to use as the x-session header for subsequent requests.\n      log.info('Connecting with hmacToken scenario.')\n      requestOptions.headers['x-token'] = hmacToken\n    } else if (authname && password) {\n      log.info('Connecting with authname/password scenario.')\n      requestOptions.headers.Authorization = 'Basic ' + base64.encode(utf8.encode(authname + ':' + password))\n    } else if (username && password) {\n      log.info('Connecting with username/password scenario.')\n      requestOptions.headers.Authorization = 'Basic ' + base64.encode(utf8.encode(username + ':' + password))\n    } else {\n      log.info('Unexpected connect scenario.')\n      const error = new BasicError({\n        message: 'This login signature is not valid.',\n        code: authCodes.INVALID_CREDENTIALS\n      })\n      yield put(actions.connectFinished({ error }, platform))\n      return\n    }\n  }\n  try {\n    requestOptions = mergeValues(options, requestOptions)\n\n    // Gather information to provide externally.\n    const userInfo = {\n      username: action.payload.credentials.username\n    }\n    // Gather information to provide internally, to other plugins.\n    const connection = {\n      server: {\n        protocol: config.subscription.protocol,\n        server: config.subscription.server,\n        port: config.subscription.port,\n        version: config.subscription.version\n      },\n      username: action.payload.credentials.username,\n      // Request options that all other (Link) plugins will use.\n      requestOptions\n    }\n    yield put(\n      actions.setConnectionInfo(\n        {\n          userInfo,\n          connection\n        },\n        platform\n      )\n    )\n\n    const response = yield call(subscribe, config.subscription, credentials, requestOptions)\n\n    if (response.error) {\n      yield put(actions.connectFinished({ error: response.error }, platform))\n      return\n    }\n\n    // If used HMAC token for authentication\n    if (credentials.hmacToken) {\n      // Subsequent requests must not have the x-token header and must have the x-session header.\n      // Need to delete the x-token header for subsequent requests to work.\n      delete requestOptions.headers['x-token']\n      // Set the sessionId as the x-session header for use by subsequent requests.\n      requestOptions.headers['x-session'] = response.subscriptionParams.sessionId\n    }\n\n    // Add token to connection info\n    connection.token = response.token\n    // Keep track of service subscription information.\n    const subscription = {\n      ...response.subscriptionParams,\n      servicesInfo: response.servicesInfo,\n      url: response.subscription\n    }\n\n    // Need to create a new object, rather than adding `url` to\n    // connectionInfo in order to prevent state mutation.\n    const websocketInfo = {\n      ...config.websocket,\n      url: subscription.notificationChannel\n    }\n\n    // Request the websocket connection.\n    const wsOpenOrError = yield connectWebsocket(websocketInfo, platform)\n\n    if (wsOpenOrError.error) {\n      throw wsOpenOrError.payload\n    }\n\n    yield put(\n      actions.connectFinished(\n        {\n          subscription,\n          userInfo,\n          connection\n        },\n        platform\n      )\n    )\n  } catch (error) {\n    // Error: login failed.\n    yield put(actions.connectFinished({ error }, platform))\n  } finally {\n    if (yield cancelled()) {\n      yield call(disconnect)\n      // If we enter this point we know we got disconnect mid connection attempt BEFORE connect_finished fired.\n      // Therefore we have to put any special store cleanup code in here.\n      // Disconnect_finished action handles clearing up the store so no logic needs to be here right now.\n    }\n  }\n}\n\n/**\n * Link disconnect function.\n * Performs the actions for actually disconnecting from SPiDR.\n * @method disconnect\n */\nexport function * disconnect () {\n  // Retrieve needed info from the store.\n  const subscription = yield select(getSubscriptionInfo)\n  const connection = yield select(getConnectionInfo)\n\n  // If the above info is not present, we probably got a disconnect mid-connection attempt.\n  if (subscription && connection) {\n    // If the info is in the store we can go ahead and unsubscribe.\n    yield call(unsubscribe, connection, subscription.url)\n  }\n\n  log.info('Successfully unsubscribed from services.')\n  const wsState = yield select(getConnectionState, platform)\n  if (wsState.connected) {\n    log.info('Disconnecting from websocket.')\n    // disconnect from the websocket\n    yield disconnectWebsocket(undefined, platform)\n    log.info('Successfully disconnected from websocket.')\n  }\n\n  // Dispatch disconnect finished action appropriate for the response.\n  yield put(actions.disconnectFinished())\n}\n\n/**\n * Saga for extending a user's subscription.\n * When triggered, make a resub request to SPiDR for a specific subscription.\n * @method extendSubscription\n */\nexport function * extendSubscription () {\n  // Re-subscription timer is triggered by a successful connect or a previous resub finishing.\n  // Use a channel to queue the triggers (so it can catch the put resub action at the end).\n  const resubTriggers = yield actionChannel([actionTypes.CONNECT_FINISHED, actionTypes.RESUBSCRIPTION_FINISHED])\n\n  while (true) {\n    const action = yield take(resubTriggers)\n\n    // If the action was a connection error, ignore it.\n    if (action.type === actionTypes.CONNECT_FINISHED && action.error) {\n      continue\n    }\n\n    const isOnSSO = yield select(getAuthScenario)\n    let subscription = {}\n    let connection = {}\n\n    if (isOnSSO) {\n      const linkConnection = yield select(getConnectionInfo)\n\n      connection = {\n        server: linkConnection.server,\n        token: action.payload.connection.token\n      }\n      subscription = yield select(getSubscriptionInfo)\n    } else {\n      connection = yield select(getConnectionInfo)\n      subscription = yield select(getSubscriptionInfo)\n    }\n\n    let attemptNum\n    // If the action was a failed resubscription, increment the attempt number.\n    if (action.type === actionTypes.RESUBSCRIPTION_FINISHED && action.error) {\n      attemptNum = action.payload.attemptNum + 1\n    } else {\n      attemptNum = 1\n    }\n\n    // Set the delay to be halfway between now and when the subscription expires.\n    let resubDelay = (subscription.expires * 1000) / Math.pow(2, attemptNum)\n    // Don't try to resub more often than every 5 minutes.\n    resubDelay = resubDelay > 30000 ? resubDelay : 30000\n\n    // Wait for either the resub delay or a disconnect action.\n    const { expiry } = yield race({\n      expiry: delay(resubDelay),\n      disconnect: take(actionTypes.DISCONNECT_FINISHED)\n    })\n\n    // If the resubDelay expired, attempt resubscription\n    if (expiry) {\n      const response = yield call(resubscribe, connection, subscription, isOnSSO)\n\n      if (response.error) {\n        yield put(\n          actions.resubscribeFinished(\n            {\n              error: response.error,\n              attemptNum\n            },\n            platform\n          )\n        )\n      } else {\n        // TODO: Check response.serviceInfo for full/partial resubscription.\n        yield put(actions.resubscribeFinished({ attemptNum }, platform))\n      }\n    }\n  }\n}\n\n/**\n * Saga for updating a subscription's services.\n * @method updateSubscription\n */\nexport function * updateSubscription () {\n  while (true) {\n    const action = yield take(actionTypes.UPDATE_SUBSCRIPTION)\n    log.debug(\"Attempting to update subscription's services.\", action.payload)\n\n    const isOnSSO = yield select(getAuthScenario)\n    const connection = yield select(getConnectionInfo)\n    const subscription = yield select(getSubscriptionInfo)\n    subscription.service = action.payload\n\n    // Use the resubscribe request to update the subscription. The endpoint is for both.\n    const response = yield call(resubscribe, connection, subscription, isOnSSO)\n\n    if (response.error) {\n      log.debug('Failed to update subscription services.')\n      yield put(\n        actions.updateSubscriptionFinished(\n          {\n            error: new BasicError({\n              message: response.message,\n              code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n            })\n          },\n          platform\n        )\n      )\n    } else {\n      log.debug('Successfully updated subscription services.', action.payload)\n      // TODO: Use response.serviceInfo to update full/partial subscription.\n      // Only update the service substate in subscription.\n      yield put(\n        actions.updateSubscriptionFinished(\n          {\n            subscription: {\n              service: action.payload\n            }\n          },\n          platform\n        )\n      )\n    }\n  }\n}\n\n/**\n * Saga that handles a \"subscription gone\" notification.\n * Treat the notification as a forced disconnect.\n * @method onSubscriptionGone\n */\nexport function * onSubscriptionGone () {\n  // Redux-saga take() pattern.\n  // Take notifications about the subscription being 'gone'.\n  function takeGoneNotification (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'gone'\n    )\n  }\n\n  // Take \"resubscription failed\" actions caused by the subscription not existing.\n  function takeResubGoneSubscription (action) {\n    return (\n      action.type === actionTypes.RESUBSCRIPTION_FINISHED &&\n      action.error &&\n      // Magic number: 39 is KL's statusCode for \"resource does not exist\".\n      action.payload.code === 39\n    )\n  }\n\n  while (true) {\n    yield take([takeGoneNotification, takeResubGoneSubscription])\n\n    // Dispatch an action to disconnect the websocket (and let the connectivity\n    //      plugin know we expect it to be disconnected).\n    const wsState = yield select(getConnectionState, platform)\n    if (wsState.connected) {\n      yield disconnectWebsocket(undefined, platform)\n    }\n\n    // Dispatch a disconnect finished action to trigger \"user disconnected\" logic.\n    yield put(actions.disconnectFinished({ reason: DISCONNECT_REASONS.GONE }))\n  }\n}\n\n/**\n * Triggers onConnectionLost saga when a connectivity.WS_RECONNECT_FAILED actionType occurs\n * @method onConnectionLostEntry\n */\nexport function * onConnectionLostEntry () {\n  yield takeEvery(connectivityActionTypes.WS_RECONNECT_FAILED, onConnectionLost)\n}\n\n/**\n * Handles lost connections from the connectivity plugin\n * @method onConnectionLost\n */\nexport function * onConnectionLost () {\n  yield put(actions.disconnectFinished({ reason: DISCONNECT_REASONS.LOST_CONNECTION }))\n}\n","/**\n * Error codes for the Auth plugin.\n * @name authCodes\n */\nexport const authCodes = {\n  INVALID_CREDENTIALS: 'authentication:1',\n  CONNECT_FAIL_WS_ERROR: 'authentication:2',\n  LINK_UNSUBSCRIBE_FAIL: 'authentication:3',\n  LINK_SUBSCRIBE_FAIL: 'authentication:4',\n  LINK_EXTEND_SUBSCRIPTION_FAIL: 'authentication:5',\n  LINK_UPDATE_SUBSCRIPTION_FAIL: 'authentication:6',\n  UC_SUBSCRIBE_FAIL: 'authentication:7',\n  UC_REFRESH_TOKEN_FAIL: 'authentication:8',\n  UC_CREATE_TOKEN_FAIL: 'authentication:9',\n  UC_EXTEND_SUBSCRIPTION_FAIL: 'authentication:10',\n  UC_DISCONNECT_FAIL: 'authentication:11',\n  MISSING_SERVICE: 'authentication:12'\n}\n\n/**\n * Error codes for the Call plugin.\n * @name callCodes\n */\nexport const callCodes = {\n  UNKNOWN_ERROR: 'call:1',\n  GENERIC_ERROR: 'call:2',\n  INIT_MEDIA_FAILED: 'call:3',\n  USER_MEDIA_ERROR: 'call:4',\n  NOT_SUPPORTED: 'call:5',\n  // The call is in the wrong state.\n  INVALID_STATE: 'call:6',\n  // A provided parameter is not valid.\n  INVALID_PARAM: 'call:7',\n  // There is a desync between components' state.\n  STATE_DESYNC: 'call:8',\n  // Offer could not be generated\n  INVALID_OFFER: 'call:9',\n  // No ICE candidates found\n  NO_ICE_CANDIDATES: 'call:10',\n  // Failed to recieve answer due to media mismatch\n  SESSION_MISMATCH: 'call:11'\n}\n\n/**\n * Error codes for the Call History plugin.\n * @name callHistoryCodes\n */\nexport const callHistoryCodes = {\n  UNKNOWN_ERROR: 'callHistory:1',\n  BAD_REQUEST: 'callHistory:2',\n  NOT_FOUND: 'callHistory:3',\n  NOT_AUTHENTICATED: 'callHistory:4',\n  FORBIDDEN: 'callHistory:5'\n}\n/**\n * @name clickToCallCodes\n */\nexport const clickToCallCodes = {\n  MISSING_ARGS: 'clickToCall:1',\n  RESPONSE_ERROR: 'clickToCall:2'\n}\n/**\n * Error codes for the Groups plugin.\n * @name groupsCodes\n */\nexport const groupsCodes = {\n  UNKNOWN_ERROR: 'groups:1',\n  GENERIC_ERROR: 'groups:2',\n  MISSING_PARAMETERS: 'groups:3'\n}\n\n/**\n * Error codes for the Message plugin.\n * @name messagingCodes\n */\nexport const messagingCodes = {\n  CREATE_GROUP_FAIL: 'messaging:1',\n  MARK_READ_FAIL: 'messaging:2',\n  REMOVE_MEMBERS_FAIL: 'messaging:3',\n  ADD_MEMBERS_FAIL: 'messaging:4',\n  SEND_MESSAGE_FAIL: 'messaging:5',\n  FETCH_MESSAGES_FAIL: 'messaging:6',\n  FILE_UPLOAD_FAIL: 'messaging:7',\n  FETCH_CONVERSATIONS_FAIL: 'messaging:8',\n  INVALID_DESTINATION: 'messaging:9',\n  INVALID_FILE_PARTS: 'messaging:10',\n  SET_IS_TYPING_FAIL: 'messaging:11'\n}\n\n/**\n * Error codes for the Message Waiting Indicator plugin.\n * @name mwiCodes\n */\nexport const mwiCodes = {\n  FETCH_MWI_FAIL: 'mwi:1'\n}\n\n/**\n * Error codes from the Sip Events plugin.\n * @name sipEventCodes\n */\nexport const sipEventCodes = {\n  UNKNOWN_ERROR: 'sipEvents:1',\n  // The user did not subscribe/connect for the specified sip event service.\n  NOT_PROVISIONED: 'sipEvents:2',\n  // The user is not subscribed for the specified sip event.\n  NOT_SUBSCRIBED: 'sipEvents:3'\n}\n\n/**\n * Error codes for the audio bridge portion of the call plugin.\n * @name bridgeCodes\n */\nexport const bridgeCodes = {\n  UNKNOWN_ERROR: 'audioBridge:1',\n  // TODO: Make \"invalid input\" (and others) a generic code.\n  INVALID_INPUT: 'audioBridge:2',\n  ALREADY_EXISTS: 'audioBridge:3',\n  NOT_FOUND: 'audioBridge:4',\n  NOT_SUPPORTED: 'audioBridge:5',\n  MEDIA_NOT_FOUND: 'audioBridge:6',\n  INVALID_STATE: 'audioBridge:7'\n}\n\n/**\n * Error codes for the subscription plugin.\n * @name subscriptionCodes\n */\nexport const subscriptionCodes = {\n  WS_CONNECTION_ERROR: 'subscription:1',\n  CPAAS_WSREQUEST_FAIL: 'subscription:2',\n  CPAAS_WSREVOKE_FAIL: 'subscription:3',\n  CPAAS_WSREFRESH_FAIL: 'subscription:4',\n  CPAAS_SERVICE_SUB_FAIL: 'subscription:5',\n  CPAAS_SERVICE_UNSUB_FAIL: 'subscription:6',\n  CPAAS_UNSUBSCRIBE_FAIL: 'subscription:7'\n}\n/**\n * Error codes for the Presence plugin.\n * @name presenceCodes\n */\nexport const presenceCodes = {\n  INVALID_STATUS: 'presence:1',\n  INVALID_ACTIVITY: 'presence:2'\n}\n\n/**\n * Error codes for the Users plugin\n * @name usersCodes\n */\nexport const usersCodes = {\n  UNKNOWN: 'users:1',\n  REFRESH_CONTACTS_FAIL: 'users:2',\n  DIRECTORY_REQUEST_FAIL: 'users:3',\n  INVALID_PARAM: 'users:4'\n}\n\n/**\n * Error codes for the Webrtc plugin\n * @name webrtcCodes\n */\nexport const webrtcCodes = {\n  INVALID_PARAM: 'webrtc:1'\n}\n","// Authentication plugin.\nimport { parseSpidrServices } from './services'\n\n// Other plugins.\nimport request from '../../request/effects'\nimport BasicError, { authCodes } from '../../errors'\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call } from 'redux-saga/effects'\nimport { mergeValues } from '../../common/utils'\n\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Subscribe to SPiDR with the provided information.\n * @method subscribe\n * @param  {Object} connection Server information.\n * @param  {Object} credentials User information.\n * @return {Object} Subscription response.\n */\nexport function * subscribe (connection, credentials, extras = {}) {\n  /*\n   * TODO: Clean-up / fix the function signature. The requestOptions (eg. headers)\n   *    are mixed with the API options (eg. client correlator) when they're used\n   *    for unrelated purposes.\n   */\n  const subscribeType = connection.isAnonymous ? 'anonymous' : 'user'\n  let requestOptions = {}\n  requestOptions.method = 'POST'\n\n  requestOptions.url =\n    `${connection.protocol}://${connection.server}:${connection.port}` +\n    `/rest/version/${connection.version}` +\n    `/${subscribeType}/${credentials.username}/subscription`\n\n  requestOptions.body = JSON.stringify({\n    subscribeRequest: {\n      expires: connection.expires,\n      service: connection.service,\n      localization: connection.localization || 'English_US',\n      useTurn: connection.useTurn || true,\n      notificationType: connection.notificationType || 'WebSocket',\n      supported: ['RingingFeedback'],\n      forceLogOut: (extras.forceLogOut || false).toString(),\n      clientCorrelator: extras.clientCorrelator\n    }\n  })\n\n  // If there were any extra request options, merge them into the\n  //      options for this request. Priority is for the options defined here.\n  requestOptions = mergeValues(extras, requestOptions)\n\n  log.info(`Subscribing user ${credentials.username}`)\n  // Send the subscription request.\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      const body = response.payload.body\n\n      let statusCode\n      if (body.statusCode && body.reason) {\n        /*\n         * In some cases, the response is not wrapped in a `subscribeResponse`\n         *    property. This seems to be when using a pre-provisioned user (stored\n         *    as part of KL?) rather than a dynamically created user (retrieved\n         *    from AS?).\n         * Reference: ABE-23981 (and KAA-1937)\n         */\n        statusCode = body.statusCode\n      } else if (body.authorizationResponse && body.authorizationResponse.statusCode) {\n        /*\n         * In other cases, the response is wrapped in a `authorizationResponse`\n         *    property instead. This seems to be when an anonymous user\n         *    subscription fails (a success has `subscribeResponse`).\n         * Reference: KAA-2440\n         */\n        statusCode = body.authorizationResponse.statusCode\n      } else {\n        statusCode = body.subscribeResponse.statusCode\n      }\n      log.debug(`Failed user subscription with status code ${statusCode}.`)\n\n      // Handle errors from the server.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Failed to subscribe user. Code: ${statusCode}.`,\n          code: authCodes.LINK_SUBSCRIBE_FAIL\n        })\n      }\n    } else {\n      log.debug('Failed user subscription.', response.payload.result.message)\n      // Handle errors from the request plugin.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Subscribe request failed: ${response.payload.result.message}.`,\n          // TODO: Shared error codes.\n          code: authCodes.LINK_SUBSCRIBE_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    const subscribeResponse = response.payload.body.subscribeResponse\n\n    const subscribedServices = subscribeResponse.subscriptionParams.service\n    const servicesInfo = yield call(parseSpidrServices, connection.service, subscribedServices)\n    log.debug(`Successfully subscribed user. Service subscription status: ${servicesInfo.status}`)\n\n    return {\n      error: false,\n      servicesInfo,\n      ...subscribeResponse\n    }\n  }\n}\n\n/**\n * Unsubscribe from SPiDR with the provided subscription info.\n * @method unsubscribe\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {string}    subscriptionURL URL of the user's subscription instance.\n */\nexport function * unsubscribe (connection, subscriptionURL) {\n  const requestOptions = {}\n  requestOptions.method = 'DELETE'\n\n  requestOptions.url =\n    `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` + subscriptionURL\n\n  log.info('Unsubscribing user.')\n  // Send the unsubscribe request.\n  const response = yield request(requestOptions)\n\n  /*\n   * No matter what the response was, we still want to handle the user as\n   *    unsubscribed afterwards. If the request fails, there isn't a point to\n   *    keep the user subscribed since they want to unsubscribe anyway.\n   * For debug purposes, log what the response was but handle it as a success.\n   */\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.subscribeResponse\n      log.debug(`Encountered error unsubscribing user with status code ${statusCode}.`)\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug('Encountered error unsubscribing user.', message)\n    }\n  } else {\n    // Request was successful.\n    log.debug('User unsubscribed successfully.')\n  }\n}\n\n/**\n * Resubscribe to SPiDR to extend an existing subscription.\n * @method resubscribe\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {Object}    subscription Information about the subscription instance.\n * @param  {string}    subscription.expires - The time (in seconds) until subscription expiry.\n * @param  {Array}     subscription.service - The SPiDR services to resubscribe to.\n * @param  {Array}     subscription.url - The URL of the user's subscription instance.\n * @return {Object}    Resubscription response.\n */\nexport function * resubscribe (connection, subscription) {\n  const requestOptions = {}\n  requestOptions.method = 'PUT'\n\n  if (subscription.clientCorrelator) {\n    requestOptions.url =\n      `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` +\n      `/rest/version/${connection.server.version}` +\n      `/user/${connection.username}/subscription/clientCorrelator/${subscription.clientCorrelator}`\n  } else {\n    requestOptions.url =\n      `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` + subscription.url\n  }\n\n  // TODO: Don't hardcode the defaults here. Should be shared with\n  //      the subscribe request as well.\n  requestOptions.body = JSON.stringify({\n    subscribeRequest: {\n      expires: subscription.expires,\n      service: subscription.service,\n      localization: subscription.localization || 'English_US',\n      useTurn: subscription.useTurn || true,\n      notificationType: subscription.notificationType || 'WebSocket'\n    }\n  })\n\n  log.info('Resubscribing user.')\n  // Send the subscription update request.\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.subscribeResponse\n      log.debug(`Failed to update user subscription with status code ${statusCode}.`)\n\n      let message, errorCode\n      if (response.payload.result.code === 404 && [4, 39].includes(statusCode)) {\n        /*\n         * Special case: Status code 39 (for KL) or 4 (for UC) means the subscription\n         *    does not exist (ie. the request 404'd). We want to treat this error\n         *    differently because it is a \"subscription gone\" scenario and we need\n         *    to clear the SDK's subscription info.\n         */\n        message = `Subscription no longer exists. Code ${statusCode}.`\n        // TODO: We shouldn't be assigning arbitrary codes to BasicError (ie. only\n        //    use the codes pre-defined) because the application also gets access\n        //    to this, but we don't have a good way to pass specific error info\n        //    around for side-effects (ie. subscription gone).\n        errorCode = statusCode\n      } else {\n        message = `Failed to update user subscription with status code ${statusCode}.`\n        errorCode = authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n      }\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({ message, code: errorCode })\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug('User subscription update request failed.', message)\n\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: `Update subscription request failed.: ${message}.`,\n          // TODO: Shared error codes.\n          code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    const resubResponse = response.payload.body.subscribeResponse\n\n    if (resubResponse.statusCode === 0 || resubResponse.statusCode === 2) {\n      const subscribedServices = resubResponse.subscriptionParams.service\n      const servicesInfo = yield call(parseSpidrServices, subscription.service, subscribedServices)\n      log.debug(`Successfully resubscribed user. Service resubscription status: ${servicesInfo.status}`)\n\n      // Success.\n      return {\n        error: false,\n        servicesInfo,\n        ...resubResponse\n      }\n    } else {\n      log.info('Failed to resubscribe user. Status Code: ', resubResponse.statusCode)\n      // Unknown statusCode, consider as failure.\n      return {\n        error: new BasicError({\n          message: `Unknown error; statusCode: ${resubResponse.statusCode}.`,\n          code: authCodes.LINK_UPDATE_SUBSCRIPTION_FAIL\n        })\n      }\n    }\n  }\n}\n","import { SUBSCRIPTION_STATE } from '../constants'\n\n/**\n * Uses the requested and received SPiDR [subscription] services to determine\n *      the SDK subscription status for each service.\n * @method parseSpidrServices\n * @param  {Array}  requested The list of requested SPiDR services.\n * @param  {Array}  received The list of received SPiDR services.\n * @return {Object} Information about the SDK's subscriptions.\n */\nexport function parseSpidrServices (requested, received) {\n  // UC platform is not case-sensitive (Link is), so filter without caring about case.\n  const upperReceived = received.map(service => service.toUpperCase())\n\n  // Find the missing services.\n  const missing = requested.filter(function (reqService) {\n    // If the requested service was received (not caring about case),\n    //      it is not missing.\n    return upperReceived.indexOf(reqService.toUpperCase()) === -1\n  })\n\n  const subscriptions = {\n    requested,\n    received,\n    missing,\n    status: 'UNKNOWN',\n    services: {}\n  }\n\n  // Determine the overall subscription status.\n  if (received.length === 0) {\n    subscriptions.status = SUBSCRIPTION_STATE.NONE\n  } else if (received.length > 0 && missing.length > 0) {\n    subscriptions.status = SUBSCRIPTION_STATE.PARTIAL\n  } else if (received.length > 0 && requested.length === received.length) {\n    subscriptions.status = SUBSCRIPTION_STATE.FULL\n  } else {\n    // Should never reach this case.\n  }\n\n  // List the individual service statuses.\n  received.forEach(function (service) {\n    subscriptions.services[service] = true\n  })\n  missing.forEach(function (service) {\n    subscriptions.services[service] = false\n  })\n\n  return subscriptions\n}\n","/**\n * Retrieves the flag which specifies wether or not this SDK should use a custom header as part of any requests being sent to server.\n * This custom header refers to the current agent version,\n * but it may also contain additional custom information (see customAgentVersionHeaderSuffix).\n * @param {Object} state  The current Redux state object.\n * @return {boolean} True if custom header should be used, false otherwise.\n */\nexport function injectAgentVersionHeader (state) {\n  return state.config.requests.injectAgentVersionHeader\n}\n\n/**\n * Retrieves a custom suffix value which specifies any extra information that can be appended to the custom header.\n * This custom header is sent by the SDK, as part of any requests being sent to server.\n * @param {Object} state  The current Redux state object.\n * @return {string} The suffix value.\n */\nexport function customAgentVersionHeaderSuffix (state) {\n  return state.config.requests.customAgentVersionHeaderSuffix\n}\n","// Connectivity.\nimport { wsAttemptConnect, wsDisconnect } from './actions'\nimport { WS_CONNECT_FINISHED, WS_DISCONNECT_FINISHED, WS_ERROR } from './actionTypes'\nimport { getConnectionState } from './selectors'\n\n// Other plugins.\nimport { getPlatform } from '../../auth/interface/selectors'\nimport { UNSUBSCRIBE_FINISHED } from '../../subscription/interface/actionTypes'\n\n// Libraries.\nimport { delay, put, race, select, take } from 'redux-saga/effects'\n\n/**\n * Custom redux-saga effect.\n * Wraps \"communication\" between the connectivity plugin and another plugin\n *     for connecting to a websocket.\n * @method connectWebsocket\n * @param {Object} websocketInfo Information needed to create the websocket.\n * @param {string} websocketInfo.protocol\n * @param {string} websocketInfo.server\n * @param {string} websocketInfo.port\n * @param {string} websocketInfo.url\n * @param {Object} [websocketInfo.params]\n * @param {string} platform The backend platform being connected to.\n * @return {Object} The response action of type `WS_CONNECT_FINISHED`.\n */\nexport function * connectWebsocket (websocketInfo, platform) {\n  // Dispatch the action that triggers a saga to connect to a websocket.\n  yield put(wsAttemptConnect(websocketInfo, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return action.type === WS_CONNECT_FINISHED && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n\n/**\n * Effect for disconnecting a websocket to a platform.\n * @method disconnectWebsocket\n * @param  {Object} payload\n * @param  {string} platform The backend platform being disconnected from.\n * @return {Object} The response action of type `WS_DISCONNECT_FINISHED`.\n */\nexport function * disconnectWebsocket (payload, platform) {\n  // Dispatch the action that triggers a saga to disconnect the websocket.\n  yield put(wsDisconnect(payload, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return (action.type === WS_DISCONNECT_FINISHED || action.type === WS_ERROR) && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n\n/**\n * Effect for waiting for the websocket / subscription to reconnect.\n * Assumption is that the websocket is in the middle of reconnect attempts. This\n *    is why the timeout is so long; one of the two scenarios should be guaranteed\n *    to happen before then.\n * @param {number} timeout The time, in milliseconds, to wait before timing out.\n * @return {boolean} Whether the websocket has reconnected or not.\n */\nexport function * waitForReconnect (timeout = 60000) {\n  const platform = yield select(getPlatform)\n  const { connected: isConnected } = yield select(getConnectionState, platform)\n\n  if (isConnected) {\n    return true\n  }\n\n  const { reconnected } = yield race({\n    // If websocket reconnects, then we're reconnected (...duh).\n    reconnected: take(action => action.type === WS_CONNECT_FINISHED && !action.error),\n    // If the user unsubscribes (ie. ws reconnect fails), then we're disconnected.\n    disconnected: take(action => action.type === UNSUBSCRIBE_FINISHED && !action.error),\n    timeout: delay(timeout)\n  })\n\n  return Boolean(reconnected)\n}\n","const prefix = '@@KANDY/SUBSCRIPTION/'\n\nexport const SUBSCRIBE = prefix + 'SUBSCRIBE'\nexport const SUBSCRIBE_FINISHED = prefix + 'SUBSCRIBE_FINISHED'\n\nexport const UNSUBSCRIBE = prefix + 'UNSUBSCRIBE'\nexport const UNSUBSCRIBE_FINISHED = prefix + 'UNSUBSCRIBE_FINISHED'\n\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\n\nexport const REGISTER_SUB_SERVICE = prefix + 'REGISTER_SUB_SERVICE'\nexport const PLUGIN_SUBSCRIPTION = prefix + 'PLUGIN_SUBSCRIPTION'\nexport const PLUGIN_SUBSCRIPTION_FINISHED = prefix + 'PLUGIN_SUBSCRIPTION_FINISHED'\nexport const PLUGIN_UNSUBSCRIPTION = prefix + 'PLUGIN_UNSUBSCRIPTION'\nexport const PLUGIN_UNSUBSCRIPTION_FINISHED = prefix + 'PLUGIN_UNSUBSCRIPTION_FINISHED'\n\nexport const CHANNEL_OPENED = prefix + 'CHANNEL_OPENED'\nexport const CHANNEL_CLOSED = prefix + 'CHANNEL_CLOSED'\n","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","// Import a call shim between FCS calls and Next version of SDK.\n// It is used to handle FCS' call object, since we cannot put it in sate.\nimport callShimFactory from './callShim'\n\nimport { fork, put } from 'redux-saga/effects'\nimport * as authActionTypes from '../../auth/interface/actionTypes'\nimport * as notiActionTypes from '../../notifications/interface/actionTypes'\nimport * as connActionTypes from '../../connectivity/interface/actionTypes'\nimport {\n  getPlatform,\n  getRequestInfo,\n  getAuthConfig,\n  getUserInfo,\n  getConnectionInfo\n} from '../../auth/interface/selectors'\nimport { update as updateConfig } from '../../config/interface/actions'\n\nimport { checkMediaDevices, watchCheckMediaDevices, onDeviceChange } from './sagas'\nimport { mapEvents } from '../../events/interface/actions'\nimport BasicError, { callCodes } from '../../errors'\n\n// Utilities.\nimport { defaults, isFunction, omit, pick } from 'lodash/fp'\nimport { logManager as logMgr } from '../../logs'\nimport { getCpaasAgentHeaderValue } from '../../request/utils'\n\n// Import the interface to implement.\nimport pluginInterface from '../interface'\nimport { callsActions, devicesActions, localVideoActions, mediaActions, audioBridgeActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport { getCallById, getCallConfig, getMediaInfo } from '../interface/selectors'\nimport events from '../interface/events'\n\n// Constants\nimport { platforms } from '../../constants'\n\n// get logger\nconst log = logMgr.getLogger('CALL')\nconst fcsLog = logMgr.getLogger('FCS')\n\n// eslint-disable-next-line no-warning-comments\n/**\n * Configuration options for the call feature.\n * @public\n * @name config.call\n * @memberof config\n * @instance\n * @param {Object} call The call configuration object.\n * @param {Object} [call.callDefaults] Default options to be used when making/answering a call.\n * @param {boolean} [call.callDefaults.isAudioEnabled=true] Specifies whether audio is enabled or not.\n * @param {boolean} [call.callDefaults.isVideoEnabled=true] Specifies whether video is enabled or not.\n * @param {boolean} [call.callDefaults.sendInitialVideo=false] Specifies whether to send an initial video stream or not.\n * @param {Object} [call.callDefaults.remoteVideoContainer] Specifies the container where video (coming from remote party) is rendered.\n * @param {Object} [call.callDefaults.localVideoContainer] Specifies the container where video (coming from local party) is rendered.\n * @param {string} [call.chromeExtensionId] ID of the screenshare extension being used for screenshare of Google Chrome.\n * @param {boolean} [call.recordCallStats=false] Whether to enable the recording of call statistics as part of app's local storage.\n * @param {boolean} [call.earlyMedia=false] Whether to use early media (e.g. for playing incoming tones) as part of an outgoing call.\n * @param {number} [call.callAuditTimer=30000] Audit time value for calls, as a positive number in milliseconds.\n * @param {number} [call.activeCallTimeoutMS=120000] Timeout for an existing ringing call before it gets terminated, as a positive number in milliseconds.\n * @param {boolean} [call.ringingFeedback] When enabled, inform Spidr that RingingFeedback is supported.\n * @param {string} [call.codecsToReplace] Specifies alternative audio/video codecs to use for a given call. It has been deprecated so pipeline parameter should be used instead.\n * @param {boolean} [call.videoInactiveOnHold=false] Sets the video as \"inactive\" instead of \"sendonly\" when holding a call.\n * @param {boolean} [call.forceDisableMediaOnHold=false] Disables any type of media (e.g. Comfort Noise) from transmitting when call is held locally.\n * @param {number} [call.iceCandidateCollectionTimeoutInterval=3000] When provided (in milliseconds), ice candidate collection is assumed to be completed if at least one candidate is received within the interval.\n * @param {boolean} [call.relayCandidateCollectionTimeoutCycle=false] When enabled, iceCandidateCollectionTimeoutInterval is restarted until receiving first relay candidate. If the provided cycle limit is reached, ice candidate collection assumed to be completed.\n * @param {boolean} [call.recordCallStats=false] When enabled, call statistics are recorded in app's localstorage after the call is terminated.\n * @param {Object} [call.callConstraints] Custom RTCPeerConnection constraints to use for calls. Will cause errors if malformed.\n * @param {Object} [call.callConstraints.chrome] Custom constraints to be used on Google Chrome.\n * @param {Object} [call.callConstraints.firefox] Custom constraints to be used on Mozilla Firefox.\n * @param {string} [call.bundlePolicy='DISABLED'] The bundle policy to use for peer connections. Value can be fcs.SDP_CONSTANTS.BUNDLE_POLICY.MAX_COMPAT, fcs.SDP_CONSTANTS.BUNDLE_POLICY.MAX_BUNDLE, fcs.SDP_CONSTANTS.BUNDLE_POLICY.BALANCED or fcs.SDP_CONSTANTS.BUNDLE_POLICY.DISABLED. The DISABLED option means that bundle group lines will be removed from every SDP.\n * @param {Object} [call.opusConfig] Bandwidth controls to add for Opus audio codec.\n * @param {number} [call.opusConfig.maxPlaybackRate] Maximum playback rate, in bits per second. Must be a positive value between 8000 and 48000.\n * @param {number} [call.opusConfig.maxAverageBitrate] A bitrate encoding value between 6000 and 510000 bits per second.\n * @param {number} [call.opusConfig.fec] Specifies whether Forward Error Correction is enabled or not. When enabled, FEC provides robustness against packet loss. Acceptable values can only be 0 or 1.\n * @param {number} [call.opusConfig.dtx] Specifies whether Discontinuous Transmission mode is enabled or not. When enabled, DTX reduces the bitrate during silence or background noise. Acceptable values can only be 0 or 1.\n * @param {number} [call.opusConfig.ptime] Packet (i.e. frame) duration in milliseconds. Frames will be combined into packets to achieve the maximum of 120 ms duration. A positive value between 2.5 and 120.\n * @param {number} [call.webrtcLogCollectionInterval=3000] Interval at which to collect WebRTC logs for calls, in milliseconds.\n * @param {boolean} [call.useRelay=false] Whether we should force connection through the relay candidates (i.e. TURN server). Mostly used for testing.\n * @param {string} [call.trickleIceSupport='none'] Whether we should advertise and use Trickle ICE. Accepted value is one of: 'none', 'half' or 'full'.\n * @param {boolean} [call.continuity=false] Whether an existing voice call can be persisted, as a mobile phone moves between circuit switched and packet switched domains (e.g. GSM to WiFi).\n * @param {boolean} [call.resyncOnConnect=false] Whether all active calls should be resynched upon connecting or reconnecting to the websocket (requires Kandy Link 4.7.1+).\n */\n\n/**\n * CallsLink factory. For call-related configs, see the makeCall API documentation.\n * @method callsLink\n * @param {Object} [options={}] Plugin configs. See above.\n * @return {Object} Call plugin.\n */\nexport default function callsLink (options = {}) {\n  const defaultOptions = {\n    // Values used as defaults for making/answering a call.\n    callDefaults: {\n      isAudioEnabled: true,\n      isVideoEnabled: true,\n      sendInitialVideo: false,\n      remoteVideoContainer: undefined,\n      localVideoContainer: undefined\n    },\n    // Values passed to FCS.\n    webrtcdtls: true,\n    chromeExtensionId: undefined,\n    serverProvidedTurnCredentials: false,\n    iceserver: [],\n    recordCallStats: false\n  }\n\n  const callDefaults = defaults(defaultOptions.callDefaults, options.callDefaults)\n  options = defaults(defaultOptions, options)\n  options.callDefaults = callDefaults\n\n  function * init () {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(events))\n\n    // Check media devices on setup. Do this as a non-blocking effect,\n    //      since there is an async portion to it.\n    yield fork(checkMediaDevices)\n  }\n\n  return {\n    middleware,\n    api: pluginInterface.api,\n    capabilities: ['call'],\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    init,\n    sagas: [watchCheckMediaDevices, onDeviceChange]\n  }\n}\n\nfunction middleware ({ dispatch, getState }) {\n  var config = {}\n  const shimContext = {\n    // Provide the values as a function, so that we\n    // don't call getState before the store is created.\n    getUsername: function () {\n      return getUserInfo(getState()).username\n    }\n  }\n  const callShim = callShimFactory(shimContext)\n\n  // FCS logger.\n  function fcsLogger (loggerName, level, logObject) {\n    const msg = logObject.timestamp + ' - ' + loggerName + ' - ' + level + ' - ' + logObject.message\n\n    // Protect against args being undefined.\n    const extras = logObject.args || []\n\n    fcsLog.debug(msg, ...extras)\n  }\n\n  /*\n   * Register a listener on FCS to dispatch an action when we receive a call.\n   * @method onReceived\n   * @param  {Object} call An FCS call object.\n   */\n  callShim.onIncomingCall = function (callId, callInfo) {\n    dispatch(callsActions.callIncoming(callId, callInfo))\n  }\n\n  callShim.onCallStateChange = function (callId, state, transition, callInfo = {}) {\n    // Add information about the transition that we can determine using\n    //      previous state and new state.\n    const prevCallState = getCallById(getState(), callId)\n    transition.prevState = prevCallState.state\n    transition.newState = state\n\n    // TODO: Once this if/else chain grows, move this as a utility.\n    if (prevCallState.state === 'RINGING' && state === 'IN_CALL') {\n      // Call is first established.\n      callInfo.startTime = Date.now()\n      transition.event = 'callEstablished'\n    } else if (prevCallState.state === state && prevCallState.remoteVideoState !== callInfo.remoteVideoState) {\n      // If only the remoteVideoState property changed...\n      transition.event = 'remoteVideoChange'\n    } else if (state === 'ENDED') {\n      const now = Date.now()\n      callInfo.endTime = now\n      // If there isn't a start time, then the call was never completed.\n      //      Meaning it's duration was 0, so set the start time appropriately.\n      if (!prevCallState.startTime) {\n        callInfo.startTime = now\n      }\n    }\n\n    // Dispatch an action on state change.\n    dispatch(callsActions.callStateChange(callId, state, transition, callInfo))\n  }\n\n  callShim.onMediaStateChange = function (callId, mediaState) {\n    // Dispatch an action on media state change.\n    dispatch(callsActions.callMediaStateChange(callId, mediaState))\n  }\n\n  callShim.onBridgeCallsChanged = function (bridgeId, calls) {\n    // Dispatch an action on bridge state change\n    dispatch(audioBridgeActions.updateAudioBridgeCalls(bridgeId, calls))\n  }\n\n  return next => action => {\n    switch (action.type) {\n      case actionTypes.SET_DEFAULT_DEVICES: {\n        log.debug('Setting default call devices.', action.payload)\n        const devices = pick(['camera', 'microphone', 'speaker'], action.payload)\n        callShim\n          .setDefaultDevices(devices)\n          .then(function (setDevices) {\n            dispatch(devicesActions.setDefaultDevicesFinish({ devices: setDevices }))\n          })\n          .catch(function (error) {\n            dispatch(devicesActions.setDefaultDevicesFinish({ error }))\n          })\n        break\n      }\n\n      case actionTypes.PROMPT_USER_MEDIA: {\n        log.debug('Getting user media.')\n        callShim\n          .promptUserMedia(action.payload)\n          .then(function ({ params }) {\n            dispatch(mediaActions.promptUserMediaFinish(params))\n          })\n          .catch(function ({ params, basicError }) {\n            dispatch(mediaActions.promptUserMediaFinish(params, basicError))\n          })\n        break\n      }\n\n      case actionTypes.CHANGE_SPEAKER: {\n        log.debug('Change current speaker used for call audio.', action.payload)\n        callShim\n          .changeSpeaker(action.payload)\n          .then(function (speakerId) {\n            dispatch(devicesActions.changeSpeakerFinish({ speakerId }))\n          })\n          .catch(function ({ speakerId, error }) {\n            dispatch(devicesActions.changeSpeakerFinish({ speakerId, error }))\n          })\n        break\n      }\n\n      case actionTypes.CHANGE_INPUT_DEVICES: {\n        log.debug('Changing current camera/microphone used for call.', action.payload.callId)\n        callShim\n          .changeInputDevices(action.payload.callId)\n          .then(function (callId) {\n            dispatch(devicesActions.changeInputDevicesFinish({ callId }))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(devicesActions.changeInputDevicesFinish({ callId, error }))\n          })\n        break\n      }\n\n      case authActionTypes.CONNECT: {\n        // Set up FCS logging if enabled.\n        // Do it here since it's the earliest not-at-store-creation point\n        //      where we use FCS.\n        // TODO: Selector for logs state?\n        if (getState().config.logs.enableFcsLogs) {\n          // Set the fcsLog handler to directly log to console. The fcsLogger\n          //    should have already formatted the messages. An application won't\n          //    have a chance to handle these logs directly, but that's v3.X ...\n          fcsLog.logHandler = entry => {\n            console.debug(...entry.messages)\n          }\n          // Set the fcsLog level to debug.\n          fcsLog.level = 'DEBUG'\n\n          // Provide the fcsLogger (which calls the above fcsLog) to FCS.\n          callShim.initLogging(fcsLogger, true)\n        }\n\n        const { username, password, authname } = action.payload.credentials\n        // Do this here since it's the last point we have access to the password.\n        callShim.setUserAuth(username, password, authname)\n\n        // Retrieve configs for use within the middleware scope.\n        // This has to be done after init*, hence after connect, but only\n        //      needed once, so not at the base of the middleware scope.\n        config = getCallConfig(getState())\n\n        // Set connection info in FCS\n        const authConfig = getAuthConfig(getState())\n        var connectionInfo = {\n          protocol: authConfig.subscription.protocol,\n          restUrl: authConfig.subscription.server,\n          restPort: authConfig.subscription.port,\n          websocketProtocol: authConfig.websocket.protocol,\n          websocketIP: authConfig.websocket.server,\n          websocketPort: authConfig.websocket.port,\n          // Need to set callResyncOnConnect into FCS config here\n          callResyncOnConnect: config.resyncOnConnect,\n          // Hook into FCS Call requests\n          ajaxHook: function (xhr, unusedWindow, { url, headers }) {\n            const platform = getPlatform(getState())\n\n            // Get and set the X-Cpaas-Agent header value to be sent with all call\n            // control requests.  NOTE: X-Cpaas-Agent is already set for non call\n            // related requests in the request plugin.\n            const cpaasAgentHeaderValue = getCpaasAgentHeaderValue(platform, url)\n            headers['X-Cpaas-Agent'] = cpaasAgentHeaderValue\n\n            // Request headers/urls are populated differently depending on whether it is Link or UC\n            if (platform === platforms.LINK) {\n              const requestInfo = getRequestInfo(getState(), platform)\n              const customHeaders = requestInfo.requestOptions.headers\n              // Include custom x-session header if it exists.\n              // (Used by subsequent requests after authenticated & subscribed via HMAC token)\n              if (customHeaders['x-session']) {\n                headers['x-session'] = customHeaders['x-session']\n              }\n              return {\n                url: url,\n                headers: headers\n              }\n            } else if (platform === platforms.UC) {\n              const { oauthToken, accessToken } = getConnectionInfo(getState(), platforms.UC)\n              if (oauthToken) {\n                // For OAuth handling, add the Bearer token to the Request Header\n                headers = {\n                  ...headers,\n                  Authorization: `Bearer ${oauthToken}`\n                }\n              } else {\n                // For regular Access Token handling, add the token to the URL string\n                const tokenString = `token=${accessToken}`\n                if (url.indexOf('?') === -1) {\n                  url += '?' + tokenString\n                } else {\n                  url += '&' + tokenString\n                }\n              }\n              return {\n                url: url,\n                headers: headers\n              }\n            }\n          }\n        }\n        log.debug('Setting connection info configs in FCS', connectionInfo)\n        callShim.setConnectionInfo(connectionInfo)\n        break\n      }\n\n      case authActionTypes.CONNECT_FINISHED: {\n        if (action.error) {\n          // Don't setup FCS if the login failed.\n          break\n        }\n\n        const hasCallService =\n          action.payload.subscription.service.indexOf('call') > -1 ||\n          action.payload.subscription.service.indexOf('callMe') > -1\n\n        // Log a warning if the user isn't subscribed for calls.\n        if (!hasCallService) {\n          // TODO: An event should be emitted from this. So the app knows to check services /\n          //      update services to try and get calls.\n          log.error('Error: Setting up for calls without a call service subscription. Calls will likely fail.')\n        }\n\n        if (action.meta.isSSO) {\n          // If we are in an SSO scenario we first have to call fcs' setTokenAuth endpoint.\n          // For normal CONNECT scenario's the equivalent is setUserAuth in the CONNECT middleware above.\n          // For SSO we do it here since we don't get the username until after the connect server response.\n          callShim.setTokenAuth(action.payload.userInfo.username, action.payload.userInfo.token)\n\n          // This call tells FCS to use UAT's instead of basic auth for all future rest calls.\n          callShim.setKandyUAT(action.payload.userInfo.token)\n        }\n\n        // Pull out the FCS' setup configs from the plugin configs.\n        const fcsConfig = omit(['callDefaults', 'chromeExtensionId'], config)\n\n        // Update the ice server info provided to FCS with the turn credentials\n        //      retrieved from subscription.\n        if (fcsConfig.serverProvidedTurnCredentials && fcsConfig.hasOwnProperty('iceserver')) {\n          const turnCredentials = action.payload.subscription.turnCredentials || {}\n          if (turnCredentials.username && turnCredentials.password) {\n            log.debug('Using server provided turn credentials.')\n            fcsConfig.iceserver = fcsConfig.iceserver.map(function (iceInfo) {\n              return {\n                ...iceInfo,\n                username: turnCredentials.username,\n                credential: turnCredentials.password\n              }\n            })\n          } else {\n            // TODO: Should this dispatch an error action? Or is a warning\n            //      enough, since an error will be encountered when calling?\n            log.warn('Warning: Server turn credentials not found.')\n          }\n        }\n\n        if (config.chromeExtensionId) {\n          fcsConfig.screenSharing = {\n            chromeExtensionId: config.chromeExtensionId\n          }\n        }\n\n        // If there are plugin configs not present in setupVars,\n        // add them in now.\n        var setupVars = fcsConfig\n        if (action.payload.connection.isAnonymous) {\n          setupVars.anonymous = true\n        }\n        if (action.payload.connection.realm) {\n          setupVars.realm = action.payload.connection.realm\n          callShim.setRealm(action.payload.connection.realm)\n        }\n\n        // Don't log passwords.\n        const toLog = defaults(setupVars, {\n          iceserver: setupVars.iceserver.map(function (server) {\n            return {\n              ...server,\n              credential: '********'\n            }\n          })\n        })\n        log.debug('Setting up FCS with configs (connection info, including hooks, already set): ', toLog)\n\n        // Setup the callstack.\n        callShim.setup(setupVars)\n\n        // Initialize media.\n        dispatch(mediaActions.initMedia(setupVars))\n        break\n      }\n      case actionTypes.MAKE_CALL: {\n        const callId = action.payload.callId\n        const options = defaults(config.callDefaults, action.payload.callInfo)\n        if (!options.from) {\n          // If no `from` is provided, use the current user.\n          options.from = getUserInfo(getState()).username\n        }\n        log.debug('Making call with options: ', options)\n\n        // Call the shim's makeCall function.\n        callShim\n          .makeCall(callId, options)\n          // FCS' startCall success callback.\n          .then(function ({ options }) {\n            dispatch(callsActions.makeCallFinish(callId, options))\n          })\n          // Failure scenario for either startCall or initMedia.\n          .catch(function ({ error, options }) {\n            dispatch(callsActions.makeCallFinish(callId, options, error))\n          })\n\n        break\n      }\n\n      case actionTypes.ANSWER_CALL: {\n        const options = defaults(config.callDefaults, action.payload.callInfo)\n        options.to = getUserInfo(getState()).username\n        log.debug('Answering call with options: ', options)\n\n        callShim\n          .answerCall(action.payload.callId, options)\n          .then(function ({ callId }) {\n            dispatch(callsActions.answerCallFinish(callId, options))\n          })\n          .catch(function ({ error, callId }) {\n            dispatch(callsActions.answerCallFinish(callId, options, error))\n          })\n        break\n      }\n\n      case actionTypes.IGNORE_CALL: {\n        log.debug('Ignoring call.', action.payload.callId)\n        callShim\n          .ignoreCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.ignoreCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.ignoreCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.REJECT_CALL: {\n        log.debug('Rejecting call.', action.payload.callId)\n        callShim\n          .rejectCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.rejectCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.rejectCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.END_CALL: {\n        log.debug('Ending call.', action.payload.callId)\n        callShim\n          .endCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.endCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.endCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.MUTE_CALL: {\n        log.debug('Muting call.', action.payload.callId)\n        callShim\n          .muteCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.muteCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.muteCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.UNMUTE_CALL: {\n        log.debug('Unmuting call.', action.payload.callId)\n        callShim\n          .unMuteCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.unMuteCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.unMuteCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.SILENCE_CALL: {\n        log.debug('Silencing call.', action.payload.callId)\n        callShim\n          .silenceCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.silenceCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.silenceCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.UNSILENCE_CALL: {\n        log.debug('Unsilencing call.', action.payload.callId)\n        callShim\n          .unSilenceCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.unSilenceCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.unSilenceCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.SET_CUSTOM_PARAMETERS: {\n        log.debug('Setting custom parameters.')\n        callShim.setCustomParameters(action.payload.callId, action.payload.customParameters)\n        break\n      }\n\n      case actionTypes.START_VIDEO: {\n        log.debug('Starting call video.', action.payload.callId)\n        callShim\n          .startVideo(action.payload.callId, action.payload.callInfo)\n          .then(function ({ callId, params }) {\n            dispatch(callsActions.startVideoFinish(callId, params))\n          })\n          .catch(function ({ callId, params, error }) {\n            dispatch(callsActions.startVideoFinish(callId, params, error))\n          })\n        break\n      }\n\n      case actionTypes.STOP_VIDEO: {\n        log.debug('Stopping call video.', action.payload.callId)\n        callShim\n          .stopVideo(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.stopVideoFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.stopVideoFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.HOLD_CALL: {\n        log.debug('Hold call.', action.payload.callId)\n        callShim\n          .holdCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.holdCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.holdCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.UNHOLD_CALL: {\n        log.debug('Unhold call.', action.payload.callId)\n        callShim\n          .unHoldCall(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.unHoldCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.unHoldCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.SEND_DTMF: {\n        log.debug('Sending DTMF tone to call.', action.payload.callId)\n        callShim\n          .sendDTMF(action.payload.callId, action.payload.params.tone)\n          .then(function () {\n            log.info('DTMF tone sent.')\n            // Nothing to be stored in state for DTMF tone.\n          })\n          .catch(function ({ callId, error }) {\n            log.info('DTMF tone could not be sent.')\n            dispatch(callsActions.sendDTMFFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.SEND_CUSTOM_PARAMETERS: {\n        log.debug('Sending custom parameters.', action.payload.callId)\n        callShim\n          .sendCustomParameters(action.payload.callId)\n          .then(function () {\n            log.info('Custom parameters sent.')\n            // Nothing to be stored in state.\n          })\n          .catch(function ({ callId, error }) {\n            log.info('Custom parameters could not be sent.')\n            dispatch(callsActions.sendCustomParametersFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.START_SCREENSHARE: {\n        log.debug('Starting screenshare on call.', action.payload.callId)\n\n        /**\n         * Special case callback function.\n         * Triggers when screensharing is stopped by the browser.\n         * Defined in this scope so that it knows about the redux level.\n         */\n        const onScreenshareStop = function () {\n          log.debug('Screenshare stopped manually.')\n          dispatch(callsActions.stopScreenshareFinish(action.payload.callId))\n        }\n\n        callShim\n          .startScreenshare(action.payload.callId, action.payload.callInfo.screenshareOptions, onScreenshareStop)\n          .then(function ({ callId, params }) {\n            dispatch(callsActions.startScreenshareFinish(callId, params))\n          })\n          .catch(function ({ callId, params, error }) {\n            dispatch(callsActions.startScreenshareFinish(callId, params, error))\n          })\n        break\n      }\n\n      case actionTypes.STOP_SCREENSHARE: {\n        log.debug('Stopping screenshare on call.', action.payload.callId)\n        callShim\n          .stopScreenshare(action.payload.callId)\n          .then(function ({ callId }) {\n            dispatch(callsActions.stopScreenshareFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.stopScreenshareFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.FORWARD_CALL: {\n        log.debug(`Forwarding call to user ${action.payload.params.destination}`, action.payload.callId)\n        callShim\n          .forwardCall(action.payload.callId, action.payload.params.destination)\n          .then(function ({ callId }) {\n            dispatch(callsActions.forwardCallFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.forwardCallFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.DIRECT_TRANSFER: {\n        log.debug(`Transferring call (direct) to user ${action.payload.params.destination}`, action.payload.callId)\n        callShim\n          .directTransfer(action.payload.callId, action.payload.params.destination)\n          .then(function ({ callId }) {\n            dispatch(callsActions.directTransferFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.directTransferFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.CONSULTATIVE_TRANSFER: {\n        log.debug(\n          `Transferring call (consultative) to destination ${action.payload.params.destination}`,\n          action.payload.callId\n        )\n        callShim\n          .consultativeTransfer(action.payload.callId, action.payload.params.destination)\n          .then(function ({ callId }) {\n            dispatch(callsActions.consultativeTransferFinish(callId))\n          })\n          .catch(function ({ callId, error }) {\n            dispatch(callsActions.consultativeTransferFinish(callId, error))\n          })\n        break\n      }\n\n      case actionTypes.JOIN_CALL: {\n        log.debug(`Joining call ${action.payload.params.destination}`, action.payload.callId)\n        callShim\n          .joinCall(action.payload.callId, action.payload.params.destination)\n          .then(function ({ callId: joinedCallId, joinedCalls, callState }) {\n            const state = getState()\n            const username = getUserInfo(state).username\n            const joinedCallTo = joinedCalls.map(function (callId) {\n              const call = getCallById(state, callId)\n              return call.to === username ? call.from : call.to\n            })\n            // Add as much info as we can to the joined call.\n            const callInfo = {\n              state: callState,\n              from: username,\n              to: 'Joined Call',\n              participants: joinedCallTo,\n              // Mark this call as \"special\".\n              isJoinedCall: true,\n              joinedCalls,\n              // TODO: These values are assumed...\n              isAudioEnabled: true,\n              isVideoEnabled: false,\n              muted: false\n            }\n\n            dispatch(\n              callsActions.joinCallFinish(joinedCallId, joinedCalls, {\n                callInfo\n              })\n            )\n          })\n          .catch(function ({ callId: joinedCallId, joinedCalls, error }) {\n            dispatch(callsActions.joinCallFinish(joinedCallId, joinedCalls, { error }))\n          })\n        break\n      }\n\n      case actionTypes.START_LOCAL_VIDEO: {\n        log.debug('Starting local video.')\n        const videoContainer = action.payload || config.localVideoContainer\n        callShim\n          .startLocalVideo(videoContainer)\n          .then(function (container) {\n            dispatch(localVideoActions.startLocalVideoFinish(container))\n          })\n          .catch(function ({ error }) {\n            let basicError\n            // Convert the callShim error object into a BasicError.\n            if (error.type === 'media') {\n              basicError = new BasicError({\n                message: error.message,\n                code: callCodes.INIT_MEDIA_FAILED\n              })\n            } else if (error.type === 'video') {\n              basicError = new BasicError({\n                message: error.message,\n                code: callCodes.USER_MEDIA_ERROR\n              })\n            } else if (error.type === 'generic') {\n              basicError = new BasicError({\n                message: error.message,\n                code: callCodes.GENERIC_ERROR\n              })\n            } else {\n              basicError = new BasicError({\n                message: 'An error occurred when starting local video.',\n                code: callCodes.UNKNOWN_ERROR\n              })\n            }\n\n            dispatch(localVideoActions.startLocalVideoFinish(null, basicError))\n          })\n        break\n      }\n\n      case actionTypes.STOP_LOCAL_VIDEO: {\n        log.debug('Stopping local video.')\n        callShim\n          .stopLocalVideo()\n          .then(function () {\n            dispatch(localVideoActions.stopLocalVideoFinish())\n          })\n          .catch(function (error) {\n            const basicError = new BasicError({\n              message: error.message,\n              code: callCodes.GENERIC_ERROR\n            })\n            dispatch(localVideoActions.stopLocalVideoFinish(basicError))\n          })\n        break\n      }\n\n      case actionTypes.INIT_MEDIA: {\n        // Move around the extension ID to be where FCS will look for it.\n        //      Done the same way as before setup is done.\n        if (action.payload.chromeExtensionId) {\n          action.payload.screenSharing = {\n            chromeExtensionId: action.payload.chromeExtensionId\n          }\n        }\n\n        const callState = defaults(getCallConfig(getState()), action.payload)\n        const { isConnected } = getState().authentication\n\n        const mediaResults = getMediaInfo(getState())\n        // Only allow initMedia before connecting. Doing initMedia will\n        //      override any settings used the last time initMedia was called,\n        //      so only allow manual initMedia before connection, since\n        //      connection is where iceserver settings are retrieved from server.\n        // TODO: Fix \"this\" properly (ie. fix FCS' initMedia).\n        // Side-note: FCS' results from second+ attempt may not be accurate.\n        if (!isConnected) {\n          log.debug('Initializing media.')\n          callShim.initMedia(callState).then(function (result) {\n            dispatch(mediaActions.initMediaFinish(result))\n          })\n        } else {\n          log.debug('Media already initialized; re-using results.')\n          dispatch(mediaActions.initMediaFinish(mediaResults))\n        }\n        break\n      }\n\n      case actionTypes.CREATE_AUDIO_BRIDGE: {\n        log.debug('Creating audio bridge.', action.payload.bridgeId)\n        callShim\n          .createLocalAudioBridge(action.payload.bridgeId)\n          .then(function () {\n            dispatch(audioBridgeActions.createAudioBridgeFinish(action.payload.bridgeId))\n          })\n          .catch(function (error) {\n            dispatch(audioBridgeActions.createAudioBridgeFinish(action.payload.bridgeId, error))\n          })\n        break\n      }\n\n      case actionTypes.CLOSE_AUDIO_BRIDGE: {\n        log.debug('Closing audio bridge.', action.payload.bridgeId)\n        callShim\n          .closeAudioBridge(action.payload.bridgeId)\n          .then(function () {\n            dispatch(audioBridgeActions.closeAudioBridgeFinish(action.payload.bridgeId))\n          })\n          .catch(function (error) {\n            dispatch(audioBridgeActions.closeAudioBridgeFinish(action.payload.bridgeId, error))\n          })\n        break\n      }\n\n      /*\n       * BRIDGE_ADD_CALL action is fired without .then(), as the bridge's active list of calls is kept up to date\n       * in the state through the UPDATE_AUDIO_BRIDGE_CALLS action, which is emitted by the bridge itself.\n       * UPDATE_AUDIO_BRIDGE_CALLS is mapped to the BRIDGE_CHANGE event.\n       *\n       * `addCallToBridge.catch()` is still used for error handling.\n       */\n      case actionTypes.BRIDGE_ADD_CALL: {\n        const { bridgeId, callId } = action.payload\n        log.debug('Adding call to bridge.', bridgeId)\n        callShim.addCallToBridge(bridgeId, callId).catch(function (error) {\n          dispatch(audioBridgeActions.addCallToBridgeFinish(bridgeId, callId, error))\n        })\n        break\n      }\n\n      /*\n       * BRIDGE_REMOVE_CALL action is fired without .then(), as the bridge's active list of calls is kept up to date\n       * in the state through the UPDATE_AUDIO_BRIDGE_CALLS action, which is emitted by the bridge itself.\n       * UPDATE_AUDIO_BRIDGE_CALLS is mapped to the BRIDGE_CHANGE event.\n       *\n       * `removeCallFromBridge.catch()` is still used for error handling.\n       */\n      case actionTypes.BRIDGE_REMOVE_CALL: {\n        const { bridgeId, callId } = action.payload\n        log.debug('Removing call to bridge.', bridgeId)\n        callShim.removeCallFromBridge(bridgeId, callId).catch(function (error) {\n          dispatch(audioBridgeActions.removeCallFromBridgeFinish(bridgeId, callId, error))\n        })\n        break\n      }\n\n      case actionTypes.MUTE_AUDIO_BRIDGE: {\n        log.debug('Muting audio bridge.', action.payload.bridgeId)\n        callShim\n          .muteAudioBridge(action.payload.bridgeId)\n          .then(function () {\n            dispatch(audioBridgeActions.muteAudioBridgeFinish(action.payload.bridgeId))\n          })\n          .catch(function (error) {\n            dispatch(audioBridgeActions.muteAudioBridgeFinish(action.payload.bridgeId, error))\n          })\n        break\n      }\n\n      case actionTypes.UNMUTE_AUDIO_BRIDGE: {\n        log.debug('Unmuting audio bridge.', action.payload.bridgeId)\n        callShim\n          .unmuteAudioBridge(action.payload.bridgeId)\n          .then(function () {\n            dispatch(audioBridgeActions.unmuteAudioBridgeFinish(action.payload.bridgeId))\n          })\n          .catch(function (error) {\n            dispatch(audioBridgeActions.unmuteAudioBridgeFinish(action.payload.bridgeId, error))\n          })\n        break\n      }\n\n      case actionTypes.SILENCE_AUDIO_BRIDGE: {\n        log.debug('Silencing audio bridge.', action.payload.bridgeId)\n        callShim\n          .silenceAudioBridge(action.payload.bridgeId)\n          .then(function () {\n            dispatch(audioBridgeActions.silenceAudioBridgeFinish(action.payload.bridgeId))\n          })\n          .catch(function (error) {\n            dispatch(audioBridgeActions.silenceAudioBridgeFinish(action.payload.bridgeId, error))\n          })\n        break\n      }\n\n      case actionTypes.UNSILENCE_AUDIO_BRIDGE: {\n        log.debug('Unsilencing audio bridge.', action.payload.bridgeId)\n        callShim\n          .unsilenceAudioBridge(action.payload.bridgeId)\n          .then(function () {\n            dispatch(audioBridgeActions.unsilenceAudioBridgeFinish(action.payload.bridgeId))\n          })\n          .catch(function (error) {\n            dispatch(audioBridgeActions.unsilenceAudioBridgeFinish(action.payload.bridgeId, error))\n          })\n        break\n      }\n\n      case notiActionTypes.NOTIFICATION_RECEIVED: {\n        // TODO: Limit this to only handle call related messages.\n        //      Or generalize this to another plugin/handler.\n        const data = action.payload.notificationMessage\n        if (data) {\n          const callbacks = callShim.getNotificationCallbacks()\n          if (isFunction(callbacks[data.eventType])) {\n            const channel = action.meta.channel\n            log.debug(`${channel} notification message received: ${data.eventType}`)\n            // Handle websocket messages by forwarding them to FCS' notification system.\n            callbacks[data.eventType](data)\n          }\n        }\n        break\n      }\n\n      case connActionTypes.LOST_CONNECTION: {\n        const globalBroadcaster = callShim.getGlobalBroadcaster()\n        globalBroadcaster.publish('NOTIFICATION_CHANNEL_LOST', {})\n        break\n      }\n\n      case connActionTypes.WS_CONNECT_FINISHED: {\n        const globalBroadcaster = callShim.getGlobalBroadcaster()\n        globalBroadcaster.publish('DEVICE_SUBSCRIPTION_STARTED', {})\n        break\n      }\n\n      default:\n        break\n    }\n\n    return next(action)\n  }\n}\n","// TODO: Fix this?\n/* eslint-disable prefer-promise-reject-errors */\n\n// Import the \"Next\" version of FCS.\nimport { createFcs } from 'fcs/next'\nimport { FCS_CALL_STATES, FCS_ICE_MEDIA_STATES } from '../constants'\n\nimport BasicError, { bridgeCodes } from '../../errors'\nimport { logManager } from '../../logs'\nimport { v4 as uuidV4 } from 'uuid'\n\n// Get the logger\nconst log = logManager.getLogger('CALL')\n\n/**\n * Shim for interactions between FCS calls and Redux middleware.\n * Because FCS uses layered callbacks, it becomes either complicated or tedious\n * quite quickly when trying to implement all call features.\n * This shim is meant to remove the callback-bloat from the middleware.\n * It wraps FCS' multiple step async calls into a single step.\n * This also handles the FCS call objects, since they cannot be stored in state.\n * @method shim\n * @param  {Object} context [description]\n * @return {Object} api - Functions wrapped by the shim.\n */\nexport default function shim (context) {\n  const { getUsername } = context\n  const fcs = createFcs()\n\n  /**\n   * Map of on-going calls in FCS.\n   * Keyed by the ID as it exists in the SDK\n   * @type {Object}\n   */\n  var ongoingCalls = {}\n\n  /**\n   * Map of audio bridges in FCS.\n   * Keyed by the ID as it exists in the SDK\n   * @type {Object}\n   */\n  var audioBridges = {}\n\n  /*\n   * Information about the local, non-call video stream.\n   */\n  var localStream = null\n\n  /**\n   * Utility function to retrieve the corresponding SDK Call IDs for\n   * a list of FCS call object IDs\n   *\n   * @param {Array} fcsCalls - FCS call objects\n   * @returns {Array} - SDK call ID strings\n   */\n  function getUnifiedSdkCalls (fcsCalls) {\n    const map = {}\n    const callIds = []\n    if (fcsCalls.length > 0) {\n      for (const k in ongoingCalls) {\n        map[ongoingCalls[k].getId()] = k\n      }\n      fcsCalls.forEach(call => {\n        if (map[call.id]) {\n          callIds.push(map[call.id])\n          delete map[call.id]\n        }\n      })\n    }\n    return callIds\n  }\n\n  /**\n   * Handler for initMedia's failure scenario.\n   * Generates an error object based on the error code.\n   * @method processMediaError\n   * @param  {number} errorCode [description]\n   * @return {Object} Error object.\n   */\n  function processMediaError (errorCode) {\n    const mediaErrors = fcs.call.MediaErrors\n    // TODO: Don't hardcode these here.\n    const pluginUrls = {\n      urlWin32bit: 'https://kandy-portal.s3.amazonaws.com/public/plugin/3.1.524/Kandy_Plugin_3.1.524.exe',\n      urlWin64bit: 'https://kandy-portal.s3.amazonaws.com/public/plugin/3.1.524/Kandy_Plugin_3.1.524_x86_64.exe',\n      urlMacUnix: 'https://kandy-portal.s3.amazonaws.com/public/plugin/3.1.524/Kandy_Plugin_3.1.524.pkg'\n    }\n\n    var error\n    switch (errorCode) {\n      case mediaErrors.WRONG_VERSION:\n        error = {\n          code: mediaErrors.WRONG_VERSION,\n          message: 'Media Plugin Version Not Supported'\n        }\n        break\n      case mediaErrors.NEW_VERSION_WARNING:\n        error = {\n          code: mediaErrors.NEW_VERSION_WARNING,\n          message: 'New Plugin Version is available,',\n          pluginUrls\n        }\n        break\n      case mediaErrors.NOT_INITIALIZED:\n        error = {\n          code: mediaErrors.NOT_INITIALIZED,\n          message: \"Media couldn't be initialized.\"\n        }\n        break\n      case mediaErrors.NOT_FOUND:\n        error = {\n          code: mediaErrors.NOT_FOUND,\n          message: \"Plugin couldn't be found!\",\n          pluginUrls\n        }\n        break\n      case mediaErrors.NO_SCREENSHARING_WARNING:\n        error = {\n          code: mediaErrors.NO_SCREENSHARING_WARNING,\n          message: 'ScreenShare extension could not be found.'\n        }\n    }\n\n    // TODO: Provide a better error object. See PR #692 comments.\n    return error\n  }\n\n  /**\n   * Attempts to initialize media.\n   * @method initMedia\n   * @param {Object} options FCS options for initMedia.\n   * @return {Promise}\n   */\n  function initializeMedia (options) {\n    return new Promise(function (resolve) {\n      function initMediaSuccess () {\n        log.info('Media initialized successfully.')\n        resolve({\n          code: 0,\n          message: 'Media initialized.',\n          error: false\n        })\n      }\n      function initMediaFailure (errorCode) {\n        var result = processMediaError(errorCode)\n        result.error = true\n        resolve(result)\n      }\n\n      fcs.call.initMedia(initMediaSuccess, initMediaFailure, options)\n    })\n  }\n\n  /**\n   * Helper function for retrieving an ongoing call.\n   * @method getInternalCall\n   */\n  function getInternalCall (callId) {\n    var call = ongoingCalls[callId]\n    if (!call) {\n      log.info('Specified call Id does not match an on-going call.', callId)\n      return false\n    } else {\n      log.debug('Internal call retrieved.', call)\n      return call\n    }\n  }\n\n  /**\n   * Helper function for retrieving current audio bridges.\n   * @method getInternalBridge\n   */\n  function getInternalBridge (bridgeId) {\n    var bridge = audioBridges[bridgeId]\n    if (!bridge) {\n      log.info('Specified bridge Id does not match any current bridge.', bridgeId)\n      return false\n    } else {\n      log.debug('Internal bridge retrieved.', bridge)\n      return bridge\n    }\n  }\n\n  /**\n   * Handles a call state change.\n   * Curried function so that it has the callId.\n   * @method onStateChange\n   * @param  {string} callId - ID of the call that changed state.\n   * @return {Function} - Function that gets attached to fcsCall.onStateChange function.\n   */\n  function onStateChange (callId) {\n    // @param {number} state - New state of the call.\n    // @param {string} statusCode - Code representing the reason for the state change.\n    // @param {string} reasonText - Explanation of the status code.\n    // @param {Object} localStatusAndReason - Context from local side. Uses different codes/texts.\n    // @param {string} localStatusAndReason.localStatusCode - Local equivalent to statusCode.\n    // @param {string} localStatusAndReason.localReasonText - Local equivalent to reasonText.\n    return function (state, statusCode, reasonText, localStatusAndReason) {\n      // Treat \"renegotiating\" state changes as \"in call\" state.\n      if (state === fcs.call.States.RENEGOTIATION) {\n        log.debug('Renegotiating call state change. Treating as \"in call\".', callId)\n        state = fcs.call.States.IN_CALL\n      }\n\n      // Restructure FCS' state change context objects.\n      // Only one side ever has useful information.\n      var transition\n      if (statusCode && reasonText) {\n        transition = {\n          code: statusCode,\n          reasonText: reasonText\n        }\n      } else if (localStatusAndReason) {\n        transition = {\n          code: localStatusAndReason.localStatusCode,\n          reasonText: localStatusAndReason.localReasonText\n        }\n      } else {\n        transition = {}\n      }\n\n      // If the state change was an end, remove the call internally.\n      //      FCS has already dereference the call.\n      if (state === fcs.call.States.ENDED) {\n        log.debug(`Call state is ended, removing internal call reference: ${callId}`)\n        delete ongoingCalls[callId]\n      } else {\n        // Retrieve other call info that may have changed.\n        var call = getInternalCall(callId)\n        var callInfo = {\n          remoteParticipant: call.remoteParticipant,\n          isVideoNegotiationAvailable: call.isVideoNegotiationAvailable ? call.isVideoNegotiationAvailable() : false\n        }\n\n        // If the FCS call has updated participant info, update the\n        //      redux call with it. Try to ensure they have domains.\n        const domain = getUsername() ? '@' + getUsername().split('@')[1] : ''\n        if (call.callerNumber) {\n          callInfo.from = call.callerNumber\n          if (callInfo.from.indexOf('@') === -1) {\n            callInfo.from += domain\n          }\n        }\n        if (call.calleeNumber) {\n          callInfo.to = call.calleeNumber\n          if (callInfo.to.indexOf('@') === -1) {\n            callInfo.to += domain\n          }\n        }\n        if (call.callerName) {\n          callInfo.callerName = call.callerName\n        }\n        if (call.calleeName) {\n          callInfo.calleeName = call.calleeName\n        }\n\n        // Don't try things on a joined call. They're \"special\".\n        if (!call.getJoin()) {\n          callInfo.remoteVideoState = call.getRemoteVideoState()\n        }\n      }\n      log.debug(`Call state change. ID: ${callId}, state: ${FCS_CALL_STATES[state]}, context: ${transition}`)\n      // Go to the redux level.\n      api.onCallStateChange(callId, FCS_CALL_STATES[state], transition, callInfo)\n    }\n  }\n\n  /**\n   * Handles a call media state change.\n   * Curried function so that it has the callId.\n   * @method onStateChange\n   * @param  {string} callId - ID of the call that changed state.\n   * @return {Function} - Function that gets attached to fcsCall.onMediaStateChange function.\n   */\n  function onMediaStateChange (callId) {\n    // @param {number} mediaState New media state of the call.\n    return function (mediaState) {\n      log.debug(`Call media state change. ID: ${callId}, state: ${FCS_ICE_MEDIA_STATES[mediaState]}.`)\n      // Go to the redux level.\n      api.onMediaStateChange(callId, FCS_ICE_MEDIA_STATES[mediaState])\n    }\n  }\n\n  /*\n   * Register a listener to FCS for incoming calls.\n   * Process the call as needed by the shim,\n   *      then go to the redux level.\n   * @method onReceived\n   * @param  {Object}   call - FCS call object.\n   */\n  fcs.call.onReceived = function (call) {\n    // Create our own call ID for storing in state.\n    const callId = uuidV4()\n    ongoingCalls[callId] = call\n\n    const callInfo = {\n      from: call.callerNumber,\n      callerName: call.callerName,\n      to: getUsername(),\n      remoteVideoState: call.getRemoteVideoState(),\n      remoteParticipant: call.remoteParticipant,\n      wrtcsSessionId: call.getId(),\n      isVideoNegotiationAvailable: call.isVideoNegotiationAvailable ? call.isVideoNegotiationAvailable() : false\n      // TODO: Get more info from the call.\n      // TODO: Make call info consistent between\n      //      making call and receiving call.\n    }\n    // Register for state changes.\n    call.onStateChange = onStateChange(callId)\n    call.onMediaStateChange = onMediaStateChange(callId)\n\n    // Go to the redux level.\n    api.onIncomingCall(callId, callInfo)\n  }\n\n  var api = {\n    /**\n     * Endpoint for registering a listener.\n     * Equivalent to FCS' fcs.call.onReceived.\n     * @method onIncomingCall\n     * @param {Object} callInfo - Information about the incoming call.\n     */\n    onIncomingCall: null,\n    /**\n     * Endpoint for registering a listener\n     * @method onBridgeCallsChanged\n     * @param {Object} bridgeId - ID of the bridge whose call list has changed\n     * * @param {Array} calls - list of call IDs\n     */\n    onBridgeCallsChanged: null,\n\n    /**\n     * Endpoint for registering a listener for call state changes.\n     * Equivalent to FCS' call.onStateChange.\n     * @method onCallStateChange\n     * @param {string} callId - SDK call ID.\n     * @param {string} state\n     * @param {Object} transition\n     */\n    onCallStateChange: null,\n\n    /**\n     * Endpoint for registering a listener for call media state changes.\n     * Equivalent to FCS' call.onMediaStateChange.\n     * @method onCallMediaStateChange\n     * @param {string} callId - SDK call ID.\n     * @param {number} mediaState\n     */\n    onCallMediaStateChange: null,\n\n    // Expose some fcs methods directly.\n    setUserAuth: fcs.setUserAuth.bind(fcs),\n    setTokenAuth: fcs.setTokenAuth.bind(fcs),\n    setKandyUAT: fcs.setKandyUAT.bind(fcs),\n    setRealm: fcs.setRealm.bind(fcs),\n    initLogging: fcs.logManager.initLogging.bind(fcs),\n    getNotificationCallbacks () {\n      return fcs.NotificationCallbacks\n    },\n    getGlobalBroadcaster () {\n      return fcs.GlobalBroadcaster\n    },\n\n    setConnectionInfo (connectionInfo) {\n      fcs.setConnectionInfo(connectionInfo)\n    },\n\n    setup (fcsConfig) {\n      // true = delayInitMedia, because FCS doesn't provide an initMedia\n      // response when done on setup, but all subsequent initMedias will\n      // be returned as a success.\n      fcs.setup(fcsConfig, true)\n    },\n\n    /**\n     * Starts a call.\n     * Equivalent to initializing media then starting a call.\n     *\n     * @method makeCall\n     * @param  {string} callId - call Id\n     * @param  {Object} options - Call options.\n     * @return {Promise}\n     */\n    makeCall (callId, options) {\n      return new Promise(function (resolve, reject) {\n        /**\n         * Callback provided to FCS' startCall.\n         * @method startCallSuccess\n         */\n        function startCallSuccess (fcsCall) {\n          log.debug('Successful call start.', fcsCall)\n\n          // Save an internal reference to the call.\n          ongoingCalls[callId] = fcsCall\n\n          // Register for state changes.\n          fcsCall.onStateChange = onStateChange(callId)\n          fcsCall.onMediaStateChange = onMediaStateChange(callId)\n          options.wrtcsSessionId = fcsCall.getId()\n          options.isVideoNegotiationAvailable = fcsCall.isVideoNegotiationAvailable\n            ? fcsCall.isVideoNegotiationAvailable()\n            : false\n\n          // Go back to the redux level.\n          resolve({ callId, options })\n        }\n\n        /**\n         * Callback provided to FCS' startCall.\n         * @method startCallFailure\n         */\n        function startCallFailure (errorCode) {\n          log.debug('Failed to start call.', errorCode)\n          const message = errorCode === 38 ? 'No media specified for call.' : 'Failed to initialize call.'\n          const error = {\n            code: errorCode,\n            message: message,\n            type: 'call'\n          }\n          // Go back to the redux level.\n          reject({ error, options })\n        }\n\n        /**\n         * Callback provided to FCS' initMedia.\n         * @method mediaSuccess\n         */\n        function mediaSuccess () {\n          log.info('Call media initialized successfully.')\n          log.debug('Starting call with FCS options', options)\n\n          fcs.call.startCall(\n            options.from,\n            options.contact,\n            options.to,\n            startCallSuccess,\n            startCallFailure,\n            options.isVideoEnabled,\n            options.sendInitialVideo,\n            options.videoResolution,\n            {\n              isAudioEnabled: options.isAudioEnabled,\n              sendScreenShare: options.sendScreenShare,\n              mediaSourceId: options.mediaSourceId,\n              customParameters: options.customParameters\n            }\n          )\n        }\n\n        /**\n         * Callback provided to FCS' initMedia.\n         * @method initMediaFailure\n         */\n        function initMediaFailure (errorCode) {\n          const error = processMediaError(errorCode)\n          if (error.code === fcs.call.MediaErrors.NO_SCREENSHARING_WARNING) {\n            // This is not a failure case, just a warning.\n            log.warn('Media initialized, but could not detect extension for screensharing.')\n            mediaSuccess()\n          } else {\n            log.debug('Call media failed to initialize. Check media support.', error)\n            error.type = 'media'\n            reject({ error, options })\n          }\n        }\n\n        // Options specifically for fcs.call.initMedia.\n        const mediaOptions = {\n          // TODO: Let default options be passed-in to plugin.\n          remoteVideoContainer: options.remoteVideoContainer,\n          localVideoContainer: options.localVideoContainer\n        }\n\n        log.debug('Initializing call media.', mediaOptions)\n        // Start by calling FCS' initMedia.\n        // Then go into the shim's success / failure callback.\n        // Then we go to the middleware's success / failure callback.\n        // TODO: Don't call this directly here; use the api.initMedia function.\n        //      Change it when the middleware is refactored into sagas.\n        fcs.call.initMedia(mediaSuccess, initMediaFailure, mediaOptions)\n      })\n    },\n\n    /**\n     * Answers an incoming call.\n     * @method answerCall\n     * @param  {string}   callId  Id of the call to answer.\n     * @param  {Object}   options Call options.\n     * @return {Promise}\n     */\n    answerCall (callId, options) {\n      return new Promise(function (resolve, reject) {\n        var call = ongoingCalls[callId]\n        if (!call) {\n          log.info('Specified call Id does not match an on-going call.', callId)\n          reject({\n            type: 'call',\n            callId,\n            error: 'Invalid call id.'\n          })\n        }\n\n        // Callback provided to FCS' call.answer.\n        function answerSuccess () {\n          log.debug('Successful answer call.', call)\n          resolve({ callId })\n        }\n\n        // Callback provided to FCS' call.answer.\n        function answerFailure (errorCode) {\n          log.debug('Failed to answer call.', errorCode)\n          const error = {\n            code: errorCode,\n            message: 'Failed to answer call.',\n            type: 'call'\n          }\n          // Go back to the redux level.\n          reject({ error, callId })\n        }\n\n        // Callback provided to FCS' initMedia\n        function mediaSuccess () {\n          log.info('Call media initialized successfully.')\n          log.debug('Answering call with FCS options', {\n            isVideoEnabled: options.isVideoEnabled,\n            isAudioEnabled: options.isAudioEnabled,\n            videoResolution: options.videoResolution,\n            sendInitialVideo: options.sendInitialVideo\n          })\n\n          call.answer(answerSuccess, answerFailure, options.sendInitialVideo, options.videoResolution, {\n            isAudioEnabled: options.isAudioEnabled,\n            isVideoEnabled: options.isVideoEnabled,\n            customParameters: options.customParameters\n          })\n        }\n\n        // Callback provided to FCS' initMedia\n        function mediaFailure (errorCode) {\n          const error = processMediaError(errorCode)\n          if (error.code === fcs.call.MediaErrors.NO_SCREENSHARING_WARNING) {\n            // This is not a failure case, just a warning.\n            log.warn('Media initialized, but could not detect extension for screensharing.')\n            mediaSuccess()\n          } else {\n            log.debug('Call media failed to initialize. Check media support.', error)\n            error.type = 'media'\n            reject({ error, options })\n          }\n        }\n\n        // Options specifically for fcs.call.initMedia.\n        const mediaOptions = {\n          // TODO: Let default options be passed-in to plugin/shim.\n          remoteVideoContainer: options.remoteVideoContainer,\n          localVideoContainer: options.localVideoContainer\n        }\n\n        log.debug('Initializing call media.', mediaOptions)\n        // Start by calling FCS' initMedia.\n        // Then go into the shim's success / failure callback.\n        // Then we go to the middleware's success / failure callback.\n        // TODO: Don't call this directly here; use the api.initMedia function.\n        //      Change it when the middleware is refactored into sagas.\n        fcs.call.initMedia(mediaSuccess, mediaFailure, mediaOptions)\n      })\n    },\n\n    /**\n     * Ignore an incoming call.\n     * @method ignoreCall\n     * @param  {string}   callId FCS id of the call to ignore.\n     * @return {Promise}\n     */\n    ignoreCall (callId) {\n      return new Promise(function (resolve, reject) {\n        function ignoreSuccess () {\n          log.info('Successfully ignored call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n\n        function ignoreFailure (error) {\n          log.info('Failed to ignore call.')\n          // Go back to the redux level.\n          reject({ error, callId })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.ignore(ignoreSuccess, ignoreFailure)\n        } else {\n          reject({ callId, error: 'Call not found. ' })\n        }\n      })\n    },\n\n    /**\n     * Reject an incoming call.\n     * @method rejectCall\n     * @param  {string}   callId FCS id of the call to reject.\n     * @return {Promise}\n     */\n    rejectCall (callId) {\n      return new Promise(function (resolve, reject) {\n        function rejectSuccess () {\n          log.info('Successfully rejected call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n\n        function rejectFailure (error) {\n          log.info('Failed to reject call.')\n          // Go back to the redux level.\n          reject({ error, callId })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.reject(rejectSuccess, rejectFailure)\n        } else {\n          reject({ callId, error: 'Call not found. ' })\n        }\n      })\n    },\n\n    /**\n     * Ends a call.\n     * @method endCall\n     * @param  {string} callId Id of the call to end.\n     * @return {Promise}\n     */\n    endCall (callId) {\n      return new Promise(function (resolve, reject) {\n        function endSuccess () {\n          log.info('Successfully ended call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function endFailure (error) {\n          log.info('Failed to end call.')\n          // Go back to the redux level.\n          reject({ error, callId })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.end(endSuccess, endFailure)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /** Mutes a call.\n     * @method muteCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    muteCall (callId) {\n      return new Promise(function (resolve, reject) {\n        var call = getInternalCall(callId)\n        if (call) {\n          // FCS' mute function does not take callbacks.\n          call.mute()\n          log.info('Call muted.')\n          resolve({ callId })\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Unmutes a call.\n     * @method unMuteCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    unMuteCall (callId) {\n      return new Promise(function (resolve, reject) {\n        var call = getInternalCall(callId)\n        if (call) {\n          // FCS' unmute function does not take callbacks.\n          call.unmute()\n          log.info('Call unmuted.')\n          resolve({ callId })\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Silences a call.\n     * @method silenceCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    silenceCall (callId) {\n      return new Promise(function (resolve, reject) {\n        var call = getInternalCall(callId)\n        if (call) {\n          // FCS' silence function does not take callbacks.\n          call.silence()\n          log.info('Call silenced.')\n          resolve({ callId })\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Unsilences a call.\n     * @method unSilenceCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    unSilenceCall (callId) {\n      return new Promise(function (resolve, reject) {\n        var call = getInternalCall(callId)\n        if (call) {\n          // FCS' unsilence function does not take callbacks.\n          call.unsilence()\n          log.info('Call unsilenced.')\n          resolve({ callId })\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Gets custom parameters of call.\n     * @method getCustomParameters\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Array.<{name: string, value:string}>} Custom parameters of the call.\n     */\n    getCustomParameters (callId) {\n      const call = getInternalCall(callId)\n      if (call) {\n        return call.getCustomParameters()\n      }\n    },\n\n    /**\n     * Sets custom parameters of call.\n     * @method setCustomParameters\n     * @param  {string} callId The ID of the call being acted on.\n     * @param  {Array.<{name: string, value:string}>} customParameters Custom parameters for the call.\n     */\n    setCustomParameters (callId, customParameters) {\n      const call = getInternalCall(callId)\n      if (call) {\n        call.setCustomParameters(customParameters)\n      }\n    },\n\n    /**\n     * Starts video for a call.\n     * @method startVideo\n     * @param  {string} callId The ID of the call being acted on.\n     * @param  {Object} params\n     * @param  {Object} params.videoResolution\n     *  @return {Promise}\n     */\n    startVideo (callId, params) {\n      return new Promise(function (resolve, reject) {\n        function startVideoSuccess () {\n          log.info('Call video started successfully.')\n          // Go back to the redux level.\n          resolve({ callId, params })\n        }\n        function startVideoFailure (error) {\n          log.info('Failed to start call video.')\n          // Go back to the redux level.\n          reject({ callId, params, error })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.videoStart(startVideoSuccess, startVideoFailure, params.videoResolution)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Stops video for a call.\n     * @method stopVideo\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    stopVideo (callId) {\n      return new Promise(function (resolve, reject) {\n        function stopVideoSuccess () {\n          log.info('Call video stopped successfully.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function stopVideoFailure (error) {\n          log.info('Failed to stop call video.')\n          // Go back to the redux level.\n          reject({ callId, error })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.videoStop(stopVideoSuccess, stopVideoFailure)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Holds a call.\n     * @method holdCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    holdCall (callId) {\n      return new Promise(function (resolve, reject) {\n        function holdSuccess () {\n          log.info('Successfully held call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function holdFailure (error) {\n          log.info('Failed to hold call.')\n          // Go back to the redux level.\n          reject({ error, callId })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.hold(holdSuccess, holdFailure)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * UnHolds a call.\n     * @method unHoldCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    unHoldCall (callId) {\n      return new Promise(function (resolve, reject) {\n        function unHoldSuccess () {\n          log.info('Successfully unheld call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function unHoldFailure (error) {\n          log.info('Failed to unhold call.')\n          // Go back to the redux level.\n          reject({ error, callId })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.unhold(unHoldSuccess, unHoldFailure)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Starts screensharing.\n     * @param  {string} callId Id of the call being acted on.\n     * @param  {Object} params\n     * @param  {string} params.mediaSourceId Id of the media screen to share.\n     * @param  {number} [params.width=1024] The width of the screen to request.\n     * @param  {number} [params.height=768] The height of the screen to request.\n     * @param  {number} [params.frameRate=15] The number of frames per second to request.\n     * @param  {Function} screensharingStopped Callback function for when media is stopped manually.\n     */\n    startScreenshare (callId, params, screensharingStopped) {\n      return new Promise(function (resolve, reject) {\n        function startScreenshareSuccess () {\n          log.info('Successfully shared screen.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function startScreenshareFailure (error) {\n          log.info('Failed to share screen.')\n          // Go back to the redux level.\n          reject({ callId, params, error })\n        }\n\n        // The mediaSourceId property is required.\n        if (!params.hasOwnProperty('mediaSourceId')) {\n          reject({ callId, error: 'No media source ID provided.' })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.screenSharingStart(startScreenshareSuccess, startScreenshareFailure, screensharingStopped, params)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Stops screensharing.\n     * @param  {string} callId Id of the call being acted on.\n     */\n    stopScreenshare (callId) {\n      return new Promise(function (resolve, reject) {\n        function stopScreenshareSuccess () {\n          log.info('Successfully stopped screenshare.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function stopScreenshareFailure (error) {\n          log.info('Failed to stop screenshare.')\n          // Go back to the redux level.\n          reject({ callId, error })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.screenSharingStop(stopScreenshareSuccess, stopScreenshareFailure)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Sends a DTMF tone over a call.\n     * @method sendDTMF\n     * @param  {string} callId The ID of the call being acted on.\n     * @param {string} tone DTMF tone to send.\n     * @return {Promise}\n     */\n    sendDTMF (callId, tone) {\n      return new Promise(function (resolve, reject) {\n        var call = getInternalCall(callId)\n        if (call) {\n          // FCS' sendDTMF does not take callbacks.\n          call.sendDTMF(tone)\n          resolve()\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Explicitly sends custom parameters of a call.\n     * @method sendCustomParameters\n     * @param  {string} callId The ID of the call being acted on.\n     * @return {Promise}\n     */\n    sendCustomParameters (callId) {\n      return new Promise(function (resolve, reject) {\n        var call = getInternalCall(callId)\n\n        function sendCustomParametersSuccess () {\n          log.info('Successfully sent custom parameters.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function sendCustomParametersFailure (error) {\n          log.info('Failed to send custom parameters.')\n          // Go back to the redux level.\n          reject({ callId, error })\n        }\n\n        if (call) {\n          // FCS' sendCustomParameters.\n          call.sendCustomParameters(sendCustomParametersSuccess, sendCustomParametersFailure)\n        } else {\n          reject({ callId, error: 'Call not found.' })\n        }\n      })\n    },\n\n    /**\n     * Forwards a call to another user.\n     * @method forwardCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @param  {string} destination Full user ID of another user.\n     * @return {Promise}\n     */\n    forwardCall (callId, destination) {\n      return new Promise(function (resolve, reject) {\n        function forwardSuccess () {\n          log.info('Successfully forwarded call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function forwardFailure (errorCode) {\n          log.info('Failed to forward call.')\n          // Go back to the redux level.\n          const error = {\n            code: errorCode,\n            message: 'Failed to forward call.'\n          }\n          reject({ callId, error })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.forward(destination, forwardSuccess, forwardFailure)\n        } else {\n          reject({ callId, error: { message: 'Failed to forward call.' } })\n        }\n      })\n    },\n\n    /**\n     * Transfers a call to another user.\n     * @method directTransfer\n     * @param  {string} callId The ID of the call being acted on.\n     * @param  {string} destination Full user ID of another user.\n     * @return {Promise}\n     */\n    directTransfer (callId, destination) {\n      return new Promise(function (resolve, reject) {\n        function transferSuccess () {\n          log.info('Successfully transferred call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function transferFailure (errorCode) {\n          log.info('Failed to transfer call.')\n          // Go back to the redux level.\n          const error = {\n            code: errorCode,\n            message: 'Failed to transfer call.'\n          }\n          reject({ callId, error })\n        }\n\n        var call = getInternalCall(callId)\n        if (call) {\n          call.directTransfer(destination, transferSuccess, transferFailure)\n        } else {\n          reject({ callId, error: { message: 'Failed to transfer call.' } })\n        }\n      })\n    },\n\n    /**\n     * Transfers a call to another call.\n     * @method consultativeTransfer\n     * @param  {string} callId The ID of the call being acted on.\n     * @param  {string} destination The callId of another call.\n     * @return {Promise}\n     */\n    consultativeTransfer (callId, destination) {\n      return new Promise(function (resolve, reject) {\n        function transferSuccess () {\n          log.info('Successfully transferred call.')\n          // Go back to the redux level.\n          resolve({ callId })\n        }\n        function transferFailure (errorCode) {\n          log.info('Failed to transfer call.')\n          // Go back to the redux level.\n          const error = {\n            code: errorCode,\n            message: 'Failed to transfer call.'\n          }\n          reject({ callId, error })\n        }\n\n        var call = getInternalCall(callId)\n        var dest = getInternalCall(destination)\n        if (call && dest) {\n          call.consultativeTransfer(dest.getId(), transferSuccess, transferFailure)\n        } else if (!call) {\n          reject({ callId, error: { message: 'Invalid call id.' } })\n        } else {\n          reject({ callId, error: { message: 'Invalid destination.' } })\n        }\n      })\n    },\n\n    /**\n     * Joins a call with another call.\n     * @method joinCall\n     * @param  {string} callId The ID of the call being acted on.\n     * @param  {string} destination The callId of another call.\n     * @param  {Object} options - Media options.\n     * @return {Promise}\n     */\n    joinCall (callId, destination, options) {\n      return new Promise(function (resolve, reject) {\n        function joinSuccess (joinedCall) {\n          log.info('Successfully joined call.')\n          // Create our own call ID for storing in state.\n          const joinedCallId = uuidV4()\n          ongoingCalls[joinedCallId] = joinedCall\n\n          // Register for state changes.\n          joinedCall.onStateChange = onStateChange(joinedCallId)\n          joinedCall.onMediaStateChange = onMediaStateChange(joinedCallId)\n\n          // Go back to the redux level.\n          resolve({\n            callId: joinedCallId,\n            joinedCalls: [callId, destination],\n            callState: FCS_CALL_STATES[joinedCall.callState]\n          })\n        }\n        function joinFailure (errorCode) {\n          log.info('Failed to join call.')\n          // Go back to the redux level.\n          const error = {\n            code: errorCode,\n            message: 'Failed to join call.'\n          }\n          reject({\n            callId,\n            joinedCalls: [callId, destination],\n            error\n          })\n        }\n\n        initializeMedia(options).then(function (result) {\n          if (result.code === 0 || result.code === fcs.call.MediaErrors.NO_SCREENSHARING_WARNING) {\n            // Media initialized, perform the join operation.\n            var call = getInternalCall(callId)\n            var dest = getInternalCall(destination)\n            if (call && dest) {\n              const withVideo = call.localVideo || dest.localVideo\n              call.join(dest, joinSuccess, joinFailure, withVideo)\n            } else if (!call) {\n              reject({ callId, error: { message: 'Invalid call id.' } })\n            } else {\n              reject({\n                callId: destination,\n                error: { message: 'Invalid destination.' }\n              })\n            }\n          } else {\n            // Failed to initialize media; return an error.\n            reject({\n              callId,\n              error: {\n                message: `Failed to initialize call media: ${result.message}`,\n                type: 'media',\n                code: result.code\n              }\n            })\n          }\n        })\n      })\n    },\n\n    /**\n     * Sets the default devices for FCS to use for new calls.\n     * @method setDefaultDevices\n     * @param  {Object} devices\n     * @return {Promise}\n     */\n    setDefaultDevices (devices) {\n      return new Promise(function (resolve, reject) {\n        function onSpeakerSuccess () {\n          if (devices.speaker) {\n            log.info(`Set selected speaker as default: ${devices.speaker}.`)\n          }\n          if (devices.camera) {\n            fcs.call.setSelectedCameraId(devices.camera)\n            log.info(`Set selected camera as default: ${devices.camera}.`)\n          }\n          if (devices.microphone) {\n            fcs.call.setSelectedMicrophoneId(devices.microphone)\n            log.info(`Set selected microphone as default: ${devices.microphone}.`)\n          }\n          resolve(devices)\n        }\n        function onSpeakerFailure (error) {\n          log.info('Failed to set default speaker.', error)\n          reject({\n            device: 'speaker',\n            deviceId: devices.speaker,\n            error\n          })\n        }\n\n        // Only setSelectedSpeakerId has callbacks, so do that one first.\n        if (devices.speaker) {\n          fcs.call.setSelectedSpeakerId(devices.speaker, onSpeakerSuccess, onSpeakerFailure)\n        } else {\n          // If we aren't setting the speaker, go straight to the success callback.\n          onSpeakerSuccess()\n        }\n      })\n    },\n\n    /**\n     * Prompts for permission to use media.\n     * @method promptUserMedia\n     * @param  {Object} params\n     * @param  {boolean} params.video\n     * @param  {boolean} params.audio\n     *  @return {Promise}\n     */\n    promptUserMedia (params) {\n      return new Promise(function (resolve, reject) {\n        function promptUserMediaSuccess () {\n          // Go back to the redux level.\n          log.info('Media permissions granted.')\n          resolve({ params })\n        }\n\n        function promptUserMediaFailure (error) {\n          // Go back to the redux level.\n          log.info('Media permissions not granted.', error)\n\n          // Convert the callShim error object into a BasicError.\n          const basicError = new BasicError({\n            message: 'Media permissions not granted.',\n            code: error\n          })\n\n          reject({ params, basicError })\n        }\n        fcs.call.getUserMedia(promptUserMediaSuccess, promptUserMediaFailure, params)\n      })\n    },\n\n    /**\n     * Changes speaker for on-going calls.\n     * @method changeSpeaker\n     * @param  {string} speakerId\n     * @return {Promise}\n     */\n    changeSpeaker (speakerId) {\n      return new Promise(function (resolve, reject) {\n        function changeSpeakerSuccess () {\n          log.info('Successfully changed speaker.')\n          resolve(speakerId)\n        }\n\n        function changeSpeakerFailure (error) {\n          log.info('Failed to change speaker.', error)\n          reject({ speakerId, error })\n        }\n\n        if (speakerId) {\n          fcs.call.changeSpeaker(speakerId, changeSpeakerSuccess, changeSpeakerFailure)\n        } else {\n          reject({ error: 'Invalid speaker id provided.' })\n        }\n      })\n    },\n\n    /**\n     * Changes the camera/microphone used for the specified call.\n     * @method changeInputDevices\n     * @param  {string} callId\n     * @return {Promise}\n     */\n    changeInputDevices (callId) {\n      return new Promise(function (resolve, reject) {\n        function changeDevicesSuccess () {\n          resolve(callId)\n        }\n        function changeDevicesFailure (fcsError) {\n          reject({ callId, error: fcsError })\n        }\n\n        const call = getInternalCall(callId)\n        if (call) {\n          /*\n           * FCS' API says the first parameter should be { call }, but internally\n           *    FCS checks for `params.callid` as if the first parameter is just\n           *    `call`. Change how the shim behaves to \"fix\" this, instead of\n           *    changing FCS, to prevent any other issues.\n           */\n          fcs.call.changeDevices({ callid: call.getId() }, changeDevicesSuccess, changeDevicesFailure)\n        } else {\n          reject({ callId, error: 'Call not found. ' })\n        }\n      })\n    },\n\n    /**\n     * Starts the local video stream and displays it to the user.\n     * @method startLocalVideo\n     * @param  {HTMLElement} container The container to use for local video.\n     * @return {Promise}\n     */\n    startLocalVideo (container) {\n      return new Promise(function (resolve, reject) {\n        function getUserMediaSuccess (streamInfo) {\n          // Render the local video into the container.\n          fcs.call.createStreamRenderer(streamInfo.stream, container, {\n            audio: false\n          })\n          // Store the local stream's info.\n          localStream = {\n            stream: streamInfo,\n            container: container\n          }\n          log.info('Started local video stream.')\n          resolve(container)\n        }\n        function getUserMediaFailure () {\n          log.info('Failed to start local video.')\n          const error = {\n            message: 'Could not start local video.',\n            type: 'video'\n          }\n          reject({ error })\n        }\n\n        if (localStream) {\n          log.info('Local video is already being displayed.')\n          const error = {\n            message: 'Local video is already being displayed. Stop local video before re-starting.',\n            type: 'generic'\n          }\n          reject({ error })\n          return\n        } else if (!container) {\n          const error = {\n            message: 'No video container provided; cannot start local video.',\n            type: 'generic'\n          }\n          reject({ error })\n          return\n        }\n\n        // Re-use the callShim's initMedia functionality.\n        initializeMedia().then(function (result) {\n          if (result.code === 0 || result.code === fcs.call.MediaErrors.NO_SCREENSHARING_WARNING) {\n            // Get the local user video media.\n            fcs.call.getUserMedia(getUserMediaSuccess, getUserMediaFailure, {\n              audio: false,\n              video: true\n            })\n          } else {\n            // initMedia error.\n            const error = {\n              message: 'Could not initialize media. Please check initMedia.',\n              type: 'media'\n            }\n            reject({ error })\n          }\n        })\n      })\n    },\n\n    /**\n     * Stops the local video stream created in `startLocalVideo`.\n     * @method stopLocalVideo\n     * @return {Promise}\n     */\n    stopLocalVideo () {\n      return new Promise(function (resolve, reject) {\n        // Only act on the stream that was started earlier via `startLocalVideo`.\n        if (localStream) {\n          fcs.call.disposeStreamRenderer(localStream.container)\n          fcs.call.removeStreamById(localStream.stream.id)\n          // Remove the callShim's 'flag' for local video.\n          localStream = null\n          log.info('Local video stream stopped.')\n          resolve()\n        } else {\n          log.info('No local video stream to stop.')\n          reject({\n            message: 'No on-going local stream to stop.'\n          })\n        }\n      })\n    },\n\n    /**\n     * Attempts to initialize media.\n     * @method initMedia\n     * @param {Object} options FCS options for initMedia.\n     * @return {Promise}\n     */\n    initMedia: initializeMedia,\n\n    /**\n     * Creates a local bridge for audio calls.\n     * @method createLocalAudioBridge\n     * @param  {string} bridgeId\n     * @param  {Object} options\n     * @return {Promise}\n     */\n    createLocalAudioBridge (bridgeId) {\n      return new Promise(function (resolve, reject) {\n        function createBridgeSuccess (bridge) {\n          log.debug('Successfully created bridge.', bridgeId)\n\n          /*\n           * Callback method allows FCS to send updated call lists\n           * after calls are added or removed, providing us with the opportunity\n           * to ensure the bridge's state is up to date in the SDK\n           *\n           * @param {Array} calls\n           */\n          bridge.onCallsChange = function (fcsCalls) {\n            const calls = getUnifiedSdkCalls(fcsCalls)\n            api.onBridgeCallsChanged(bridgeId, calls)\n          }\n\n          // Save an internal reference to the bridge.\n          audioBridges[bridgeId] = bridge\n          resolve()\n        }\n\n        function createBridgeFailure () {\n          log.debug('Failed to create bridge.', bridgeId)\n          // Error is either that the FCS media isn't set up (ie. user\n          //      not logged in) or feature not supported in browser.\n          const error = new BasicError({\n            message: 'Feature not supported by browser.',\n            code: bridgeCodes.NOT_SUPPORTED\n          })\n          reject(error)\n        }\n\n        fcs.call.createLocalAudioBridge(createBridgeSuccess, createBridgeFailure)\n      })\n    },\n\n    /**\n     * Closes an existing audio bridge.\n     * @method closeAudioBridge\n     * @param  {string} bridgeId\n     * @return {Promise}\n     */\n    closeAudioBridge (bridgeId) {\n      return new Promise(function (resolve, reject) {\n        const bridge = getInternalBridge(bridgeId)\n        if (bridge) {\n          bridge.close()\n          resolve()\n        } else {\n          const error = new BasicError({\n            message: 'Provided ID does not match an existing bridge.',\n            code: bridgeCodes.INVALID_INPUT\n          })\n          reject(error)\n        }\n      })\n    },\n\n    addCallToBridge (bridgeId, callId) {\n      return new Promise(function (resolve, reject) {\n        function addCallSuccess () {\n          log.debug('Successfully added call to bridge.', bridgeId)\n          resolve()\n        }\n\n        function addCallFailure (errCode) {\n          log.debug('Failed to add call to bridge.', errCode)\n          let error\n          if (errCode === 29) {\n            // FCS' \"entry already exists\" code.\n            error = new BasicError({\n              message: 'Call already added to bridge.',\n              code: bridgeCodes.ALREADY_EXISTS\n            })\n          } else if (errCode === 24) {\n            // FCS' \"media not found\" code.\n            error = new BasicError({\n              message: 'Failed to find media.',\n              code: bridgeCodes.MEDIA_NOT_FOUND\n            })\n          } else if (errCode === 3) {\n            // FCS' \"state\" code.\n            error = new BasicError({\n              message: 'Invalid state.',\n              code: bridgeCodes.INVALID_STATE\n            })\n          } else {\n            error = new BasicError({\n              message: 'An unknown error occurred.',\n              code: bridgeCodes.UNKNOWN_ERROR\n            })\n          }\n          reject(error)\n        }\n\n        const bridge = getInternalBridge(bridgeId)\n        const call = getInternalCall(callId)\n\n        if (bridge && call) {\n          bridge.add(call, addCallSuccess, addCallFailure)\n        } else {\n          const error = new BasicError({\n            message: 'A provided ID did not match an existing bridge and/or call.',\n            code: bridgeCodes.INVALID_INPUT\n          })\n          reject(error)\n        }\n      })\n    },\n\n    /**\n     * Removes a call from the specified audio bridge.\n     * @method removeCallFromBridge\n     */\n    removeCallFromBridge (bridgeId, callId) {\n      return new Promise(function (resolve, reject) {\n        function removeCallSuccess () {\n          log.debug('Successfully removed call from bridge.', bridgeId)\n          resolve()\n        }\n        function removeCallFailure (err) {\n          log.debug('Failed to remove call from bridge.', err)\n          let error\n          if (err === 22) {\n            // FCS' \"invalid parameter\" code.\n            error = new BasicError({\n              message: 'Specified call not in bridge.',\n              code: bridgeCodes.NOT_FOUND\n            })\n          } else {\n            error = new BasicError({\n              message: 'An unknown error occurred.',\n              code: bridgeCodes.UNKNOWN_ERROR\n            })\n          }\n          reject(error)\n        }\n\n        const bridge = getInternalBridge(bridgeId)\n        const call = getInternalCall(callId)\n\n        if (bridge && call) {\n          bridge.remove(call, removeCallSuccess, removeCallFailure)\n        } else {\n          const error = new BasicError({\n            message: 'A provided ID did not match an existing bridge and/or call.',\n            code: bridgeCodes.INVALID_INPUT\n          })\n          reject(error)\n        }\n      })\n    },\n\n    /**\n     * Mutes local audio for all calls in the bridge.\n     * @method muteAudioBridge\n     */\n    muteAudioBridge (bridgeId) {\n      return new Promise(function (resolve, reject) {\n        const bridge = getInternalBridge(bridgeId)\n        if (bridge) {\n          bridge.muteLocalAudio()\n          resolve()\n        } else {\n          const error = new BasicError({\n            message: 'Provided ID does not match an existing bridge.',\n            code: bridgeCodes.INVALID_INPUT\n          })\n          reject(error)\n        }\n      })\n    },\n\n    /**\n     * Unmutes local audio for all calls in the bridge.\n     * @method unmuteAudioBridge\n     */\n    unmuteAudioBridge (bridgeId) {\n      return new Promise(function (resolve, reject) {\n        const bridge = getInternalBridge(bridgeId)\n        if (bridge) {\n          bridge.unmuteLocalAudio()\n          resolve()\n        } else {\n          const error = new BasicError({\n            message: 'Provided ID does not match an existing bridge.',\n            code: bridgeCodes.INVALID_INPUT\n          })\n          reject(error)\n        }\n      })\n    },\n\n    /**\n     * Silences remote audio for all calls in the bridge.\n     * @method silenceAudioBridge\n     */\n    silenceAudioBridge (bridgeId) {\n      return new Promise(function (resolve, reject) {\n        const bridge = getInternalBridge(bridgeId)\n        if (bridge) {\n          bridge.silenceRemoteAudio()\n          resolve()\n        } else {\n          const error = new BasicError({\n            message: 'Provided ID does not match an existing bridge.',\n            code: bridgeCodes.INVALID_INPUT\n          })\n          reject(error)\n        }\n      })\n    },\n\n    /**\n     * Unsilences remote audio for all calls in the bridge.\n     * @method unsilenceAudioBridge\n     */\n    unsilenceAudioBridge (bridgeId) {\n      return new Promise(function (resolve, reject) {\n        const bridge = getInternalBridge(bridgeId)\n        if (bridge) {\n          bridge.unsilenceRemoteAudio()\n          resolve()\n        } else {\n          const error = new BasicError({\n            message: 'Provided ID does not match an existing bridge.',\n            code: bridgeCodes.INVALID_INPUT\n          })\n          reject(error)\n        }\n      })\n    }\n  }\n  return api\n}\n","import Bottle from 'bottlejs';\nimport loadModule from './src/loadModule';\n\n// Modules\nimport coreModule from './src/js/module';\nimport rccCallModule from './src/js/call/rcc/module';\nimport wamCallModule from './src/js/call/wam/module';\nimport callModule from './src/js/call/module';\nimport webRtcModule from './src/js/webrtc/module';\n\n\n\nconst modules = [\n    // Common modules, needed in all scenarios\n    coreModule,\n\n    // Feature modules\n    callModule,\n\n    // Modules needed for calls.\n    rccCallModule,\n    wamCallModule,\n\n    // WebRTC Adapter module.\n    webRtcModule\n];\n\n\nexport function createFcs() {\n    const bottle = new Bottle();\n\n    // Load all modules into bottle.\n    modules.forEach(loadModule.bind(bottle));\n\n    const container = bottle.container;\n    var fcs = bottle.container.Core;\n\n    // Build the namespaces.\n    fcs.logManager = container.LogManager;\n    fcs.notification = container.Notification;\n    fcs.call = container.Call;\n\n    // Convenience access to these.\n    fcs.NotificationCallbacks = container.NotificationCallbacks;\n    fcs.GlobalBroadcaster = container.GlobalBroadcaster;\n\n    // Run any initialization code setup by the modules.\n    bottle.resolve(container);\n\n    return fcs;\n}\n",";(function(undefined) {\n    'use strict';\n    /**\n     * BottleJS v1.7.2 - 2019-02-07\n     * A powerful dependency injection micro container\n     *\n     * Copyright (c) 2019 Stephen Young\n     * Licensed MIT\n     */\n    var Bottle;\n    \n    /**\n     * String constants\n     */\n    var DELIMITER = '.';\n    var FUNCTION_TYPE = 'function';\n    var STRING_TYPE = 'string';\n    var GLOBAL_NAME = '__global__';\n    var PROVIDER_SUFFIX = 'Provider';\n    \n    /**\n     * Unique id counter;\n     *\n     * @type Number\n     */\n    var id = 0;\n    \n    /**\n     * Local slice alias\n     *\n     * @type Functions\n     */\n    var slice = Array.prototype.slice;\n    \n    /**\n     * Iterator used to walk down a nested object.\n     *\n     * If Bottle.config.strict is true, this method will throw an exception if it encounters an\n     * undefined path\n     *\n     * @param Object obj\n     * @param String prop\n     * @return mixed\n     * @throws Error if Bottle is unable to resolve the requested service.\n     */\n    var getNested = function getNested(obj, prop) {\n        var service = obj[prop];\n        if (service === undefined && Bottle.config.strict) {\n            throw new Error('Bottle was unable to resolve a service.  `' + prop + '` is undefined.');\n        }\n        return service;\n    };\n    \n    /**\n     * Get a nested bottle. Will set and return if not set.\n     *\n     * @param String name\n     * @return Bottle\n     */\n    var getNestedBottle = function getNestedBottle(name) {\n        var bottle;\n        if (!this.nested[name]) {\n            bottle = Bottle.pop();\n            this.nested[name] = bottle;\n            this.factory(name, function SubProviderFactory() {\n                return bottle.container;\n            });\n        }\n        return this.nested[name];\n    };\n    \n    /**\n     * Get a service stored under a nested key\n     *\n     * @param String fullname\n     * @return Service\n     */\n    var getNestedService = function getNestedService(fullname) {\n        return fullname.split(DELIMITER).reduce(getNested, this);\n    };\n    \n    /**\n     * Function used by provider to set up middleware for each request.\n     *\n     * @param Number id\n     * @param String name\n     * @param Object instance\n     * @param Object container\n     * @return void\n     */\n    var applyMiddleware = function applyMiddleware(middleware, name, instance, container) {\n        var descriptor = {\n            configurable : true,\n            enumerable : true\n        };\n        if (middleware.length) {\n            descriptor.get = function getWithMiddlewear() {\n                var index = 0;\n                var next = function nextMiddleware(err) {\n                    if (err) {\n                        throw err;\n                    }\n                    if (middleware[index]) {\n                        middleware[index++](instance, next);\n                    }\n                };\n                next();\n                return instance;\n            };\n        } else {\n            descriptor.value = instance;\n            descriptor.writable = true;\n        }\n    \n        Object.defineProperty(container, name, descriptor);\n    \n        return container[name];\n    };\n    \n    /**\n     * Register middleware.\n     *\n     * @param String name\n     * @param Function func\n     * @return Bottle\n     */\n    var middleware = function middleware(fullname, func) {\n        var parts, name;\n        if (typeof fullname === FUNCTION_TYPE) {\n            func = fullname;\n            fullname = GLOBAL_NAME;\n        }\n    \n        parts = fullname.split(DELIMITER);\n        name = parts.shift();\n        if (parts.length) {\n            getNestedBottle.call(this, name).middleware(parts.join(DELIMITER), func);\n        } else {\n            if (!this.middlewares[name]) {\n                this.middlewares[name] = [];\n            }\n            this.middlewares[name].push(func);\n        }\n        return this;\n    };\n    \n    /**\n     * Used to process decorators in the provider\n     *\n     * @param Object instance\n     * @param Function func\n     * @return Mixed\n     */\n    var reducer = function reducer(instance, func) {\n        return func(instance);\n    };\n    \n    \n    /**\n     * Get decorators and middleware including globals\n     *\n     * @return array\n     */\n    var getWithGlobal = function getWithGlobal(collection, name) {\n        return (collection[name] || []).concat(collection.__global__ || []);\n    };\n    \n    \n    /**\n     * Create the provider properties on the container\n     *\n     * @param String name\n     * @param Function Provider\n     * @return Bottle\n     */\n    var createProvider = function createProvider(name, Provider) {\n        var providerName, properties, container, id, decorators, middlewares;\n    \n        id = this.id;\n        container = this.container;\n        decorators = this.decorators;\n        middlewares = this.middlewares;\n        providerName = name + PROVIDER_SUFFIX;\n    \n        properties = Object.create(null);\n        properties[providerName] = {\n            configurable : true,\n            enumerable : true,\n            get : function getProvider() {\n                var instance = new Provider();\n                delete container[providerName];\n                container[providerName] = instance;\n                return instance;\n            }\n        };\n    \n        properties[name] = {\n            configurable : true,\n            enumerable : true,\n            get : function getService() {\n                var provider = container[providerName];\n                var instance;\n                if (provider) {\n                    // filter through decorators\n                    instance = getWithGlobal(decorators, name).reduce(reducer, provider.$get(container));\n    \n                    delete container[providerName];\n                    delete container[name];\n                }\n                return instance === undefined ? instance : applyMiddleware(getWithGlobal(middlewares, name),\n                    name, instance, container);\n            }\n        };\n    \n        Object.defineProperties(container, properties);\n        return this;\n    };\n    \n    \n    /**\n     * Register a provider.\n     *\n     * @param String fullname\n     * @param Function Provider\n     * @return Bottle\n     */\n    var provider = function provider(fullname, Provider) {\n        var parts, name;\n        parts = fullname.split(DELIMITER);\n        if (this.providerMap[fullname] && parts.length === 1 && !this.container[fullname + PROVIDER_SUFFIX]) {\n            return console.error(fullname + ' provider already instantiated.');\n        }\n        this.originalProviders[fullname] = Provider;\n        this.providerMap[fullname] = true;\n    \n        name = parts.shift();\n    \n        if (parts.length) {\n            getNestedBottle.call(this, name).provider(parts.join(DELIMITER), Provider);\n            return this;\n        }\n        return createProvider.call(this, name, Provider);\n    };\n    \n    /**\n     * Register a factory inside a generic provider.\n     *\n     * @param String name\n     * @param Function Factory\n     * @return Bottle\n     */\n    var factory = function factory(name, Factory) {\n        return provider.call(this, name, function GenericProvider() {\n            this.$get = Factory;\n        });\n    };\n    \n    /**\n     * Private helper for creating service and service factories.\n     *\n     * @param String name\n     * @param Function Service\n     * @return Bottle\n     */\n    var createService = function createService(name, Service, isClass) {\n        var deps = arguments.length > 3 ? slice.call(arguments, 3) : [];\n        var bottle = this;\n        return factory.call(this, name, function GenericFactory() {\n            var serviceFactory = Service; // alias for jshint\n            var args = deps.map(getNestedService, bottle.container);\n    \n            if (!isClass) {\n                return serviceFactory.apply(null, args);\n            }\n            return new (Service.bind.apply(Service, [null].concat(args)))();\n        });\n    };\n    \n    /**\n     * Register a class service\n     *\n     * @param String name\n     * @param Function Service\n     * @return Bottle\n     */\n    var service = function service(name, Service) {\n        return createService.apply(this, [name, Service, true].concat(slice.call(arguments, 2)));\n    };\n    \n    /**\n     * Register a function service\n     */\n    var serviceFactory = function serviceFactory(name, factoryService) {\n        return createService.apply(this, [name, factoryService, false].concat(slice.call(arguments, 2)));\n    };\n    \n    /**\n     * Define a mutable property on the container.\n     *\n     * @param String name\n     * @param mixed val\n     * @return void\n     * @scope container\n     */\n    var defineValue = function defineValue(name, val) {\n        Object.defineProperty(this, name, {\n            configurable : true,\n            enumerable : true,\n            value : val,\n            writable : true\n        });\n    };\n    \n    /**\n     * Iterator for setting a plain object literal via defineValue\n     *\n     * @param Object container\n     * @param string name\n     */\n    var setValueObject = function setValueObject(container, name) {\n        var nestedContainer = container[name];\n        if (!nestedContainer) {\n            nestedContainer = {};\n            defineValue.call(container, name, nestedContainer);\n        }\n        return nestedContainer;\n    };\n    \n    \n    /**\n     * Register a value\n     *\n     * @param String name\n     * @param mixed val\n     * @return Bottle\n     */\n    var value = function value(name, val) {\n        var parts;\n        parts = name.split(DELIMITER);\n        name = parts.pop();\n        defineValue.call(parts.reduce(setValueObject, this.container), name, val);\n        return this;\n    };\n    \n    /**\n     * Define an enumerable, non-configurable, non-writable value.\n     *\n     * @param String name\n     * @param mixed value\n     * @return undefined\n     */\n    var defineConstant = function defineConstant(name, value) {\n        Object.defineProperty(this, name, {\n            configurable : false,\n            enumerable : true,\n            value : value,\n            writable : false\n        });\n    };\n    \n    /**\n     * Register a constant\n     *\n     * @param String name\n     * @param mixed value\n     * @return Bottle\n     */\n    var constant = function constant(name, value) {\n        var parts = name.split(DELIMITER);\n        name = parts.pop();\n        defineConstant.call(parts.reduce(setValueObject, this.container), name, value);\n        return this;\n    };\n    \n    /**\n     * Register decorator.\n     *\n     * @param String fullname\n     * @param Function func\n     * @return Bottle\n     */\n    var decorator = function decorator(fullname, func) {\n        var parts, name;\n        if (typeof fullname === FUNCTION_TYPE) {\n            func = fullname;\n            fullname = GLOBAL_NAME;\n        }\n    \n        parts = fullname.split(DELIMITER);\n        name = parts.shift();\n        if (parts.length) {\n            getNestedBottle.call(this, name).decorator(parts.join(DELIMITER), func);\n        } else {\n            if (!this.decorators[name]) {\n                this.decorators[name] = [];\n            }\n            this.decorators[name].push(func);\n        }\n        return this;\n    };\n    \n    /**\n     * Register a function that will be executed when Bottle#resolve is called.\n     *\n     * @param Function func\n     * @return Bottle\n     */\n    var defer = function defer(func) {\n        this.deferred.push(func);\n        return this;\n    };\n    \n    \n    /**\n     * Immediately instantiates the provided list of services and returns them.\n     *\n     * @param Array services\n     * @return Array Array of instances (in the order they were provided)\n     */\n    var digest = function digest(services) {\n        return (services || []).map(getNestedService, this.container);\n    };\n    \n    /**\n     * Register an instance factory inside a generic factory.\n     *\n     * @param {String} name - The name of the service\n     * @param {Function} Factory - The factory function, matches the signature required for the\n     * `factory` method\n     * @return Bottle\n     */\n    var instanceFactory = function instanceFactory(name, Factory) {\n        return factory.call(this, name, function GenericInstanceFactory(container) {\n            return {\n                instance : Factory.bind(Factory, container)\n            };\n        });\n    };\n    \n    /**\n     * A filter function for removing bottle container methods and providers from a list of keys\n     */\n    var byMethod = function byMethod(name) {\n        return !/^\\$(?:decorator|register|list)$|Provider$/.test(name);\n    };\n    \n    /**\n     * List the services registered on the container.\n     *\n     * @param Object container\n     * @return Array\n     */\n    var list = function list(container) {\n        return Object.keys(container || this.container || {}).filter(byMethod);\n    };\n    \n    /**\n     * Named bottle instances\n     *\n     * @type Object\n     */\n    var bottles = {};\n    \n    /**\n     * Get an instance of bottle.\n     *\n     * If a name is provided the instance will be stored in a local hash.  Calling Bottle.pop multiple\n     * times with the same name will return the same instance.\n     *\n     * @param String name\n     * @return Bottle\n     */\n    var pop = function pop(name) {\n        var instance;\n        if (typeof name === STRING_TYPE) {\n            instance = bottles[name];\n            if (!instance) {\n                bottles[name] = instance = new Bottle();\n                instance.constant('BOTTLE_NAME', name);\n            }\n            return instance;\n        }\n        return new Bottle();\n    };\n    \n    /**\n     * Clear all named bottles.\n     */\n    var clear = function clear(name) {\n        if (typeof name === STRING_TYPE) {\n            delete bottles[name];\n        } else {\n            bottles = {};\n        }\n    };\n    \n    /**\n     * Register a service, factory, provider, or value based on properties on the object.\n     *\n     * properties:\n     *  * Obj.$name   String required ex: `'Thing'`\n     *  * Obj.$type   String optional 'service', 'factory', 'provider', 'value'.  Default: 'service'\n     *  * Obj.$inject Mixed  optional only useful with $type 'service' name or array of names\n     *  * Obj.$value  Mixed  optional Normally Obj is registered on the container.  However, if this\n     *                       property is included, it's value will be registered on the container\n     *                       instead of the object itsself.  Useful for registering objects on the\n     *                       bottle container without modifying those objects with bottle specific keys.\n     *\n     * @param Function Obj\n     * @return Bottle\n     */\n    var register = function register(Obj) {\n        var value = Obj.$value === undefined ? Obj : Obj.$value;\n        return this[Obj.$type || 'service'].apply(this, [Obj.$name, value].concat(Obj.$inject || []));\n    };\n    \n    /**\n     * Deletes providers from the map and container.\n     *\n     * @param String name\n     * @return void\n     */\n    var removeProviderMap = function resetProvider(name) {\n        delete this.providerMap[name];\n        delete this.container[name];\n        delete this.container[name + PROVIDER_SUFFIX];\n    };\n    \n    /**\n     * Resets providers on a bottle instance. If 'names' array is provided, only the named providers will be reset.\n     *\n     * @param Array names\n     * @return void\n     */\n    var resetProviders = function resetProviders(names) {\n        var tempProviders = this.originalProviders;\n        var shouldFilter = Array.isArray(names);\n    \n        Object.keys(this.originalProviders).forEach(function resetProvider(originalProviderName) {\n            if (shouldFilter && names.indexOf(originalProviderName) === -1) {\n                return;\n            }\n            var parts = originalProviderName.split(DELIMITER);\n            if (parts.length > 1) {\n                parts.forEach(removeProviderMap, getNestedBottle.call(this, parts[0]));\n            }\n            removeProviderMap.call(this, originalProviderName);\n            this.provider(originalProviderName, tempProviders[originalProviderName]);\n        }, this);\n    };\n    \n    \n    /**\n     * Execute any deferred functions\n     *\n     * @param Mixed data\n     * @return Bottle\n     */\n    var resolve = function resolve(data) {\n        this.deferred.forEach(function deferredIterator(func) {\n            func(data);\n        });\n    \n        return this;\n    };\n    \n    \n    /**\n     * Bottle constructor\n     *\n     * @param String name Optional name for functional construction\n     */\n    Bottle = function Bottle(name) {\n        if (!(this instanceof Bottle)) {\n            return Bottle.pop(name);\n        }\n    \n        this.id = id++;\n    \n        this.decorators = {};\n        this.middlewares = {};\n        this.nested = {};\n        this.providerMap = {};\n        this.originalProviders = {};\n        this.deferred = [];\n        this.container = {\n            $decorator : decorator.bind(this),\n            $register : register.bind(this),\n            $list : list.bind(this)\n        };\n    };\n    \n    /**\n     * Bottle prototype\n     */\n    Bottle.prototype = {\n        constant : constant,\n        decorator : decorator,\n        defer : defer,\n        digest : digest,\n        factory : factory,\n        instanceFactory: instanceFactory,\n        list : list,\n        middleware : middleware,\n        provider : provider,\n        resetProviders : resetProviders,\n        register : register,\n        resolve : resolve,\n        service : service,\n        serviceFactory : serviceFactory,\n        value : value\n    };\n    \n    /**\n     * Bottle static\n     */\n    Bottle.pop = pop;\n    Bottle.clear = clear;\n    Bottle.list = list;\n    \n    /**\n     * Global config\n     */\n    Bottle.config = {\n        strict : false\n    };\n    \n    /**\n     * Exports script adapted from lodash v2.4.1 Modern Build\n     *\n     * @see http://lodash.com/\n     */\n    \n    /**\n     * Valid object type map\n     *\n     * @type Object\n     */\n    var objectTypes = {\n        'function' : true,\n        'object' : true\n    };\n    \n    (function exportBottle(root) {\n    \n        /**\n         * Free variable exports\n         *\n         * @type Function\n         */\n        var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n    \n        /**\n         * Free variable module\n         *\n         * @type Object\n         */\n        var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n    \n        /**\n         * CommonJS module.exports\n         *\n         * @type Function\n         */\n        var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n    \n        /**\n         * Free variable `global`\n         *\n         * @type Object\n         */\n        var freeGlobal = objectTypes[typeof global] && global;\n        if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n            root = freeGlobal;\n        }\n    \n        /**\n         * Export\n         */\n        if (typeof define === FUNCTION_TYPE && typeof define.amd === 'object' && define.amd) {\n            root.Bottle = Bottle;\n            define(function() { return Bottle; });\n        } else if (freeExports && freeModule) {\n            if (moduleExports) {\n                (freeModule.exports = Bottle).Bottle = Bottle;\n            } else {\n                freeExports.Bottle = Bottle;\n            }\n        } else {\n            root.Bottle = Bottle;\n        }\n    }((objectTypes[typeof window] && window) || this));\n    \n}.call(this));","/**\n * Mixin function for loading a module into a factory container. The function expects 'this' to be bound\n * to the container that supports an interface like so:\n * ```\n * {\n *     factory: (name: string, factoryFunction: (container) => any) => void\n *     defer: ((data: any) => any) => void\n *  }\n *  ```\n *\n *  @param {Object} module An where the keys are the name of services, and the values are factory functions. Also supports\n *                         a special key `$defer` that allows registering deffered functions.\n */\nexport default function loadModule(module) {\n    for (let service in module) {\n        if (module.hasOwnProperty(service)) {\n            if (service === '$init') {\n                this.defer(module[service]);\n            } else {\n                this.factory(service, module[service]);\n            }\n        }\n    }\n    return this;\n}\n","import {LogManagerImpl} from './logmanager/logManager';\nimport {Utils} from './utils';\nimport {Config} from './config';\nimport {Cache} from './cache';\nimport {SdpParserImpl} from './sdpparser';\nimport {ChallengeManagerFactory} from './challenge';\nimport {CoreImpl} from './core';\nimport {LocaleService} from './locale';\n\nimport httpModule from './http/module';\nimport globalBroadcasterModule from './globalbroadcaster/module';\nimport turnCredentialsModule from './turncredentials/module';\nimport sdpModule from './sdp/module';\n\nexport default {\n    ... httpModule,\n    ... globalBroadcasterModule,\n    ... turnCredentialsModule,\n    ... sdpModule,\n\n    Config: () => Config(),\n    LogManager: container => new LogManagerImpl(container),\n    Utils: container => new Utils(container),\n    Cache: container => new Cache(container),\n    SdpParser: container => new SdpParserImpl(container),\n    LocaleService: container => new LocaleService(container),\n    ChallengeManager: ChallengeManagerFactory,\n    Core: container => new CoreImpl(container),\n    NotificationCallbacks: () => { return {}; },\n\n    // Some globals\n    Navigator: () => navigator,\n    Global: () => window\n};\n","/**\n *\n * LogManager provides javascript logging framework.<br />\n *\n * <br />The logging level strategy is as follows:<br />\n *\n * <br />DEBUG: Used for development and detailed debugging logs<br />\n * INFO: Messages that provide information about the high level flow<br />\n * through. Contain basic information about the actions being performed<br />\n * by the user and/or the system<br />\n * WARN: Things that shouldn't happen but don't have any immediate effect, and should be flagged<br />\n * ERROR: Errors and Exceptions<br />\n * FATAL: Anything that causes the system to enter into an unstable and unusable state<br />\n *\n *\n * @name logManager\n * @namespace\n * @memberOf fcs\n *\n * @version @{spidr.jsl.version}\n * @since 3.0.0\n *\n */\nexport function LogManagerImpl({ Core: _core}) {\n    var loggers = {},\n        enabled = false,\n        Level = {\n            OFF: 'OFF',\n            FATAL: 'FATAL',\n            ERROR: 'ERROR',\n            WARN: 'WARN',\n            INFO: 'INFO',\n            DEBUG: 'DEBUG',\n            TRACE: 'TRACE',\n            ALL: 'ALL'\n        },\n        _logHandler = null;\n\n    /**\n     *\n     * Log object.\n     *\n     * @typedef {Object} logObject\n     * @readonly\n     * @since 3.0.0\n     *\n     * @property {String}  user - the user registered to fcs library.\n     * @property {String}  timestamp - the time stamp of the log.\n     * @property {String}  logger - the name of the logger.\n     * @property {String}  level - the level of message.\n     * @property {String}  message -  the message string.\n     * @property {Object}  args - the arguments.\n     *\n     */\n\n    /**\n     *\n     * Log handler function.\n     *\n     * @typedef {function} logHandler\n     * @param {string} loggerName Name of the logger\n     * @param {string} level Level of message\n     * @param {logObject} logObject Log object\n     * @since 3.0.0\n     */\n\n    /**\n     *\n     * Initializes logging using user-provided log handler.\n     * @name fcs.logManager#initLogging\n     * @since 3.0.0\n     * @function\n     *\n     * @param {logHandler} logHandler, Function that will receive log entries\n     * @param {boolean} enableDebug, Flag defining whether debugging should be enabled or not\n     * @returns {undefined}\n     *\n     * @example\n     *\n     * function jslLogHandler(loggerName, level, logObject) {\n     *     var LOG_LEVEL = fcs.logManager.Level,\n     *         msg = logObject.timestamp + \" - \" + loggerName + \" - \" + level + \" - \" + logObject.message;\n     *\n     *     switch(level) {\n     *         case LOG_LEVEL.DEBUG:\n     *             window.console.debug(msg, logObject.args);\n     *             break;\n     *         case LOG_LEVEL.INFO:\n     *             window.console.info(msg, logObject.args);\n     *             break;\n     *         case LOG_LEVEL.ERROR:\n     *             window.console.error(msg, logObject.args);\n     *             break;\n     *             default:\n     *             window.console.log(msg, logObject.args);\n     *     }\n     * }\n     *\n     * fcs.logManager.initLogging(jslLogHandler, true);\n     */\n    this.initLogging = function(logHandler, enableDebug) {\n        if (!logHandler || typeof logHandler !== 'function') {\n            return false;\n        }\n        _logHandler = logHandler;\n        enabled = enableDebug === true ? true : false;\n        return true;\n    };\n\n    /**\n     *\n     * Enumerates all possible log levels.\n     * @name fcs.logManager#Level\n     * @enum {string}\n     * @since 3.0.0\n     * @readonly\n     * @property {string} [OFF=OFF] string representation of the Off level.\n     * @property {string} [FATAL=FATAL]  string representation of the Fatal level.\n     * @property {string} [ERROR=ERROR] string representation of the Error level.\n     * @property {string} [WARN=WARN] string representation of the Warn level.\n     * @property {string} [INFO=INFO] string representation of the Info level.\n     * @property {string} [DEBUG=DEBUG] string representation of the Debug level.\n     * @property {string} [TRACE=TRACE] string representation of the Trace level.\n     * @property {string} [ALL=ALL] string representation of the All level.\n     */\n    this.Level = Level;\n\n    /**\n     * Returns true or false depending on whether logging is enabled.\n     *\n     * @name fcs.logManager#isEnabled\n     * @function\n     *\n     * @returns {Boolean}\n     * @since 3.0.0\n     *\n     * @example\n     *\n     * fcs.logManager.isEnabled();\n     *\n     */\n    this.isEnabled = function() {\n        return enabled;\n    };\n\n    function Logger(loggerName) {\n        var name = loggerName;\n\n        this.getName = function() {\n            return name;\n        };\n\n        function log(level, message, argument) {\n            if (enabled) {\n                var logObject = {};\n\n                logObject.user = _core.getUser();\n                logObject.timestamp = new Date().getTime();\n                logObject.logger = name;\n                logObject.level = level;\n                logObject.message = message;\n                logObject.args = argument;\n\n\n                if (_logHandler) {\n                    try {\n                        _logHandler(logObject.logger, logObject.level, logObject);\n                    } catch (e) {\n                        return undefined;\n                    }\n                }\n            }\n            return false;\n        }\n\n        this.trace = function trace(msg, argument) {\n            return log(Level.TRACE, msg, argument);\n        };\n\n        this.debug = function debug(msg, argument) {\n            return log(Level.DEBUG, msg, argument);\n        };\n\n        this.info = function info(msg, argument) {\n            return log(Level.INFO, msg, argument);\n        };\n\n        this.warn = function warn(msg, argument) {\n            return log(Level.WARN, msg, argument);\n        };\n\n        this.error = function error(msg, argument) {\n            return log(Level.ERROR, msg, argument);\n        };\n\n        this.fatal = function fatal(msg, argument) {\n            return log(Level.FATAL, msg, argument);\n        };\n    }\n\n    this.getLogger = function(loggerName) {\n        var logger, _loggerName;\n        _loggerName = loggerName ? loggerName.trim().length !== 0 ? loggerName : 'Default' : 'Default';\n        if (loggers[_loggerName]) {\n            logger = loggers[_loggerName];\n        } else {\n            logger = new Logger(_loggerName);\n            loggers[logger.getName()] = logger;\n        }\n\n        return logger;\n    };\n}\n","import constants from './constants';\n\nexport function Config() {\n    return {\n        polling: 30,\n        iceCandidateCollectionTimeoutInterval: 3000,\n        pluginMode: {\n            mode: 'auto',\n            h264: true\n        },\n        sdpHandlers: [],\n        bundlePolicy: constants.WEBRTC.SDP.BUNDLE_POLICY.DISABLED\n    };\n}\n","export function Cache({\n    Core: _fcs,\n    Config: _config,\n    Global: _global\n}) {\n\n    function getPrefix() {\n        const username = _fcs.getUser() || '';\n        const cachePrefix = _config.cachePrefix || 'FCS';\n        return `${cachePrefix}_${username}_`;\n    }\n\n    Object.assign(this, {\n        setItem(keyName, keyValue) {\n            return _global.localStorage.setItem(getPrefix() + keyName, keyValue);\n        },\n\n        getItem(keyName) {\n            return _global.localStorage.getItem(getPrefix() + keyName);\n        },\n\n        removeItem(keyName) {\n            return _global.localStorage.removeItem(getPrefix()  + keyName);\n        },\n\n        clear() {\n            for(let i = 0; i < _global.localStorage.length; ++i) {\n                const fullKeyName = localStorage.key(i);\n\n                // If the key name starts with the prefix, remove it.\n                if (fullKeyName.indexOf(getPrefix()) === 0) {\n                    _global.localStorage.removeItem(fullKeyName);\n                }\n            }\n        }\n    });\n}\n","import constants from '../constants';\n\nexport function SdpParserImpl({\n    LogManager: _logManager,\n    Config: _fcsConfig\n}) {\n    var logger = _logManager.getLogger('sdpParser'),\n        self, nl = '\\n', lf = '\\r';\n\n    this.init = function(sdpData) {\n        self = this;\n        self.sessionDescription = {};\n        self.mediaDescriptions = [];\n        self.sdp = sdpData;\n        self.parseSDP();\n        self.setSessionDescriptionAttributes();\n        self.setMediaDescriptionsAttributes();\n    };\n\n    this.parseSDP = function() {\n        var descriptions = [],\n            index = 1,\n            mediaDescription;\n        descriptions = self.sdp.split(/^(?=m=)/m);\n        self.sessionDescription.data = descriptions[0];\n        for (index; index < descriptions.length; index++) {\n            mediaDescription = {};\n            mediaDescription.data = descriptions[index];\n            self.mediaDescriptions.push(mediaDescription);\n        }\n    };\n\n    this.setSessionDescriptionAttributes = function() {\n        var line = 0,\n            sessionDescriptions = self.sessionDescription.data.split(/\\r\\n|\\r|\\n/),\n            connectionData;\n\n        for (line; line < sessionDescriptions.length; line++) {\n            if ((sessionDescriptions[line].match('^e='))) {\n                self.sessionDescription.email = sessionDescriptions[line].split('=')[1];\n            } else if ((sessionDescriptions[line].match('^c='))) {\n                connectionData = sessionDescriptions[line].split('=')[1];\n                self.sessionDescription.connection = connectionData;\n                self.sessionDescription.ip = connectionData.split(' ')[2];\n            }\n        }\n    };\n\n    this.setMediaDescriptionsAttributes = function() {\n        var line = 0,\n            mediaDescriptionIndex, mediaDescriptionAttributes, mediaData, connectionData;\n\n        for (mediaDescriptionIndex in self.mediaDescriptions) {\n            if (self.mediaDescriptions.hasOwnProperty(mediaDescriptionIndex)) {\n                mediaDescriptionAttributes = self.mediaDescriptions[mediaDescriptionIndex].data.split(/\\r\\n|\\r|\\n/);\n                this.mediaDescriptions[mediaDescriptionIndex].direction = 'sendrecv';\n                for (line in mediaDescriptionAttributes) {\n                    if (mediaDescriptionAttributes.hasOwnProperty(line)) {\n                        //direction default sendrcv setle\n                        if ((mediaDescriptionAttributes[line].match('^m='))) {\n                            mediaData = mediaDescriptionAttributes[line].split('=')[1];\n                            self.mediaDescriptions[mediaDescriptionIndex].media = mediaData;\n                            self.mediaDescriptions[mediaDescriptionIndex].port = mediaData.split(' ')[1];\n                        } else if ((mediaDescriptionAttributes[line].match('^a=sendrecv')) || (mediaDescriptionAttributes[line].match('^a=sendonly')) || (mediaDescriptionAttributes[line].match('^a=recvonly')) || (mediaDescriptionAttributes[line].match('^a=inactive'))) {\n                            self.mediaDescriptions[mediaDescriptionIndex].direction = mediaDescriptionAttributes[line].split('=')[1];\n                        } else if ((mediaDescriptionAttributes[line].match('^c='))) {\n                            connectionData = mediaDescriptionAttributes[line].split('=')[1];\n                            self.mediaDescriptions[mediaDescriptionIndex].connection = connectionData;\n                            self.mediaDescriptions[mediaDescriptionIndex].ip = connectionData.split(' ')[2];\n                        }\n                    }\n                }\n            }\n        }\n\n    };\n\n    this.isHold = function(isRemote) {\n        var isHold = false,\n            ip, media_index = 0,\n            mediaDesc;\n        for (media_index in self.mediaDescriptions) {\n            if (self.mediaDescriptions.hasOwnProperty(media_index)) {\n                mediaDesc = this.mediaDescriptions[media_index];\n                if (mediaDesc.ip) {\n                    ip = mediaDesc.ip;\n                } else {\n                    if (self.sessionDescription.ip) {\n                        ip = self.sessionDescription.ip;\n                    }\n                }\n\n                // some time ago port was set to 0 if sdp didn't have any candidates\n                // now port is set to 9\n                // adding port != 9 check, will prevent issues while trickle ice is enabled\n                if (mediaDesc.port !== '0' && mediaDesc.port !== '9') {\n                    if ((mediaDesc.direction === 'inactive') ||\n                        ((mediaDesc.direction === 'sendonly') && isRemote) ||\n                        ((mediaDesc.direction === 'recvonly') && !isRemote) ||\n                        (ip === '0.0.0.0')) {\n                        isHold = true;\n                    } else {\n                        isHold = false;\n                        break;\n                    }\n                }\n            }\n        }\n        return isHold;\n    };\n\n    this.isRemoteHold = function() {\n        return this.isHold(true);\n    };\n\n    this.isLocalHold = function() {\n        return this.isHold(false);\n    };\n\n    this.getSessionDescription = function() {\n        return self.sessionDescription;\n    };\n\n    this.getMediaDescriptions = function() {\n        return self.mediaDescriptions;\n    };\n\n    this.isSdpHas = function(pSdp, type) {\n        var result = false;\n\n        if (pSdp === null || pSdp === undefined) {\n            return result;\n        }\n\n        if (pSdp.indexOf(constants.SDP.M_LINE + type) !== -1) {\n            result = true;\n            return result;\n        }\n\n        return result;\n    };\n\n    this.isSdpHasAudio = function(pSdp) {\n        return this.isSdpHas(pSdp, constants.STRING.AUDIO);\n    };\n\n    this.isSdpHasVideo = function(pSdp) {\n        return this.isSdpHas(pSdp, constants.STRING.VIDEO);\n    };\n\n    this.isSdpHasUfrag = function(pSdp) {\n        var result = false;\n\n        if (pSdp === null || pSdp === undefined) {\n            return result;\n        }\n\n        if (pSdp.indexOf(constants.SDP.A_LINE + constants.SDP.ICE_UFRAG) !== -1) {\n            result = true;\n            return result;\n        }\n\n        return result;\n    };\n\n    this.isSdpHasMediaWithExpectedPort = function(pSdp, type, port) {\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n        return pSdp.indexOf(constants.SDP.M_LINE + type + ' ' + port) !== -1;\n    };\n\n    this.isSdpHasAudioWithZeroPort = function(pSdp) {\n        return this.isSdpHasMediaWithExpectedPort(pSdp, constants.STRING.AUDIO, 0);\n    };\n\n    this.isSdpHasVideoWithZeroPort = function(pSdp) {\n        return this.isSdpHasMediaWithExpectedPort(pSdp, constants.STRING.VIDEO, 0);\n    };\n\n    this.isSdpHasAudioWithOnePort = function(pSdp) {\n        return this.isSdpHasMediaWithExpectedPort(pSdp, constants.STRING.AUDIO, 1);\n    };\n\n    this.isSdpHasVideoWithOnePort = function(pSdp) {\n        return this.isSdpHasMediaWithExpectedPort(pSdp, constants.STRING.VIDEO, 1);\n    };\n\n    this.isSdpHasAudioWithNinePort = function(pSdp) {\n        return this.isSdpHasMediaWithExpectedPort(pSdp, constants.STRING.AUDIO, 9);\n    };\n\n    this.isSdpHasVideoWithNinePort = function(pSdp) {\n        return this.isSdpHasMediaWithExpectedPort(pSdp, constants.STRING.VIDEO, 9);\n    };\n\n    this.replaceZeroVideoPortWithOne = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n        if (this.isSdpHasVideoWithZeroPort(pSdp)) {\n            pSdp = pSdp.replace(constants.SDP.M_LINE + constants.STRING.VIDEO + ' 0 ', constants.SDP.M_LINE + constants.STRING.VIDEO + ' 1 ');\n        }\n        return pSdp;\n    };\n\n    this.getSdpDirection = function(pSdp, type) {\n        var substr = '',\n            descriptions = [],\n            index,\n            direction = constants.WEBRTC.MEDIA_STATE.INACTIVE,\n            logmsg;\n\n        logmsg = function(state) {\n            logger.info('getSdpDirection: type= ' + type + ' state= ' + state);\n        };\n\n        if (!this.isSdpHas(pSdp, type)) {\n            logmsg(direction);\n            return direction;\n        }\n\n        if (this.isSdpHasMediaWithExpectedPort(pSdp, type, 0)) {\n            // return if media port is 0\n            logmsg(direction);\n            return direction;\n        }\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (substr.indexOf(constants.SDP.M_LINE + type) !== -1) {\n                if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE) !== -1) {\n                    direction = constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE;\n                    logmsg(direction);\n                    return direction;\n                } else if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.SEND_ONLY) !== -1) {\n                    direction = constants.WEBRTC.MEDIA_STATE.SEND_ONLY;\n                    logmsg(direction);\n                    return direction;\n                } else if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) !== -1) {\n                    direction = constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n                    logmsg(direction);\n                    return direction;\n                } else if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.INACTIVE) !== -1) {\n                    logmsg(direction);\n                    return direction;\n                }\n                direction = constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE;\n                return direction;\n            }\n        }\n        direction = constants.WEBRTC.MEDIA_STATE.NOT_FOUND;\n        logmsg(direction);\n        return direction;\n    };\n\n    this.getAudioSdpDirection = function(pSdp) {\n        return this.getSdpDirection(pSdp, constants.STRING.AUDIO);\n    };\n\n    this.getVideoSdpDirection = function(pSdp) {\n        return this.getSdpDirection(pSdp, constants.STRING.VIDEO);\n    };\n\n    this.isAudioSdpDirectionInactive = function(pSdp) {\n        return this.getAudioSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.INACTIVE;\n    };\n\n    this.isAudioSdpDirectionSendrecv = function(pSdp) {\n        return this.getAudioSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE;\n    };\n\n    this.isAudioSdpDirectionSendonly = function(pSdp) {\n        return this.getAudioSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.SEND_ONLY;\n    };\n\n    this.isAudioSdpDirectionRecvonly = function(pSdp) {\n        return this.getAudioSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n    };\n\n    this.isSdpContainsAudioDirection = function(pSdp) {\n        return this.getAudioSdpDirection(pSdp) !== constants.WEBRTC.MEDIA_STATE.NOT_FOUND;\n    };\n\n    this.isVideoSdpDirectionInactive = function(pSdp) {\n        return this.getVideoSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.INACTIVE;\n    };\n\n    this.isVideoSdpDirectionSendrecv = function(pSdp) {\n        return this.getVideoSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE;\n    };\n\n    this.isVideoSdpDirectionSendonly = function(pSdp) {\n        return this.getVideoSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.SEND_ONLY;\n    };\n\n    this.isVideoSdpDirectionRecvonly = function(pSdp) {\n        return this.getVideoSdpDirection(pSdp) === constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n    };\n\n    this.isSdpContainsVideoDirection = function(pSdp) {\n        return this.getVideoSdpDirection(pSdp) !== constants.WEBRTC.MEDIA_STATE.NOT_FOUND;\n    };\n\n    this.changeDirection = function(pSdp, directionBefore, directionAfter, type) {\n        var sdp = '',\n            substr, descriptions = [],\n            index;\n\n\n        if (!type) {\n            logger.error('changeDirection: called without a type.');\n        }\n\n        if (directionBefore === directionAfter) {\n            //no need to change direction\n            return pSdp;\n        }\n\n        if (directionBefore !== this.getSdpDirection(pSdp, type)) {\n            //Ignore changing the direction if the \"directionBefore\" and existing directions do not match\n            return pSdp;\n        }\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (substr.indexOf(constants.SDP.M_LINE + type) !== -1) {\n                if (substr.indexOf(constants.SDP.A_LINE + directionBefore) === -1) {\n                    substr = substr.concat(constants.SDP.A_LINE + directionAfter + lf + nl);\n                } else {\n                    substr = substr.replace(constants.SDP.A_LINE + directionBefore, constants.SDP.A_LINE + directionAfter);\n                }\n            }\n            sdp = sdp + substr;\n        }\n\n        return sdp;\n    };\n\n    this.updateSdpDirection = function(pSdp, type, direction) {\n        logger.info('updateSdpDirection: type= ' + type + ' direction= ' + direction);\n        var beforeDirection = this.getSdpDirection(pSdp, type);\n        return this.changeDirection(pSdp, beforeDirection, direction, type);\n    };\n\n    this.updateAudioSdpDirection = function(pSdp, direction) {\n        logger.info('updateSdpDirection: type= ' + constants.STRING.AUDIO + ' direction= ' + direction);\n        var beforeDirection = this.getSdpDirection(pSdp, constants.STRING.AUDIO);\n        return this.changeDirection(pSdp, beforeDirection, direction, constants.STRING.AUDIO);\n    };\n\n    this.updateVideoSdpDirection = function(pSdp, direction) {\n        logger.info('updateSdpDirection: type= ' + constants.STRING.VIDEO + ' direction= ' + direction);\n        var beforeDirection = this.getSdpDirection(pSdp, constants.STRING.VIDEO);\n        return this.changeDirection(pSdp, beforeDirection, direction, constants.STRING.VIDEO);\n    };\n\n    this.updateAudioSdpDirectionToInactive = function(pSdp) {\n        return this.updateAudioSdpDirection(pSdp, constants.WEBRTC.MEDIA_STATE.INACTIVE);\n    };\n\n    this.updateVideoSdpDirectionToInactive = function(pSdp) {\n        return this.updateVideoSdpDirection(pSdp, constants.WEBRTC.MEDIA_STATE.INACTIVE);\n    };\n\n    this.isSdpHasDirection = function(pSdp) {\n        var sr_indx, so_indx, ro_indx, in_indx;\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n\n        sr_indx = pSdp.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE, 0);\n        so_indx = pSdp.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.SEND_ONLY, 0);\n        ro_indx = pSdp.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, 0);\n        in_indx = pSdp.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.INACTIVE, 0);\n        return (sr_indx + 1) + (so_indx + 1) + (ro_indx + 1) + (in_indx + 1) === 0 ? false : true;\n    };\n\n    this.isSdpEnabled = function(pSdp, type) {\n        var direction, msg = 'isSdpEnabled for type ' + type + ': ',\n            result = false;\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n\n        if (this.isSdpHasMediaWithExpectedPort(pSdp, type, 0)) {\n            // return if media port is 0\n            logger.info(msg + result);\n            return result;\n        }\n        if (type === constants.STRING.VIDEO) {\n            direction = this.getVideoSdpDirection(pSdp);\n            if (direction === constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY || direction === constants.WEBRTC.MEDIA_STATE.INACTIVE) {\n                logger.info(msg + result);\n                return result;\n            }\n        }\n        if (this.isSdpHas(pSdp, type)) {\n            result = true;\n        }\n        logger.info(msg + result);\n        return result;\n    };\n\n    this.isAudioSdpEnabled = function(pSdp) {\n        return this.isSdpEnabled(pSdp, constants.STRING.AUDIO);\n    };\n\n    this.isVideoSdpEnabled = function(pSdp) {\n        return this.isSdpEnabled(pSdp, constants.STRING.VIDEO);\n    };\n\n    this.isSdpVideoReceiveEnabled = function(pSdp) {\n        var direction, msg = 'isSdpVideoReceiveEnabled: ',\n            result = false;\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n\n        if (pSdp.indexOf(constants.SDP.M_LINE + constants.STRING.VIDEO + ' 0') !== -1) {\n            logger.info(msg + result);\n            return result;\n        }\n\n        direction = this.getVideoSdpDirection(pSdp);\n        if (direction === constants.WEBRTC.MEDIA_STATE.SEND_ONLY || direction === constants.WEBRTC.MEDIA_STATE.INACTIVE) {\n            logger.info(msg + result);\n            return result;\n        }\n\n        if (pSdp.indexOf(constants.SDP.M_LINE + constants.STRING.VIDEO) !== -1) {\n            result = true;\n            logger.info(msg + result);\n            return result;\n        }\n\n        logger.info(msg + result);\n        return result;\n    };\n\n    this.updateH264Level = function(pSdp) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index, reg = /\\r\\n|\\r|\\n/m,\n            video_arr, i, new_substr = '',\n            elm, elm_array;\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (substr.indexOf(constants.SDP.M_LINE + constants.STRING.VIDEO) !== -1) {\n                video_arr = substr.split(reg);\n                for (i = 0; i < video_arr.length; i++) {\n                    elm = video_arr[i];\n                    if (elm && elm.indexOf('a=rtpmap:') !== -1 && elm.indexOf('H264') !== -1) {\n                        elm_array = elm.split(/\\:| /m);\n                        elm = elm + constants.STRING.CARRIAGE_RETURN + constants.STRING.NEW_LINE;\n                        elm = elm + 'a=fmtp:' + elm_array[1] + ' profile-level-id=428014;';\n                        elm = elm + constants.STRING.CARRIAGE_RETURN + constants.STRING.NEW_LINE;\n                        // Workaround for issue 1603.\n                    } else if (elm && elm !== '') {\n                        elm = elm + constants.STRING.CARRIAGE_RETURN + constants.STRING.NEW_LINE;\n                    }\n                    new_substr = new_substr + elm;\n                }\n                substr = new_substr;\n            }\n            sdp = sdp + substr;\n        }\n        return sdp;\n    };\n    /*\n     * Firefox only accepts 42E0xx and above profile-id-level.\n     * In order not to get setRemoteDescription failure we fix the H264 level\n     * This snippet changes all H264 levels with 4280xx to 42E0xx\n     */\n    this.updateH264LevelTo42E01F = function(pSdp, isH264Enabled) {\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n        if (isH264Enabled) {\n            logger.debug('Updating the H264 profile-level-id to 42e01f');\n            pSdp = pSdp.replace(/profile-level-id=.{4}/g, 'profile-level-id=42e0');\n        }\n        return pSdp;\n    };\n\n    this.isSdpVideoCandidateEnabled = function(pSdp) {\n        var msg = 'isSdpVideoCandidateEnabled: ',\n            result = false;\n\n        if (this.isSdpHasVideoWithZeroPort(pSdp) ||\n            this.isVideoSdpDirectionInactive(pSdp)) {\n            logger.info(msg + result);\n            return result;\n        } else if (!this.isSdpHasVideo(pSdp)) {\n            result = true;\n            logger.info(msg + result);\n            return true;\n        }\n\n        logger.info(msg + result);\n        return result;\n    };\n\n    this.deleteFingerprintFromSdp = function(sdp, isDtlsEnabled) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n        if (isDtlsEnabled) {\n            return sdp;\n        }\n        while (sdp.indexOf('a=fingerprint:') !== -1) {\n            sdp = sdp.replace(/(a=fingerprint:[\\w\\W]*?(:\\r|\\n))/, '');\n            logger.debug('Deleting fingerprint');\n        }\n        while (sdp.indexOf('a=setup:') !== -1) {\n            sdp = sdp.replace(/(a=setup:[\\w\\W]*?(:\\r|\\n))/, '');\n        }\n        return sdp;\n    };\n\n    this.getFingerprintFromSdp = function(sdp) {\n        var fingerprint;\n        if (sdp === null || sdp === undefined) {\n            return;\n        }\n        if (sdp.indexOf('a=fingerprint:') !== -1) {\n            fingerprint = ((/a=fingerprint:([\\w\\W]*?)(:\\r|\\n)/g).exec(sdp))[1];\n            logger.debug('SDP fingerprint:' + fingerprint);\n            return fingerprint;\n        }\n        return;\n    };\n\n    this.deleteCryptoFromSdp = function(sdp, isDtlsEnabled) {\n        if (sdp === null || sdp === undefined) {\n            return;\n        }\n        if (!isDtlsEnabled) {\n            return sdp;\n        }\n        while (sdp.indexOf('a=crypto:') !== -1) {\n            sdp = sdp.replace(/(a=crypto:[\\w\\W]*?(:\\r|\\n))/, '');\n            logger.debug('Deleting crypto line');\n        }\n        return sdp;\n    };\n\n    this.deleteCryptoZeroFromSdp = function(sdp) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n        if (sdp.indexOf('a=crypto:1') === -1) {\n            while (sdp.indexOf('a=crypto:0') !== -1) {\n                sdp = sdp.replace('a=crypto:0', 'a=crypto:1');\n            }\n        } else {\n            while (sdp.indexOf('a=crypto:0') !== -1) {\n                sdp = sdp.replace(/(a=crypto:0[\\w\\W]*?(:\\r|\\n))/, '');\n            }\n        }\n        return sdp;\n    };\n\n    /*\n     * updateAudioCodec: removes codecs listed in config file from codec list.\n     * @param {type} pSdp\n     */\n    this.updateAudioCodec = function(pSdp) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index, reg = /\\r\\n|\\r|\\n/m,\n            audio_arr, i, new_substr = '',\n            attrLine, partialMLine,\n            remcodec, regExpCodec, codecsToRemove = [],\n            j;\n\n        codecsToRemove = _fcsConfig.codecsToRemove;\n        if (codecsToRemove === undefined) {\n            return pSdp;\n        }\n\n        logger.debug('Updating Audio Codecs');\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasAudio(substr)) {\n                audio_arr = substr.split(reg);\n                for (i = 0; i < audio_arr.length; i++) {\n                    attrLine = audio_arr[i];\n                    for (j = 0; j < codecsToRemove.length; j++) {\n                        remcodec = codecsToRemove[j];\n                        if (attrLine && this.isSdpHasAudio(attrLine)) {\n                            // remove audio codecs given in config file from m=audio line\n                            regExpCodec = new RegExp(' ' + remcodec + '($| )', 'm');\n                            partialMLine = attrLine.split(/(\\m=audio+)\\s(\\w+)/);\n                            attrLine = attrLine.replace(/(\\m=audio+)\\s(\\w+)/, '');\n                            attrLine = attrLine.trim();\n                            attrLine = attrLine.replace(regExpCodec, ' ');\n                            attrLine = partialMLine[1] + ' ' + partialMLine[2] + ' ' + attrLine + lf + nl;\n                        } else if (attrLine && attrLine.indexOf('a=fmtp:' + remcodec) !== -1) {\n                            attrLine = attrLine.replace(/a=fmtp[\\w\\W]*/, '');\n                        } else if (attrLine && attrLine.indexOf('a=rtcp-fb:' + remcodec) !== -1) {\n                            attrLine = attrLine.replace(/a=rtcp-fb[\\w\\W]*/, '');\n                        } else if (attrLine && attrLine.indexOf('a=rtpmap:' + remcodec) !== -1) {\n                            attrLine = attrLine.replace(/a=rtpmap[\\w\\W]*/, '');\n                        } else if (attrLine && attrLine !== '' && j === 0) {\n                            attrLine = attrLine + lf + nl;\n                        }\n                    }\n                    new_substr = new_substr + attrLine;\n                }\n                substr = new_substr;\n            }\n            sdp = sdp + substr;\n        }\n        return sdp;\n    };\n\n    /*\n     * updateVideoCodec: removes codecs listed in config file from codec list.\n     * @param {type} pSdp\n     */\n    this.updateVideoCodec = function(pSdp) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index, reg = /\\r\\n|\\r|\\n/m,\n            video_arr, i, new_substr = '',\n            attrLine, partialMLine,\n            remcodec, regExpCodec, codecsToRemoveForVideo = [],\n            j;\n\n        codecsToRemoveForVideo = _fcsConfig.codecsToRemoveForVideo;\n        if (codecsToRemoveForVideo === undefined) {\n            return pSdp;\n        }\n\n        logger.debug('Updating Video Codecs');\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasVideo(substr)) {\n                video_arr = substr.split(reg);\n                for (i = 0; i < video_arr.length; i++) {\n                    attrLine = video_arr[i];\n                    for (j = 0; j < codecsToRemoveForVideo.length; j++) {\n                        remcodec = codecsToRemoveForVideo[j];\n                        if (attrLine && this.isSdpHasVideo(attrLine)) {\n                            // remove video codecs given in config file from m=video line\n                            regExpCodec = new RegExp(' ' + remcodec + '($| )', 'm');\n                            partialMLine = attrLine.split(/(\\m=video+)\\s(\\w+)/);\n                            attrLine = attrLine.replace(/(\\m=video+)\\s(\\w+)/, '');\n                            attrLine = attrLine.trim();\n                            attrLine = attrLine.replace(regExpCodec, ' ');\n                            attrLine = partialMLine[1] + ' ' + partialMLine[2] + ' ' + attrLine + lf + nl;\n                        } else if (attrLine && attrLine.indexOf('a=fmtp:' + remcodec) !== -1) {\n                            attrLine = attrLine.replace(/a=fmtp[\\w\\W]*/, '');\n                        } else if (attrLine && attrLine.indexOf('a=rtcp-fb:' + remcodec) !== -1) {\n                            attrLine = attrLine.replace(/a=rtcp-fb[\\w\\W]*/, '');\n                        } else if (attrLine && attrLine.indexOf('a=rtpmap:' + remcodec) !== -1) {\n                            attrLine = attrLine.replace(/a=rtpmap[\\w\\W]*/, '');\n                        } else if (attrLine && attrLine !== '' && j === 0) {\n                            attrLine = attrLine + lf + nl;\n                        }\n                    }\n                    new_substr = new_substr + attrLine;\n                }\n                substr = new_substr;\n            }\n            sdp = sdp + substr;\n        }\n        return sdp;\n    };\n\n    /*\n     * removeAudioCodec: removes given codec type from sdp.\n     * @param {type} pSdp\n     * @param {type} codecToRemove\n     */\n    this.removeAudioCodec = function(pSdp, codecToRemove) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index, reg = /\\r\\n|\\r|\\n/m,\n            audio_arr, i,\n            new_substr = '',\n            elm, elm2, regExpCodec;\n\n        logger.debug('Removing Audio Codec:' + codecToRemove);\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasAudio(substr)) {\n                audio_arr = substr.split(reg);\n                for (i = 0; i < audio_arr.length; i++) {\n                    elm = audio_arr[i];\n                    if (elm && this.isSdpHasAudio(elm)) {\n                        // remove given audio codec from m=audio line\n                        regExpCodec = new RegExp(' ' + codecToRemove + '($| )', 'm');\n                        elm2 = audio_arr[i].split(/RTP[\\w\\W]*/);\n                        elm = elm.replace(/(\\m=audio+)\\s(\\w+)/, '');\n                        elm = elm.trim();\n                        elm = elm.replace(regExpCodec, ' ');\n                        elm = elm2[0] + elm + lf + nl;\n                        // Workaround for issue 1603.\n                    } else if (elm && elm.indexOf('a=fmtp:' + codecToRemove) !== -1) {\n                        elm = elm.replace(/a=fmtp[\\w\\W]*/, '');\n                    } else if (elm && elm.indexOf('a=rtpmap:' + codecToRemove) !== -1) {\n                        elm = elm.replace(/a=rtpmap[\\w\\W]*/, '');\n                    } else if (elm && elm.indexOf('a=rtcp-fb:' + codecToRemove) !== -1) {\n                        elm = elm.replace(/a=rtcp-fb[\\w\\W]*/, '');\n                    } else if (elm && elm !== '') {\n                        elm = elm + lf + nl;\n                    }\n                    new_substr = new_substr + elm;\n                }\n                substr = new_substr;\n            }\n            sdp = sdp + substr;\n        }\n        return sdp;\n    };\n\n    /*\n     * removeRTXCodec: this function will remove rtx video codec\n     */\n    this.removeRTXCodec = function(pSdp) {\n        var rtxPayloadType, vp8SSRC, rtxSSRC;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        vp8SSRC = this.getVp8Ssrc(pSdp);\n        logger.debug('vp8SSRC = ' + vp8SSRC);\n\n        rtxSSRC = this.getRtxSsrc(pSdp);\n        logger.debug('rtxSSRC = ' + rtxSSRC);\n\n        pSdp = this.removeSsrcId(pSdp, rtxSSRC);\n\n        pSdp = pSdp.replace(/(a=ssrc-group:FID[\\w\\W]*?(:\\r|\\n))/g, '');\n\n        if (pSdp.indexOf('rtx/90000') === -1) {\n            return pSdp;\n        }\n\n        rtxPayloadType = this.getRTXPayloadType(pSdp);\n\n        logger.debug('removeRTXCodec : Removing rtx video codec ' + rtxPayloadType);\n        pSdp = this.removeVideoCodec(pSdp, rtxPayloadType);\n\n        return pSdp;\n    };\n\n    this.getVp8Ssrc = function(pSdp) {\n        var splitArray, ssrcGroupArray, ssrcArray, i, reg = /\\r\\n|\\r|\\n/m;\n        if (pSdp === null || pSdp === undefined) {\n            return -1;\n        }\n\n        if (pSdp.indexOf('a=ssrc-group:FID ') === -1) {\n            return -1;\n        }\n\n        splitArray = pSdp.split('a=ssrc-group:FID ');\n        ssrcGroupArray = splitArray[1].split(reg);\n        ssrcArray = ssrcGroupArray[0].split(' ');\n\n        for (i = 0; i < ssrcArray.length; i++) {\n            logger.debug('ssrcArray[' + i + '] : ' + ssrcArray[i]);\n        }\n\n        return ssrcArray[0];\n    };\n\n    this.getRtxSsrc = function(pSdp) {\n        var splitArray, ssrcGroupArray, ssrcArray, i, reg = /\\r\\n|\\r|\\n/m;\n        if (pSdp === null || pSdp === undefined) {\n            return -1;\n        }\n\n        if (pSdp.indexOf('a=ssrc-group:FID ') === -1) {\n            return -1;\n        }\n\n        splitArray = pSdp.split('a=ssrc-group:FID ');\n        ssrcGroupArray = splitArray[1].split(reg);\n        ssrcArray = ssrcGroupArray[0].split(' ');\n\n        for (i = 0; i < ssrcArray.length; i++) {\n            logger.debug('ssrcArray[' + i + '] : ' + ssrcArray[i]);\n        }\n\n        return ssrcArray[1];\n    };\n\n    /*\n     * removeSsrcId: removes given SSRC ID from sdp.\n     */\n    this.removeSsrcId = function(pSdp, ssrcId) {\n        var sdp = '',\n            reg = /\\r\\n|\\r|\\n/m,\n            ssrc_arr, i, new_substr = '',\n            elm;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        ssrc_arr = pSdp.split(reg);\n        for (i = 0; i < ssrc_arr.length; i++) {\n            elm = ssrc_arr[i];\n            if (elm && elm.indexOf('a=ssrc:' + ssrcId) !== -1) {\n                elm = elm.replace(/a=ssrc:[\\w\\W]*/, '');\n            } else if (elm && elm !== '') {\n                elm = elm + lf + nl;\n            }\n            new_substr = new_substr + elm;\n        }\n        sdp = new_substr;\n\n        return sdp;\n    };\n\n    /*\n     * removeG722Codec: this function will remove G722 audio codec\n     * @param {type} pSdp\n     */\n    this.removeG722Codec = function(pSdp) {\n        return pSdp;\n    };\n\n    this.getPayloadTypeOf = function(codecString, pSdp) {\n        var rtpMapNumber, rtpMapArray, payloadTypeArray = [],\n            index;\n\n        if (pSdp.indexOf(codecString) === -1) {\n            return -1;\n        }\n        rtpMapArray = pSdp.match(/(a=rtpmap[\\w\\W]*?(:\\r|\\n))/g);\n        for (index = 0; index < rtpMapArray.length; index++) {\n            if (rtpMapArray[index].search(new RegExp(codecString, 'i')) !== -1) {\n                /*jslint regexp: false*/\n                rtpMapNumber = rtpMapArray[index].match(/^[^\\d]*(\\d+)/g);\n                rtpMapNumber = rtpMapNumber[0].split(':');\n                payloadTypeArray.push(rtpMapNumber[1]);\n                /*jslint regexp: true*/\n            }\n        }\n\n        logger.debug('getPayloadTypeOf(' + codecString + ') = ' + payloadTypeArray[0]);\n\n        if (payloadTypeArray.length < 2) {\n            // if codec has just one match, then returns it as String for compatibility of old methods\n            return payloadTypeArray[0];\n        } else {\n            return payloadTypeArray;\n        }\n    };\n\n    /*\n     * Replaces new telephone event code in pSdp with the oldCode\n     * This is needed for WebRTC engine compatibility\n     * If an offer has a different telephone event code than what is already negotiated in that session, webrtc engine gives error\n     * Ex: Negotitation is firstly done with 126, but then the call server sends an offer with 96\n     * @param {type} pSdp\n     * @param {type} oldCode\n     * @param {type} newCode\n     */\n    this.replaceTelephoneEventPayloadType = function(pSdp, oldCode, newCode) {\n        var finalsdp, regex, matches, tempAudioLine, descriptions, index, substr, partialsdp = '',\n            number = '';\n\n        if (!pSdp || (pSdp.indexOf('telephone-event') === -1)) {\n            return pSdp;\n        }\n\n        regex = /^\\.*(a=rtpmap:)(\\d*)( telephone-event[ \\w+ ]*[ \\/+ ]*[ \\w+ ]*)\\r\\n?/m;\n\n        /* example: matches= [\"a=rtpmap:96 telephone-event/8000\\r\\n\", \"a=rtpmap:\", \"96\", \" telephone-event/8000\"] */\n\n        if (oldCode === newCode) { // telephone event has not changed\n            // nothing has changed, return without any changes\n            return pSdp;\n        }\n\n        // telephone event has changed\n        finalsdp = pSdp;\n\n        // replace rtpmap\n        regex = new RegExp('^\\\\.*a=rtpmap:' + newCode + ' telephone-event[ \\\\/+ ]*([ \\\\w+ ]*)\\\\r\\n', 'm');\n        matches = finalsdp.match(regex);\n        if (matches !== null && matches.length >= 2 && matches[1] !== '') {\n            number = matches[1];\n        } else {\n            number = 8000;\n        }\n        finalsdp = finalsdp.replace(regex, 'a=rtpmap:' + oldCode + ' telephone-event/' + number + '\\r\\n');\n\n        // replace audio line\n        regex = new RegExp('^\\\\.*(m=audio )[ \\\\w+ ]*[ \\\\/+ ]*[ \\\\w+ ]*( ' + newCode + ')', 'mg');\n        matches = finalsdp.match(regex);\n\n        if (matches !== null && matches.length >= 1 && matches[0] !== '') {\n            tempAudioLine = matches[0];\n            tempAudioLine = tempAudioLine.replace(newCode, oldCode);\n            finalsdp = finalsdp.replace(regex, tempAudioLine);\n        }\n\n        // replace fmtp\n        // only audio section needs to be considered, do not change video section\n        descriptions = finalsdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasAudio(substr)) {\n                regex = new RegExp('^\\\\.*a=fmtp:' + newCode, 'mg');\n                substr = substr.replace(regex, 'a=fmtp:' + oldCode);\n            }\n            partialsdp = partialsdp + substr;\n        }\n        if (partialsdp !== '') {\n            finalsdp = partialsdp;\n        }\n        logger.debug('replaceTelephoneEventPayloadType: newcode ' + newCode + ' is replaced with oldcode ' + oldCode);\n        return finalsdp;\n    };\n\n    /*\n     * Replaces opus codec in pSdp with the default codec number 109\n     * (TODO: get the codec from config.json)\n     * This is needed for trancoder enabled peer-to-peer scenarios\n     * transcoder only accepts opus codec that it offers\n     * @param {type} pSdp\n     */\n    this.replaceOpusCodec = function(pSdp) {\n        var regex, matches, tempAudioLine, oldCodecNumber = '',\n            defaultCodecNumber = 109,\n            descriptions, index, substr, partialsdp = '';\n\n        if (!pSdp || (pSdp.indexOf('opus') === -1)) {\n            return pSdp;\n        }\n\n        regex = /^\\.*(a=rtpmap:)(\\d*)( opus)/m;\n        /* example: matches= [\"a=rtpmap:109 opus/48000/2\\r\\n\", \"a=rtpmap:\", \"111\", \" opus/48000/2\"] */\n\n        matches = pSdp.match(regex);\n        if (matches !== null && matches.length >= 3 && matches[2] !== '') {\n            oldCodecNumber = matches[2];\n        } else {\n            logger.warn('sdp has opus without codec number');\n        }\n        // replace rtpmap\n        pSdp = pSdp.replace(regex, 'a=rtpmap:' + defaultCodecNumber + ' opus');\n\n        // replace audio line\n        regex = new RegExp('^\\\\.*(m=audio )[ \\\\w+ ]*[ \\\\/+ ]*[ \\\\w+ ]*( ' + oldCodecNumber + ')', 'mg');\n        matches = pSdp.match(regex);\n\n        if (matches !== null && matches.length >= 1 && matches[0] !== '') {\n            tempAudioLine = matches[0];\n            tempAudioLine = tempAudioLine.replace(oldCodecNumber, defaultCodecNumber);\n            pSdp = pSdp.replace(regex, tempAudioLine);\n        }\n\n        // replace fmtp\n        // only audio section needs to be considered, do not change video section\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasAudio(substr)) {\n                regex = new RegExp('^\\\\.*a=fmtp:' + oldCodecNumber, 'mg');\n                substr = substr.replace(regex, 'a=fmtp:' + defaultCodecNumber);\n            }\n            partialsdp = partialsdp + substr;\n        }\n        if (partialsdp !== '') {\n            pSdp = partialsdp;\n        }\n        logger.debug('replaceOpusCodec: new codec= ' + defaultCodecNumber);\n        return pSdp;\n    };\n\n    this.updateOpusConfig = function (pSdp, opusConfig) {\n\n        if (opusConfig === undefined) {\n            logger.debug('No control values for bandwidth control were added. Proceeding...');\n            return pSdp;\n        } else {\n            if (!pSdp || pSdp === undefined) {\n                return pSdp;\n            }\n\n            var opusBandwidthLine = '',\n                opusPayload = this.getOpusPayloadType(pSdp),\n                searchParam = 'a=fmtp:' + opusPayload,\n                untilFtmpLine = '',\n                opusFmtpLine = '',\n                aFmtp = '';\n\n            // fmtpLine format: a=fmtp:111 minptime=10;useinbandfec=1\n            // aFmtp format: a=fmtp:111\n\n            // values are set via the fcsConfig\n            var maxPlaybackRate = opusConfig.maxPlaybackRate,\n                maxAverageBitrate = opusConfig.maxAverageBitrate,\n                fec = opusConfig.fec,\n                dtx = opusConfig.dtx,\n                ptime = opusConfig.ptime;\n\n            // if the fmtp line with the opus payload exists, parse it to obtain the line with the opus codec\n            if (pSdp.indexOf(searchParam) !== -1) {\n                untilFtmpLine = pSdp.substring(pSdp.indexOf(searchParam), pSdp.length);\n                opusFmtpLine = untilFtmpLine.substring(0, untilFtmpLine.indexOf(lf + nl));\n\n                // fmtp line format is now a=fmtp:111 minptime=10;useinbandfec=1\n                aFmtp = opusFmtpLine.split(' ')[0];\n                opusBandwidthLine = aFmtp + ' '; // bandwidthLine starts with a=fmtp:[codec value]\n\n                // append the audio controls\n                opusBandwidthLine += this.createControlText(constants.SDP.BANDWIDTH.MAXPLAYBACKRATE, maxPlaybackRate);\n                opusBandwidthLine += this.createControlText(constants.SDP.BANDWIDTH.MAXAVERAGEBITRATE, maxAverageBitrate);\n                opusBandwidthLine += this.createControlText(constants.SDP.BANDWIDTH.FEC, fec);\n                opusBandwidthLine += this.createControlText(constants.SDP.BANDWIDTH.DTX, dtx);\n\n                // bandwidthLine.endsWith(';') workaround for IE\n                if (opusBandwidthLine.lastIndexOf(';') === opusBandwidthLine.length - 1) {\n                    opusBandwidthLine = opusBandwidthLine.slice(0, -1);\n                }\n\n                if (this.isValidOpusControl(constants.SDP.BANDWIDTH.PTIME, ptime)) {\n                    var ptimeSearchParam = 'a=' + constants.SDP.BANDWIDTH.PTIME;\n\n                    // check if ptime property is already in sdp\n                    if (pSdp.indexOf(ptimeSearchParam) !== -1) {\n                        var ptimeAndRest = pSdp.substring(pSdp.indexOf(ptimeSearchParam), pSdp.length);\n                        var ptimeLine = ptimeAndRest.substring(0, ptimeAndRest.indexOf(lf + nl)); // format: a=ptime:40\n                        pSdp = pSdp.replace(ptimeLine, ptimeSearchParam + ':' + ptime);\n                    } else {\n                        opusBandwidthLine += lf + nl + 'a=' + constants.SDP.BANDWIDTH.PTIME + ':' + ptime;\n                    }\n                }\n\n                // if there are more than 1 equal signs, then at least one of the provided control values were valid\n                // and we should replace the fmtp line for opus. otherwise the line should stay as default\n                if (opusBandwidthLine.split('=').length - 1 > 1) {\n                    pSdp = pSdp.replace(opusFmtpLine, opusBandwidthLine);\n                    logger.debug('Bandwidth control handled. Opus codec control values are updated.');\n                } else {\n                    logger.debug('Provided control parameters were invalid. Keeping default opus codec control values.');\n                }\n            } else {\n                logger.debug(`Search parameter ${searchParam} not found in sdp.`);\n            }\n        }\n\n        return pSdp;\n    };\n\n    this.createControlText = function (audioControlPropertyName, audioControlPropertyValue) {\n        var controlLine = '';\n\n        // if a value for a control was set, use it. otherwise discard the control value\n        if (typeof audioControlPropertyValue !== 'undefined') {\n            if (this.isValidOpusControl(audioControlPropertyName, audioControlPropertyValue)) {\n                controlLine = audioControlPropertyName + '=' + audioControlPropertyValue + ';';\n            }\n        }\n\n        return controlLine;\n    };\n\n    this.isValidOpusControl = function (controlName, controlValue) {\n        var val = parseInt(controlValue);\n        switch (controlName) {\n        case constants.SDP.BANDWIDTH.MAXPLAYBACKRATE:\n            return (8000 <= val && val <= 48000);\n        case constants.SDP.BANDWIDTH.MAXAVERAGEBITRATE:\n            return (6000 <= val && val <= 510000);\n        case constants.SDP.BANDWIDTH.FEC:\n        case constants.SDP.BANDWIDTH.DTX:\n            return (val === 0 || val === 1);\n        case constants.SDP.BANDWIDTH.PTIME:\n            return (2.5 < val && val <= 120);\n        default:\n            return false;\n        }\n    };\n\n    this.getG7228000PayloadType = function(pSdp) {\n        return this.getPayloadTypeOf('G722/8000', pSdp);\n    };\n\n    this.getVP8PayloadType = function(pSdp) {\n        return this.getPayloadTypeOf('VP8/90000', pSdp);\n    };\n\n    this.getG72216000PayloadType = function(pSdp) {\n        return this.getPayloadTypeOf('G722/16000', pSdp);\n    };\n\n    this.getRTXPayloadType = function(pSdp) {\n        return this.getPayloadTypeOf('rtx/90000', pSdp);\n    };\n\n    this.getH264PayloadType = function(pSdp) {\n        return this.getPayloadTypeOf('H264/90000', pSdp);\n    };\n\n    this.getOpusPayloadType = function (pSdp) {\n        return this.getPayloadTypeOf('opus/48000', pSdp);\n    };\n\n    this.isSdpHasTelephoneEventWithRate = function(pSdp, rate) {\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n        return pSdp.indexOf('telephone-event/' + rate) !== -1;\n    };\n\n    this.isSdpHasTelephoneEvent = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n        return pSdp.indexOf('telephone-event/') !== -1;\n    };\n\n    this.isSdpHasVP8Codec = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n        return pSdp.indexOf('VP8/90000') !== -1;\n    };\n\n    this.isSdpHasH264Codec = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n        return pSdp.indexOf('H264/90000') !== -1;\n    };\n\n    /*\n     * checkSupportedVideoCodecs\n     *\n     * checks video codec support status and remove video m-line if no supported video codec is available\n     * @param {type} pSdp\n     * @param {type} localOfferSdp\n     */\n    this.checkSupportedVideoCodecs = function(pSdp, localOfferSdp, isH264Enabled) {\n        var newSdp;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n        if (this.isVideoCodecsSupported(pSdp, isH264Enabled)) {\n            return pSdp;\n        } else {\n            if (localOfferSdp) {\n                newSdp = this.removeAllVideoCodecs(pSdp);\n                newSdp = this.addVP8Codec(newSdp, localOfferSdp);\n                newSdp = this.updateSdpVideoPort(newSdp, false);\n                newSdp = this.performVideoPortZeroWorkaround(newSdp);\n            } else {\n                //******************************************************\n                //Changing video port to 0 when there is no supported\n                //video codecs is not working in webrtc library\n                //******************************************************\n                if (!this.isSdpHasVP8Codec(pSdp)) {\n                    if (pSdp.indexOf(constants.SDP.M_LINE + constants.STRING.VIDEO + ' 0 ', 0) !== -1) {\n                        newSdp = this.addVP8Codec(pSdp, newSdp);\n                    } else {\n                        //this is required for PCC and meetme with video\n                        newSdp = this.updateSdpVideoPort(pSdp, false);\n                        newSdp = this.addVP8Codec(newSdp, newSdp);\n                    }\n                } else {\n                    //this is required for PCC and meetme with video\n                    newSdp = this.removeVideoDescription(pSdp);\n                }\n            }\n\n            return newSdp;\n        }\n    };\n\n    /*\n     * isVideoCodecsSupported: this function checks supported video codecs are listed in m=video line\n     * Supported video codecs are :\n     *      VP8     default supported codec\n     *      H264    if h264 is enabled with plugin\n     *      @param {type} pSdp\n     */\n    this.isVideoCodecsSupported = function(pSdp, isH264Enabled) {\n        if (this.isSdpHasVP8Codec(pSdp)) {\n            return true;\n        }\n        if (isH264Enabled) {\n            if (this.isSdpHasH264Codec(pSdp)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    this.removeAllVideoCodecs = function(pSdp) {\n        var regex, matches, codecs, newSdp, index;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        //TODO: The RegExp below has invalid control character of \\n. Don't think we should have that\n        // but i'm leaving it for now since it might be dangerous to fix. Also need to disable the eslint.\n        //\n        //eslint-disable-next-line no-control-regex\n        regex = new RegExp('^\\\\.*(m=video )(\\\\d*)( RTP/SAVPF )([ \\\\w+ ]*[ \\\\/+ ]*[ \\\\w+ ])\\\\r\\n', 'm');\n\n        newSdp = pSdp;\n        matches = newSdp.match(regex);\n\n        if (matches !== null && matches.length >= 5 && matches[0] !== '') {\n            codecs = matches[4].split(' ');\n            for (index = 0; index < codecs.length; index++) {\n                logger.debug('codec[' + index + '] : ' + codecs[index]);\n                newSdp = this.removeVideoCodec(newSdp, codecs[index]);\n            }\n        }\n\n        return newSdp;\n    };\n\n    /*\n     * removeVideoCodec: removes given codec type from sdp.\n     * @param {type} pSdp\n     * @param {type} codecToRemove\n     */\n    this.removeVideoCodec = function(pSdp, codecToRemove) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index, reg = /\\r\\n|\\r|\\n/m,\n            video_arr, i,\n            new_substr = '',\n            elm, regExpCodec;\n        if (pSdp === null || pSdp === undefined || !codecToRemove) {\n            return pSdp;\n        }\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasVideo(substr)) {\n                video_arr = substr.split(reg);\n                for (i = 0; i < video_arr.length; i++) {\n                    elm = video_arr[i];\n                    if (elm && this.isSdpHasVideo(elm)) {\n                        // remove given video codec from m=video line\n                        regExpCodec = new RegExp(' ' + codecToRemove, 'g');\n                        elm = elm.replace(regExpCodec, '');\n                        elm = elm + lf + nl;\n                        // Workaround for issue 1603.\n                    } else if (elm && elm.indexOf('a=fmtp:' + codecToRemove) !== -1) {\n                        elm = elm.replace(/a=fmtp[\\w\\W]*/, '');\n                    } else if (elm && elm.indexOf('a=rtpmap:' + codecToRemove) !== -1) {\n                        elm = elm.replace(/a=rtpmap[\\w\\W]*/, '');\n                    } else if (elm && elm.indexOf('a=rtcp-fb:' + codecToRemove) !== -1) {\n                        elm = elm.replace(/a=rtcp-fb[\\w\\W]*/, '');\n                    } else if (elm && elm !== '') {\n                        elm = elm + lf + nl;\n                    }\n                    new_substr = new_substr + elm;\n                }\n                substr = new_substr;\n            }\n            sdp = sdp + substr;\n        }\n        return sdp;\n    };\n\n    /*\n     * addVP8Codec: adds missing VP8 Codec\n     * @param {type} pSdp\n     * @param {type} offerSdp\n     */\n    this.addVP8Codec = function(pSdp, offerSdp) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index,\n            reg = /\\r\\n|\\r|\\n/m,\n            video_arr, i, new_substr = '',\n            vp8PayloadType, codecType, elm,\n            videoUFRAGParam, videoPWDParam, ice_ufrag, ice_pwd;\n\n        if (this.isSdpHasVP8Codec(pSdp)) {\n            return pSdp;\n        }\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasVideo(substr)) {\n                if (offerSdp &&\n                    this.isSdpHasVideo(offerSdp) &&\n                    this.isSdpHasVP8Codec(offerSdp)) {\n                    vp8PayloadType = this.getVP8PayloadType(offerSdp);\n                    if (substr.indexOf('a=rtpmap:' + vp8PayloadType) !== -1) {\n                        this.removeSdpLineContainingText(substr, 'a=rtpmap:' + vp8PayloadType);\n                    }\n                } else {\n                    codecType = 100;\n                    while (substr.indexOf('a=rtpmap:' + codecType) !== -1) {\n                        codecType = codecType + 1;\n                    }\n                    vp8PayloadType = codecType;\n                }\n                video_arr = substr.split(reg);\n                for (i = 0; i < video_arr.length; i++) {\n                    elm = video_arr[i];\n                    if (elm && this.isSdpHasVideo(elm)) {\n                        if (elm.indexOf(vp8PayloadType) === -1) {\n                            elm = elm + ' ' + vp8PayloadType;\n                        }\n                        elm = elm + lf + nl + 'a=rtpmap:' + vp8PayloadType + ' VP8/90000' + lf + nl;\n                    } else if (elm && elm !== '') {\n                        elm = elm + lf + nl;\n                    }\n                    new_substr = new_substr + elm;\n                }\n                substr = new_substr;\n            }\n            sdp = sdp + substr;\n        }\n\n        videoUFRAGParam = this.checkICEParams(sdp, 'video', constants.SDP.ICE_UFRAG);\n        if (videoUFRAGParam < 2) {\n            ice_ufrag = this.getICEParams(sdp, constants.SDP.ICE_UFRAG, false);\n            if (ice_ufrag) {\n                sdp = this.restoreICEParams(sdp, 'video', constants.SDP.ICE_UFRAG, ice_ufrag);\n            }\n        }\n        videoPWDParam = this.checkICEParams(sdp, 'video', constants.SDP.ICE_PWD);\n        if (videoPWDParam < 2) {\n            ice_pwd = this.getICEParams(sdp, constants.SDP.ICE_PWD, false);\n            if (ice_pwd) {\n                sdp = this.restoreICEParams(sdp, 'video', constants.SDP.ICE_PWD, ice_pwd);\n            }\n        }\n\n        return sdp;\n    };\n\n    this.removeSdpLineContainingText = function(pSdp, containing_text) {\n        var i, splitArray;\n\n        if (pSdp === null || pSdp === undefined || !containing_text) {\n            return pSdp;\n        }\n\n        splitArray = pSdp.split(nl);\n        pSdp = splitArray[0] + nl;\n        for (i = 1; i < splitArray.length - 1; i++) {\n            if (splitArray[i].indexOf(containing_text) !== -1) {\n                logger.debug('removed line which contains ' + containing_text);\n            } else {\n                pSdp += splitArray[i] + nl;\n            }\n        }\n        return pSdp;\n    };\n\n    this.removeVideoDescription = function(pSdp) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (!this.isSdpHasVideo(substr)) {\n                sdp = sdp + substr;\n            } else {\n                logger.debug('removeVideoDescription : m=video description removed');\n            }\n        }\n        return sdp;\n    };\n\n    /*\n     * updateSdpVideoPort\n     * @param {type} pSdp\n     * @param {type} status\n     */\n    this.updateSdpVideoPort = function(pSdp, status) {\n        var r_sdp, port_text;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        logger.debug('updateSdpVideoPort: status= ' + status);\n\n        r_sdp = pSdp;\n\n        if (status) {\n            port_text = constants.SDP.M_LINE + constants.STRING.VIDEO + ' 1';\n        } else {\n            port_text = constants.SDP.M_LINE + constants.STRING.VIDEO + ' 0';\n            r_sdp = this.updateSdpDirection(r_sdp, constants.STRING.VIDEO, constants.WEBRTC.MEDIA_STATE.INACTIVE);\n        }\n\n        if (this.isSdpHasVideo(r_sdp)) {\n            r_sdp = r_sdp.replace(/m=video [0-9]+/, port_text);\n        }\n\n        return r_sdp;\n    };\n\n    /*\n     * performVideoPortZeroWorkaround - apply this when term side sends an answer with video port 0\n     * @param {type} pSdp\n     */\n    this.performVideoPortZeroWorkaround = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        if (!this.isSdpHasVideoWithZeroPort(pSdp)) {\n            return pSdp;\n        }\n        pSdp = this.addSdpMissingCryptoLine(pSdp);\n        pSdp = this.replaceZeroVideoPortWithOne(pSdp);\n\n        //chrome38 fix\n        pSdp = this.updateVideoSdpDirectionToInactive(pSdp);\n\n        return pSdp;\n    };\n\n    // Issue      : Meetme conference failed due to a webrtc bug\n    //              When video is sent in SDP with 0 without a=crypto line(SDES) in SDP,\n    //              hold scenario for meetme failed.\n    // Workaround : Add dummy a=crypto or a=fingerprint line to solve the issue with a workaround\n    // Note       : fingerprint(DTLS enabled) may still fails on meetme. This is known issue as below:\n    //              https://code.google.com/p/webrtc/issues/detail?id=2316\n    //              Check with Chrome 37\n    this.addSdpMissingCryptoLine = function(sdp) {\n        var mediaSplit, audioLines, cryptLine = null,\n            reg = /\\r\\n|\\r|\\n/m,\n            i;\n\n        // If there is no \"m=video 0\" line, sdp should not be modified\n        if (sdp.indexOf(constants.SDP.M_LINE + constants.STRING.VIDEO + ' 0 ', 0) === -1) {\n            return sdp;\n        }\n\n        mediaSplit = sdp.split(constants.SDP.M_LINE + constants.STRING.VIDEO);\n\n        audioLines = mediaSplit[0].split(reg);\n        for (i = 0; i < audioLines.length; i++) {\n            if ((audioLines[i].indexOf(constants.SDP.A_LINE + constants.SDP.CRYPTO) !== -1) || (audioLines[i].indexOf(constants.SDP.A_LINE + constants.SDP.FINGERPRINT) !== -1)) {\n                cryptLine = audioLines[i];\n                break;\n            }\n        }\n\n        if (cryptLine === null) {\n            return sdp;\n        }\n\n        if (mediaSplit[0].indexOf(constants.SDP.A_LINE + constants.SDP.CRYPTO) !== -1) {\n            if (mediaSplit[1].indexOf(constants.SDP.A_LINE + constants.SDP.CRYPTO, 0) === -1) {\n                mediaSplit[1] += cryptLine + '\\n';\n                logger.debug('addSdpMissingCryptoLine : crypto line is added : ' + cryptLine);\n            }\n        } else if (mediaSplit[0].indexOf(constants.SDP.A_LINE + constants.SDP.FINGERPRINT, 0) !== -1) {\n            if (mediaSplit[1].indexOf(constants.SDP.A_LINE + constants.SDP.FINGERPRINT, 0) === -1) {\n                //DTLS is enabled, even adding fingerprint line in SDP,\n                //meetme scenario fails. This is known issue and followed\n                //by webrtc for DTLS enabled scenarios :\n                //https://code.google.com/p/webrtc/issues/detail?id=2316\n                mediaSplit[1] += cryptLine + '\\na=setup:passive\\n';\n                logger.debug('addSdpMissingCryptoLine : dtls lines are added : ' + cryptLine + 'and a=setup:passive');\n                logger.debug('dtls enabled: known issue by webrtc may be fixed! Check it');\n            }\n        }\n        sdp = mediaSplit.join(constants.SDP.M_LINE + constants.STRING.VIDEO);\n        return sdp;\n    };\n\n    this.checkICEParams = function(pSdp, mediaType, type) {\n        var parse1, parse2;\n\n        if (pSdp === null || pSdp === undefined) {\n            return 0;\n        }\n\n        parse1 = pSdp.split('m=video');\n        if (parse1.length < 2) {\n            return 0;\n        }\n\n        switch (type) {\n        case constants.SDP.ICE_UFRAG:\n            if (mediaType === 'audio') {\n                parse2 = parse1[0].split('a=ice-ufrag:');\n            } else {\n                parse2 = parse1[1].split('a=ice-ufrag:');\n            }\n            break;\n        case constants.SDP.ICE_PWD:\n            if (mediaType === 'audio') {\n                parse2 = parse1[0].split('a=ice-pwd:');\n            } else {\n                parse2 = parse1[1].split('a=ice-pwd:');\n            }\n            break;\n        default:\n            return 0;\n        }\n\n        return parse2.length;\n    };\n\n    this.getICEParams = function(pSdp, type, isVideo) {\n        var parse1, parse2, parse3, param;\n        if (pSdp === null || pSdp === undefined) {\n            return;\n        }\n\n        switch (type) {\n        case constants.SDP.ICE_UFRAG:\n            parse1 = pSdp.split('a=ice-ufrag:');\n            break;\n        case constants.SDP.ICE_PWD:\n            parse1 = pSdp.split('a=ice-pwd:');\n            break;\n        default:\n            return undefined;\n        }\n\n        if (isVideo) {\n            if (parse1[2] !== undefined) { /*\"....a=ice-....a=ice-....\"*/\n                parse2 = parse1[2];\n                parse3 = parse2.split('a=');\n                param = parse3[0];\n                return param; /*return video ice params*/\n            } else {\n                return undefined;\n            }\n        } else {\n            if (parse1[1] !== undefined) { /*\"....a=ice-....a=ice-....\"*/\n                parse2 = parse1[1];\n                parse3 = parse2.split('a=');\n                param = parse3[0];\n                return param;\n            } else {\n                return undefined;\n            }\n        }\n    };\n\n    this.restoreICEParams = function(pSdp, mediaType, type, new_value) {\n        var sdp = '',\n            substr, index, parse1;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        parse1 = pSdp.split('m=video');\n        if (parse1.length < 2) {\n            return pSdp;\n        }\n\n        for (index = 0; index < parse1.length; index++) {\n            substr = parse1[index];\n            if (index === 0) {\n                if (mediaType === 'audio') {\n                    substr = substr + 'a=' + type + new_value;\n                }\n                sdp = sdp + substr;\n            }\n            if (index === 1) {\n                if (mediaType === 'video') {\n                    substr = substr + 'a=' + type + new_value;\n                }\n                sdp = sdp + 'm=video' + substr;\n            }\n        }\n        return sdp;\n    };\n\n    this.updateICEParams = function(pSdp, type, new_value) {\n        var sdp = '',\n            subsdp = '',\n            substr, index, num,\n            parse1, parse2;\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        switch (type) {\n        case constants.SDP.ICE_UFRAG:\n            parse1 = pSdp.split('a=ice-ufrag:');\n            break;\n        case constants.SDP.ICE_PWD:\n            parse1 = pSdp.split('a=ice-pwd:');\n            break;\n        default:\n            return pSdp;\n        }\n\n        for (index = 0; index < parse1.length; index++) {\n            substr = parse1[index];\n            if (index === 2) {\n                parse2 = substr.split('a=');\n\n                for (num = 0; num < parse2.length; num++) {\n                    if (num === 0) {\n                        parse2[num] = new_value;\n                        subsdp = subsdp + parse2[num];\n                    } else {\n                        subsdp = subsdp + 'a=' + parse2[num];\n                    }\n                }\n                substr = subsdp;\n                sdp = sdp + substr;\n            } else {\n                sdp = sdp + substr + 'a=' + type;\n            }\n        }\n        return sdp;\n    };\n\n    this.checkIceParamsLengths = function(newSdp, oldSdp) {\n        var ice_ufrag, ice_pwd;\n        ice_ufrag = this.getICEParams(newSdp, constants.SDP.ICE_UFRAG, true);\n        ice_pwd = this.getICEParams(newSdp, constants.SDP.ICE_PWD, true);\n\n        if (ice_ufrag && ice_ufrag.length < 4) { /*RFC 5245 the ice-ufrag attribute can be 4 to 256 bytes long*/\n            ice_ufrag = this.getICEParams(oldSdp, constants.SDP.ICE_UFRAG, true);\n            if (ice_ufrag) {\n                newSdp = this.updateICEParams(newSdp, constants.SDP.ICE_UFRAG, ice_ufrag);\n            }\n        }\n\n        if (ice_pwd && ice_pwd.length < 22) { /*RFC 5245 the ice-pwd attribute can be 22 to 256 bytes long*/\n            ice_pwd = this.getICEParams(oldSdp, constants.SDP.ICE_PWD, true);\n            if (ice_pwd) {\n                newSdp = this.updateICEParams(newSdp, constants.SDP.ICE_PWD, ice_pwd);\n            }\n        }\n        return newSdp;\n    };\n\n    /*\n     * isSdpVideoSendEnabled\n     * @param {type} pSdp\n     */\n    this.isSdpVideoSendEnabled = function(pSdp) {\n        var direction,\n            msg = 'isSdpVideoSendEnabled: ',\n            result = false;\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n\n        if (!this.isSdpEnabled(pSdp, constants.STRING.VIDEO)) {\n            logger.debug(msg + result);\n            return result;\n        }\n\n        direction = this.getSdpDirectionLogging(pSdp, constants.STRING.VIDEO, false);\n        if (direction === constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE ||\n            direction === constants.WEBRTC.MEDIA_STATE.SEND_ONLY) {\n            result = true;\n            logger.debug(msg + result);\n            return result;\n        }\n\n        logger.debug(msg + result);\n        return result;\n    };\n\n    this.getSdpDirectionLogging = function(pSdp, type, logging) {\n        var substr = '',\n            descriptions = [],\n            index,\n            direction = constants.WEBRTC.MEDIA_STATE.INACTIVE,\n            logmsg;\n\n        logmsg = function(state) {\n            if (logging) {\n                logger.debug('getSdpDirection: type= ' + type + ' state= ' + state);\n            }\n        };\n\n        if (pSdp.indexOf(constants.SDP.M_LINE + type) === -1) {\n            logmsg(direction);\n            return direction;\n        }\n\n        if (pSdp.indexOf(constants.SDP.M_LINE + type + ' 0') !== -1) {\n            logmsg(direction);\n            return direction;\n        }\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (substr.indexOf(constants.SDP.M_LINE + type) !== -1) {\n                if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE) !== -1) {\n                    direction = constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE;\n                    logmsg(direction);\n                    return direction;\n                } else if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.SEND_ONLY) !== -1) {\n                    direction = constants.WEBRTC.MEDIA_STATE.SEND_ONLY;\n                    logmsg(direction);\n                    return direction;\n                } else if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) !== -1) {\n                    direction = constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n                    logmsg(direction);\n                    return direction;\n                } else if (substr.indexOf(constants.SDP.A_LINE + constants.WEBRTC.MEDIA_STATE.INACTIVE) !== -1) {\n                    logmsg(direction);\n                    return direction;\n                }\n                direction = constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE;\n                return direction;\n            }\n        }\n        direction = constants.WEBRTC.MEDIA_STATE.NOT_FOUND;\n        logmsg(direction);\n        return direction;\n    };\n\n    /*\n     * remove only video ssrc from the sdp\n     * this is a workaround to hear audio in a peer-to-peer call\n     * @param {type} pSdp\n     */\n    this.deleteInactiveVideoSsrc = function(pSdp) {\n        var videoSdp = [];\n\n        if (this.isSdpHas(pSdp, constants.STRING.VIDEO)) {\n            videoSdp = pSdp.split(constants.SDP.M_LINE + constants.STRING.VIDEO);\n            if (videoSdp[1] !== null) {\n                videoSdp[1] = this.deleteSsrcFromSdp(videoSdp[1]);\n            }\n        } else {\n            return pSdp;\n        }\n        return videoSdp[0] + constants.SDP.M_LINE + constants.STRING.VIDEO + videoSdp[1];\n    };\n\n    /*\n     * deleteSsrcFromSdp - delete ssrc from the sdp, use it when there is video continuity issue\n     * @param {type} sdp\n     */\n    this.deleteSsrcFromSdp = function(sdp) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n        while (sdp.indexOf('a=ssrc') !== -1) {\n            sdp = sdp.replace(/(a=ssrc[\\w\\W]*?(:\\r|\\n))/, '');\n        }\n        return sdp;\n    };\n\n    this.getTcpSetupAttribute = function(sdp) {\n        if (sdp === null || sdp === undefined) {\n            return;\n        }\n\n        if (sdp.indexOf(constants.SDP.SETUP_ACTIVE) !== -1) {\n            return 'active';\n        } else if (sdp.indexOf(constants.SDP.SETUP_PASSIVE) !== -1) {\n            return 'passive';\n        } else if (sdp.indexOf(constants.SDP.SETUP_ACTPASS) !== -1) {\n            return 'actpass';\n        }\n    };\n\n    this.setTcpSetupAttribute = function(sdp, newSetupAttribute) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n\n        if (newSetupAttribute !== 'active') {\n            while (sdp.indexOf(constants.SDP.SETUP_ACTIVE) !== -1) {\n                logger.debug('a=setup:active to ' + newSetupAttribute);\n                sdp = sdp.replace(constants.SDP.SETUP_ACTIVE, 'a=setup:' + newSetupAttribute);\n            }\n        }\n\n        if (newSetupAttribute !== 'passive') {\n            while (sdp.indexOf(constants.SDP.SETUP_PASSIVE) !== -1) {\n                logger.debug('a=setup:passive to ' + newSetupAttribute);\n                sdp = sdp.replace(constants.SDP.SETUP_PASSIVE,  'a=setup:' + newSetupAttribute);\n            }\n        }\n\n        if (newSetupAttribute !== 'actpass') {\n            while (sdp.indexOf(constants.SDP.SETUP_ACTPASS) !== -1) {\n                logger.debug('a=setup:actpass to ' + newSetupAttribute);\n                sdp = sdp.replace(constants.SDP.SETUP_ACTPASS,  'a=setup:' + newSetupAttribute);\n            }\n        }\n        return sdp;\n    };\n\n    /*\n     *\n     * @param {type} pSdp\n     * @param {type} oSdp\n     * @returns pSdp\n     */\n    this.checkAndRestoreICEParams = function(pSdp, oSdp) {\n        var audioUFRAGParam, audioPWDParam, videoUFRAGParam, videoPWDParam, ice_ufrag, ice_pwd;\n\n        audioUFRAGParam = this.checkICEParams(pSdp, constants.STRING.AUDIO, constants.SDP.ICE_UFRAG);\n        if (audioUFRAGParam < 2) {\n            ice_ufrag = this.getICEParams(oSdp, constants.SDP.ICE_UFRAG, false);\n            if (ice_ufrag) {\n                pSdp = this.restoreICEParams(pSdp, constants.STRING.AUDIO, constants.SDP.ICE_UFRAG, ice_ufrag);\n            }\n        }\n        audioPWDParam = this.checkICEParams(pSdp, constants.STRING.AUDIO, constants.SDP.ICE_PWD);\n        if (audioPWDParam < 2) {\n            ice_pwd = this.getICEParams(oSdp, constants.SDP.ICE_PWD, false);\n            if (ice_pwd) {\n                pSdp = this.restoreICEParams(pSdp, constants.STRING.AUDIO, constants.SDP.ICE_PWD, ice_pwd);\n            }\n        }\n        videoUFRAGParam = this.checkICEParams(pSdp, constants.STRING.VIDEO, constants.SDP.ICE_UFRAG);\n        if (videoUFRAGParam < 2) {\n            ice_ufrag = this.getICEParams(oSdp, constants.SDP.ICE_UFRAG, false);\n            if (ice_ufrag) {\n                pSdp = this.restoreICEParams(pSdp, constants.STRING.VIDEO, constants.SDP.ICE_UFRAG, ice_ufrag);\n            }\n        }\n        videoPWDParam = this.checkICEParams(pSdp, constants.STRING.VIDEO, constants.SDP.ICE_PWD);\n        if (videoPWDParam < 2) {\n            ice_pwd = this.getICEParams(oSdp, constants.SDP.ICE_PWD, false);\n            if (ice_pwd) {\n                pSdp = this.restoreICEParams(pSdp, constants.STRING.VIDEO, constants.SDP.ICE_PWD, ice_pwd);\n            }\n        }\n        return pSdp;\n    };\n\n    this.incrementVersion = function(pSdp) {\n        var oLineAsArray = [],\n            newoLine = '',\n            index, version, actualoLine;\n        logger.debug('incrementVersion');\n\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        // o=- 937770930552268055 2 IN IP4 127.0.0.1\n        // o=mozilla...THIS_IS_SDPARTA-37.0.1 4294967295 0 IN IP4 0.0.0.0\n        // get o line\n        actualoLine = pSdp.match(/(o=[\\w\\W]*?(:\\r|\\n))/);\n\n        if (!actualoLine) {\n            return pSdp;\n        }\n\n        // get o line\n        oLineAsArray = actualoLine[0].split(' ');\n\n        //getting version and convering it to int\n        version = +oLineAsArray[2];\n        //incrementing the version\n        version = version + 1;\n\n        for (index = 0; index < oLineAsArray.length; index++) {\n            if (index !== 0) {\n                // prevents adding unnecessary space before the o line\n                newoLine = newoLine + ' ';\n            }\n            if (index === 2) {\n                // 2nd index is version index\n                newoLine = newoLine + version;\n            } else {\n                newoLine = newoLine + oLineAsArray[index];\n            }\n        }\n\n        pSdp = pSdp.replace(actualoLine[0], newoLine);\n\n        return pSdp;\n    };\n\n    /*\n     * escalateSdpDirection for type:audio or video\n     * @param {type} pSdp\n     * @param {type} type\n     */\n    this.escalateSdpDirection = function(pSdp, type) {\n        var direction = this.getSdpDirectionLogging(pSdp, type, false);\n        logger.debug('escalateSdpDirection: type= ' + type + ' direction= ' + direction);\n        if (direction === constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            return this.changeDirection(pSdp, direction, constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE, type);\n        } else if (direction === constants.WEBRTC.MEDIA_STATE.INACTIVE) {\n            return this.changeDirection(pSdp, direction, constants.WEBRTC.MEDIA_STATE.SEND_ONLY, type);\n        }\n        return pSdp;\n    };\n\n    /*\n     * deescalateSdpDirection for type:audio or video\n     * @param {type} pSdp\n     * @param {type} type\n     */\n    this.deescalateSdpDirection = function(pSdp, type) {\n        var direction = this.getSdpDirectionLogging(pSdp, type, false);\n        logger.debug('deescalateSdpDirection: type= ' + type + ' direction= ' + direction);\n        if (direction === constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            return this.changeDirection(pSdp, direction, constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, type);\n        } else if (direction === constants.WEBRTC.MEDIA_STATE.SEND_ONLY) {\n            return this.changeDirection(pSdp, direction, constants.WEBRTC.MEDIA_STATE.INACTIVE, type);\n        }\n        return pSdp;\n    };\n\n    this.isIceLite = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n        if (pSdp && pSdp.indexOf('a=ice-lite') !== -1) {\n            return true;\n        }\n        return false;\n    };\n\n    this.getSessionIdFromSdp = function(sdp) {\n        var oLine;\n\n        if (!sdp) {\n            return -1;\n        }\n        oLine = sdp.match(/(o=[\\w\\W]*?(:\\r|\\n))/);\n\n        if (!oLine) {\n            return -1;\n        }\n\n        oLine = oLine[0].split(' ');\n\n        if (oLine[1]) {\n            logger.info('getSessionIdFromSdp = ' + oLine[1]);\n            return oLine[1];\n        } else {\n            logger.warn('getSessionIdFromSdp called with wrong sdp!!');\n            return -1;\n        }\n    };\n\n    /*\n     * Updates the version in tosdp with the one retrieved from fromsdp with incrementing\n     */\n    this.updateVersion = function(fromSdp, toSdp) {\n        var fromOline = [],\n            toOline = [],\n            newoLine = '',\n            index, version, actualtoOline = '';\n\n        if (fromSdp === null || fromSdp === undefined) {\n            return toSdp;\n        }\n\n        logger.debug(' updateVersion called...');\n\n        // o=- 937770930552268055 2 IN IP4 127.0.0.1\n        // get o line\n        fromOline = fromSdp.match(/(o=[\\w\\W]*?(:\\r|\\n))/);\n\n        if (!fromOline) {\n            return toSdp;\n        }\n\n        fromOline = fromOline[0].split(' ');\n\n        // get o line\n        actualtoOline = toSdp.match(/(o=[\\w\\W]*?(:\\r|\\n))/);\n        toOline = actualtoOline[0].split(' ');\n\n        if (fromOline) {\n            version = fromOline[2];\n        } else {\n            logger.warn('updateVersion called with wrong fromSdp!!');\n            return toSdp;\n        }\n\n        // convert to int and increment\n        version = (+version) + 1;\n\n        logger.debug(' updateVersion fromVersion incremented: ' + version);\n\n        for (index = 0; index < toOline.length; index++) {\n            if (index !== 0) {\n                // prevents adding unnecessary space before the o line\n                newoLine = newoLine + ' ';\n            }\n            if (index === 2) {\n                // 2nd index is version index\n                newoLine = newoLine + version;\n            } else {\n                newoLine = newoLine + toOline[index];\n            }\n        }\n        toSdp = toSdp.replace(actualtoOline[0], newoLine);\n\n        return toSdp;\n    };\n\n    // TODO: Method below assumes to receive only one video m-line, need to correct this logic.\n    this.copyCandidatesToTheNewLocalSdp = function(oldSdp, newSdp) {\n        var oldSplitSdp = [],\n            newSplitSdp = [],\n            oldVideoSdp, newVideoSdp,\n            oldAudioSdp, newAudioSdp;\n\n        oldSplitSdp = oldSdp.split(constants.SDP.M_LINE + constants.STRING.VIDEO);\n        newSplitSdp = newSdp.split(constants.SDP.M_LINE + constants.STRING.VIDEO);\n\n        oldAudioSdp = oldSplitSdp[0];\n        oldVideoSdp = oldSplitSdp[1] !== undefined ? constants.SDP.M_LINE + constants.STRING.VIDEO + oldSplitSdp[1] : undefined;\n        newAudioSdp = newSplitSdp[0];\n        newVideoSdp = newSplitSdp[1] !== undefined ? constants.SDP.M_LINE + constants.STRING.VIDEO + newSplitSdp[1] : undefined;\n\n        newAudioSdp = this.copyCandidates(oldAudioSdp, newAudioSdp);\n\n        if (oldVideoSdp !== undefined && newVideoSdp !== undefined) {\n            newVideoSdp = this.copyCandidates(oldVideoSdp, newVideoSdp);\n        }\n\n        if (newVideoSdp !== undefined) {\n            return newAudioSdp + newVideoSdp;\n        } else {\n            return newAudioSdp;\n        }\n    };\n\n    this.copyCandidates = function(oldSdp, newSdp) {\n        var mediaLines, reg = /\\r\\n|\\r|\\n/m,\n            i, port;\n\n        mediaLines = oldSdp.split(reg);\n\n        for (i = 0; i < mediaLines.length; i++) {\n            if (mediaLines[i].indexOf('a=candidate') !== -1 && newSdp.indexOf(('a=candidate') === -1)) {\n                newSdp += mediaLines[i] + '\\r\\n';\n            } else if (mediaLines[i].indexOf('c=IN') !== -1 && newSdp.indexOf(('c=IN IP4 0.0.0.0') !== -1)) {\n                newSdp = newSdp.replace(/(c=[\\w\\W]*?(:\\r|\\n))/, mediaLines[i] + '\\r\\n');\n            } else if ((mediaLines[i].indexOf('m=audio') !== -1) &&\n                (newSdp.indexOf(constants.SDP.M_LINE + constants.STRING.AUDIO + ' 1 ') !== -1 ||\n                    newSdp.indexOf(constants.SDP.M_LINE + constants.STRING.AUDIO + ' 9 ') !== -1)) {\n                port = mediaLines[i].split(' ')[1];\n\n                newSdp = newSdp.replace(/m=audio \\d/, constants.SDP.M_LINE + constants.STRING.AUDIO + ' ' + port);\n            } else if ((mediaLines[i].indexOf('m=video') !== -1) &&\n                (newSdp.indexOf(constants.SDP.M_LINE + constants.STRING.VIDEO + ' 1 ') !== -1 ||\n                    newSdp.indexOf(constants.SDP.M_LINE + constants.STRING.VIDEO + ' 9 ') !== -1)) {\n                port = mediaLines[i].split(' ')[1];\n\n                newSdp = newSdp.replace(/m=video \\d/, constants.SDP.M_LINE + constants.STRING.VIDEO + ' ' + port);\n            }\n        }\n        return newSdp;\n    };\n\n    /*\n     * getSdpFromObject\n     * There is a webrtc bug in Plugin.\n     * sendrecv direction changed to recvonly for offer type sdps\n     * This function is the workaround solution to get the correct sdp from the object\n     * until webrtc bug in plugin is fixed.\n     */\n    this.getSdpFromObject = function(oSdp) {\n        var sdp;\n        sdp = oSdp.sdp;\n\n        return sdp;\n    };\n\n    /*\n     * deleteGoogleIceFromSdp - delete google-ice option from the sdp\n     */\n    this.deleteGoogleIceFromSdp = function(sdp) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n        sdp = sdp.replace(/(a=ice-options:google-ice[\\w\\W]*?(:\\r|\\n))/g, '');\n        return sdp;\n    };\n\n    this.respondToRemoteSdpDirections = function(localSdp, remoteSdp) {\n        localSdp = this.respondToRemoteMediaSdpDirection(localSdp, remoteSdp, constants.STRING.AUDIO);\n        localSdp = this.respondToRemoteMediaSdpDirection(localSdp, remoteSdp, constants.STRING.VIDEO);\n\n        return localSdp;\n    };\n\n    this.respondToRemoteMediaSdpDirection = function(localSdp, remoteSdp, type) {\n        var remoteDirection;\n\n        if (this.isSdpHas(remoteSdp, type)) {\n            remoteDirection = this.getSdpDirection(remoteSdp, type);\n\n            if (this.hasZeroConnectionIP(remoteSdp)) {\n                if (remoteDirection === constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n                    localSdp = this.updateSdpDirection(localSdp, type, constants.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                } else {\n                    localSdp = this.updateSdpDirection(localSdp, type, constants.WEBRTC.MEDIA_STATE.INACTIVE);\n                }\n            } else {\n                if (remoteDirection === constants.WEBRTC.MEDIA_STATE.SEND_ONLY) {\n                    logger.debug(type + ' sendonly -> recvonly');\n                    localSdp = this.updateSdpDirection(localSdp, type, constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                } else if (remoteDirection === constants.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n                    logger.debug(type + ' recvonly -> sendonly');\n                    localSdp = this.updateSdpDirection(localSdp, type, constants.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                } else if (remoteDirection === constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n                    logger.debug(type + ' sendrecv -> sendrecv');\n                    localSdp = this.updateSdpDirection(localSdp, type, constants.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                } else if (remoteDirection === constants.WEBRTC.MEDIA_STATE.INACTIVE) {\n                    logger.debug(type + ' inactive -> inactive');\n                    localSdp = this.updateSdpDirection(localSdp, type, constants.WEBRTC.MEDIA_STATE.INACTIVE);\n                }\n            }\n        }\n        return localSdp;\n    };\n\n    this.hasCandidates = function(sdp, relayCandidateCycle, relayCandidateConfigCycle) {\n        if (this.checkRelayCandidateCollectionTimeout(relayCandidateCycle, relayCandidateConfigCycle)) {\n            return true;\n        }\n        const candidateParser = this.getCandidateType(relayCandidateCycle, relayCandidateConfigCycle);\n\n        const [ , ...mLines] = sdp.split('m=');\n        return mLines.every(mline => mline.indexOf(candidateParser) !== -1);\n    };\n\n    this.getCandidateType = function(relayCandidateCycle, relayCandidateConfigCycle) {\n        var candidateParser;\n        if (relayCandidateCycle) {\n            if (relayCandidateCycle <= relayCandidateConfigCycle) {\n                candidateParser = 'relay';\n            } else {\n                candidateParser = 'a=candidate';\n            }\n        } else {\n            candidateParser = 'a=candidate';\n        }\n        return candidateParser;\n    };\n\n    this.checkRelayCandidateCollectionTimeout = function(relayCandidateCycle, relayCandidateConfigCycle) {\n        if (relayCandidateCycle) {\n            if (relayCandidateCycle > relayCandidateConfigCycle) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    // spidr sends both fingerprint and crypto at incoming call to the term side\n    // delete the unnecessary one before setting remote description\n    this.deleteFingerprintOrCrypto = function(sdp, isDtlsEnabled) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n        if (sdp.indexOf('a=crypto:') === -1 || sdp.indexOf('a=fingerprint:') === -1) {\n            return sdp;\n        }\n        sdp = this.deleteCryptoFromSdp(sdp, isDtlsEnabled);\n        sdp = this.deleteFingerprintFromSdp(sdp, isDtlsEnabled);\n\n        return sdp;\n    };\n\n    function addRtpmapForCodec(sdp, payload, rtpmapString) {\n        var audioCodecList;\n        if (sdp === null || sdp === undefined) {\n            return;\n        }\n\n        audioCodecList = sdp.match(/m=audio [\\w\\W]*?(\\r|\\n)/);\n        if (!audioCodecList) {\n            return sdp;\n        }\n\n        audioCodecList = audioCodecList[0].split(' ');\n        // shift \"m=audio\" out\n        // shift audio port out\n        // shift RTP/SAVPF out\n        audioCodecList.shift();\n        audioCodecList.shift();\n        audioCodecList.shift();\n\n        if (audioCodecList.indexOf(payload) === -1) {\n            return sdp;\n        }\n\n        if (sdp.indexOf(rtpmapString) !== -1) {\n            return sdp;\n        }\n\n        sdp = sdp.split(constants.SDP.M_LINE + constants.STRING.VIDEO);\n\n        sdp[0] = sdp[0] + rtpmapString + lf + nl;\n\n        if (sdp[1]) {\n            sdp = sdp[0] + constants.SDP.M_LINE + constants.STRING.VIDEO + sdp[1];\n        } else {\n            sdp = sdp[0];\n        }\n\n        return sdp;\n    }\n\n    /*\n     *  This is only required for Firefox Native webrtc.\n     *  If PCMU exists in codec list but its rtpmap is missing in sdp,\n     *  firefox native webrtc does not collect ice canditates.\n     *  Scenario: C2C when FF is originating client\n     *            (Broker without Transcoder config)\n     */\n    this.addRtpmapForPCMU = function(sdp) {\n        return addRtpmapForCodec(sdp, '0', 'a=rtpmap:0 PCMU/8000');\n    };\n\n    /*\n     *  This is only required for Firefox Native webrtc.\n     *  If PCMA exists in codec list but its rtpmap is missing in sdp,\n     *  firefox native webrtc does not collect ice canditates.\n     *  Scenario: C2C when FF is originating client\n     *            (Broker without Transcoder config)\n     */\n    this.addRtpmapForPCMA = function(sdp) {\n        return addRtpmapForCodec(sdp, '8', 'a=rtpmap:8 PCMA/8000');\n    };\n\n    /*\n     * This is only required for Firefox Native webRTC.\n     * Firefox native adds curly brackets to msid and cname properties(maybe more)\n     * This leads to problem in multi - peer to peer configurated lab.\n     * TODO : Unit test cases should be written\n     */\n    this.deleteCurlyBracketsSDP = function(sdp) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n        logger.debug('Deleting curly brackets from sdp');\n        sdp = sdp.replace(/(\\{|\\})/g, '');\n        return sdp;\n    };\n\n    /*\n     * If inactive video m-line has bandwith attribute in SDP(occurs in Chrome to PCC call),\n     * Chrome's webRTC Engine rejects it\n     * This workaround removes the b:AS line\n     * TODO : Unit test cases should be written\n     */\n    this.deleteBandwidthLineFromSdp = function(sdp) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n\n        if (this.isVideoSdpDirectionInactive(sdp)) {\n            logger.debug('Deleting b:AS line from SDP');\n            sdp = sdp.replace(/(b=AS:[\\w\\W]*?(:\\r|\\n))/g, '');\n        }\n        return sdp;\n    };\n    /*\n     * Firefox 38.0.1 does not accept uppercase opus codec and cause basic call problem with GCFIOS.\n     * The following is a workaround for this problem.\n     * Feel free to remove it when Firefox 38.0.1 is updated to 38.0.5.\n     */\n    this.setOpusCodecToLowerCase = function(sdp) {\n        if (sdp === null || sdp === undefined) {\n            return sdp;\n        }\n        logger.debug('Setting OPUS codec to lower case');\n        return sdp.replace('OPUS', 'opus');\n    };\n\n    /*\n     * Replaces audio m line of codec\n     * @sdp Sdp to be processed\n     * @prevValue previous telephony event value\n     * @newValue new telephony event value\n     * @returns processed SDP\n     */\n    this.replaceAudioMlineOfCodec = function(sdp, prevValue, newValue) {\n        if (this.isSdpHasAudio(sdp)) {\n            sdp = this.replaceMlineOfCodec(sdp, constants.STRING.AUDIO, prevValue, newValue);\n        }\n        return sdp;\n    };\n\n    /*\n     * Replaces video m line of codec\n     * @sdp Sdp to be processed\n     * @prevValue previous telephony event value\n     * @newValue new telephony event value\n     * @returns processed SDP\n     */\n    this.replaceVideoMlineOfCodec = function(sdp, prevValue, newValue) {\n        if (this.isSdpHasVideo(sdp)) {\n            sdp = this.replaceMlineOfCodec(sdp, constants.STRING.VIDEO, prevValue, newValue);\n        }\n        return sdp;\n    };\n\n    /*\n     * Replaces m line of codec\n     * @sdp Sdp to be processed\n     * @option m line to be processed\n     * @prevValue previous telephony event value\n     * @newValue new telephony event value\n     * @returns processed SDP\n     */\n    this.replaceMlineOfCodec = function(sdp, option, prevValue, newValue) {\n        var prevMline, newMline = '',\n            mLineRegex, index;\n        mLineRegex = new RegExp('m=' + option + ' [\\\\w\\\\W]*?(\\\\r|\\\\n)', 'g');\n        prevMline = sdp.match(mLineRegex);\n        prevMline = prevMline[0].split(' ');\n        for (index = 0; index < prevMline.length; index++) {\n            // index[1] is actual port and we should not change it.\n            if ((index !== 1) && prevMline[index] && (prevMline[index].indexOf(prevValue) !== -1)) {\n                prevMline[index] = prevMline[index].replace(prevValue, newValue);\n            }\n            // This if check is necessary in order not to put an space at the end of m line\n            if (index === (prevMline.length - 1)) {\n                newMline += prevMline[index];\n            } else {\n                newMline += prevMline[index] + ' ';\n            }\n        }\n        return sdp.replace(mLineRegex, newMline);\n    };\n\n    /*\n     * Replaces RTPMap of codec\n     * @sdp Sdp to be processed\n     * @prevValue previous telephony event value\n     * @newValue new telephony event value\n     * @returns processed SDP\n     */\n    this.replaceRTPMapOfCodec = function(sdp, prevValue, newValue) {\n        var regex = new RegExp('a=rtpmap:' + prevValue, 'g');\n        return sdp.replace(regex, 'a=rtpmap:' + newValue);\n    };\n\n    /*\n     * Replaces RTCP of codec\n     * @sdp Sdp to be processed\n     * @prevValue previous telephony event value\n     * @newValue new telephony event value\n     * @returns processed SDP\n     */\n    this.replaceRTCPOfCodec = function(sdp, prevValue, newValue) {\n        var regex = new RegExp('a=rtcp-fb:' + prevValue, 'g');\n        return sdp.replace(regex, 'a=rtcp-fb:' + newValue);\n    };\n\n    /*\n     * Replaces FMTP of codec\n     * @sdp Sdp to be processed\n     * @prevValue previous telephony event value\n     * @newValue new telephony event value\n     * @returns processed SDP\n     */\n    this.replaceFMTPOfCodec = function(sdp, prevValue, newValue) {\n        var regex = new RegExp('a=fmtp:' + prevValue, 'g');\n        return sdp.replace(regex, 'a=fmtp:' + newValue);\n    };\n\n    /*\n     * Replaces the codec with new value\n     * @sdp Sdp to be processed\n     * @codec Codec to be replaced\n     * @newValue new value of codec\n     */\n    this.replaceCodecValue = function(sdp, codec, newValue) {\n        var payloadType, prevValue;\n        payloadType = this.getPayloadTypeOf(codec, sdp);\n        if (payloadType) {\n            // If multiple payload types returned, change first of them\n            if (Array.isArray(payloadType)) {\n                prevValue = payloadType[0];\n            } else {\n                prevValue = payloadType;\n            }\n            // Since we don't know which m-line contains this codec, we apply in both m-lines\n            // If an m line does not have this codec, then it will simply return the sdp itself\n            sdp = this.replaceAudioMlineOfCodec(sdp, prevValue, newValue);\n            sdp = this.replaceVideoMlineOfCodec(sdp, prevValue, newValue);\n            sdp = this.replaceRTPMapOfCodec(sdp, prevValue, newValue);\n            sdp = this.replaceRTCPOfCodec(sdp, prevValue, newValue);\n            sdp = this.replaceFMTPOfCodec(sdp, prevValue, newValue);\n        }\n        return sdp;\n    };\n\n    /*\n     * Replaces codecs\n     * @sdp Sdp to be used\n     * @codecMap codecMap to be replaced\n     * @returns processed SDP\n     */\n    this.replaceCodecs = function(sdp, codecMap) {\n        var index;\n        if (codecMap && codecMap.length) {\n            for (index = 0; index < codecMap.length; index++) {\n                sdp = this.replaceCodecValue(sdp, codecMap[index].name, codecMap[index].value);\n            }\n        }\n        return sdp;\n    };\n\n    /*\n     * Removes H264 codec from SDP\n     * @sdp Sdp to be used\n     * @returns processed SDP\n     */\n    this.removeH264Codec = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n        logger.debug('Removing H264 codec from SDP');\n        var h264PayloadType, index;\n\n        if (pSdp.indexOf('H264/90000') === -1) {\n            return pSdp;\n        }\n\n        h264PayloadType = this.getH264PayloadType(pSdp);\n\n        if (h264PayloadType !== -1) {\n            for (index = 0; index < h264PayloadType.length; index++) {\n                logger.debug('removeH264Codec : Removing H264/90000 video codec ' + h264PayloadType[index]);\n                pSdp = this.removeVideoCodec(pSdp, h264PayloadType[index]);\n            }\n        }\n        return pSdp;\n    };\n\n    this.hasZeroConnectionIP = function(pSdp) {\n        if (pSdp === null || pSdp === undefined) {\n            return false;\n        }\n        if (pSdp.indexOf('c=IN IP4 0.0.0.0') !== -1) {\n            return true;\n        }\n        return false;\n    };\n\n    this.findZeroConnectionIPandModify = function(pSdp) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index, type;\n\n        logger.debug('findZeroConnectionIPandModify received SDP: ' + pSdp);\n        if (pSdp === null || pSdp === undefined) {\n            return pSdp;\n        }\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (this.isSdpHasVideo(substr)) {\n                type = constants.STRING.VIDEO;\n            } else {\n                type = constants.STRING.AUDIO;\n            }\n            if (this.hasZeroConnectionIP(substr) && this.getSdpDirection(pSdp, type) !== constants.WEBRTC.MEDIA_STATE.INACTIVE) {\n                substr = substr.replace('c=IN IP4 0.0.0.0', 'c=IN IP4 1.1.1.1');\n            }\n            sdp = sdp + substr;\n        }\n        logger.debug('findZeroConnectionIPandModify updated SDP: ' + sdp);\n        return sdp;\n    };\n\n    // this is needed to check\n    // if telephone-event payload changed\n    // fixed scenario: meetme is sending a different TE payload after call setup\n    this.hasCodecPayloadChanged = function(oldSdp, newSdp) {\n        if (!oldSdp || !newSdp) {\n            return false;\n        }\n\n        if (!this.isSdpHasTelephoneEvent(oldSdp) || !this.isSdpHasTelephoneEvent(newSdp)) {\n            return false;\n        }\n\n        var oldTEPayloadCodec = this.getPayloadTypeOf('telephone-event/8000', oldSdp),\n            newTEPayloadCodec = this.getPayloadTypeOf('telephone-event/8000', newSdp);\n\n        return oldTEPayloadCodec !== newTEPayloadCodec;\n    };\n\n    this.isVideoHasSsrc = function(sdp) {\n        var mLineRegex = new RegExp('m=[\\\\w\\\\W]*?(?=(m=|$))', 'g'),\n            mLines, videoLine, i;\n\n        if (!sdp) {\n            return false;\n        }\n\n        mLines = sdp.match(mLineRegex);\n        for (i = 0; i < mLines.length; i++) {\n            if (this.isSdpHasVideo(mLines[i])) {\n                videoLine = mLines[i];\n                break;\n            }\n        }\n\n        if (!videoLine) {\n            return false;\n        }\n\n        if (videoLine.indexOf('ssrc') !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    /*\n     * Checks and replaces APT value. Remove after Chrome 51 release.\n     * @sdp Sdp to be processed\n     * @option m line to be processed\n     * @returns processed SDP\n     */\n    this.checkandReplaceAPTValue = function(pSdp) {\n        var sdp = '',\n            substr = '',\n            descriptions = [],\n            index, reg = /\\r\\n|\\r|\\n/m,\n            substr_arr, i, new_substr = '',\n            elm, option, numOfAPT, APTIndex = 0,\n            mLineRegex, sdpMline, splitArray, APTValue;\n\n        descriptions = pSdp.split(/^(?=m=)/m);\n        for (index = 0; index < descriptions.length; index++) {\n            substr = descriptions[index];\n            if (substr.indexOf('apt=') !== -1) {\n                if (this.isSdpHasAudio(substr)) {\n                    option = 'audio';\n                } else if (this.isSdpHasVideo(substr)) {\n                    option = 'video';\n                }\n                numOfAPT = substr.split('apt=').length - 1;\n                mLineRegex = new RegExp('m=' + option + ' [\\\\w\\\\W]*?(\\\\r|\\\\n)', 'g');\n                sdpMline = pSdp.match(mLineRegex);\n                sdpMline = sdpMline[0].split(' ');\n\n                substr_arr = substr.split(reg);\n                for (i = 0; i < substr_arr.length; i++) {\n                    elm = substr_arr[i];\n                    if (elm && elm.indexOf('apt=') !== -1) {\n                        APTIndex++;\n                        splitArray = elm.split('apt=');\n                        APTValue = splitArray[1];\n\n                        for (index = 0; index < sdpMline.length; index++) {\n                            // index[1] is actual port and we should not check it.\n                            if ((index !== 1) && sdpMline[index] && (sdpMline[index].indexOf(APTValue) !== -1)) {\n                                // APT value is found in codec list. Return the original SDP.\n                                return pSdp;\n                            }\n                        }\n                        if (APTIndex === numOfAPT) {\n                            elm = elm.replace('apt=' + APTValue, 'apt=' + sdpMline[3] + lf + nl);\n                        }\n                    } else if (elm && elm !== '') {\n                        elm = elm + lf + nl;\n                    }\n                    new_substr = new_substr + elm;\n                }\n                substr = new_substr;\n            }\n            sdp = sdp + substr;\n        }\n        return sdp;\n    };\n\n    /*\n     * Checks if trickle is enabled in sdp\n     * @sdp Sdp to be inspected\n     * @returns trickle status\n     */\n    this.isSdpHasTrickle = function (sdp){\n\n        if (!sdp) {\n            return false;\n        }\n\n        if (sdp.indexOf('a=ice-options:trickle') !== -1) {\n            return true;\n        }\n\n        return false;\n\n    };\n\n    /*\n     * Checks and sets trickle option in sdp\n     * @sdp Sdp to be processed\n     * @addTrickle Whether the trickle ICE option should be added or removed.\n     * @returns processed SDP\n     */\n    this.setTrickleOption = function (sdp, addTrickle){\n        logger.debug('Setting trickle ICE option?: ' + !!addTrickle);\n\n        if(!sdp) {\n            // No SDP was provided.\n            return sdp;\n\n        } else if(addTrickle) {\n            // Option should be added.\n            if(this.isSdpHasTrickle(sdp)) {\n                return sdp;\n            } else {\n                logger.debug('Adding trickle ICE option to SDP.');\n                var descriptions = sdp.split(/^(?=m=)/m);\n                // descriptions will be ['v=0 s=123...', 'm=audio 9 ...'] or\n                // it will be ['v=0 s=123...', 'm=audio 9 ...', 'm=video 9 ...'] if video is enabled\n                // add trickle option before media descriptions into the session description\n                return descriptions[0] + 'a=ice-options:trickle' + lf + nl + descriptions.slice(1).join('');\n            }\n\n        } else {\n            // Option should be removed.\n            if(this.isSdpHasTrickle(sdp)) {\n                logger.debug('Removing trickle ICE option from SDP.');\n                return sdp.replace(/a=ice-options:trickle\\r\\n/g, '');\n            } else {\n                return sdp;\n            }\n        }\n    };\n\n    /*\n     * Compare the SDP from the current stable remote sdp, with the newly sdp received\n     * @sdp1 the call stable remote sdp\n     * @sdp2 the new sdp that was received\n     * @returns true if the SDP didn't change except for the sendrecv and the session id\n     */\n    this.compareSDPForEarlyMedia = function(sdp1, sdp2) {\n        var lineIndex = 0, originalLines = sdp1.split('\\n'), newLines = sdp2.split('\\n');\n\n        for (lineIndex; lineIndex < originalLines.length; lineIndex++) {\n            if(originalLines[lineIndex].indexOf('o=') === -1){\n                if(sdp2.indexOf(originalLines[lineIndex]) === -1){\n                    return false;\n                }\n            }\n        }\n        lineIndex = 0;\n        for (lineIndex; lineIndex < newLines.length; lineIndex++) {\n            if(newLines[lineIndex].indexOf('o=') === -1){\n                if(sdp1.indexOf(newLines[lineIndex]) === -1 && newLines[lineIndex].trim() !== 'a=sendrecv'){\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n\n    this.isRemoteEndFirefox = function(sdp) {\n        if (!sdp) {\n            return false;\n        }\n        return sdp.indexOf('SDPARTA') !== -1;\n    };\n}\n","import once from 'lodash/once';\nimport Promise from 'promiscuous';\nimport {always} from './utils';\n\n\nexport function ChallengeManagerFactory() {\n    const challengeManager = {};\n\n    /*\n     * Set the challenge handler which is a function that will receive challenges.\n     * @param {Function} handler A function which will receive authentication challenges.\n     * @param {Function} handler.retry A function which once called, will give resume the execution queue where it left\n     *                                 off before the challenge using the answer to the challenge.\n     * @param {any}      handler.retry.answer The challenge answer to pass to the retry function that will resolve the challenge.\n     * @param {Function} handler.cancel A function which once called with resume the execution where it left of but will\n     *                                  let it down the error path since the challenge was not answered.\n     */\n    challengeManager.setChallengeHandler = function(handler) {\n        if (typeof handler !== 'function') {\n            throw new TypeError('Challenge handler is not a function.');\n        }\n        challengeManager.challengeHandler = handler;\n    };\n\n    /*\n     * Sets an answer handler to give a chance for the anybody using challenges to get notified whenever\n     * a challenge gets answered. This allows to store the challenge answer by the app.\n     *\n     * @param {Function} handler Answer handler which will be called whenever a challenge is answered.\n     * @param {any}      handler.answer The answer to the challenge.\n     */\n    challengeManager.setAnswerHandler = function(handler) {\n        if (typeof handler !== 'function') {\n            throw new TypeError('Challenge handler is not a function.');\n        }\n        challengeManager.challengeAnswerHandler = handler;\n    };\n\n    /*\n     * Starts a challenge to the application. A challenge can be anything that the application needs to provide\n     * for execution to continue. A challenge creates a promise for an answer. At which point it is up\n     * to the challenger to interpret the result of the challenge.\n     *\n     * @return {Promise} A promise for an answer to the challenge. The promise will reject if the challenge is\n     *                   canceled by the application.\n     */\n    challengeManager.challenge = function() {\n        if (challengeManager.challengeSuspensions > 0) {\n            return new Promise.reject();\n        }\n\n        // If we don't already have a challenge to the application in progress, create one.\n        if (!challengeManager.currentChallenge) {\n            challengeManager.currentChallenge = always(new Promise((resolve, reject) => {\n                if (challengeManager.challengeHandler) {\n                    var retry = once(function(params) {\n\n                        if (challengeManager.challengeAnswerHandler) {\n                            challengeManager.challengeAnswerHandler(params);\n                        }\n\n                        // Resolve the challenge and allow continuation of paused requests.\n                        resolve(params);\n                    });\n\n                    var cancel = once(function() {\n                        // Reject the challenge\n                        reject();\n                    });\n\n                    challengeManager.challengeHandler(retry, cancel);\n                } else {\n                    reject();\n                }\n            }), () => challengeManager.currentChallenge = undefined);\n        }\n\n        return challengeManager.currentChallenge;\n    };\n\n\n    /*\n     * Temporarily suspend any challenges.\n     * @param  {Promise} waitOn Promise on which to wait for being settled before resuming challenges\n     * @return {Promise}        Continuation of the original promise which will resolve once the challenges\n     *                          have been resumed.\n     */\n    challengeManager.suspendChallenges = function(waitOn) {\n        challengeManager.challengeSuspensions++;\n        return always(waitOn, () => challengeManager.challengeSuspensions -= 1);\n    };\n\n    challengeManager.challengeSuspensions = 0;\n\n    return challengeManager;\n}\n","var before = require('./before');\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nmodule.exports = once;\n","var toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nmodule.exports = before;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**@license MIT-promiscuous-©Ruben Verborgh*/\n(function (func, obj) {\n  // Type checking utility function\n  function is(type, item) { return (typeof item)[0] == type; }\n\n  // Creates a promise, calling callback(resolve, reject), ignoring other parameters.\n  function Promise(callback, handler) {\n    // The `handler` variable points to the function that will\n    // 1) handle a .then(resolved, rejected) call\n    // 2) handle a resolve or reject call (if the first argument === `is`)\n    // Before 2), `handler` holds a queue of callbacks.\n    // After 2), `handler` is a finalized .then handler.\n    handler = function pendingHandler(resolved, rejected, value, queue, then, i) {\n      queue = pendingHandler.q;\n\n      // Case 1) handle a .then(resolved, rejected) call\n      if (resolved != is) {\n        return Promise(function (resolve, reject) {\n          queue.push({ p: this, r: resolve, j: reject, 1: resolved, 0: rejected });\n        });\n      }\n\n      // Case 2) handle a resolve or reject call\n      // (`resolved` === `is` acts as a sentinel)\n      // The actual function signature is\n      // .re[ject|solve](<is>, success, value)\n\n      // Check if the value is a promise and try to obtain its `then` method\n      if (value && (is(func, value) | is(obj, value))) {\n        try { then = value.then; }\n        catch (reason) { rejected = 0; value = reason; }\n      }\n      // If the value is a promise, take over its state\n      if (is(func, then)) {\n        try { then.call(value, transferState(1), rejected = transferState(0)); }\n        catch (reason) { rejected(reason); }\n      }\n      // The value is not a promise; handle resolve/reject\n      else {\n        // Replace this handler with a finalized resolved/rejected handler\n        handler = function (Resolved, Rejected) {\n          // If the Resolved or Rejected parameter is not a function,\n          // return the original promise (now stored in the `callback` variable)\n          if (!is(func, (Resolved = rejected ? Resolved : Rejected)))\n            return callback;\n          // Otherwise, return a finalized promise, transforming the value with the function\n          return Promise(function (resolve, reject) { finalize(this, resolve, reject, value, Resolved); });\n        };\n        // Resolve/reject pending callbacks\n        i = 0;\n        while (i < queue.length) {\n          then = queue[i++];\n          // If no callback, just resolve/reject the promise\n          if (!is(func, resolved = then[rejected]))\n            (rejected ? then.r : then.j)(value);\n          // Otherwise, resolve/reject the promise with the result of the callback\n          else\n            finalize(then.p, then.r, then.j, value, resolved);\n        }\n      }\n      // Returns a function that transfers the state of the promise\n      function transferState(resolved) {\n        return function (value) { then && (then = 0, pendingHandler(is, resolved, value)); };\n      }\n    };\n    // The queue of pending callbacks; garbage-collected when handler is resolved/rejected\n    handler.q = [];\n\n    // Create and return the promise (reusing the callback variable)\n    callback.call(callback = { then:    function (resolved, rejected) { return handler(resolved, rejected); },\n                               \"catch\": function (rejected)           { return handler(0,        rejected); } },\n                  function (value)  { handler(is, 1,  value); },\n                  function (reason) { handler(is, 0, reason); });\n    return callback;\n  }\n\n  // Finalizes the promise by resolving/rejecting it with the transformed value\n  function finalize(promise, resolve, reject, value, transform) {\n    setImmediate(function () {\n      try {\n        // Transform the value through and check whether it's a promise\n        value = transform(value);\n        transform = value && (is(obj, value) | is(func, value)) && value.then;\n        // Return the result if it's not a promise\n        if (!is(func, transform))\n          resolve(value);\n        // If it's a promise, make sure it's not circular\n        else if (value == promise)\n          reject(TypeError());\n        // Take over the promise's state\n        else\n          transform.call(value, resolve, reject);\n      }\n      catch (error) { reject(error); }\n    });\n  }\n\n  // Export the main module\n  module.exports = Promise;\n\n  // Creates a resolved promise\n  Promise.resolve = ResolvedPromise;\n  function ResolvedPromise(value) { return Promise(function (resolve) { resolve(value); }); }\n\n  // Creates a rejected promise\n  Promise.reject = function (reason) { return Promise(function (resolve, reject) { reject(reason); }); };\n\n  // Transforms an array of promises into a promise for an array\n  Promise.all = function (promises) {\n    return Promise(function (resolve, reject, count, values) {\n      // Array of collected values\n      values = [];\n      // Resolve immediately if there are no promises\n      count = promises.length || resolve(values);\n      // Transform all elements (`map` is shorter than `forEach`)\n      promises.map(function (promise, index) {\n        ResolvedPromise(promise).then(\n          // Store the value and resolve if it was the last\n          function (value) {\n            values[index] = value;\n            --count || resolve(values);\n          },\n          // Reject if one element fails\n          reject);\n      });\n    });\n  };\n\n  // Returns a promise that resolves or rejects as soon as one promise in the array does\n  Promise.race = function (promises) {\n    return Promise(function (resolve, reject) {\n      // Register to all promises in the array\n      promises.map(function (promise) {\n        ResolvedPromise(promise).then(resolve, reject);\n      });\n    });\n  };\n})('f', 'o');\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import constants from './constants';\nimport errors from './errors';\n\n/**\n * @name fcs\n * @namespace\n * @param _server\n * @param _globalBroadcaster\n */\nexport function CoreImpl({\n    GlobalBroadcaster: _globalBroadcaster,\n    Config: _config,\n}) {\n\n    var dev = null,\n        pluginVer = null,\n        services = {},\n        un = null,\n        tkn = null,\n        authorizationName = null,\n        connected = true,\n        tokenRealm = null,\n        kandyUAT = null,\n        DEFAULT_SUBSCRIPTION_EXPIRY_VALUE = 3600,\n        MIN_SUBSCRIPTION_EXPIRY_VALUE = 60;\n\n\n    /**\n     * This function creates a new instance of the library. This allows multiple users to be logged in an using\n     * the library at the same time.\n     *\n     * @name fcs#createInstance\n     * @function\n     * @returns {fcs}\n     *\n     * @example\n     * var fcs2 = fcs.createInstance();\n     * fcs2.setup(...);\n     * fcs2.call.startCall(...);\n     */\n\n    /**\n     * This function returns value of async paramater of $.ajax requests\n     *\n     * @name fcs#isAsync\n     * @function\n     * @returns {Boolean} true/false\n     * @deprecated\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.isAsync();\n     */\n    this.isAsync = function() {\n    };\n\n    /**\n     * This function sets async option of $.ajax() requests.\n     * If It is set to false, ajax requests will be sent synchronously\n     * otherwise ajax requests will be sent asynchronously.\n     *\n     * @name fcs#setAsync\n     * @function\n     * @param {Boolean} value\n     * @return {Boolean} true/false\n     * @deprecated\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.setAsync(false);\n     */\n    this.setAsync = function() {\n    };\n\n    /**\n     * This function returns username of authenticated user in user@domain format.\n     *\n     * @name fcs#getUser\n     * @function\n     * @returns {string} Username of current user\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.getUser();\n     */\n    this.getUser = function(){\n        return un;\n    };\n\n    /**\n     * This function returns authorization name of authenticated user\n     *\n     * @name fcs#getAuthUser\n     * @function\n     * @returns {String} Authorization name of current user\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.getAuthUser();\n     */\n    this.getAuthUser = function() {\n        if (authorizationName) {\n            return authorizationName;\n        } else {\n            return un;\n        }\n    };\n\n    /**\n     * This function returns current domain name of authenticated user\n     *\n     * @name fcs#getDomain\n     * @function\n     * @returns {string} Current domain name\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.getDomain();\n     */\n    this.getDomain = function() {\n        return un.split('@')[1];\n    };\n\n    /**\n     * This function returns the version of the JSL-API\n     *\n     * @name fcs#getVersion\n     * @function\n     * @returns {string} Version of the JSL-API\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.getVersion();\n     */\n    this.getVersion = function() {\n        return '@{spidr.jsl.version}';\n    };\n\n    /**\n     * This fucntion returns current device.\n     *\n     * @name fcs#getDevice\n     * @function\n     * @returns {string} Device specified for communicating with the server\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.getDevice();\n     */\n    this.getDevice = function() {\n        return dev;\n    };\n\n    /**\n     * This function sets the user as authentication mode and cancels device authentication (if such exists),\n     * as user and device modes are mutually exclusive.\n     * authname parameter is optional.\n     *\n     * @name fcs#setUserAuth\n     * @function\n     * @param {string} user User name to be used for communicating with the server\n     * @param {string} password Password to be used for communicating with the server\n     * @param {string} authname If provided authname is used instead of user name for authentication\n     *\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.setUserAuth(\"Username\", \"Password\",\"Authname\");\n     */\n    this.setUserAuth = function(user, password, authname) {\n        un = user;\n        dev = null;\n        var data = {\n            'username': user,\n            'password': password\n        };\n        if ((typeof authname === 'string') && (authname.trim().length > 0)) {\n            data.authname = authname;\n            authorizationName = authname;\n        } else {\n            authorizationName = null;\n        }\n        _globalBroadcaster.publish(constants.EVENT.BASIC_AUTH_STARTED, data);\n    };\n\n    /**\n     * This function sets the user as token mode authentication and cancels user authentication or/and device authentication (if such exists),\n     * token authentication has priority over other authentications\n     *\n     * @name fcs#setTokenAuth\n     * @function\n     * @param {string} user to be used for communicating with the server\n     * @param {string} token to be used for communicating with the server\n     *\n     * @since 3.0.0\n     *\n     * @example\n     * fcs.setTokenAuth(\"Username\", \"Token\");\n     */\n    this.setTokenAuth = function(user, token) {\n        un = user;\n        tkn = token;\n        _globalBroadcaster.publish(constants.EVENT.TOKEN_AUTH_STARTED, {\n            'username': user,\n            'token': token\n        });\n    };\n\n    this.getTokenAuth = function() {\n        return tkn;\n    };\n\n    /**\n     * This function sets the device as authentication mode and cancels user authentication (if such exists),\n     * as user and device modes are mutually exclusive.\n     *\n     * @name fcs#setDeviceAuth\n     * @function\n     * @since 3.0.0\n     * @param {string} deviceID The device to be used for communicating with the server\n     *\n     * @example\n     * fcs.setDeviceAuth(\"DeviceID\");\n     */\n    this.setDeviceAuth = function(deviceID) {\n        dev = deviceID;\n        un = null;\n    };\n\n    /**\n     * This function sets the authentication realm for time limited token authentication.\n     *\n     * @name fcs.setRealm\n     * @function\n     * @since 3.0.4\n     * @param {string} realm The realm for the time limited token auth\n     *\n     * @example\n     * fcs.setRealm(\"realmname\");\n     */\n    this.setRealm = function(realm) {\n        tokenRealm = realm;\n    };\n\n    /**\n     * This function gets the authentication realm for time limited token authentication.\n     *\n     * @name fcs.getRealm\n     * @function\n     * @since 3.0.4\n     * @returns {string} The realm for the time limited token auth\n     *\n     * @example\n     * var realm = fcs.getRealm();\n     */\n    this.getRealm = function() {\n        return tokenRealm;\n    };\n\n    /**\n     * This function sets the authentication UAT for kandy Authentication.\n     *\n     * @name fcs.setKandyUAT\n     * @function\n     * @since 3.0.4\n     * @param {string} uat The User Access Token\n     *\n     * @example\n     * fcs.setKandyUAT(\"uat\");\n     */\n    this.setKandyUAT = function(uat) {\n        kandyUAT = uat;\n    };\n\n    /**\n     * This function gets the authentication UAT for kandy Authentication.\n     *\n     * @name fcs.getKandyUAT\n     * @function\n     * @since 3.0.4\n     * @returns {string} The User Access Token\n     *\n     * @example\n     * var uat = fcs.getKandyUAT();\n     */\n    this.getKandyUAT = function() {\n        return kandyUAT;\n    };\n\n    /**\n     * List of Authentication Types.\n     * @see setDeviceAuth\n     * @see setUserAuth\n     * @name fcs#AuthenticationType\n     * @property {number} USER User authentication\n     * @property {number} DEVICE Device authentication\n     * @readonly\n     */\n    this.AuthenticationType = {\n        USER: 1,\n        DEVICE: 2\n    };\n\n    /**\n     * List of Error Types\n     *\n     * @name fcs#Errors\n     * @property {number} NETWORK Network failures\n     * @property {number} AUTH Authentication / Authorization failures\n     * @property {number} STATE Invalid state\n     * @property {number} PRIV Privilege failures\n     * @property {number} UNKNOWN Unknown failures\n     * @property {number} LOGIN_LIMIT Login limit exceeded\n     * @property {number} INCORRECT_LOGIN_PASS Incorrect identifier\n     * @property {number} INVALID_LOGIN Invalid username\n     * @property {number} TOKEN_NOT_FOUND Token provided is not valid\n     * @property {number} SESSION_EXPIRED Session generated from token is expired\n     * @property {number} VIDEO_SESSION_NOT_AVAILABLE Video Session is not available\n     * @property {number} PENDING_REQUEST There is a pending request.\n     * @property {number} NOT_ALLOWED_SERVICE Service is not allowed.\n     * @property {number} NOT_ALLOWED_METHOD Method is not allowed.\n     * @property {number} NOT_ALLOWED_INSTANCE Instance is not allowed.\n     * @property {number} INVALID_PARAMETER Parameter is invalid.\n     * @property {number} CONNECTION_ISSUE Connection problem.\n     * @property {number} MEDIA_NOT_FOUND Media not found error.\n     * @property {number} MEDIA_NOT_ALLOWED Media not allowed error.\n     * @property {number} CALL_FAILED Call failed.\n     * @property {number} CALL_ENDED Call ended.\n     * @property {number} MAXIMUM_ENTRIES Maximum entries error.\n     * @property {number} ENTRY_ALREADY_EXISTS Entry already exists error.\n     * @property {number} SERVICE_NOT_AUTHORIZED Service authorization error.\n     * @property {number} DB_EXCEPTION Database exception Error.\n     * @property {number} INSUFFICIENT_INFO Insufficient error.\n     * @property {number} NOT_FOUND Not Found error.\n     * @property {number} INTERNAL_SERVER_ERROR Internal server  error.\n     * @property {number} SERVICE_UNAVAILABLE Service unavaible error.\n     * @property {number} SESSION_NOT_FOUND The device's session was not found.\n     * @property {number} CANNOT_SUBSCRIBE Device cannot subscribe.\n     * @property {number} MEDIA_REQUIRED The call media to use was not specified.\n     *\n     * @readonly\n     * @example\n     * if (e === fcs.Errors.AUTH)\n     * {\n     *     console.log(\"Authentication error occured\")\n     * }\n     */\n    this.Errors = errors;\n\n    /**\n     * @typedef modifiedValues\n     * @type Object\n     * @property {number} url Modified url to replace xhr original url\n     * @property {object} headers Mofied headers object to replace original xhr headers\n     * @since 3.1.2\n     */\n\n    /**\n     * Ajax hook to intercept outgoing xhr request to modify url and headers\n     *\n     * @since 3.1.2\n     *\n     * @callback ajaxHook\n     * @param {Object} xhr XMLHttpRequest object\n     * @param {window} window window object\n     * @param {object} params object containing parameters\n     * @param {string} [params.type] The HTTP method to use, such as \"GET\", \"POST\", \"PUT\", \"DELETE\", etc\n     * @param {string} [params.url] The URL to send the request to\n     * @param {string} [params.headers] Request headers\n     * @param {string} [params.data] Request body\n     *\n     * @return {modifiedValues} object containing modified url and headers\n     *\n     */\n\n    /**\n     * Establishes bandwidth control functionalities based on provided audio codecs and values\n     * @typedef opusConfig\n     * @type Object\n     *\n     * @property {string} [maxPlaybackRate] value between 8000 and 48000\n     * @property {string} [maxAverageBitrate] value between 6000 and 510000\n     * @property {string} [fec] 0 or 1\n     * @property {string} [dtx] 0 or 1\n     * @property {string} [ptime] integer value between 2.5 and 120\n     *\n     * @example\n     *\n     * opusConfig: {\n     *      maxPlaybackRate: 16000,\n     *      maxAverageBitrate: 20000,\n     *      fec: 1,\n     *      dtx: 1,\n     *      ptime: 40\n     * }\n     */\n\n    /**\n     * Configures plugin mode (as 'webrtc' or 'auto') and h264 status as browser-specific with version restriction (for Chrome and Firefox) or as general default values.\n     * @typedef {Object} fcsSetupConfigParamsPluginMode\n\n     * @property {string} [mode=\"auto\"] General plugin mode. 'webrtc' for default webrtc plugin, 'auto' for the usage of native chrome and firefox or the usage of default webrtc plugin for the others.\n     * @property {boolean} [h264=true] General H264 codec status.\n     * @property {object} [chrome] Chrome-specific configurations\n     * @property {string} [chrome.mode] Chrome-specific plugin mode. Overrides the general one.\n     * @property {boolean} [chrome.h264] Chrome-specific H264 codec status. Overrides the general one.\n     * @property {string} [chrome.version] Version lowerbound for Chrome configurations. Ex: \"40+\". Includes all the versions if not given.\n     * @property {object} [firefox] Firefox-specific configurations\n     * @property {string} [firefox.mode] Firefox-specific plugin mode. Overrides the general one.\n     * @property {boolean} [firefox.h264] Firefox-specific H264 codec status. Overrides the general one.\n     * @property {string} [firefox.version] Version lowerbound for Firefox configurations. Ex: \"40+\". Includes all the versions if not given.\n     *\n     * @example\n     *\n     * pluginMode: {\n     *     mode: 'webrtc',\n     *     h264: true,\n     *     chrome: {\n     *         mode: 'auto'\n     *     },firefox: {\n     *         version: '38+',\n     *         mode: 'auto'\n     *     }\n     * }\n     */\n\n    /**\n     * Array of servers to be tried to for notification subscription.\n     * @typedef {Object[]} fcsSetupConfigParamsServers\n     *\n     * @property {string} [protocol=window.location.protocol] HTTP protocol to be used. Ex: Http, Https\n     * @property {string} [restUrl=window.location.hostname] The URL of REST server http://ip:port.\n     * @property {string} [restPort=window.location.port] The port of REST server http://ip:port.\n     * @property {string} [websocketProtocol=ws] Determines if the websocketProtocol is secure or non-secure.\n     * @property {string} [websocketIP=window.location.hostname] Holds the websocket connection's IP adress.\n     * @property {string} [websocketPort=8581] Holds the websocket connection's port value. By defult, it is 8581.\n     *\n     * @example\n     * \"servers\": [{\n     *     \"protocol\": \"https\",\n     *     \"restUrl\": \"spidrdomain.com\",\n     *     \"restPort\": \"443\",\n     *     \"websocketProtocol\": \"wss\",\n     *     \"websocketIP\": \"spidrdomain.com\",\n     *     \"websocketPort\": \"443\"\n     * }],\n     */\n\n    /**\n     * A handler function that is given a chance to make modificaitons to a given SDP before and/or after a local and/or remote description is set.\n     *\n     * @callback sdpHandler\n     * @param {Object} params The object of parameters for the function.\n     * @param {Object} params.currentSdp The current SDP provided by the last handler which may be modified from the original SDP. You can check if currentSdp has been modified by comparing it against originalSdp for referential equality. You cannot modify this object.\n     * @param {Object} params.originalSdp The original SDP provided to the pipeline of handlers. You cannot modify this object.\n     * @param {string} params.operation The call operation being done that requires the SDP. Values are in fcs.SDP_CONSTANTS.OPERATION.\n     * @param {string} params.step The step at which the pipeline is being called. Values are in fcs.SDP_CONSTANTS.STEP.\n     * @param {string} params.type The type of sdp. Values are in fcs.SDP_CONSTANTS.TYPE.\n     * @param {string} params.callId The Id of the call this Sdp is for. It may be undefined if this is a start call operation since it will not have an Id yet.\n     * @param {function} params.next Handlers should return the value of calling `next` with the modified SDP as its only parameter. If no modifications are made, the handler should return the value of calling next with `currentSdp`. Not calling `next` will force the pipeline to ignore the rest of the handlers.\n     * @example\n     * ``` javascript\n     * function forceH264({next, currentSDP, originalSDP, operation, step, type, callId}) {\n     *     const nextSDP = Object.assign({}, currentSDP, {propertyName: 'value'});\n     *\n     *     return next(nextSDP);\n     *\n     *     // or, if you want to end the pipeline\n     *     return nextSDP;\n     * }\n     * ```\n     */\n\n    /**\n     * JSL library setup\n     * @typedef {Object} fcsSetupConfigParams\n     * @property {string} [notificationType=LONGPOLLING] The notification type to be used {@link fcs.notification#NotificationTypes}\n     * @property {string} [serverRetryNumber=5] Server retry number is used when websocket failure. The current websocket will be tried for the given parameter (Between 0 and 10)\n     * @property {string} [serverRetryInterval] Server retry time interval is the current failed websocket retry interval. Default value is 5000. (Between 1000 and 10000)\n     * @property {Object[]} [servers=[]] servers config {@link fcsSetupConfigParamsServers}.\n     * @property {string} [restUrl] Deprecated. please use {@link fcsSetupConfigParamsServers}\n     * @property {string} [restPort] Deprecated. please use {@link fcsSetupConfigParamsServers}\n     * @property {string} [websocketProtocol] Deprecated. please use {@link fcsSetupConfigParamsServers}\n     * @property {string} [websocketIP] Deprecated. please use {@link fcsSetupConfigParamsServers}\n     * @property {string} [websocketPort] Deprecated. please use {@link fcsSetupConfigParamsServers}\n     * @property {string} [protocol] Deprecated. please use {@link fcsSetupConfigParamsServers}\n     * @property {string} [polling=30] Polling time value in seconds.\n     * @property {number} [expires=3600] Expire time value in seconds.Default value is 3600.(60  and bigger than 60 ).\n     * @property {string} [codecsToRemove] Audio codesc to be removed.\n     * @property {string} [codecsToRemoveForVideo] Video codesc to be removed.\n     * @property {Object} [opusConfig] Bandwidth controls to add for Opus audio codec\n     * @property {string} [callAuditTimer=30000] Audit time value for calls.\n     * @property {boolean} [cors=false] True if Cross-Origin Request Sharing supported.\n     * @property {string} [services=\"IM, Presence, Call\"] Defines the enabled services for client.\n     * @property {boolean} [serverProvidedTurnCredentials=false] Provide TURN server credentials from server or not.\n     * @property {number} [iceCandidateCollectionTimeoutInterval=3000] When provided (in milliseconds), ice candidate collection assumed to be completed if at least one candidate is received within the interval.\n     * @property {number} [relayCandidateCollectionTimeoutCycle] When provided, iceCandidateCollectionTimeoutInterval is restarted until receiving first relay candidate. if the provided cycle limit is reached, ice candidate collection assumed to be completed.\n     * @property {boolean} [useRelayOnly] Forces the ICE Agent to only use relay candidate by setting the iceTransportPolicy to relay\n     * @property {Object} [pluginMode] plugin mode config {@link fcsSetupConfigParamsPluginMode}.\n     * @property {string} [connectivityInterval=10000] Connectivity check interval time value. If it is 0 connectivity check is diabled. Recommended to use values greater than 10000, due to performance issues.\n     * @property {string} [connectivityLostRetry=false] Connectivity check will retry when the connectivity fails until it succeed on the following default patern 10s, 20s, 40s, 80s, ... 640s, 640s, ...\n     * @property {string} [connectivityRetryStart=10000] Initial time (ms) after the connectity is retried.\n     * @property {string} [connectivityRetryLimit=640000] Maximum time (ms) between retries.\n     * @property {string} [connectivityRetryMultiplier=2] Multiplier that will be applied for the next retry.\n     * @property {string} [websocketInterval=10000] Websocket health check interval. If the websocketInterval parameter value is 0, websocket health check will be disabled.\n     * @property {string} [backgroundWebsocketInterval=60000] Websocket health check interval for mobile when the device is running in the background.\n     * @property {string} [pluginLogLevel=\"2\"] The log level of webrtc plugin\n     * @property {string} [staggeredTimerMin=\"300\"] Minimum value for staggered timer. (Timer used to prevent all devices to reconnect at the same time)\n     * @property {string} [staggeredTimerMax=\"5000\"] Maximum value for staggered timer.\n     * @property {string} [videoContainer] html node in which to inject the video\n     * @property {string} [remoteVideoContainer] html node in which to inject the remote video\n     * @property {string} [localVideoContainer] html node in which to inject the preview of the user camera\n     * @property {string} [iceserver=\"\"] ice server ip address\n     * @property {boolean} [webrtcdtls=false] webrtc dtls status\n     * @property {boolean} [recordCallStats=false] When enabled, call statistics are recorded in app's localstorage after the call is terminated.\n     * @property {boolean} [dscpEnabled=false] Enabled experimental DSCP markings on supported platforms (Chrome only).\n     * @property {string} [language=\"en\"] language setting of the plugin\n     * @property {ajaxHook} [ajaxHook] ajax hook to intercept outgoing xhr request to modify url and headers\n     * @property {boolean} [callReplace=false] When enabled, inform Spidr that replaceCall is supported\n     * @property {boolean} [ringingFeedback=false] When enabled, inform Spidr that RingingFeedback is supported\n     * @property {boolean} [trickleIceSupport=\"none\"] Specifies trickle ice support. \"none\" is default value and trickle ice isn't supported. \"half\" means half trickle is supported. \"full\" means full trickle is supported.\n     * @property {string} [cachePrefix=\"\"] Allows the user to specify a unique prefix for keys stored in localStorage.\n     * @property {boolean} [forceDisableMediaOnHold=false] Disables any type of media (e.g. Comfort Noise) from transmitting when call is held locally.\n     * @property {boolean} [videoInactiveOnHold=false] Sets the video as \"inactive\" instead of \"sendonly\" when holding a call.\n     * @property {boolean} [performVideoStartWorkaround=false] Enable the video start workaround for Chrome < 63, now disabled by default.\n     * @property {sdpHandler[]} [sdpHandlers=[]] The array of handlers for SDP manipulations.\n     * @property {string} [bundlePolicy=DISABLED] The bundle policy to use for peer connections. Value can be fcs.SDP_CONSTANTS.BUNDLE_POLICY.MAX_COMPAT, fcs.SDP_CONSTANTS.BUNDLE_POLICY.MAX_BUNDLE,  fcs.SDP_CONSTANTS.BUNDLE_POLICY.BALANCED or fcs.SDP_CONSTANTS.BUNDLE_POLICY.DISABLED. The DISABLED option means that bundle group lines will be removed from every SDP.\n     * @property {Object} [callConstraints] Custom RTCPeerConnection constraints to use for calls. Will cause errors if malformed.\n     * @property {Object} [callConstraints.chrome] Custom constraints to be used on Google Chrome.\n     * @property {Object} [callConstraints.firefox] Custom constraints to be used on Mozilla Firefox.\n     * @property {Object} [callConstraints.plugin] Custom constraints to be used with the WebRTC Plugin.\n     * @property {boolean} [callResyncOnConnect=false] Resync all active call states upon connecting (requires Kandy Link 4.7.1+).\n     */\n\n    /**\n     * This function is used to set up JSL library\n     *\n     * @name fcs#setup\n     * @function\n     * @param {fcsSetupConfigParams} config configuration parameters\n     * @since 3.0.0\n     * @example\n     *\n     * fcs.setup(\n     *   {\n     *       notificationType: fcs.notification.NotificationTypes.WEBSOCKET,\n     *       \"servers\": [{\n     *           \"protocol\": \"https\",\n     *           \"restUrl\": \"spidrdomain.com\",\n     *           \"restPort\": \"443\",\n     *           \"websocketProtocol\": \"wss\",\n     *           \"websocketIP\": \"spidrdomain.com\",\n     *           \"websocketPort\": \"443\"\n     *       }],\n     *       callAuditTimer: 30000,\n     *       clientControlled : true,\n     *       pluginMode: {\n     *          mode: 'webrtc',\n     *          h264: true,\n     *          chrome: {\n     *              mode: 'auto'\n     *          },\n     *          firefox: {\n     *              version: '38+',\n     *              mode: 'auto'\n     *          }\n     *       },\n     *       connectivityInterval: '20000',\n     *       \"iceserver\": [{\n     *           \"urls\": \"turns:turn1.spidrdomain.com:443?transport=tcp\",\n     *           \"credential\": \"\"\n     *           }, {\n     *              \"urls\": \"turns:turn2.spidrdomain.com:443?transport=tcp\",\n     *              \"credential\": \"\"\n     *       }],\n     *       webrtcdtls: true,\n     *       recordCallStats: true,\n     *       videoContainer: document.getElementById(\"defaultVideoContainer\")\n     *   }\n     * );\n     *\n     * // example for multiple server\n     *\n     * fcs.setup(\n     *   {\n     *       notificationType: fcs.notification.NotificationTypes.WEBSOCKET_ONLY,\n     *       servers: [{protocol: 'http',\n     *                   restUrl: '1.1.1.1',\n     *                   restPort: '8580',\n     *                   websocketProtocol: 'ws',\n     *                   websocketIP: '1.1.1.1',\n     *                   websocketPort: '8578'},\n     *                  {protocol: 'http',\n     *                   restUrl: '1.1.1.1',\n     *                   restPort: '8580',\n     *                   websocketProtocol: 'ws',\n     *                   websocketIP: '1.1.1.1',\n     *                   websocketPort: '8581'}],\n     *      serverRetryNumber: '2',\n     *      serverRetryInterval: '3000',\n     *       pluginMode: {\n     *          mode: 'webrtc',\n     *          h264: true,\n     *          chrome: {\n     *              mode: 'auto'\n     *          },\n     *          firefox: {\n     *              version: '38+',\n     *              mode: 'auto'\n     *          }\n     *       },\n     *       connectivityInterval: '20000'\n     *       websocketInterval: '20000',\n     *       iceserver: [{\"urls\":\"stun:206.165.51.69:3478\"},\n     *                     {\"urls\":\"turn:206.165.51.69:3478\",\n     *                       \"credential\":\"dummyCredential\",\n     *                       \"password\":\"dummyPwd\"}]\n     *       webrtcdtls: true,\n     *       recordCallStats: true,\n     *       videoContainer: document.getElementById(\"defaultVideoContainer\")\n     *   }\n     * );\n     *\n     *\n     */\n    this.setup = function(configParams, delayInitMedia) {\n        delayInitMedia = delayInitMedia === undefined ? false : delayInitMedia;\n        var param, i, j, codecsToReplaceDefaultFound, paramFields;\n        for (param in configParams) {\n            if (configParams.hasOwnProperty(param)) {\n                if (param === 'codecsToReplace') {\n                    if (typeof _config[param] === 'undefined') {\n                        _config[param] = [];\n                    }\n                    for (i in configParams[param]) {\n                        if (configParams[param].hasOwnProperty(i)) {\n                            codecsToReplaceDefaultFound = false;\n                            for (j in _config[param]) {\n                                if (_config[param].hasOwnProperty(j) &&\n                                    _config[param][j].name === configParams[param][i].name) {\n                                    codecsToReplaceDefaultFound = true;\n                                    _config[param][j].value = configParams[param][i].value;\n                                }\n                            }\n\n                            if (!codecsToReplaceDefaultFound) {\n                                _config[param].push(configParams[param][i]);\n                            }\n                        }\n                    }\n                } else if (param === 'pluginMode') {\n                    paramFields = Object.keys(configParams[param]);\n                    for (i in paramFields) {\n                        if (paramFields.hasOwnProperty(i)) {\n                            _config[param][paramFields[i]] = configParams[param][paramFields[i]];\n                        }\n                    }\n                } else {\n                    _config[param] = configParams[param];\n                }\n            }\n        }\n\n        // This function checks the expiration date.\n        // It should not be a very small value.\n        // Otherwise, the api enters the loop.There is no upper limit.\n        var handleValidSubscriptionExpiryTimerValue = function(time) {\n            if (time && parseInt(time) >= MIN_SUBSCRIPTION_EXPIRY_VALUE) {\n                return time;\n            } else {\n                return DEFAULT_SUBSCRIPTION_EXPIRY_VALUE;\n            }\n        };\n\n        _config.trickleIceSupport = (Object.values(constants.TRICKLE).indexOf(_config.trickleIceSupport) !== -1) ? _config.trickleIceSupport : 'none';\n        _config.expires = handleValidSubscriptionExpiryTimerValue(configParams ? configParams.expires : undefined);\n        if (!delayInitMedia) {\n            _globalBroadcaster.publish(constants.EVENT.FCS_SETUP_COMPLETED, _config);\n        }\n    };\n\n    // This function can be used to set conenction info parameters into the config\n    this.setConnectionInfo = function (connectionParams) {\n        for (var param in connectionParams) {\n            if (connectionParams.hasOwnProperty(param)) {\n                _config[param] = connectionParams[param];\n            }\n        }\n    };\n\n    /**\n     * This is an object of constants for advanced use only. Use these constants in your SDP handlers. See fcs.setup() to see how to set SDP handlers.\n     *\n     * @name fcs#SDP_CONSTANTS\n     * @property {Object} SDP_CONSTANTS The object of constants for use in SDP handlers.\n     * @property {Object} SDP_CONSTANTS.TYPE The type of SDP.\n     * @property {string} SDP_CONSTANTS.TYPE.OFFER Offer sdp type.\n     * @property {string} SDP_CONSTANTS.TYPE.ANSWER Answer sdp type.\n     * @property {string} SDP_CONSTANTS.TYPE.PRANSWER Pranswer sdp type.\n     * @property {Object} SDP_CONSTANTS.OPERATION The operation for which the sdp will be used.\n     * @property {string} SDP_CONSTANTS.OPERATION.START_CALL A call start operation.\n     * @property {string} SDP_CONSTANTS.OPERATION.ANSWER_CALL A call answer operation.\n     * @property {string} SDP_CONSTANTS.OPERATION.HOLD A hold operation.\n     * @property {string} SDP_CONSTANTS.OPERATION.UPDATE An update operation.\n     * @property {string} SDP_CONSTANTS.OPERATION.REOFFER A reoffer operation.\n     * @property {string} SDP_CONSTANTS.OPERATION.RESPOND A respond operation.\n     * @property {string} SDP_CONSTANTS.OPERATION.DATA_CHANNEL A data channel operation.\n     * @property {Object} SDP_CONSTANTS.STEP The step in the process that the SDP is at.\n     * @property {string} SDP_CONSTANTS.STEP.PRE_SET_LOCAL The local SDP is about to be set.\n     * @property {string} SDP_CONSTANTS.STEP.PRE_SET_REMOTE The remote SDP is about to be set.\n     * @property {string} SDP_CONSTANTS.STEP.PRE_SEND_LOCAL The local SDP is about to be sent to the other peer.\n     */\n    this.SDP_CONSTANTS = constants.WEBRTC.SDP;\n\n    /**\n     * Plugin required event will be fired in case that plug-in not found or version is outdated\n     *\n     * @name fcs#onPluginRequired\n     * @event\n     * @param {fcs.call#MediaErrors} event media initialization error\n     * @since 3.0.0\n     * @example\n     *\n     * fcs.onPluginRequired = function(error) {\n     *     switch (error) {\n     *         case fcs.call.MediaErrors.WRONG_VERSION:\n     *             // Media Plugin Version Not Supported\n     *             // Download plugin\n     *             break;\n     *         case fcs.call.MediaErrors.NEW_VERSION_WARNING:\n     *             // New Media Version Available Wanrning\n     *             break;\n     *         case fcs.call.MediaErrors.NOT_INITIALIZED:\n     *             // Media couldn't be initialized\n     *             break;\n     *         case fcs.call.MediaErrors.NOT_FOUND:\n     *             // Plugin couldn't be found!\n     *             // Download plugin\n     *             break;\n     *     }\n     * }\n     */\n\n    /**\n     * This function sets version of plugin\n     *\n     * @name fcs#setPluginVersion\n     * @function\n     * @param {string} version\n     * @since 3.0.0\n     * @example\n     *\n     * fcs.setPluginVersion(version);\n     */\n    this.setPluginVersion = function(version) {\n        pluginVer = version;\n    };\n\n    /**\n     * This function returns version of plugin\n     *\n     * @name fcs#getPluginVersion\n     * @function\n     * @returns {String} Version of Current Plugin\n     * @since 3.0.0\n     * @example\n     *\n     * fcs.getPluginVersion();\n     */\n    this.getPluginVersion = function() {\n        return pluginVer;\n    };\n\n    /**\n     * This function returns assigned services of authenticated user.\n     *\n     * @name fcs#getServices\n     * @function\n     * @returns {object} The assigned services of authenticated user\n     * @since 3.0.0\n     * @example\n     *\n     * fcs.getServices();\n     */\n    this.getServices = function() {\n        return services;\n    };\n\n    /**\n     * This function assigns determined services to current user\n     *\n     * @name fcs#setServices\n     * @function\n     * @param {array} serviceParam The list of assigned services for the user\n     * @since 3.0.0\n     * @example\n     * fcs.setServices([\"CallControl\", \"RestfulClient\"]);\n     */\n    this.setServices = function(serviceParam) {\n        var i;\n        // for each element in serviceParam array, we create the service with value \"true\" in \"services\" object\n        if (serviceParam) {\n            services = {};\n            for (i = 0; i < serviceParam.length; i++) {\n                switch (serviceParam[i]) {\n                case 'CallDisplay':\n                    services.callDisplay = true;\n                    break;\n                case 'CallDisposition':\n                    services.callDisposition = true;\n                    break;\n                case 'RestfulClient':\n                    services.restfulClient = true;\n                    break;\n                case 'call':\n                    services.callControl = true;\n                    services.remoteCallControl = false;\n                    break;\n                case 'CallControl':\n                    services.callControl = true;\n                    services.remoteCallControl = false;\n                    break;\n                case 'RCC':\n                    services.callControl = false;\n                    services.remoteCallControl = true;\n                    break;\n                case 'CallMe':\n                    services.callMe = true;\n                    break;\n                case 'Directory':\n                    services.directory = true;\n                    break;\n                case 'ClickToCall':\n                    services.clickToCall = true;\n                    break;\n                case 'Presence':\n                    services.presence = true;\n                    break;\n                case 'AddressBook':\n                    services.contacts = true;\n                    break;\n                case 'CallLog':\n                    services.history = true;\n                    break;\n                case 'Custom':\n                    services.custom = true;\n                    break;\n                case 'IM':\n                    services.IM = true;\n                    break;\n                case 'Route':\n                    services.routes = true;\n                    break;\n                case 'DataChannel':\n                    services.dataChannel = true;\n                    break;\n                default:\n                    break;\n                }\n            }\n        }\n    };\n\n    /**\n     * Returns network connectivity status.\n     *\n     * @name fcs#isConnected\n     * @function\n     *\n     * @returns {Boolean}, true if connection is up otherwise false.\n     */\n    this.isConnected = function() {\n        return connected;\n    };\n\n    this.setConnected = function(connectionStatus) {\n        connected = connectionStatus === true ? true : false;\n    };\n}\n","export function LocaleService({\n    Http: _server,\n    Utils: _utils\n}) {\n    this.getUserLocale = function(onSuccess, onFailure) {\n        _server.sendGetRequest({\n            'url': _server.getWAMUrl(1, '/localization', false)\n        },\n        function(data) {\n            _utils.callFunctionIfExist(onSuccess, data);\n        },\n        onFailure\n        );\n    };\n}\n","import {HttpImpl} from './http';\nimport {XHRImpl} from './xhr';\n\nexport default {\n    XHR: container => new XHRImpl(container),\n    Http: container =>  new HttpImpl(container)\n};\n","import CONSTANTS from '../constants';\nimport { base64_encode } from '../../lib/base64';\nimport errors from '../errors';\n\nexport function HttpImpl({\n    XHR: _xhr,\n    GlobalBroadcaster: _globalBroadcaster,\n    Core: _core,\n    Config: _config\n}) {\n\n    var REQUEST_TYPE_PUT = 'PUT',\n        REQUEST_TYPE_POST = 'POST',\n        REQUEST_TYPE_GET = 'GET',\n        REQUEST_TYPE_DELETE = 'DELETE',\n        username, password, session, authname;\n\n    function onSubscriptionStarted(data) {\n        session = data.session;\n    }\n\n    // In order to delete previous session\n    function onSubscriptionEnded() {\n        session = null;\n    }\n\n    function onTokenAuth(data) {\n        username = data.username;\n    }\n\n    function onBasicAuth(data) {\n        username = data.username;\n        password = data.password;\n        authname = data.authname;\n    }\n\n    function manipulateHeader(header) {\n        if (!header) {\n            header = {};\n        }\n        if (!header.Accept) {\n            header.Accept = 'application/json';\n        }\n        if (!header['Content-Type']) {\n            header['Content-Type'] = 'application/json';\n        }\n\n        if (!_core.getKandyUAT()) {\n            //Check whether auth or basic auth\n            if (session) {\n                header['x-session'] = session;\n                delete header.Authorization;\n            } else {\n                if (authname && password) {\n                    header.Authorization = 'basic ' + base64_encode(authname + ':' + password);\n                } else if (username && password) {\n                    header.Authorization = 'basic ' + base64_encode(username + ':' + password);\n                }\n                delete header['x-session'];\n            }\n        }\n        return header;\n    }\n\n    function sendRequest(method, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header) {\n        var kandyUAT = _core.getKandyUAT();\n\n        var failureHandler = function(statusCode) {\n            if (statusCode === errors.TOKEN_NOT_FOUND) {\n                _globalBroadcaster.publish(CONSTANTS.EVENT.TOKEN_NOT_FOUND);\n                session = null;\n            } else if (statusCode === errors.SESSION_EXPIRED) {\n                _globalBroadcaster.publish(CONSTANTS.EVENT.SESSION_EXPIRED);\n                session = null;\n            }\n\n            if (errorHandler && typeof errorHandler === 'function') {\n                errorHandler(statusCode);\n            }\n        };\n\n        if (kandyUAT) {\n            if (callParams.url.indexOf('?') === -1) {\n                callParams.url += '?key=' + kandyUAT;\n            } else {\n                callParams.url += '&key=' + kandyUAT;\n            }\n        }\n\n        return _xhr.call(method, callParams, successHandler, failureHandler, successParser, errorParser, responseType, header);\n    }\n\n    function sendPostRequestTokenAuth(callParams, successHandler, errorHandler, successParser, errorParser, responseType, header, token) {\n        if (!header) {\n            header = {};\n        }\n        if (!header.Accept) {\n            header.Accept = 'application/json';\n        }\n        if (!header['Content-Type']) {\n            header['Content-Type'] = 'application/json';\n        }\n        //Check whether auth or basic auth\n        if (header['x-session']) {\n            delete header['x-session'];\n        }\n        if (header.Authorization) {\n            delete header.Authorization;\n        }\n        if (!header['x-token']) {\n            header['x-token'] = token;\n        }\n        return sendRequest(REQUEST_TYPE_POST, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header);\n    }\n\n    this.call = function(method, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header) {\n        header = manipulateHeader(header);\n        return sendRequest(method, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header);\n    };\n\n    this.sendPostRequest = function(callParams, successHandler, errorHandler, successParser, errorParser, responseType, header, token) {\n        if (token) {\n            return sendPostRequestTokenAuth(callParams, successHandler, errorHandler, successParser, errorParser, responseType, header, token);\n        } else {\n            header = manipulateHeader(header);\n            return sendRequest(REQUEST_TYPE_POST, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header);\n        }\n    };\n\n    this.sendGetRequest = function(callParams, successHandler, errorHandler, successParser, errorParser, responseType, header) {\n        header = manipulateHeader(header);\n        return sendRequest(REQUEST_TYPE_GET, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header);\n    };\n\n    this.sendDeleteRequest = function(callParams, successHandler, errorHandler, successParser, errorParser, responseType, header) {\n        header = manipulateHeader(header);\n        return sendRequest(REQUEST_TYPE_DELETE, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header);\n    };\n\n    this.sendPutRequest = function(callParams, successHandler, errorHandler, successParser, errorParser, responseType, header) {\n        header = manipulateHeader(header);\n        return sendRequest(REQUEST_TYPE_PUT, callParams, successHandler, errorHandler, successParser, errorParser, responseType, header);\n    };\n\n    this.getUrl = function() {\n        var url = '';\n\n        if (!_config.protocol || !_config.restUrl || !_config.restPort) {\n            return url;\n        }\n        return url + _config.protocol + '://' + _config.restUrl + ':' + _config.restPort;\n    };\n\n    this.getWAMUrl = function(version, url, authNeeded) {\n        if (authNeeded === false) {\n            // Authentcation is not needed.\n            return this.getUrl() + '/rest/version/' + (version ? version : 'latest') + url;\n        } else {\n            // Authentcation is needed for the rest request\n            if (_core.notification || _config.anonymous) {\n                return this.getUrl() + '/rest/version/' + (version ? version : 'latest') + (_config.anonymous ? '/anonymous/' : '/user/') + _core.getUser() + url;\n            } else {\n                return this.getUrl() + '/rest/version/' + (version ? version : 'latest') + '/user/' + _core.getUser() + url;\n            }\n        }\n    };\n\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.TOKEN_AUTH_STARTED, onTokenAuth, 9);\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.BASIC_AUTH_STARTED, onBasicAuth, 10);\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.DEVICE_SUBSCRIPTION_STARTED, onSubscriptionStarted);\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.DEVICE_SUBSCRIPTION_ENDED, onSubscriptionEnded);\n\n    //@{test-methods}\n    this.manipulateHeader = manipulateHeader;\n    this.setSession = function(value) {\n        session = value;\n    };\n    this.setUsernamePassword = function(user, pass, auth) {\n        username = user;\n        password = pass;\n        authname = auth;\n    };\n    //@{test-methods}\n}\n","\nimport errors from '../errors';\nimport {serialize, extend} from '../utils';\nimport CONSTANTS from '../constants';\n\nexport function XHRImpl({\n    Core: _core,\n    GlobalBroadcaster: _globalBroadcaster,\n    LogManager: _logManager,\n    Config: _config,\n    Utils: _utils,\n    ChallengeManager: _challenger,\n    GoneNotifier: _goneNotifier\n}) {\n\n    var DEFAULT_LONGPOLLING_TOLERANCE = 30000,\n        DEFAULT_AJAX_TIMEOUT = 40000,\n        XHR_READY_STATE = {\n            REQUEST_NOT_INITIALIZED: 0,\n            REQUEST_DONE: 4\n        },\n        self = this;\n\n    function getLogger() {\n        return _logManager.getLogger('jQrestful');\n    }\n\n    function composeAjaxRequestResponseLog(context, xhr, errorThrown, data) {\n        var responseLog = context;\n        if (data) {\n            responseLog.data = data;\n        }\n        if (errorThrown) {\n            responseLog.errorThrown = errorThrown;\n        }\n        if (xhr) {\n            responseLog.status = xhr.status;\n            responseLog.statusText = xhr.statusText;\n            responseLog.responseText = xhr.responseText;\n            responseLog.readyState = xhr.readyState;\n        }\n        return responseLog;\n    }\n\n    function parseError(x, e) {\n        var returnResult, statusCode;\n        getLogger().error('parseError:\\'' + e + '\\' Status:\\'' + x.status + '\\' ResponseText:\\'' + x.responseText + '\\'');\n\n        if (x.responseText && x.responseText.search('statusCode') !== -1) {\n            if (JSON.parse(x.responseText).subscribeResponse !== undefined) {\n                statusCode = JSON.parse(x.responseText).subscribeResponse.statusCode;\n            } else if (JSON.parse(x.responseText).authorizationResponse !== undefined) {\n                statusCode = JSON.parse(x.responseText).authorizationResponse.statusCode;\n            }\n        }\n\n        statusCode = statusCode ? statusCode : x.status;\n\n        switch (statusCode) {\n        case 401:\n            returnResult = errors.AUTH;\n            break;\n        case 403:\n            returnResult = errors.INCORRECT_LOGIN_PASS;\n            break;\n        case 19:\n            returnResult = errors.LOGIN_LIMIT_CLIENT;\n            break;\n        case 20:\n            returnResult = errors.LOGIN_LIMIT_TABLET;\n            break;\n        case 39:\n            returnResult = errors.SESSION_NOT_FOUND;\n            break;\n        case 44:\n            returnResult = errors.FORCE_LOGOUT_ERROR;\n            break;\n        case 46:\n            returnResult = errors.TOKEN_NOT_FOUND;\n            break;\n        case 47:\n            returnResult = errors.SESSION_EXPIRED;\n            break;\n        default:\n            returnResult = errors.NETWORK;\n        }\n        return returnResult;\n    }\n\n    // TODO: tolga: remove parseError when all of the responseTypes are added\n    function parseErrorStatusCode(x, e, responseType) {\n        getLogger().error('parseErrorStatusCode:\\'' + e + '\\' Status:\\'' + x.status + '\\' ResponseText:\\'' + x.responseText + '\\'');\n\n        if (x.responseText && x.responseText.search('statusCode') !== -1 && JSON.parse(x.responseText)[responseType] !== undefined) {\n\n            return JSON.parse(x.responseText)[responseType].statusCode;\n        }\n\n        return (x.status === 401 || x.status === 403) ? x.status : 400;\n    }\n\n\n    /*\n     * @ignore\n     */\n    self.call = function(method, callParams, successHandler, errorHandler, successParser, errorParser, responseType, headers) {\n        var data,\n            timeout = DEFAULT_AJAX_TIMEOUT,\n            url = callParams.url,\n            origHeaders = headers,\n            urlWithoutRestVersion = url.split('/rest/version/')[1],\n            resourceString,\n            logger = getLogger(),\n            xhr,\n            queryString,\n            finalHeaders,\n            headerKey,\n            responseLogContext,\n            handleSuccess,\n            handleError,\n            isSuccess,\n            modValues;\n\n        if (callParams && callParams.data) {\n            data = callParams.data;\n        }\n\n        if (_config.polling) {\n            timeout = _config.polling * 1000;\n            if (_config.longpollingTolerans) {\n                timeout = timeout + _config.longpollingTolerans;\n            } else {\n                timeout = timeout + DEFAULT_LONGPOLLING_TOLERANCE;\n            }\n        }\n\n        // do not log isAlive requests\n        if (urlWithoutRestVersion && urlWithoutRestVersion.indexOf('isAlive') === -1) {\n            // extracting rest resource from url.\n            // \".../rest/version/<ver>/<user/anonymous>/<userName>/restResource/...\"\n            resourceString = urlWithoutRestVersion.split('/')[3];\n            if (!resourceString) {\n                // rest resource string not found, get last string in the url\n                resourceString = url.substring(url.lastIndexOf('/') + 1, url.length);\n            }\n            // remove \"?\" if exists\n            resourceString = resourceString.split('?')[0];\n\n            if (data && !data.imRequest) {\n                logger.info('Send ajax request: ' + resourceString, data);\n            } else {\n                logger.info('Send ajax request: ' + resourceString);\n            }\n        }\n\n        if (method === 'GET') {\n            // Take the data parameters and append them to the URL.\n            queryString = serialize(data);\n\n            if (queryString.length > 0) {\n                if (url.indexOf('?') === -1) {\n                    url += '?' + queryString;\n                } else {\n                    url += '&' + queryString;\n                }\n            }\n\n            // Remove data so that we don't add it to the body.\n            data = null;\n        }\n\n        xhr = new XMLHttpRequest();\n\n        // TODO: Kadir Goktas\n        // listeners below are functional expect for IE9.\n        // we can replace xhr.onstatechange handler\n        // accordingly, once IE9 is deprecated.\n\n        xhr.onload = function() {\n            handleSuccess(xhr);\n        };\n        xhr.onabort = function() {\n            logger.trace('Ajax request aborted internally. not calling failure callback');\n        };\n        xhr.onerror = function() {\n            logger.error('Ajax request error! Handle the error');\n            handleError(xhr);\n        };\n\n        // ajax hook to modify url and headers\n        if (_config.ajaxHook) {\n            modValues = _utils.callFunctionIfExist(_config.ajaxHook, xhr, window, {\n                type: method,\n                url: url,\n                headers: headers,\n                data: data\n            });\n            if (modValues) {\n                url = modValues.url ? modValues.url : url;\n                headers = modValues.headers ? modValues.headers : headers;\n            }\n        }\n\n        xhr.open(method, url);\n\n        xhr.withCredentials = _config.cors ? true : false;\n        xhr.timeout = timeout;\n\n        finalHeaders = {\n            // Old implementation used jQuery without changing content type. Doing the same here for\n            // backwards compatibility.\n            'Content-Type': 'application/x-www-form-urlencoded',\n\n            // JQuery always adds this header by default. Adding here for backwards compatibility.\n            'X-Requested-With': 'XMLHttpRequest'\n        };\n\n        finalHeaders = extend(finalHeaders, headers);\n\n        // Set the headers.\n        for (headerKey in finalHeaders) {\n            if (finalHeaders.hasOwnProperty(headerKey)) {\n                xhr.setRequestHeader(headerKey, finalHeaders[headerKey]);\n            }\n        }\n\n        if (typeof data !== 'string') {\n            data = JSON.stringify(data);\n        }\n\n        xhr.send(data);\n\n        // Used for logging information,\n        responseLogContext = {\n            type: method,\n            url: url,\n            dataType: 'json',\n            async: true,\n            jsonp: false,\n            crossDomain: _config.cors ? true : false,\n            timeout: timeout\n        };\n\n        function checkIE9HackForAbortedAjaxRequest(xhr) {\n            // IE9 hack: identifying internally aborted ajax requests.\n            try {\n                isSuccess = (xhr.status >= 200 && xhr.status < 300) || xhr.status === 304;\n            } catch (err) {\n                // when an ajax request is aborted by javascript, accessing xhr.status will throw\n                // exception. \"c00c023f\" is the exact code that IE9 throws.\n                // but all exceptions are considered as same.\n                if (err instanceof Error) {\n                    if (err.description === 'Could not complete the operation due to error c00c023f.') {\n                        logger.trace('Ajax request aborted internally. not calling failure callback');\n                    }\n                }\n                return -1;\n            }\n            return isSuccess;\n        }\n\n        handleSuccess = function(xhr) {\n\n            if (xhr.readyState === XHR_READY_STATE.REQUEST_DONE) {\n\n                isSuccess = checkIE9HackForAbortedAjaxRequest(xhr);\n                if (isSuccess === -1) {\n                    return;\n                }\n\n                // onload hack: need to handle both success and failure in xhr load event\n                if (!isSuccess) {\n                    handleError(xhr);\n                    return;\n                }\n\n                var val = {};\n                try {\n                    // Make sure that the response isn't empty before parsing. Empty is considered\n                    // an empty object.\n                    if (typeof xhr.responseText === 'string' && xhr.responseText.length) {\n                        val = JSON.parse(xhr.responseText);\n                    }\n\n                    // do not log success response for isAlive requests\n                    if (typeof xhr.responseURL === 'string' && xhr.responseURL.indexOf('isAlive') === -1) {\n                        logger.info('ajax success: ' + xhr.status + ' ' + xhr.statusText,\n                            composeAjaxRequestResponseLog(responseLogContext, xhr, undefined, val));\n                    }\n                } catch (e) {\n                    if (e instanceof SyntaxError) {\n                        logger.error('Failed to parse json ajax response into object:' + xhr.responseText,\n                            composeAjaxRequestResponseLog(responseLogContext, xhr, undefined, val));\n                    } else {\n                        logger.error('Unknown error:' + xhr.status + ' ' + xhr.statusText,\n                            composeAjaxRequestResponseLog(responseLogContext, xhr, undefined, val));\n                    }\n\n                    handleError(xhr);\n                    return;\n                }\n\n                if (successParser && typeof successParser === 'function') {\n                    val = successParser(val);\n                }\n                if (successHandler && typeof successHandler === 'function') {\n                    successHandler(val);\n                }\n            }\n        };\n\n        handleError = function(xhr) {\n            // TODO: Error Thrown\n            logger.error('ajax error: ' + xhr.status + ' ' + xhr.statusText,\n                composeAjaxRequestResponseLog(responseLogContext, xhr, xhr.statusText));\n\n            var reportError = function() {\n                if (xhr.status === 410) {\n                    logger.error('410 Gone received');\n                    _utils.callFunctionIfExist(_goneNotifier.onGoneReceived);\n                    return;\n                }\n\n                if (xhr.readyState === XHR_READY_STATE.REQUEST_NOT_INITIALIZED) {\n                    _globalBroadcaster.publish(CONSTANTS.EVENT.XHR_REQUEST_NOT_INITIALIZED);\n                    logger.debug('Ajax request cannot be sent, this is a connection problem.');\n                }\n\n                if (errorHandler && typeof errorHandler === 'function') {\n                    //TODO after unit tests moved to addressbook class, responseType parameter should be removed\n                    if (responseType === 'addressBookResponse') {\n                        errorHandler(parseErrorStatusCode(xhr, xhr.statusText, responseType));\n                    } else {\n                        if (errorParser && typeof errorParser === 'function') {\n                            errorHandler(errorParser(xhr, xhr.statusText));\n                        } else {\n                            errorHandler(parseError(xhr, xhr.statusText));\n                        }\n                    }\n                } else {\n                    logger.trace('Error handler is not defined or not a function');\n                }\n            };\n\n            if (xhr.status === 403 && _core.getKandyUAT() && _config.enableAuthChallenge) {\n                _challenger.challenge()\n                    .then(function(newUAT) {\n                        // Replace the key parameter with the new user access token.\n                        callParams.url = callParams.url.replace(/([\\?\\&]key=)uat[0-9a-f]{32}/gi, `$1${newUAT}`);\n                        self.call(method, callParams, successHandler, errorHandler, successParser, errorParser, responseType, origHeaders);\n                    })\n                    .catch(reportError);\n            } else {\n                reportError();\n            }\n        };\n\n        if (xhr.readyState === 4) {\n            // If the request already completed, just fire the callback asynchronously\n            setTimeout(function() {\n                handleSuccess(xhr);\n            });\n        } else {\n            // sucess and fail scenarios are handled with \"load\" and \"error\" event listeners\n            // onreadystatechange is only need for IE9 hack\n            xhr.onreadystatechange = function() {\n                if (checkIE9HackForAbortedAjaxRequest(xhr) === -1) {\n                    return;\n                }\n            };\n        }\n\n        return xhr;\n    };\n}\n","import {GlobalBroadcaster} from './globalBroadcaster';\n\nexport default {\n    GlobalBroadcaster: () => new GlobalBroadcaster()\n};\n","export function GlobalBroadcaster() {\n    var MAX_PRIORITY = 10,\n        MIN_PRIORITY = 1,\n        topics = {},\n        subUid = -1;\n\n    function unsubscribeFromTopic(token) {\n        var m, i, j;\n        for (m in topics) {\n            if (topics[m] && topics.hasOwnProperty(m)) {\n                j = topics[m].length;\n                for (i = 0; i < j; i++) {\n                    if (topics[m][i].token === token) {\n                        topics[m].splice(i, 1);\n                        return token;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    function subscribeToTopic(topic, func, priority, temporary) {\n        var token, prio = MAX_PRIORITY,\n            temp = false;\n\n        if (typeof topic !== 'string') {\n            throw new Error('First parameter must be a string topic name.');\n        }\n\n        if (typeof func !== 'function') {\n            throw new Error('Second parameter must be a function.');\n        }\n\n        if (typeof priority !== 'undefined') {\n            if (typeof priority !== 'number') {\n                throw new Error('Priority must be a number.');\n            } else {\n                if (priority > MAX_PRIORITY ||\n                    priority < MIN_PRIORITY) {\n                    throw new Error('Priority must be between 1-10.');\n                } else {\n                    prio = priority;\n                }\n            }\n        }\n\n        if (temporary === true) {\n            temp = temporary;\n        }\n\n        if (!topics[topic]) {\n            topics[topic] = [];\n        }\n\n        token = (++subUid).toString();\n        topics[topic].push({\n            token: token,\n            prio: prio,\n            func: func,\n            temp: temp\n        });\n\n        topics[topic].sort(function(a, b) {\n            return parseFloat(b.prio) - parseFloat(a.prio);\n        });\n\n        return token;\n    }\n\n    function publishTopic() {\n        var subscribers, len, _args, _topic;\n\n        if (arguments.length === 0) {\n            throw new Error('First parameter must be a string topic name.');\n        }\n\n        _args = Array.prototype.slice.call(arguments);\n        _topic = _args.shift();\n\n        subscribers = topics[_topic];\n        len = subscribers ? subscribers.length : 0;\n        while (len--) {\n            subscribers[len].func.apply(null, _args);\n            if (subscribers[len].temp) {\n                unsubscribeFromTopic(subscribers[len].token);\n            }\n        }\n    }\n\n    /*\n     *\n     * Publish events of interest\n     * with a specific topic name and arguments\n     * such as the data to pass along\n     *\n     * @param {string} topic - Topic name.\n     * @param {...*} [args] - arguments.\n     *\n     * @returns {undefined}\n     */\n    this.publish = publishTopic;\n\n    /*\n     *\n     * Subscribe to events of interest\n     * with a specific topic name and a\n     * callback function, to be executed\n     * when the topic/event is observed.\n     * Default priority 10.\n     * Priority must be between 1-10.\n     * Functions with lower priority\n     * will be executed first.\n     *\n     * @param {string} topic - Topic name.\n     * @param {type} func - function to be executed when the topic/event is observed\n     * @param {number} [priority] - function with higher priority will be executed first\n     * @param {boolean} [temporary] - if set to true, subscriber will unsubcribe automatically after first execution.\n     *\n     * @returns {string} token - reference to subscription\n     */\n    this.subscribe = subscribeToTopic;\n\n    /*\n     *\n     * Unsubscribe from a specific\n     * topic, based on a tokenized reference\n     * to the subscription\n     *\n     * @param {string} token - reference to subscription\n     *\n     * @returns {false|string} - returns token if successfull,\n     * otherwise returns false.\n     */\n    this.unsubscribe = unsubscribeFromTopic;\n}\n","import {TurnCredentialsManagerImpl} from './turnCredentialsManager';\n\nexport default {\n    TurnCredentialsManager: container => new TurnCredentialsManagerImpl(container)\n};\n","import { base64_encode, base64_decode } from '../../lib/base64';\n\nexport function TurnCredentialsManagerImpl({\n    Cache: _cache,\n    Utils: _utils\n}) {\n    var self = this,\n        CREDENTIALS_CACHE_KEY = 'JSL/VHVybkNyZWRlbnRpYWxz';\n\n    self.get = function() {\n        return JSON.parse(base64_decode(_cache.getItem(CREDENTIALS_CACHE_KEY)));\n    };\n\n    self.save = function(data) {\n        _cache.setItem(CREDENTIALS_CACHE_KEY, base64_encode(JSON.stringify(data)));\n        _utils.callFunctionIfExist(self.onCredentialsReceived);\n    };\n\n    self.remove = function() {\n        _cache.removeItem(CREDENTIALS_CACHE_KEY);\n    };\n}\n","import { createConvertedSdpPipeline } from './pipeline';\nimport createSdpLogger from './logger';\nimport createBundleHandler from './bundleHandler';\n\nexport default {\n    SdpPipeline: container => {\n        const builtinHandlers = [\n            createBundleHandler(() => container.Config)\n        ];\n\n        return createConvertedSdpPipeline(\n            () => [...container.Config.sdpHandlers, ...builtinHandlers],\n            createSdpLogger(container.LogManager.getLogger('sdpLogger'))\n        );\n    }\n};\n","import {sdpParse, sdpWrite} from './parser';\n\n/*\n * @method createSdpPipeline\n * @param {function[]} handlers An array of sdp handlers. These are functions that are given the sdp and a change to return a modified sdp.\n * @param {function} sdpLogger The logger for the sdp pipeline. This function is called like a handler, with the same params, but is guaranteed to be called at the end of the pipeline.\n * @returns {function} sdpPipeline The sdpPipeline that will call all of the handlers in order\n */\nexport function createSdpPipeline(getHandlers, sdpLogger) {\n    /*\n     * @method sdpPipeline\n     * @param {Object} sdp The sdp to put through the pipeline\n     * @param {string} operation The operation this sdp will be used for. Values can be found in js/webrtc/adaptor/constants.js\n     * @param {string} step The step at which the pipeline is being called. Can be 'PRE_LOCAL', 'POST_LOCAL', 'PRE_REMOTE' and 'POST_REMOTE'.\n     * @param {string} type The type of sdp. Can be 'offer' or 'answer'.\n     * @returns {Object} sdp The possibly modified sdp.\n     */\n    return (callId, sdp, operation, step, type) => {\n        const handlers = getHandlers();\n        const originalSdp = Object.freeze(sdp);\n        let newSdp = originalSdp;\n\n        // Function that is provided to handlers that needs to be called\n        // to enable the next handler to be called.\n        let nextCalled = false;\n        function next(sdp) {\n            nextCalled = true;\n            return sdp;\n        }\n\n        function callHandler(handler) {\n            return handler({\n                next,\n                originalSdp,\n                currentSdp: newSdp,\n                operation,\n                step,\n                type,\n                callId\n            });\n        }\n\n        for (let i=0; i<handlers.length; i++) {\n            // Rest the flag back for each handler\n            nextCalled = false;\n\n            newSdp = callHandler(handlers[i]);\n\n            if (!newSdp) {\n                throw new Error('An SDP handler failed to return an sdp');\n            }\n\n            // If the next function was not called, we exit the pipeline\n            if (!nextCalled) {\n                break;\n            }\n        }\n\n        newSdp = callHandler(sdpLogger);\n\n        return newSdp;\n    };\n}\n\n// This is a utility function that wraps the sdp pipeline. The wrapper will\n// convert an sdp string to provide an sdp object to the pipeline and it will\n// convert the return value back to a string.\nexport function createConvertedSdpPipeline(getHandlers, sdpLogger) {\n    const pipeline = createSdpPipeline(getHandlers, sdpLogger);\n\n    return (callId, sdpString, operation, step, type) => {\n        const sdpObject = sdpParse(sdpString);\n        const newSdp = pipeline(callId, sdpObject, operation, step, type);\n\n        // Optimization: no need to write the string if the sdp hasn't changed\n        if (sdpObject === newSdp) {\n            return sdpString;\n        }\n\n        return sdpWrite(newSdp);\n    };\n}\n","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","import transform from 'sdp-transform';\n\n/*\n * This library is wrapped by functions in this module so that we can change\n * the way that SDP is parsed later if we need to.\n */\n\nexport function sdpParse(sdpString) {\n    return transform.parse(sdpString);\n}\n\nexport function sdpWrite(sdpObject) {\n    return transform.write(sdpObject);\n}\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","export default function createSdpLogger(logger) {\n    return function sdpLogger({next, currentSdp, originalSdp, operation, step, type, callId}) {\n        logger.info('SDP Pipeline - Call Id: ' + callId + ' step: ' + step + ' operation: ' + operation + ' type: ' + type);\n\n        if (currentSdp === originalSdp) {\n            logger.info('Unmodified SDP');\n        } else {\n            logger.info('Original SDP:', originalSdp);\n            logger.info('Modified SDP:', currentSdp);\n        }\n\n        return next(currentSdp);\n    };\n}\n","import { cloneDeep } from 'lodash/fp';\nimport constants from '../constants';\n\n// Our ice candidate timeout logic does not support bundling. There are cases\n// where we should be interupting ice candidate collection but restart the\n// timeout instead because the vide mline does not have any candidates. In a\n// case where the browser is bundling, you would expect that there wouldn't\n// be any candidates in the video mline. Removing the bundle line from the SDP\n// ensures that we never bundle candidates. This shouldn't be necessary when we\n// support trickle ICE since you wouldn't expect the SDP to have all of its\n// candidates up front anyways.\nexport default function createBundleHandler(getConfig) {\n    return function bundleHandler({next, currentSdp}) {\n        if (getConfig().bundlePolicy !== constants.WEBRTC.SDP.BUNDLE_POLICY.DISABLED || currentSdp.groups === undefined) {\n            return next(currentSdp);\n        }\n\n        const newSdp = cloneDeep(currentSdp);\n\n        delete newSdp.groups;\n        return next(newSdp);\n    };\n}\n","import {RccFSMImpl} from './rccFsm';\nimport {RccManagerImpl} from './rccManager';\nimport {RccControlServiceImpl} from './wamrcc';\n\nexport default {\n    RccFSM: container => new RccFSMImpl(container),\n    RccManager: container => new RccManagerImpl(container),\n    RccControlService: container => new RccControlServiceImpl(container)\n};\n","/*\n * Finite State machine that defines state transition of basic call model.\n * State machine fires events during state transitions.\n * Components should register to FSM  in order to receive transition events\n *\n */\n\nexport function RccFSMImpl({\n    LogManager: _logManager\n}) {\n\n    this.CallFSMState = {\n        INIT: 'INIT',\n        MAKING_CALL: 'MAKING_CALL',\n        CALL_IN_PROGRESS: 'CALL_IN_PROGRESS',\n        RINGING: 'RINGING',\n        ANSWERED: 'ANSWERED',\n        CALL_RECEIVED: 'CALL_RECEIVED',\n        DEFLECTING_CALL: 'DEFLECTING_CALL',\n        ENDING_CALL: 'ENDING_CALL',\n        CALL_ENDED: 'CALL_ENDED',\n        HOLDING_CALL: 'HOLDING_CALL',\n        LOCAL_HOLD: 'LOCAL_HOLD',\n        REMOTE_HOLD: 'REMOTE_HOLD',\n        BOTH_HOLD: 'BOTH_HOLD',\n        RETRIEVING_CALL: 'RETRIEVING_CALL',\n        BLIND_TRANSFERING: 'BLIND_TRANSFERING',\n        ANSWERING_CALL: 'ANSWERING_CALL',\n        MAKING_CONSULTATIVE_TRANSFER: 'MAKING_CONSULTATIVE_TRANSFER',\n        CONFERENCING_CALL: 'CONFERENCING_CALL',\n        CONFERENCED_CALL: 'CONFERENCED_CALL'\n    };\n\n    //CallFSM returns TransferEvent after state change\n    this.TransferEvent = {\n        unknownNotification_fsm: 'unknownNotification_fsm',\n        makeCall_fsm: 'makeCall_fsm',\n        callInProgress_fsm: 'callInProgress_fsm',\n        ringing_fsm: 'ringing_fsm',\n        answered_fsm: 'answered_fsm',\n        callReceived_fsm: 'callReceived_fsm',\n        callFailed_fsm: 'callFailed_fsm',\n        callEnded_fsm: 'callEnded_fsm',\n        endCall_fsm: 'endCall_fsm',\n        blind_transfering_fsm: 'blind_transfering_fsm',\n        holdCall_fsm: 'holdCall_fsm',\n        callHeldLocally_fsm: 'callHeldLocally_fsm',\n        callRetrievedLocally_fsm: 'callRetrievedLocally_fsm',\n        callHeldRemotely_fsm: 'callHeldRemotely_fsm',\n        callRetrievedRemotely_fsm: 'callRetrievedRemotely_fsm',\n        callHeldBoth_fsm: 'callHeldBoth_fsm',\n        answerCall_fsm: 'answerCall_fsm',\n        deflectCall_fsm: 'deflectCall_fsm',\n        consultativeTransfer_fsm: 'consultativeTransfer_fsm',\n        redirected_fsm: 'redirected_fsm',\n        callBlindTransferred_fsm: 'callBlindTransferred_fsm',\n        callConsultativeTransferred_fsm: 'callConsultativeTransferred_fsm',\n        callTransferred_fsm: 'callTransferred_fsm',\n        conferencing_fsm: 'conferencing_fsm',\n        conferenced_fsm: 'conferenced_fsm',\n        blindTransferFailed_fsm: 'blindTransferFailed_fsm',\n        consultativeTransferFailed_fsm:'consultativeTransferFailed_fsm',\n        conferenceCallFailed_fsm:'conferenceCallFailed_fsm'\n    };\n\n    //CallFSM receives NotificationEvent\n    this.NotificationEvent = {\n        unknowNotify: 'unknowNotify',\n        callInProgress: 'callInProgress',\n        ringing: 'ringing',\n        answered: 'answered',\n        callHeldRemotely: 'callHeldRemotely',\n        callRetrievedRemotely: 'callRetrievedRemotely',\n        callHeldLocally: 'callHeldLocally',\n        callRetrievedLocally: 'callRetrievedLocally',\n        callTransferred: 'callTransferred',\n        callReceived: 'callReceived',\n        redirected: 'redirected',\n        callFailed: 'callFailed',\n        callEnded: 'callEnded',\n        makeCall_GUI: 'makeCall_GUI',\n        deflectCall_GUI: 'deflectCall_GUI',\n        endCall_GUI: 'endCall_GUI',\n        holdCall_GUI: 'holdCall_GUI',\n        blind_transfering_GUI: 'blind_transfering_GUI',\n        retrieveCall_GUI: 'retrieveCall_GUI',\n        answerCall_GUI: 'answerCall_GUI',\n        consultativeTransfer_GUI: 'consultativeTransfer_GUI',\n        conferenceCall_GUI: 'conferenceCall_GUI',\n        conferenced: 'conferenced',\n        blindTransferFailed: 'blindTransferFailed',\n        consultativeTransferFailed:'consultativeTransferFailed',\n        conferenceCallFailed:'conferenceCallFailed'\n    };\n    var self = this,\n        logger = _logManager.getLogger('rccFSM');\n\n    function FSM(call, event, onSuccess, onFailure) {\n        //TODO move sessionProgress somewhere else?\n        var callState = self.getCurrentState(call);\n\n        switch (callState) {\n        case self.CallFSMState.INIT:\n            switch (event) {\n            case self.NotificationEvent.makeCall_GUI:\n                call.currentState = self.CallFSMState.MAKING_CALL;\n                onSuccess(call, self.TransferEvent.makeCall_fsm);\n                break;\n            // This is server RCC wrong notification workaround code.\n            // ringing implemantation for init call state\n            case self.NotificationEvent.ringing:\n                call.currentState = self.CallFSMState.RINGING;\n                onSuccess(call, self.TransferEvent.ringing_fsm);\n                break;\n            case self.NotificationEvent.callInProgress:\n                call.currentState = self.CallFSMState.CALL_IN_PROGRESS;\n                onSuccess(call, self.TransferEvent.callInProgress_fsm);\n                break;\n            case self.NotificationEvent.callReceived:\n                call.currentState = self.CallFSMState.CALL_RECEIVED;\n                onSuccess(call, self.TransferEvent.callReceived_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.MAKING_CALL:\n            switch (event) {\n            case self.NotificationEvent.callInProgress:\n                call.currentState = self.CallFSMState.CALL_IN_PROGRESS;\n                onSuccess(call, self.TransferEvent.callInProgress_fsm);\n                break;\n                // This is server RCC wrong notification workaround code.\n                // ringing implemantation for making call state\n            case self.NotificationEvent.ringing:\n                call.currentState = self.CallFSMState.RINGING;\n                onSuccess(call, self.TransferEvent.ringing_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.CALL_IN_PROGRESS:\n            switch (event) {\n            case self.NotificationEvent.ringing:\n                call.currentState = self.CallFSMState.RINGING;\n                onSuccess(call, self.TransferEvent.ringing_fsm);\n                break;\n            case self.NotificationEvent.answered:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.answered_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n\n            break;\n        case self.CallFSMState.RINGING:\n            switch (event) {\n            case self.NotificationEvent.answered:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.answered_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.CALL_RECEIVED:\n            switch (event) {\n            case self.NotificationEvent.deflectCall_GUI:\n                call.currentState = self.CallFSMState.DEFLECTING_CALL;\n                onSuccess(call, self.TransferEvent.deflectCall_fsm);\n                break;\n            case self.NotificationEvent.redirected:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.redirected_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.answered:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.answered_fsm);\n                break;\n            case self.NotificationEvent.answerCall_GUI:\n                call.currentState = self.CallFSMState.ANSWERING_CALL;\n                onSuccess(call, self.TransferEvent.answerCall_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.ANSWERING_CALL:\n            switch (event) {\n            case self.NotificationEvent.answered:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.answered_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.CONFERENCING_CALL:\n            switch (event) {\n            case self.NotificationEvent.conferenced:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.conferenced_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.conferenceCallFailed:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.conferenceCallFailed_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.DEFLECTING_CALL:\n            switch (event) {\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.redirected:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.redirected_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.ANSWERED:\n            switch (event) {\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.holdCall_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.HOLDING_CALL;\n                onSuccess(call, self.TransferEvent.holdCall_fsm);\n                break;\n            case self.NotificationEvent.callHeldLocally:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_HOLD;\n                onSuccess(call, self.TransferEvent.callHeldLocally_fsm);\n                break;\n            case self.NotificationEvent.blind_transfering_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.BLIND_TRANSFERING;\n                onSuccess(call, self.TransferEvent.blind_transfering_fsm);\n                break;\n            case self.NotificationEvent.callHeldRemotely:\n                call.currentState = self.CallFSMState.REMOTE_HOLD;\n                onSuccess(call, self.TransferEvent.callHeldRemotely_fsm);\n                break;\n            case self.NotificationEvent.consultativeTransfer_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.MAKING_CONSULTATIVE_TRANSFER;\n                onSuccess(call, self.TransferEvent.consultativeTransfer_fsm);\n                break;\n            case self.NotificationEvent.conferenceCall_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.CONFERENCING_CALL;\n                onSuccess(call, self.TransferEvent.conferencing_fsm);\n                break;\n            case self.NotificationEvent.conferenced:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.conferenced_fsm);\n                break;\n            case self.NotificationEvent.callTransferred:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callTransferred_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.ENDING_CALL:\n            switch (event) {\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.BLIND_TRANSFERING:\n            switch (event) {\n            case self.NotificationEvent.callTransferred:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callBlindTransferred_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.blindTransferFailed:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.blindTransferFailed_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.REMOTE_HOLD:\n            switch (event) {\n            case self.NotificationEvent.callRetrievedRemotely:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.callRetrievedRemotely_fsm);\n                break;\n            case self.NotificationEvent.blind_transfering_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.BLIND_TRANSFERING;\n                onSuccess(call, self.TransferEvent.blind_transfering_fsm);\n                break;\n            case self.NotificationEvent.holdCall_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.HOLDING_CALL;\n                onSuccess(call, self.TransferEvent.holdCall_fsm);\n                break;\n            case self.NotificationEvent.callHeldLocally:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.BOTH_HOLD;\n                onSuccess(call, self.TransferEvent.callHeldBoth_fsm);\n                break;\n            case self.NotificationEvent.callHeldRemotely:\n                onSuccess(call, self.TransferEvent.callHeldRemotely_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.callTransferred:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callTransferred_fsm);\n                break;\n            case self.NotificationEvent.conferenced:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.conferenced_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.HOLDING_CALL:\n            switch (event) {\n            case self.NotificationEvent.callHeldLocally:\n                call.currentState = self.CallFSMState.LOCAL_HOLD;\n                if (call.previousState === self.CallFSMState.REMOTE_HOLD) {\n                    call.currentState = self.CallFSMState.BOTH_HOLD;\n                }\n                call.previousState = callState;\n                onSuccess(call, self.TransferEvent.callHeldLocally_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_HOLD:\n            switch (event) {\n            case self.NotificationEvent.retrieveCall_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.RETRIEVING_CALL;\n                onSuccess(call, self.TransferEvent.retrieveCall_fsm);\n                break;\n            case self.NotificationEvent.callRetrievedLocally:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.callRetrievedLocally_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.callHeldRemotely:\n                call.currentState = self.CallFSMState.BOTH_HOLD;\n                onSuccess(call, self.TransferEvent.callHeldBoth_fsm);\n                break;\n            case self.NotificationEvent.callHeldLocally:\n                onSuccess(call, self.TransferEvent.callHeldLocally_fsm);\n                break;\n            case self.NotificationEvent.blind_transfering_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.BLIND_TRANSFERING;\n                onSuccess(call, self.TransferEvent.blind_transfering_fsm);\n                break;\n            case self.NotificationEvent.callTransferred:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callTransferred_fsm);\n                break;\n            case self.NotificationEvent.conferenced:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.conferenced_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.MAKING_CONSULTATIVE_TRANSFER:\n            switch (event) {\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.callTransferred:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callConsultativeTransferred_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.consultativeTransferFailed:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.consultativeTransferFailed_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.RETRIEVING_CALL:\n            switch (event) {\n            case self.NotificationEvent.callRetrievedLocally:\n                call.currentState = self.CallFSMState.ANSWERED;\n                if (call.previousState === self.CallFSMState.BOTH_HOLD) {\n                    call.currentState = self.CallFSMState.REMOTE_HOLD;\n                }\n                call.previousState = callState;\n                onSuccess(call, self.TransferEvent.callRetrievedLocally_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.BOTH_HOLD:\n            switch (event) {\n            case self.NotificationEvent.callRetrievedRemotely:\n                call.currentState = self.CallFSMState.LOCAL_HOLD;\n                onSuccess(call, self.TransferEvent.callRetrievedRemotely_fsm);\n                break;\n            case self.NotificationEvent.callHeldLocally:\n                onSuccess(call, self.TransferEvent.callHeldBoth_fsm);\n                break;\n            case self.NotificationEvent.retrieveCall_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.RETRIEVING_CALL;\n                onSuccess(call, self.TransferEvent.retrieveCall_fsm);\n                break;\n            case self.NotificationEvent.callRetrievedLocally:\n                call.currentState = self.CallFSMState.REMOTE_HOLD;\n                onSuccess(call, self.TransferEvent.callRetrievedLocally_fsm);\n                break;\n            case self.NotificationEvent.callHeldRemotely:\n                onSuccess(call, self.TransferEvent.callHeldBoth_fsm);\n                break;\n            case self.NotificationEvent.endCall_GUI:\n                call.currentState = self.CallFSMState.ENDING_CALL;\n                onSuccess(call, self.TransferEvent.endCall_fsm);\n                break;\n            case self.NotificationEvent.callEnded:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callEnded_fsm);\n                break;\n            case self.NotificationEvent.callFailed:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callFailed_fsm);\n                break;\n            case self.NotificationEvent.blind_transfering_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.BLIND_TRANSFERING;\n                onSuccess(call, self.TransferEvent.blind_transfering_fsm);\n                break;\n            case self.NotificationEvent.callTransferred:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.callTransferred_fsm);\n                break;\n            case self.NotificationEvent.conferenced:\n                call.currentState = self.CallFSMState.ANSWERED;\n                onSuccess(call, self.TransferEvent.conferenced_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        }\n    }\n\n    self.getCurrentState = function(call) {\n        return (call.currentState ? call.currentState : self.CallFSMState.INIT);\n    };\n\n    this.handleEvent = function(call, event, handler) {\n        var initialCallState;\n        if (call) {\n            initialCallState = self.getCurrentState(call);\n            logger.info('FSM received NotificationEvent: ' + event + ' @ ' +\n                initialCallState + ' state' + '. Call Id: ' + call.id);\n\n            FSM(call, event,\n                function(call, transferEvent) {\n                    logger.debug('FSM handleEvent successful. (Call FSM) State Passed from ' +\n                        initialCallState + ' to ' +\n                        self.getCurrentState(call) + '. TransferEvent: ' +\n                        transferEvent + '. Call Id: ' + call.id);\n                    handler(call, transferEvent);\n                },\n                function(call, transferEvent) {\n                    logger.error('FSM handleEvent failure: ' + transferEvent +\n                        ' @ ' + self.getCurrentState(call) + '. Call Id: ' +\n                        call.id);\n                    handler(call, transferEvent);\n                });\n        } else {\n            logger.info('Not a call object. Ignore this event. ' + event);\n        }\n    };\n}\n","import errors from '../../errors';\nimport CONSTANTS from '../../constants';\nimport {Queue} from '../../utils';\n\nexport function RccManagerImpl({\n    RccFSM: _rccFSM,\n    RccControlService: _rccControlService,\n    LogManager: _logManager,\n    GlobalBroadcaster: _globalBroadcaster,\n    Utils: _utils,\n    Core: _core,\n    Config: _config,\n    NotificationCallbacks: _notificationCallbacks\n}) {\n\n    /* AUDIT_KICKOFF_TIMEOUT is the interval we use to kickoff call audit after the call is setup.\n     * The timeout is there to ensure we do not hit call setup race conditions when we try to kickoff the call audit */\n    var calls = {},\n        logger = _logManager.getLogger('rccManager'),\n        fsmNotificationEvent = _rccFSM.NotificationEvent,\n        fsmState = _rccFSM.CallFSMState,\n        self = this,\n        CALL_STATES = {\n            IN_CALL: 0,\n            ON_HOLD: 1,\n            RINGING: 2,\n            ENDED: 3,\n            REJECTED: 4,\n            OUTGOING: 5,\n            INCOMING: 6,\n            ANSWERING: 7,\n            JOINED: 8,\n            RENEGOTIATION: 9,\n            TRANSFERRED: 10,\n            ON_REMOTE_HOLD: 11,\n            CALL_IN_PROGRESS: 12,\n            EARLY_MEDIA: 13,\n            TRANSFER_FAILURE: 14\n        },\n        CALL_HOLD_STATES = {\n            LOCAL_HOLD: 0,\n            REMOTE_HOLD: 1,\n            BOTH_HOLD: 2\n        },\n        extendMonitorDeviceTimer = null,\n        isMonitorStarted = false,\n        isSubscription = false,\n        sessionParam = {},\n        onMonitorSessionLost,\n        monitorSessionLostNotification = {\n            monitorSessionRefreshed: 'monitorSessionRefreshed',\n            monitorSessionTerminated: 'monitorSessionTerminated'\n        },\n        onMonitorSessionRefreshed,\n        onMonitorSessionTerminated;\n\n    this.IncomingCall = function(callid, opts, callee, caller) {\n        var id = callid,\n            options = opts,\n            sendVideo = true,\n            isJoin = false,\n            buttonDisabler = false,\n            btnTimeout, auditTimer, calledParty = callee,\n            callingParty = caller;\n\n        this.notificationQueue = new Queue();\n        this.onLocalStreamAdded = null;\n        this.onStreamAdded = null;\n        this.mute = function() {\n            var param = {\n                callid: id,\n                mute: true\n            };\n\n            return self.mute(param);\n        };\n        this.unmute = function() {\n            var param = {\n                callid: id,\n                mute: false\n            };\n\n            return self.mute(param);\n        };\n\n        this.answer = function(onSuccess, onFailure, isVideoEnabled, videoResolution) {\n            var param = {\n                callid: id,\n                isVideoEnabled: isVideoEnabled,\n                videoResolution: videoResolution\n            };\n\n            if (options.answer) {\n                return self.answer(param, onSuccess, onFailure);\n            } else {\n                onFailure();\n            }\n        };\n\n        this.reject = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            if (options.reject) {\n                return self.reject(param, onSuccess, onFailure);\n            } else {\n                onFailure();\n            }\n        };\n\n        this.ignore = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.ignore(param, onSuccess, onFailure);\n        };\n\n        this.forward = function(address, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                address: address\n            };\n\n            if (options.forward) {\n                return self.forward(param, onSuccess, onFailure);\n            } else {\n                onFailure();\n            }\n        };\n\n        this.canReject = function() {\n            return options.reject === true;\n        };\n\n        this.canForward = function() {\n            return options.forward === true;\n        };\n\n        this.canAnswer = function() {\n            return options.answer === true;\n        };\n\n        this.canSendVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorSendLocalVideo(param);\n        };\n\n        this.canReceiveVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorReceiveRemoteVideo(param);\n        };\n\n        this.getHoldState = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.getHoldStateOfCall(param);\n\n        };\n\n        this.getCalledParty = function() {\n            return calledParty;\n        };\n\n        this.getCallingParty = function() {\n            return callingParty;\n        };\n\n        this.getId = function() {\n            return id;\n        };\n\n        this.end = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.end(param, onSuccess, onFailure);\n        };\n\n        this.hold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.hold(param, onSuccess, onFailure);\n        };\n\n        this.unhold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.unhold(param, onSuccess, onFailure);\n        };\n\n        this.directTransfer = function(address, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                address: address\n            };\n\n            return self.directTransfer(param, onSuccess, onFailure);\n        };\n\n        this.consultativeTransfer = function(transferredCallId, onSuccess, onFailure) {\n            var param = {\n                currentCallId: id,\n                targetCallId: transferredCallId\n            };\n\n            return self.consultativeTransfer(param, onSuccess, onFailure);\n        };\n\n        this.videoStop = function(onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                isVideoStart: false\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.videoStart = function(onSuccess, onFailure, videoResolution) {\n            var param = {\n                callid: id,\n                isVideoStart: true,\n                videoResolution: videoResolution\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.join = function(anotherCall, onSuccess, onFailure) {\n            var param = {\n                callid1: id,\n                callid2: anotherCall.getId()\n            };\n\n            return self.join(param, onSuccess, onFailure);\n        };\n\n        this.sendDTMF = function(tone) {\n            var param = {\n                callid: id,\n                tone: tone\n            };\n\n            return self.sendDTMF(param);\n        };\n\n        this.sendIntraFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            if (sendVideo) {\n                return self.sendIntraFrame(param);\n            }\n        };\n        this.sendBlackFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.sendBlackFrame(param);\n        };\n\n        this.refreshVideoRenderer = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.refreshVideoRenderer(param);\n        };\n\n        this.getJoin = function() {\n            return isJoin;\n        };\n\n        this.setJoin = function(join) {\n            isJoin = join;\n        };\n\n        this.getButtonDisabler = function() {\n            return buttonDisabler;\n        };\n\n        this.setButtonDisabler = function(disable) {\n            buttonDisabler = disable;\n            if (buttonDisabler) {\n                btnTimeout = setTimeout(function() {\n                    buttonDisabler = false;\n                },\n                4000);\n            }\n        };\n\n        this.clearBtnTimeout = function() {\n            clearTimeout(btnTimeout);\n        };\n\n        this.setAuditTimer = function(audit) {\n            auditTimer = setInterval(function() {\n                audit();\n            },\n            _config.callAuditTimer ? _config.callAuditTimer : 30000);\n        };\n\n        this.clearAuditTimer = function() {\n            clearInterval(auditTimer);\n        };\n\n        this.isCallMuted = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isCallMuted(param);\n        };\n\n        /* DEPRECIATED */\n        this.isVideoNegotationAvailable = function(id) {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotationAvailable(param);\n        };\n\n        this.isVideoNegotiationAvailable = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotiationAvailable(param);\n        };\n    };\n    this.OutgoingCall = function(callid, callee, caller) {\n        var id = callid,\n            sendVideo = true,\n            isJoin = false,\n            buttonDisabler = false,\n            btnTimeout, auditTimer, calledParty = callee,\n            callingParty = caller;\n\n        this.notificationQueue = new Queue();\n\n        this.onLocalStreamAdded = null;\n\n        this.onStreamAdded = null;\n\n        this.canSendVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorSendLocalVideo(param);\n        };\n\n        this.canReceiveVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorReceiveRemoteVideo(param);\n        };\n\n        this.getHoldState = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.getHoldStateOfCall(param);\n        };\n\n        this.getId = function() {\n            return id;\n        };\n\n        this.getCalledParty = function() {\n            return calledParty;\n        };\n\n        this.getCallingParty = function() {\n            return callingParty;\n        };\n\n        this.sendIntraFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            if (sendVideo) {\n                return self.sendIntraFrame(param);\n            }\n        };\n\n        this.sendBlackFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.sendBlackFrame(param);\n        };\n\n        this.refreshVideoRenderer = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.refreshVideoRenderer(param);\n        };\n\n        this.mute = function() {\n            var param = {\n                callid: id,\n                mute: true\n            };\n\n            return self.mute(param);\n        };\n\n        this.unmute = function() {\n            var param = {\n                callid: id,\n                mute: false\n            };\n\n            return self.mute(param);\n        };\n\n        this.end = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.end(param, onSuccess, onFailure);\n        };\n\n        this.hold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.hold(param, onSuccess, onFailure);\n        };\n\n        this.unhold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.unhold(param, onSuccess, onFailure);\n        };\n\n        this.directTransfer = function(address, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                address: address\n            };\n\n            return self.directTransfer(param, onSuccess, onFailure);\n        };\n\n        this.consultativeTransfer = function(transfaredCallId, onSuccess, onFailure) {\n            var param = {\n                currentCallId: id,\n                targetCallId: transfaredCallId\n            };\n\n            return self.consultativeTransfer(param, onSuccess, onFailure);\n        };\n\n        this.videoStop = function(onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                isVideoStart: false\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.videoStart = function(onSuccess, onFailure, videoResolution) {\n            var param = {\n                callid: id,\n                isVideoStart: true,\n                videoResolution: videoResolution\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.join = function(anotherCall, onSuccess, onFailure) {\n            var param = {\n                callid1: id,\n                callid2: anotherCall.getId()\n            };\n\n            return self.join(param, onSuccess, onFailure);\n        };\n\n        this.sendDTMF = function(tone) {\n            var param = {\n                callid: id,\n                tone: tone\n            };\n\n            return self.sendDTMF(param);\n        };\n\n        this.getJoin = function() {\n            return isJoin;\n        };\n\n        this.setJoin = function(join) {\n            isJoin = join;\n        };\n\n        this.getButtonDisabler = function() {\n            return buttonDisabler;\n        };\n\n        this.setButtonDisabler = function(disable) {\n            buttonDisabler = disable;\n            if (buttonDisabler) {\n                btnTimeout = setTimeout(function() {\n                    buttonDisabler = false;\n                },\n                4000);\n            }\n        };\n\n        this.clearBtnTimeout = function() {\n            clearTimeout(btnTimeout);\n        };\n\n        this.setAuditTimer = function(audit) {\n            auditTimer = setInterval(function() {\n                audit();\n            },\n            _config.callAuditTimer ? _config.callAuditTimer : 30000);\n        };\n\n        this.clearAuditTimer = function() {\n            clearInterval(auditTimer);\n        };\n\n        this.isCallMuted = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isCallMuted(param);\n        };\n\n        /* DEPRECIATED */\n        this.isVideoNegotationAvailable = function(id) {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotationAvailable(param);\n        };\n\n        this.isVideoNegotiationAvailable = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotiationAvailable(param);\n        };\n    };\n\n    self.mute = function() {\n        return;\n    };\n    self.reject = function() {\n        return;\n    };\n    self.ignore = function() {\n        return;\n    };\n    self.canOriginatorSendLocalVideo = function() {\n        return;\n    };\n    self.canOriginatorReceiveRemoteVideo = function() {\n        return;\n    };\n    self.videoStopStart = function() {\n        return;\n    };\n    self.sendDTMF = function() {\n        return;\n    };\n    self.sendIntraFrame = function() {\n        return;\n    };\n    self.sendBlackFrame = function() {\n        return;\n    };\n    self.refreshVideoRenderer = function() {\n        return;\n    };\n    self.isCallMuted = function() {\n        return;\n    };\n    /* DEPRECIATED */\n    self.isVideoNegotationAvailable = function() {\n        return;\n    };\n    self.isVideoNegotiationAvailable = function() {\n        return;\n    };\n\n    function setDeviceID(deviceid) {\n        sessionParam.deviceID = deviceid;\n    }\n\n    function setSessionID(sessionid) {\n        sessionParam.sessionID = sessionid;\n    }\n\n    function setExpiryTime(expirytime) {\n        sessionParam.expiryTime = expirytime;\n    }\n\n    function setMonitorSessionParam(deviceid, sessionid, expirytime) {\n        setDeviceID(deviceid);\n        setSessionID(sessionid);\n        setExpiryTime(expirytime);\n    }\n\n    function getMonitorSessionParam() {\n        return sessionParam;\n    }\n\n    function removeMonitorSessionParam() {\n        delete sessionParam.deviceID;\n        delete sessionParam.sessionID;\n        delete sessionParam.expiryTime;\n    }\n\n    /*\n     * clear call resources\n     * @param call call object\n     * @param state state that will be returned to web part\n     */\n    function clearResources(id) {\n        delete calls[id];\n    }\n\n    function clearAllResources() {\n        var id;\n        logger.info('Clear all call resource from JSL Api');\n        for (id in calls) {\n            if (calls.hasOwnProperty(id)) {\n                clearResources(id);\n                logger.info('Clear call resource from JSL Api - ' + id);\n            }\n        }\n    }\n\n    function stopExtendMonitorDeviceTimer() {\n        logger.info('extend monitor device subscription timer is stopped.');\n        isMonitorStarted = false;\n        clearInterval(extendMonitorDeviceTimer);\n        extendMonitorDeviceTimer = null;\n        clearAllResources();\n    }\n\n    function extendMonitorDeviceSubscription() {\n        var param = {\n            deviceID: getMonitorSessionParam().deviceID,\n            sessionID: getMonitorSessionParam().sessionID\n        };\n        _rccControlService.extendMonitor(param, function() {\n            logger.info('extend monitor device subscription request success.');\n        }, function(e) {\n            stopExtendMonitorDeviceTimer();\n            removeMonitorSessionParam();\n            _utils.callFunctionIfExist(onMonitorSessionLost, e);\n            logger.info('extend monitor device subscription request failure.');\n        });\n    }\n\n    function startExtendMonitorDeviceTimer(timer) {\n        logger.info('extend monitor device subscription timer is started.');\n        isMonitorStarted = true;\n        extendMonitorDeviceTimer = setInterval(extendMonitorDeviceSubscription, timer);\n    }\n\n    self.setOnMonitorSessionLost = function(data) {\n        onMonitorSessionLost = data.callback;\n    };\n\n    self.setOnMonitorSessionRefreshed = function(data) {\n        onMonitorSessionRefreshed = data.callback;\n    };\n\n    self.setOnMonitorSessionTerminated = function(data) {\n        onMonitorSessionTerminated = data.callback;\n    };\n\n    self.CALL_STATES = CALL_STATES;\n    self.CALL_HOLD_STATES = CALL_HOLD_STATES;\n\n    self.hasGotCalls = function() {\n        var callid, internalCall;\n        for (callid in calls) {\n            if (calls.hasOwnProperty(callid)) {\n                internalCall = calls[callid];\n                if (internalCall) {\n                    logger.info('has got call - id: ' + callid + ' - state: ' + _rccFSM.getCurrentState(internalCall));\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n    self.getCalls = function() {\n        return calls;\n    };\n\n    function isCall(id) {\n        if (self.getCalls()[id]) {\n            return true;\n        }\n        return false;\n    }\n\n    self.delegateToCallFSM = function(call, stateMessage) {\n        _rccFSM.handleEvent(call, stateMessage, self.onStateChange);\n    };\n\n    function monitorStarted() {\n        return isMonitorStarted;\n    }\n\n    self.isSubscribed = function isSubscribed() {\n        return isSubscription;\n    };\n\n    function subscriptionStarted() {\n        isSubscription = true;\n    }\n\n    function subscriptionStopped() {\n        if (monitorStarted()) {\n            stopExtendMonitorDeviceTimer();\n            removeMonitorSessionParam();\n        }\n        isSubscription = false;\n    }\n\n    function isDeviceMonitor(deviceID) {\n        return (typeof deviceID === 'string') && (deviceID.length > 0);\n    }\n\n    self.start = function(data, onSuccess, onFailure) {\n        var internalCall = {},\n            param = {\n                destination: data.to,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('start call... to: ' + data.to);\n\n        if (!monitorStarted()) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        _rccControlService.makeCall(param, function(reponse) {\n\n            internalCall.call = new self.OutgoingCall(reponse.rccCallResponse.callId);\n            internalCall.id = reponse.rccCallResponse.callId;\n\n            self.delegateToCallFSM(internalCall, fsmNotificationEvent.makeCall_GUI);\n            calls[reponse.rccCallResponse.callId] = internalCall;\n            _utils.callFunctionIfExist(onSuccess, internalCall.call);\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        });\n    };\n\n    self.startMonitorDevice = function(data, onSuccess, onFailure) {\n\n        logger.info('Called start Monitor Device function with ' + data.deviceID);\n\n        if (!self.isSubscribed()) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        // if string with length greater than 0 device monitor, otherwise\n        // user monitor will be started.\n        if (!isDeviceMonitor(data.deviceID)) {\n            // null is used in internal logic for user monitor.\n            data.deviceID = null;\n        }\n\n        var param = {\n            deviceID: data.deviceID\n        };\n\n        _rccControlService.startMonitor(param, function(response) {\n            setMonitorSessionParam(data.deviceID, response.rccSessionResponse.sessionId, response.rccSessionResponse.expires);\n            startExtendMonitorDeviceTimer(response.rccSessionResponse.expires / 2 * 1000);\n            _utils.callFunctionIfExist(onSuccess);\n            logger.info('Start monitor device request successfuly');\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n            logger.info('Start monitor device request failure : ' + e);\n        });\n    };\n\n    self.stopMonitorDevice = function(onSuccess, onFailure) {\n        var param = {\n            deviceID: getMonitorSessionParam().deviceID,\n            sessionID: getMonitorSessionParam().sessionID\n        };\n\n        logger.info('Called stop monitor device function');\n\n        if (!monitorStarted()) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        _rccControlService.stopMonitor(param, function() {\n            stopExtendMonitorDeviceTimer();\n            removeMonitorSessionParam();\n            _utils.callFunctionIfExist(onSuccess);\n            logger.info('Stop monitor device request successfuly');\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n            logger.info('Stop monitor device request failure : ' + e);\n        });\n    };\n\n\n    self.answer = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState,\n            param = {\n                callId: data.callid,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('Called call answer function.Call id : ' + data.callid);\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        // Answer call is supported for only device level monitoring\n        if (!isDeviceMonitor(getMonitorSessionParam().deviceID)) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _rccFSM.getCurrentState(internalCall);\n\n        if (currentCallState === fsmState.CALL_RECEIVED) {\n            internalCall.answerSuccessCallback = onSuccess;\n            internalCall.answerFailureCallback = onFailure;\n            //send answer call\n            _rccControlService.answerCall(\n                param,\n                function() {\n                    // If monitered device does not support auto answer, SPiDR returns rest request success and\n                    // does not return any negative notifications. Server side solution was not available.\n                    // New design is as follows: In the RCC case, JSL shall not invoke success\n                    // or failure callback until established Event or endCall event is received.\n                    self.delegateToCallFSM(internalCall, fsmNotificationEvent.answerCall_GUI);\n                    logger.info('Call answer request successfuly.');\n                },\n                function(e) {\n                    logger.info('Call answer request failure. ' + e);\n                });\n        } else {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        }\n    };\n\n    self.hold = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState,\n            param = {\n                callId: data.callid,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('Called call hold function.Call id : ' + data.callid);\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _rccFSM.getCurrentState(internalCall);\n\n        if (currentCallState === fsmState.ANSWERED ||\n            currentCallState === fsmState.REMOTE_HOLD) {\n            _rccControlService.holdCall(param,\n                function() {\n                    self.delegateToCallFSM(internalCall, fsmNotificationEvent.holdCall_GUI);\n                    _utils.callFunctionIfExist(onSuccess);\n                    logger.info('Call hold request successfuly.');\n                },\n                function(e) {\n                    _utils.callFunctionIfExist(onFailure, e);\n                    logger.info('Call hold request failure. ' + e);\n                }\n            );\n        } else {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        }\n    };\n\n    self.unhold = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState,\n            param = {\n                callId: data.callid,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('Called call unhold function.Call id : ' + data.callid);\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _rccFSM.getCurrentState(internalCall);\n\n        if (currentCallState === fsmState.LOCAL_HOLD ||\n            currentCallState === fsmState.BOTH_HOLD) {\n\n            _rccControlService.retrieveCall(param,\n                function() {\n                    self.delegateToCallFSM(internalCall, fsmNotificationEvent.retrieveCall_GUI);\n                    _utils.callFunctionIfExist(onSuccess);\n                    logger.info('Call unhold request successfuly.');\n                },\n                function(e) {\n                    _utils.callFunctionIfExist(onFailure, e);\n                    logger.info('Call unhold request failure. ' + e);\n                }\n            );\n        } else {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        }\n    };\n\n    self.end = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            _currentState,\n            param = {\n                callId: data.callid,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('Called call end function.Call id : ' + data.callid);\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        _currentState = _rccFSM.getCurrentState(internalCall);\n        //check with the state machine if the current state would accept an endCall.\n        if (_currentState === fsmState.INIT || _currentState === fsmState.ENDING_CALL) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        } else {\n            _rccControlService.endCall(\n                param,\n                function() {\n                    self.delegateToCallFSM(internalCall, fsmNotificationEvent.endCall_GUI);\n                    _utils.callFunctionIfExist(onSuccess);\n                    logger.info('Call end request successfuly.');\n                },\n                function(e) {\n                    _utils.callFunctionIfExist(onFailure, e);\n                    logger.info('Call end request failure. ' + e);\n                }\n            );\n        }\n    };\n\n    self.forward = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState,\n            param = {\n                callId: data.callid,\n                destination: data.address,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('Called call forward function.Call id : ' + data.callid + ' ,address : ' + data.address);\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _rccFSM.getCurrentState(internalCall);\n        if (currentCallState === fsmState.CALL_RECEIVED) {\n            _rccControlService.deflectCall(param,\n                function() {\n                    self.delegateToCallFSM(internalCall, fsmNotificationEvent.deflectCall_GUI);\n                    _utils.callFunctionIfExist(onSuccess);\n                    logger.info('Call forward request successfuly.');\n                },\n                function(e) {\n                    _utils.callFunctionIfExist(onFailure, e);\n                    logger.info('Call forward request failure. ' + e);\n                });\n        } else {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        }\n    };\n\n    self.consultativeTransfer = function(data, onSuccess, onFailure) {\n        var currentInternalCall = calls[data.currentCallId],\n            targetInternalCall = calls[data.targetCallId],\n            currentCallState,\n            targetCallState,\n            param = {\n                currentCallId: data.currentCallId,\n                targetCallId: data.targetCallId,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('Called call consultativeTransfer function.Current Call Id : ' + data.currentCallId + ' ,Target Call Id : ' + data.targetCallId);\n\n        if (!currentInternalCall || !targetInternalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _rccFSM.getCurrentState(currentInternalCall);\n        targetCallState = _rccFSM.getCurrentState(targetInternalCall);\n        if (currentCallState !== fsmState.ANSWERED) {\n            logger.error('consultativeTransfer current call is not in correct state: ' + currentCallState);\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        } else if (targetCallState !== fsmState.LOCAL_HOLD &&\n            targetCallState !== fsmState.BOTH_HOLD) {\n            logger.error('consultativeTransfer target call is not in correct state: ' + targetCallState);\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        } else {\n            _rccControlService.consultativeTransfer(param, function() {\n                self.delegateToCallFSM(currentInternalCall, fsmNotificationEvent.consultativeTransfer_GUI);\n                _utils.callFunctionIfExist(onSuccess);\n                logger.info('Call consultativeTransfer request successfuly.');\n            }, function(e) {\n                _utils.callFunctionIfExist(onFailure, e);\n                logger.info('Call consultativeTransfer request failure. ' + e);\n            });\n        }\n    };\n\n    self.join = function(data, onSuccess, onFailure) {\n        var currentCall = calls[data.callid1],\n            currentCallState, targetCallState,\n            targetCall = calls[data.callid2],\n            param = {\n                currentCall: data.callid1,\n                targetCall: data.callid2,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n        if (!currentCall && targetCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _rccFSM.getCurrentState(currentCall);\n        targetCallState = _rccFSM.getCurrentState(targetCall);\n        if (currentCallState === fsmState.ANSWERED &&\n            (targetCallState === fsmState.LOCAL_HOLD || targetCallState === fsmState.BOTH_HOLD)) {\n            logger.info('Called call join function. CallId1 : ' + data.callid1 + ' CallId2 : ' + data.callid2);\n            _rccControlService.conferenceCall(param, function() {\n                self.delegateToCallFSM(currentCall, fsmNotificationEvent.conferenceCall_GUI);\n                _utils.callFunctionIfExist(onSuccess);\n                logger.info('Join conference request successfly. ');\n            }, function(e) {\n                _utils.callFunctionIfExist(onFailure, e);\n            });\n        } else {\n            logger.error('conference call is not in correct state: ' + currentCallState);\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        }\n    };\n\n    self.getDeviceList = function(onSuccess, onFailure) {\n        if (!self.isSubscribed()) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n        logger.info('Called getDeviceList function.');\n        _rccControlService.getDeviceList(function(responseData) {\n            _utils.callFunctionIfExist(onSuccess, responseData.rccDeviceResponse.deviceList);\n            logger.info('GetDeviceList request successfuly.');\n            logger.debug('Response data: ' + JSON.stringify(responseData));\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n            logger.info('GetDeviceList request failure.');\n        });\n    };\n\n\n    self.directTransfer = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState,\n            param = {\n                callId: data.callid,\n                destination: data.address,\n                deviceID: getMonitorSessionParam().deviceID,\n                sessionID: getMonitorSessionParam().sessionID\n            };\n\n        logger.info('Called call directTransfer function.Call Id : ' + data.callid + ' ,Destination : ' + data.destination);\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _rccFSM.getCurrentState(internalCall);\n        if (currentCallState === fsmState.LOCAL_HOLD ||\n            currentCallState === fsmState.REMOTE_HOLD ||\n            currentCallState === fsmState.ANSWERED ||\n            currentCallState === fsmState.BOTH_HOLD) {\n            //TODO: force localhold - if the user is not on hold\n            logger.info('[rccManager.directTransfer->sendTransfer : transfer target ]' + data.address);\n            _rccControlService.blindTransfer(param, function() {\n                self.delegateToCallFSM(internalCall, fsmNotificationEvent.blind_transfering_GUI);\n                _utils.callFunctionIfExist(onSuccess);\n                logger.info('[rccManager.directTransfer->sentTransfer : transfer target ]' + data.address);\n            }, function(e) {\n                logger.info('Call directTransfer request failure. ' + e);\n                _utils.callFunctionIfExist(onFailure, e);\n            });\n        } else {\n            logger.error('directTransfer call is not in correct state: ' + currentCallState);\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        }\n    };\n\n    //TODO sessionParams attributes\n    self.onNotificationEvent = function(type, sessionParams) {\n        var callid = sessionParams.callId,\n            statusCode = sessionParams.statusCode,\n            internalCall = calls[callid];\n\n        logger.debug('Notification received ' + type + ' callid:' + callid);\n\n        if (internalCall) {\n            internalCall.statusCode = statusCode;\n        }\n        self.delegateToCallFSM(internalCall, type);\n    };\n\n    self.onStateChange = function(call, event) {\n        var transferEvent = _rccFSM.TransferEvent;\n        calls[call.id] = call;\n\n        function triggerCallState(state, data) {\n            logger.debug('triggerCallState:  state =   ' + state + '    call.statusCode =  ' + call.statusCode + '   call.reasonText =  ' + call.reasonText + ' data = ' + JSON.stringify(data));\n            call.call.callState = state;\n            _utils.callFunctionIfExist(call.call.onStateChange, state, call.statusCode, call.reasonText, data);\n        }\n\n        function getCallerAndCalleeData(call) {\n            return {\n                calledParty: call.calledParty,\n                callingParty: call.callingParty\n            };\n        }\n\n        logger.info('Transfer Event: ' + event + '. callId: ' + call.id);\n        switch (event) {\n        case transferEvent.makeCall_fsm:\n        case transferEvent.endCall_fsm:\n        case transferEvent.deflectCall_fsm:\n        case transferEvent.blind_transfering_fsm:\n        case transferEvent.holdCall_fsm:\n        case transferEvent.retrieveCall_fsm:\n        case transferEvent.answerCall_fsm:\n        case transferEvent.consultativeTransfer_fsm:\n            break;\n        case transferEvent.callInProgress_fsm:\n            triggerCallState(CALL_STATES.CALL_IN_PROGRESS, getCallerAndCalleeData(call));\n            break;\n        case transferEvent.ringing_fsm:\n            triggerCallState(CALL_STATES.RINGING, getCallerAndCalleeData(call));\n            break;\n        case transferEvent.answered_fsm:\n            triggerCallState(CALL_STATES.IN_CALL, getCallerAndCalleeData(call));\n            break;\n        case transferEvent.conferenced_fsm:\n            triggerCallState(CALL_STATES.JOINED);\n            break;\n        case transferEvent.callReceived_fsm:\n            triggerCallState(CALL_STATES.INCOMING, getCallerAndCalleeData(call));\n            break;\n        case transferEvent.callFailed_fsm:\n            clearResources(call.id);\n            triggerCallState(CALL_STATES.REJECTED);\n            break;\n        case transferEvent.blindTransferFailed_fsm:\n            triggerCallState(CALL_STATES.TRANSFER_FAILURE);\n            break;\n        case transferEvent.consultativeTransferFailed_fsm:\n            triggerCallState(CALL_STATES.TRANSFER_FAILURE);\n            break;\n        case transferEvent.conferenceCallFailed_fsm:\n            triggerCallState(CALL_STATES.TRANSFER_FAILURE);\n            break;\n        case transferEvent.callEnded_fsm:\n            clearResources(call.id);\n            triggerCallState(CALL_STATES.ENDED);\n            break;\n        case transferEvent.callHeldLocally_fsm:\n        case transferEvent.callHeldBoth_fsm:\n            triggerCallState(CALL_STATES.ON_HOLD);\n            break;\n        case transferEvent.callHeldRemotely_fsm:\n            triggerCallState(CALL_STATES.ON_REMOTE_HOLD);\n            break;\n        case transferEvent.callRetrievedRemotely_fsm:\n            switch (_rccFSM.getCurrentState(call)) {\n            case fsmState.LOCAL_HOLD:\n                triggerCallState(CALL_STATES.ON_HOLD);\n                break;\n            case fsmState.ANSWERED:\n                triggerCallState(CALL_STATES.IN_CALL);\n                break;\n            default:\n                logger.error('Undefined transition event: ' + event + ' for ' + call.id);\n                break;\n            }\n            break;\n        case transferEvent.callRetrievedLocally_fsm:\n            switch (_rccFSM.getCurrentState(call)) {\n            case fsmState.REMOTE_HOLD:\n                triggerCallState(CALL_STATES.ON_REMOTE_HOLD);\n                break;\n            case fsmState.ANSWERED:\n                triggerCallState(CALL_STATES.IN_CALL);\n                break;\n            }\n            break;\n        case transferEvent.callBlindTransferred_fsm:\n        case transferEvent.callConsultativeTransferred_fsm:\n        case transferEvent.redirected_fsm:\n        case transferEvent.callTransferred_fsm:\n            clearResources(call.id);\n            triggerCallState(CALL_STATES.TRANSFERRED);\n            break;\n        default:\n            logger.error('Undefined transition event: ' + event + ' for ' + call.id);\n            break;\n        }\n\n    };\n\n    self.getHoldStateOfCall = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            return CALL_HOLD_STATES[_rccFSM.getCurrentState(internalCall)];\n        }\n        return undefined;\n    };\n\n    //TODO data attributes sessionParams=>notificationMessage\n    function handleCallControlNotification(type, data) {\n        if (type && data) {\n            self.onNotificationEvent(type, data);\n            logger.info('RemoteCallControl notification received: ' + 'type:' + type);\n        }\n    }\n\n    _notificationCallbacks.RemoteCallControl = function(data) {\n        var rccEvent = data.rccNotificationParams.rccEvent,\n            rccNotifyData = data.rccNotificationParams,\n            rccNotifySecondData = {},\n            incomingCall = {},\n            newOutgoingCall = {},\n            options, internalCall = calls[rccNotifyData.callId];\n\n        rccNotifyData.statusCode = data.statusCode;\n\n        logger.debug('rccNotifyData: ' + JSON.stringify(rccNotifyData));\n\n        if (isDeviceMonitor(getMonitorSessionParam().deviceID)) {\n            options = {\n                reject: false,\n                forward: true,\n                answer: true\n            };\n        } else {\n            options = {\n                reject: false,\n                forward: true,\n                answer: false\n            };\n        }\n\n        //---------------------------------------------------------------//\n        // This method workaround for RCC conferenced notify.\n        //\n        // Recaive Notify Example : {statusCode : 0,rccEvent: \"conferenced\",callId : \"joined callId\",endedCallId : \"endedCallId\"}\n        //\n        // Create new notify data  for ended call and launch double handleCallControlNotification().\n        // For joined call : handleCallControlNotification(rccNotifyData).\n        // For ended call : handleCallControlNotification(rccNotifySecondData);\n        function copyNotifyDataForConferencedDoubleCallID(data) {\n            rccNotifySecondData.rccEvent = 'callEnded';\n            rccNotifySecondData.callId = data.endedCallId;\n            rccNotifySecondData.statusCode = data.statusCode;\n            delete data.endedCallId;\n\n            return rccNotifySecondData;\n        }\n        //----------------------------------------------------------------//\n\n        function addCallerAndCalleeToTheCall(rccNotifyData) {\n            internalCall = calls[rccNotifyData.callId];\n            if (internalCall) {\n                internalCall.calledParty = rccNotifyData.calledParty;\n                internalCall.callingParty = rccNotifyData.callingParty;\n            }\n        }\n\n        switch (rccEvent) {\n        case fsmNotificationEvent.callRetrievedRemotely:\n            handleCallControlNotification(fsmNotificationEvent.callRetrievedRemotely, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callHeldRemotely:\n            handleCallControlNotification(fsmNotificationEvent.callHeldRemotely, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callRetrievedLocally:\n            handleCallControlNotification(fsmNotificationEvent.callRetrievedLocally, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callHeldLocally:\n            handleCallControlNotification(fsmNotificationEvent.callHeldLocally, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callTransferred:\n            handleCallControlNotification(fsmNotificationEvent.callTransferred, rccNotifyData);\n            break;\n        case fsmNotificationEvent.redirected:\n            handleCallControlNotification(fsmNotificationEvent.redirected, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callFailed:\n            if (internalCall) {\n                _utils.callFunctionIfExist(internalCall.answerFailureCallback, errors.CALL_FAILED);\n            }\n            handleCallControlNotification(fsmNotificationEvent.callFailed, rccNotifyData);\n            break;\n        case fsmNotificationEvent.answered:\n            addCallerAndCalleeToTheCall(rccNotifyData);\n            if (internalCall) {\n                _utils.callFunctionIfExist(internalCall.answerSuccessCallback);\n                // No need to trigger failure callback once answered successfully (answered event is received)\n                if (internalCall.answerFailureCallback) {\n                    internalCall.answerFailureCallback = undefined;\n                }\n            }\n            handleCallControlNotification(fsmNotificationEvent.answered, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callReceived:\n            incomingCall.call = new self.IncomingCall(rccNotifyData.callId, options, rccNotifyData.calledParty, rccNotifyData.callingParty);\n            incomingCall.id = rccNotifyData.callId;\n            calls[rccNotifyData.callId] = incomingCall;\n            _utils.callFunctionIfExist(_core.call.onReceived, incomingCall.call);\n            addCallerAndCalleeToTheCall(rccNotifyData);\n            handleCallControlNotification(fsmNotificationEvent.callReceived, rccNotifyData);\n            break;\n        case fsmNotificationEvent.ringing:\n            if (!isCall(rccNotifyData.callId)) {\n                newOutgoingCall.call = new self.OutgoingCall(rccNotifyData.callId, rccNotifyData.calledParty, rccNotifyData.callingParty);\n                newOutgoingCall.id = rccNotifyData.callId;\n                calls[rccNotifyData.callId] = newOutgoingCall;\n                _utils.callFunctionIfExist(_core.call.onOutgoingCall, newOutgoingCall.call);\n            }\n            addCallerAndCalleeToTheCall(rccNotifyData);\n            handleCallControlNotification(fsmNotificationEvent.ringing, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callInProgress:\n            if (!isCall(rccNotifyData.callId)) {\n                newOutgoingCall.call = new self.OutgoingCall(rccNotifyData.callId, rccNotifyData.calledParty, rccNotifyData.callingParty);\n                newOutgoingCall.id = rccNotifyData.callId;\n                calls[rccNotifyData.callId] = newOutgoingCall;\n                _utils.callFunctionIfExist(_core.call.onOutgoingCall, newOutgoingCall.call);\n            }\n            addCallerAndCalleeToTheCall(rccNotifyData);\n            handleCallControlNotification(fsmNotificationEvent.callInProgress, rccNotifyData);\n            break;\n        case fsmNotificationEvent.conferenced:\n            handleCallControlNotification(fsmNotificationEvent.callEnded, copyNotifyDataForConferencedDoubleCallID(rccNotifyData));\n            handleCallControlNotification(fsmNotificationEvent.conferenced, rccNotifyData);\n            break;\n        case fsmNotificationEvent.callEnded:\n            if (internalCall) {\n                _utils.callFunctionIfExist(internalCall.answerFailureCallback, errors.CALL_ENDED);\n            }\n            handleCallControlNotification(fsmNotificationEvent.callEnded, rccNotifyData);\n            break;\n        case fsmNotificationEvent.blindTransferFailed:\n            handleCallControlNotification(fsmNotificationEvent.blindTransferFailed, rccNotifyData);\n            break;\n        case fsmNotificationEvent.consultativeTransferFailed:\n            handleCallControlNotification(fsmNotificationEvent.consultativeTransferFailed, rccNotifyData);\n            break;\n        case fsmNotificationEvent.conferenceCallFailed:\n            handleCallControlNotification(fsmNotificationEvent.conferenceCallFailed, rccNotifyData);\n            break;\n        case monitorSessionLostNotification.monitorSessionRefreshed:\n            _utils.callFunctionIfExist(onMonitorSessionRefreshed);\n            break;\n        case monitorSessionLostNotification.monitorSessionTerminated:\n            stopExtendMonitorDeviceTimer();\n            removeMonitorSessionParam();\n            _utils.callFunctionIfExist(onMonitorSessionTerminated);\n            break;\n        default:\n            handleCallControlNotification(fsmNotificationEvent.unknowNotify, rccNotifyData);\n            break;\n        }\n    };\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.DEVICE_SUBSCRIPTION_STARTED, subscriptionStarted);\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.DEVICE_SUBSCRIPTION_ENDED, subscriptionStopped);\n}\n","export function RccControlServiceImpl({ Http: _server }) {\n\n    function genericErrorParser(jqXHR, property) {\n        try {\n            return JSON.parse(jqXHR.responseText)[property];\n        } catch (e) {\n            return jqXHR.status;\n        }\n    }\n\n    // the following 5 response syntaxes are defined in the REST API.\n    function callRequestPostPutErrorParser(jqXHR) {\n        return genericErrorParser(jqXHR, 'rccCallResponse');\n    }\n\n    function callRequestDeleteErrorParser(jqXHR) {\n        return genericErrorParser(jqXHR, 'rccCallResponse');\n    }\n\n    function getDeviceListRequestErrorParser(jqXHR) {\n        return genericErrorParser(jqXHR, 'rccDeviceResponse');\n    }\n\n    function sessionRequestPostPutErrorParser(jqXHR) {\n        return genericErrorParser(jqXHR, 'rccSessionResponse');\n    }\n\n    function sessionRequestDeleteErrorParser(jqXHR) {\n        return genericErrorParser(jqXHR, 'rccSessionResponse');\n    }\n\n    // TODO: For now in rest error response cases, given error handler is\n    // called with an empty argument list. Can be refactored to map to an fcs.Errors\n    // if overall JSL rest error refactoring is being done.\n\n    function isUserMonitor(deviceID) {\n        return deviceID === null;\n    }\n\n    function rccToRccDevice() {\n        return '/rcc/rccdevice';\n    }\n\n    function rccToSession(deviceID) {\n        if (isUserMonitor(deviceID)) {\n            return '/rcc/session';\n        } else {\n            return '/rcc/rccdevice/' + deviceID + '/session';\n        }\n    }\n\n    function rccToSessionID(deviceID, sessionID) {\n        return rccToSession(deviceID) + '/' + sessionID;\n    }\n\n    function rccToCall(deviceID, sessionID) {\n        return rccToSessionID(deviceID, sessionID) + '/call';\n    }\n\n    function rccToCallID(deviceID, sessionID, callID) {\n        return rccToCall(deviceID, sessionID) + '/' + callID;\n    }\n\n    this.startMonitor = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccSessionRequest': {\n                'eventType': 'generic'\n            }\n        };\n\n        urlPostfix = rccToSession(requestData.deviceID);\n\n        _server.sendPostRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, sessionRequestPostPutErrorParser);\n    };\n    this.extendMonitor = function(requestData, onSuccess, onFailure) {\n        var data = null,\n            urlPostfix;\n\n        urlPostfix = rccToSessionID(requestData.deviceID, requestData.sessionID);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, sessionRequestPostPutErrorParser);\n\n    };\n    this.stopMonitor = function(requestData, onSuccess, onFailure) {\n        var urlPostfix;\n\n        urlPostfix = rccToSessionID(requestData.deviceID, requestData.sessionID);\n\n        _server.sendDeleteRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': {}\n        }, onSuccess, function() {\n            onFailure();\n        }, null, sessionRequestDeleteErrorParser);\n\n    };\n    this.makeCall = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'makeCall',\n                'destination': requestData.destination\n            }\n        };\n\n        urlPostfix = rccToCall(requestData.deviceID, requestData.sessionID);\n\n        _server.sendPostRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestPostPutErrorParser);\n\n    };\n    this.holdCall = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'holdCall'\n            }\n        };\n\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.callId);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestPostPutErrorParser);\n\n    };\n\n    this.retrieveCall = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'retrieveCall'\n            }\n        };\n\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.callId);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestPostPutErrorParser);\n\n    };\n    this.endCall = function(requestData, onSuccess, onFailure) {\n        var urlPostfix;\n\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.callId);\n\n        _server.sendDeleteRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': {}\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestDeleteErrorParser);\n\n    };\n    this.deflectCall = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'deflectCall',\n                'destination': requestData.destination\n            }\n        };\n\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.callId);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestPostPutErrorParser);\n\n    };\n    this.blindTransfer = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'blindTransfer',\n                'destination': requestData.destination\n            }\n        };\n\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.callId);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestPostPutErrorParser);\n\n    };\n\n    this.consultativeTransfer = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'consultativeTransfer',\n                'callId': requestData.targetCallId\n            }\n        };\n\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.currentCallId);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestPostPutErrorParser);\n\n    };\n\n    this.answerCall = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'answerCall'\n            }\n        };\n\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.callId);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, function() {\n            onFailure();\n        }, null, callRequestPostPutErrorParser);\n\n    };\n\n    this.conferenceCall = function(requestData, onSuccess, onFailure) {\n\n        var urlPostfix, data = {\n            'rccCallRequest': {\n                'action': 'conferenceCall',\n                'callId': requestData.targetCall\n            }\n        };\n        urlPostfix = rccToCallID(requestData.deviceID, requestData.sessionID, requestData.currentCall);\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, urlPostfix),\n            'data': data\n        }, onSuccess, onFailure, null, callRequestPostPutErrorParser);\n    };\n\n    this.getDeviceList = function(onSuccess, onFailure) {\n        var urlPostfix;\n\n        urlPostfix = rccToRccDevice();\n\n        _server.sendGetRequest({\n            'url': _server.getWAMUrl(1, urlPostfix)\n        }, onSuccess, function() {\n            onFailure();\n        }, null, getDeviceListRequestErrorParser);\n    };\n}\n","import {CallFSMImpl} from './callFsm';\nimport {CallManagerImpl} from './callManager';\nimport {CallControlServiceImpl} from './wamcall';\n\nexport default {\n    CallFSM: container => new CallFSMImpl(container),\n    CallManager: container => new CallManagerImpl(container),\n    CallControlService: container => new CallControlServiceImpl(container)\n};\n","/*\n * Finite State machine that defines state transition of basic call model.\n * State machine fires events during state transitions.\n * Components should register to FSM  in order to receive transition events\n *\n */\n\nexport function CallFSMImpl({ LogManager: _logManager }) {\n\n    this.CallFSMState = {\n        INIT: 'INIT',\n        RINGING: 'RINGING',\n        TRYING: 'TRYING',\n        ANSWERING: 'ANSWERING',\n        COMPLETED: 'COMPLETED',\n        RINGING_SLOW: 'RINGING_SLOW',\n        LOCAL_HOLD: 'LOCAL_HOLD',\n        LOCAL_HOLDING: 'LOCAL_HOLDING',\n        LOCAL_UNHOLDING: 'LOCAL_UNHOLDING',\n        LOCAL_VIDEO_STOP_START: 'LOCAL_VIDEO_STOP_START',\n        REMOTE_OFFER: 'REMOTE_OFFER',\n        REMOTE_HOLD: 'REMOTE_HOLD',\n        REMOTE_HOLDING: 'REMOTE_HOLDING',\n        REMOTE_UNHOLDING: 'REMOTE_UNHOLDING',\n        BOTH_HOLD: 'BOTH_HOLD',\n        JOINING: 'JOINING',\n        PROVISIONRECEIVED: 'PROVISIONRECEIVED',\n        REFER: 'REFER',\n        TRANSFERING: 'TRANSFERING',\n        LOCAL_SLOW_START_OFFER: 'LOCAL_SLOW_START_OFFER',\n        LOCAL_REOFFER: 'LOCAL_REOFFER',\n        REPLACING: 'REPLACING',\n        LOCAL_REJECTING: 'LOCAL_REJECTING',\n        LOCAL_ENDING: 'LOCAL_ENDING'\n    };\n\n    //CallFSM returns TransferEvent after state change\n    this.TransferEvent = {\n        unknownNotification_fsm: 'unknownNotification_fsm',\n        ignoredNotification_fsm: 'ignoredNotification_fsm',\n        callStart_fsm: 'callStart_fsm',\n        callReceived_fsm: 'callReceived_fsm',\n        answer_fsm: 'answer_fsm',\n        reject_GUI: 'reject_GUI',\n        rejectWithoutClearCallObject_GUI: 'rejectWithoutClearCallObject_GUI',\n        ignore_GUI: 'ignore_GUI',\n        callCompleted_fsm: 'callCompleted_fsm',\n        noAnswer_fsm: 'noAnswer_fsm',\n        localEnding_fsm: 'localEnding_fsm',\n        localEndingWithoutClearCallObject_fsm: 'localEndingWithoutClearCallObject_fsm',\n        localEnd_fsm: 'localEnd_fsm',\n        localReject_fsm: 'localReject_fsm',\n        remoteEnd_fsm: 'remoteEnd_fsm',\n        answeringRingingSlow_fsm: 'answeringRingingSlow_fsm',\n        callCompletedAnswering_fsm: 'callCompletedAnswering_fsm',\n        localHold_fsm: 'localHold_fsm',\n        localHolding_fsm: 'localHolding_fsm',\n        remoteHold_fsm: 'remoteHold_fsm',\n        remoteHolding_fsm: 'remoteHolding_fsm',\n        localUnHold_fsm: 'localUnHold_fsm',\n        localUnHolding_fsm: 'localUnHolding_fsm',\n        remoteUnHold_fsm: 'remoteUnHold_fsm',\n        remoteUnHolding_fsm: 'remoteUnHolding_fsm',\n        localVideoStopStart_fsm: 'localVideoStopStart_fsm',\n        remoteOffer_fsm: 'remoteOffer_fsm',\n        joining_fsm: 'joining_fsm',\n        sessionComplete_fsm: 'sessionComplete_fsm',\n        joiningSuccess_fsm: 'joiningSuccess_fsm',\n        sessionFail_fsm: 'sessionFail_fsm',\n        ringing_fsm: 'ringing_fsm',\n        respondCallUpdate_fsm: 'respondCallUpdate_fsm',\n        remoteCallUpdate_fsm: 'remoteCallUpdate_fsm',\n        remotePranswer_fsm: 'remotePranswer_fsm',\n        forward_fsm: 'forward_fsm',\n        refer_fsm: 'refer_fsm',\n        accepted_fsm: 'accepted_fsm',\n        transfering_fsm: 'transfering_fsm',\n        transferSuccess_fsm: 'transferSuccess_fsm',\n        transferFail_fsm: 'transferFail_fsm',\n        respondCallHoldUpdate_fsm: 'respondCallHoldUpdate_fsm',\n        remoteOfferDuringLocalHold_fsm: 'remoteOfferDuringHold_fsm',\n        renegotiationCompleted_fsm: 'renegotiationCompleted_fsm',\n        slowStartOfferDuringRemoteHold_fsm: 'slowStartOfferDuringRemoteHold_fsm',\n        slowStartOfferDuringOnCall_fsm: 'slowStartOfferDuringOnCall_fsm',\n        stateReverted_fsm: 'stateReverted_fsm',\n        glareCondition_fsm: 'glareCondition_fsm',\n        slowStartOfferProcessed_fsm: 'slowStartOfferProcessed_fsm',\n        performReconnectWorkaround_fsm: 'performReconnectWorkaround_fsm',\n        consultativeTransfer_fsm: 'consultativeTransfer_fsm',\n        performCreateNewPeerWorkaround_fsm: 'performCreateNewPeerWorkaround_fsm',\n        startCallReplace_fsm: 'startCallReplace_fsm',\n        startCallReplaceRejected_fsm: 'startCallReplaceRejected_fsm',\n        respondedFromAnotherDevice_fsm: 'respondedFromAnotherDevice_fsm',\n        deviceChange_fsm: 'deviceChange_fsm'\n    };\n\n    //CallFSM receives NotificationEvent\n    this.NotificationEvent = {\n        callStart_GUI: 'callStart_GUI',\n        callNotify: 'callNotify',\n        ringing_Notify: 'ringing_Notify',\n        answer_GUI: 'answer_GUI',\n        end_GUI: 'end_GUI',\n        respondCallUpdate_Notify: 'respondCallUpdate_Notify',\n        respondCallUpdate_Notify_sendOnly: 'respondCallUpdate_Notify_sendOnly',\n        respondCallUpdate_glareCondition_Notify: 'respondCallUpdate_glareCondition_Notify',\n        callCompleted_fsm: 'callCompleted_fsm',\n        callEnd_Notify: 'callEnd_Notify',\n        callNotify_noSDP: 'callNotify_noSDP',\n        startCallUpdate_slowStart_Notify: 'startCallUpdate_slowStart_Notify',\n        startCallUpdate_remoteHold_Notify: 'startCallUpdate_remoteHold_Notify',\n        startCallUpdate_remoteOffer_Notify: 'startCallUpdate_remoteOffer_Notify',\n        joining_Notify: 'joining_Notify',\n        sessionComplete_Notify: 'sessionComplete_Notify',\n        joiningSuccess_Notify: 'joiningSuccess_Notify',\n        sessionFail_Notify: 'sessionFail_Notify',\n        hold_GUI: 'hold_GUI',\n        unhold_GUI: 'unhold_GUI',\n        videoStopStart_GUI: 'videoStopStart_GUI',\n        sessionProgress: 'sessionProgress',\n        callCancel_Notify: 'callCancel_Notify',\n        forward_GUI: 'forward_GUI',\n        refer_JSL: 'refer_JSL',\n        accepted_Notify: 'accepted_Notify',\n        transfering: 'transfering',\n        requestFailure_JSL: 'requestFailure_JSL',\n        webrtcFailure_JSL: 'webrtcFailure_JSL',\n        remoteOfferProcessed_JSL: 'remoteOfferProcessed_JSL',\n        remoteHoldProcessed_JSL: 'remoteHoldProcessed_JSL',\n        remoteUnHoldProcessed_JSL: 'remoteUnHoldProcessed_JSL',\n        slowStartOfferProcessed_JSL: 'slowStartOfferProcessed_JSL',\n        performReconnectWorkaround_JSL: 'performReconnectWorkaround_JSL',\n        consultativeTransfer_GUI: 'consultativeTransfer_GUI',\n        performCreateNewPeerWorkaround_JSL: 'performCreateNewPeerWorkaround_JSL',\n        startCallReplace_Notify: 'startCallReplace_Notify',\n        endReject_GUI: 'endReject_GUI',\n        endIgnore_GUI: 'endIgnore_GUI',\n        revertState_JSL: 'revertState_JSL',\n        deviceChange_GUI: 'deviceChange_GUI'\n    };\n\n    var self = this,\n        logger = _logManager.getLogger('callFsm');\n\n    function FSM(call, event, onSuccess, onFailure) {\n        var callState = self.getCurrentState(call);\n        switch (callState) {\n        case self.CallFSMState.INIT:\n            switch (event) {\n            case self.NotificationEvent.callStart_GUI:\n                call.currentState = self.CallFSMState.TRYING;\n                onSuccess(call, self.TransferEvent.callStart_fsm);\n                break;\n            case self.NotificationEvent.callNotify:\n                call.currentState = self.CallFSMState.RINGING;\n                onSuccess(call, self.TransferEvent.callReceived_fsm);\n                break;\n            case self.NotificationEvent.callNotify_noSDP:\n                call.currentState = self.CallFSMState.RINGING_SLOW;\n                onSuccess(call, self.TransferEvent.callReceived_fsm);\n                break;\n            case self.NotificationEvent.joiningSuccess_Notify:\n                call.currentState = self.CallFSMState.PROVISIONRECEIVED;\n                onSuccess(call, self.TransferEvent.joiningSuccess_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.REPLACING:\n            switch (event) {\n            case self.NotificationEvent.startCallReplace_Notify:\n                onSuccess(call, self.TransferEvent.startCallReplace_fsm);\n                break;\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.startCallReplaceRejected_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n            case self.NotificationEvent.callCancel_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.startCallReplaceRejected_fsm);\n                break;\n            case self.NotificationEvent.sessionProgress:\n            case self.NotificationEvent.ringing_Notify:\n                onSuccess(call, self.TransferEvent.ringing_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = self.CallFSMState.COMPLETED;\n                onSuccess(call, self.TransferEvent.callCompleted_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.RINGING:\n            switch (event) {\n            case self.NotificationEvent.answer_GUI:\n                call.currentState = self.CallFSMState.COMPLETED;\n                onSuccess(call, self.TransferEvent.answer_fsm);\n                break;\n            case self.NotificationEvent.endReject_GUI:\n                call.currentState = self.CallFSMState.LOCAL_REJECTING;\n                onSuccess(call, self.TransferEvent.rejectWithoutClearCallObject_GUI);\n                break;\n            case self.NotificationEvent.endIgnore_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.ignore_GUI);\n                break;\n            case self.NotificationEvent.callNotify_noSDP:\n                call.currentState = self.CallFSMState.RINGING_SLOW;\n                onSuccess(call, self.TransferEvent.callReceived_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.callCancel_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.respondedFromAnotherDevice_fsm);\n                break;\n            case self.NotificationEvent.forward_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.forward_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.RINGING_SLOW:\n            switch (event) {\n            case self.NotificationEvent.answer_GUI:\n                call.currentState = self.CallFSMState.ANSWERING;\n                onSuccess(call, self.TransferEvent.answerRingingSlow_fsm);\n                break;\n            case self.NotificationEvent.endReject_GUI:\n                call.currentState = self.CallFSMState.LOCAL_REJECTING;\n                onSuccess(call, self.TransferEvent.rejectWithoutClearCallObject_GUI);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n            case self.NotificationEvent.callCancel_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.forward_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.forward_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.ANSWERING:\n            switch (event) {\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = self.CallFSMState.COMPLETED;\n                onSuccess(call, self.TransferEvent.callCompletedAnswering_fsm);\n                break;\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.TRYING:\n            switch (event) {\n            case self.NotificationEvent.sessionProgress:\n                call.currentState = self.CallFSMState.PROVISIONRECEIVED;\n                onSuccess(call, self.TransferEvent.remotePranswer_fsm);\n                break;\n            case self.NotificationEvent.ringing_Notify:\n                call.currentState = self.CallFSMState.PROVISIONRECEIVED;\n                onSuccess(call, self.TransferEvent.ringing_fsm);\n                break;\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.noAnswer_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = self.CallFSMState.COMPLETED;\n                onSuccess(call, self.TransferEvent.callCompleted_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.PROVISIONRECEIVED:\n            switch (event) {\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = self.CallFSMState.COMPLETED;\n                onSuccess(call, self.TransferEvent.callCompleted_fsm);\n                break;\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.LOCAL_ENDING;\n                onSuccess(call, self.TransferEvent.localEndingWithoutClearCallObject_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.ringing_Notify:\n                onSuccess(call, self.TransferEvent.ringing_fsm);\n                break;\n            case self.NotificationEvent.sessionProgress:\n                onSuccess(call, self.TransferEvent.remotePranswer_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.COMPLETED:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_remoteHold_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.REMOTE_HOLDING;\n                onSuccess(call, self.TransferEvent.remoteHolding_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_slowStart_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_SLOW_START_OFFER;\n                onSuccess(call, self.TransferEvent.slowStartOfferDuringOnCall_fsm);\n                break;\n            case self.NotificationEvent.hold_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_HOLDING;\n                onSuccess(call, self.TransferEvent.localHolding_fsm);\n                break;\n            case self.NotificationEvent.videoStopStart_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_VIDEO_STOP_START;\n                onSuccess(call, self.TransferEvent.localVideoStopStart_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_remoteOffer_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.REMOTE_OFFER;\n                onSuccess(call, self.TransferEvent.remoteOffer_fsm);\n                break;\n            case self.NotificationEvent.transfering:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.TRANSFERING;\n                onSuccess(call, self.TransferEvent.transfering_fsm);\n                break;\n            case self.NotificationEvent.callCancel_Notify:\n                onSuccess(call, self.TransferEvent.ignoredNotification_fsm);\n                break;\n            case self.NotificationEvent.performReconnectWorkaround_JSL:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_REOFFER;\n                onSuccess(call, self.TransferEvent.performReconnectWorkaround_fsm);\n                break;\n            case self.NotificationEvent.performCreateNewPeerWorkaround_JSL:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_REOFFER;\n                onSuccess(call, self.TransferEvent.performCreateNewPeerWorkaround_fsm);\n                break;\n            case self.NotificationEvent.deviceChange_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_REOFFER;\n                onSuccess(call, self.TransferEvent.deviceChange_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_REOFFER:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.respondCallUpdate_fsm);\n                break;\n            case self.NotificationEvent.webrtcFailure_JSL:\n            case self.NotificationEvent.requestFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.REMOTE_OFFER:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.remoteOfferProcessed_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.renegotiationCompleted_fsm);\n                break;\n            case self.NotificationEvent.requestFailure_JSL:\n            case self.NotificationEvent.webrtcFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_VIDEO_STOP_START:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.respondCallUpdate_fsm);\n                break;\n            case self.NotificationEvent.requestFailure_JSL:\n            case self.NotificationEvent.webrtcFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_glareCondition_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.glareCondition_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_HOLDING:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = self.CallFSMState.LOCAL_HOLD;\n                if (call.previousState === self.CallFSMState.REMOTE_HOLD) {\n                    call.currentState = self.CallFSMState.BOTH_HOLD;\n                }\n                call.previousState = callState;\n                onSuccess(call, self.TransferEvent.respondCallHoldUpdate_fsm);\n                break;\n            case self.NotificationEvent.requestFailure_JSL:\n            case self.NotificationEvent.webrtcFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_glareCondition_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.glareCondition_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_UNHOLDING:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.currentState = self.CallFSMState.COMPLETED;\n                if (call.previousState === self.CallFSMState.BOTH_HOLD) {\n                    call.currentState = self.CallFSMState.REMOTE_HOLD;\n                }\n                call.previousState = callState;\n                onSuccess(call, self.TransferEvent.respondCallHoldUpdate_fsm);\n                break;\n            case self.NotificationEvent.requestFailure_JSL:\n            case self.NotificationEvent.webrtcFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_glareCondition_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.glareCondition_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_HOLD:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_remoteHold_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.REMOTE_HOLDING;\n                onSuccess(call, self.TransferEvent.remoteHolding_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_remoteOffer_Notify:\n                onSuccess(call, self.TransferEvent.remoteOfferDuringLocalHold_fsm);\n                break;\n            case self.NotificationEvent.unhold_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_UNHOLDING;\n                onSuccess(call, self.TransferEvent.localUnHolding_fsm);\n                break;\n            case self.NotificationEvent.joining_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.JOINING;\n                onSuccess(call, self.TransferEvent.joining_fsm);\n                break;\n            case self.NotificationEvent.transfering:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.TRANSFERING;\n                onSuccess(call, self.TransferEvent.transfering_fsm);\n                break;\n            case self.NotificationEvent.performReconnectWorkaround_JSL:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_REOFFER;\n                onSuccess(call, self.TransferEvent.performReconnectWorkaround_fsm);\n                break;\n            case self.NotificationEvent.consultativeTransfer_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.TRANSFERING;\n                onSuccess(call, self.TransferEvent.transfering_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.REMOTE_HOLDING:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.remoteHoldProcessed_JSL:\n                call.currentState = self.CallFSMState.REMOTE_HOLD;\n                if (call.previousState === self.CallFSMState.LOCAL_HOLD) {\n                    call.currentState = self.CallFSMState.BOTH_HOLD;\n                }\n                call.previousState = callState;\n                onSuccess(call, self.TransferEvent.remoteHold_fsm);\n                break;\n            case self.NotificationEvent.requestFailure_JSL:\n            case self.NotificationEvent.webrtcFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.REMOTE_UNHOLDING:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.remoteUnHoldProcessed_JSL:\n                call.currentState = self.CallFSMState.COMPLETED;\n                if (call.previousState === self.CallFSMState.BOTH_HOLD) {\n                    call.currentState = self.CallFSMState.LOCAL_HOLD;\n                }\n                call.previousState = callState;\n                onSuccess(call, self.TransferEvent.remoteUnHold_fsm);\n                break;\n            case self.NotificationEvent.requestFailure_JSL:\n            case self.NotificationEvent.webrtcFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.REMOTE_HOLD:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_remoteHold_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.REMOTE_HOLDING;\n                onSuccess(call, self.TransferEvent.remoteHolding_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_remoteOffer_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.REMOTE_UNHOLDING;\n                onSuccess(call, self.TransferEvent.remoteUnHolding_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_slowStart_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_SLOW_START_OFFER;\n                onSuccess(call, self.TransferEvent.slowStartOfferDuringRemoteHold_fsm);\n                break;\n            case self.NotificationEvent.hold_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_HOLDING;\n                onSuccess(call, self.TransferEvent.localHolding_fsm);\n                break;\n            case self.NotificationEvent.joining_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.JOINING;\n                onSuccess(call, self.TransferEvent.joining_fsm);\n                break;\n            case self.NotificationEvent.performReconnectWorkaround_JSL:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_REOFFER;\n                onSuccess(call, self.TransferEvent.performReconnectWorkaround_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.BOTH_HOLD:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_remoteHold_Notify:\n            case self.NotificationEvent.startCallUpdate_remoteOffer_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.REMOTE_UNHOLDING;\n                onSuccess(call, self.TransferEvent.remoteUnHolding_fsm);\n                break;\n            case self.NotificationEvent.unhold_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_UNHOLDING;\n                onSuccess(call, self.TransferEvent.localUnHolding_fsm);\n                break;\n            case self.NotificationEvent.joining_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.JOINING;\n                onSuccess(call, self.TransferEvent.joining_fsm);\n                break;\n            case self.NotificationEvent.transfering:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.TRANSFERING;\n                onSuccess(call, self.TransferEvent.transfering_fsm);\n                break;\n            case self.NotificationEvent.performReconnectWorkaround_JSL:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_REOFFER;\n                onSuccess(call, self.TransferEvent.performReconnectWorkaround_fsm);\n                break;\n            case self.NotificationEvent.consultativeTransfer_GUI:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.TRANSFERING;\n                onSuccess(call, self.TransferEvent.transfering_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_slowStart_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.LOCAL_SLOW_START_OFFER;\n                onSuccess(call, self.TransferEvent.slowStartOfferDuringRemoteHold_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_SLOW_START_OFFER:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.COMPLETED;\n                onSuccess(call, self.TransferEvent.respondCallUpdate_fsm);\n                break;\n            case self.NotificationEvent.respondCallUpdate_Notify_sendOnly:\n                call.previousState = call.currentState;\n                call.currentState = self.CallFSMState.REMOTE_HOLD;\n                onSuccess(call, self.TransferEvent.respondCallUpdate_fsm);\n                break;\n            case self.NotificationEvent.requestFailure_JSL:\n            case self.NotificationEvent.webrtcFailure_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            case self.NotificationEvent.slowStartOfferProcessed_JSL:\n                onSuccess(call, self.TransferEvent.slowStartOfferProcessed_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.JOINING:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.sessionComplete_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.sessionComplete_fsm);\n                break;\n            case self.NotificationEvent.sessionFail_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.sessionFail_fsm);\n                break;\n            case self.NotificationEvent.refer_JSL:\n                call.currentState = self.CallFSMState.REFER;\n                onSuccess(call, self.TransferEvent.refer_fsm);\n                break;\n            case self.NotificationEvent.revertState_JSL:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.stateReverted_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.REFER:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.sessionComplete_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.sessionComplete_fsm);\n                break;\n            case self.NotificationEvent.sessionFail_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.sessionFail_fsm);\n                break;\n                //TODO Tolga - talk with lale\n            case self.NotificationEvent.accepted_Notify:\n                onSuccess(call, self.TransferEvent.accepted_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.TRANSFERING:\n            switch (event) {\n            case self.NotificationEvent.end_GUI:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnding_fsm);\n                break;\n            case self.NotificationEvent.callEnd_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.remoteEnd_fsm);\n                break;\n            case self.NotificationEvent.sessionComplete_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.transferSuccess_fsm);\n                break;\n            case self.NotificationEvent.sessionFail_Notify:\n                call.currentState = call.previousState;\n                onSuccess(call, self.TransferEvent.transferFail_fsm);\n                break;\n                //TODO this notification is consumed for now - it is there for completeness\n            case self.NotificationEvent.accepted_Notify:\n                onSuccess(call, self.TransferEvent.accepted_fsm);\n                break;\n            case self.NotificationEvent.startCallUpdate_slowStart_Notify:\n            case self.NotificationEvent.startCallUpdate_remoteHold_Notify:\n            case self.NotificationEvent.startCallUpdate_remoteOffer_Notify:\n                // Some client send hold during transfer\n                onSuccess(call, self.TransferEvent.remoteCallUpdate_fsm);\n                break;\n            default:\n                onFailure(call, self.TransferEvent.unknownNotification_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_ENDING:\n            switch (event) {\n            case self.NotificationEvent.callEnd_Notify:\n            case self.NotificationEvent.callCancel_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localEnd_fsm);\n                break;\n            }\n            break;\n        case self.CallFSMState.LOCAL_REJECTING:\n            switch (event) {\n            case self.NotificationEvent.callEnd_Notify:\n            case self.NotificationEvent.callCancel_Notify:\n                call.currentState = self.CallFSMState.INIT;\n                onSuccess(call, self.TransferEvent.localReject_fsm);\n                break;\n            }\n        }\n    }\n\n    self.getCurrentState = function(call) {\n        return (call.currentState ? call.currentState : self.CallFSMState.INIT);\n    };\n\n    this.handleEvent = function(call, event, handler) {\n        var initialCallState;\n        if (call) {\n            initialCallState = self.getCurrentState(call);\n            logger.info('FSM received NotificationEvent: ' + event + ' @ ' +\n                initialCallState + ' state' + '. Call Id: ' + call.id);\n\n            FSM(call, event,\n                function(call, transferEvent) {\n                    logger.debug('FSM handleEvent successful. (Call FSM) State Passed from ' +\n                        initialCallState + ' to ' +\n                        self.getCurrentState(call) + '. TransferEvent: ' +\n                        transferEvent + '. Call Id: ' + call.id);\n                    handler(call, transferEvent);\n                },\n                function(call, transferEvent) {\n                    logger.error('FSM handleEvent failure: ' + transferEvent +\n                        ' @ ' + self.getCurrentState(call) + '. Call Id: ' +\n                        call.id);\n                    handler(call, transferEvent);\n                });\n        }\n    };\n}\n","import CONSTANTS from '../../constants';\nimport {Queue, getProperty, parseAddress, extend} from '../../utils';\nimport errors from '../../errors';\nimport {find} from 'lodash/fp';\n\nexport function CallManagerImpl({\n    WebRtcManager: _webRtcManager,\n    CallFSM: _callFSM,\n    CallControlService: _callControlService,\n    SdpParser: _sdpParser,\n    LogManager: _logManager,\n    GlobalBroadcaster: _globalBroadcaster,\n    Utils: _utils,\n    Core: _core,\n    Config: _config,\n    Cache: _cache,\n    NotificationCallbacks: _notificationCallBacks\n}) {\n\n    /* AUDIT_KICKOFF_TIMEOUT is the interval we use to kickoff call audit after the call is setup.\n     * The timeout is there to ensure we do not hit call setup race conditions when we try to kickoff the call audit */\n    var calls = {},\n        bridges = [],\n        logger = _logManager.getLogger('callManager'),\n        AUDIT_KICKOFF_TIMEOUT = 3000,\n        isReconnected = false,\n        fsmNotificationEvent = _callFSM.NotificationEvent,\n        fsmState = _callFSM.CallFSMState,\n        self = this,\n        isQueueEnabled = true,\n        startCallInProgress = 0,\n        startCallQueue = [],\n        NOTIFICATION_STATE = {\n            BUSY: 0,\n            IDLE: 1\n        },\n        CALL_STATES = {\n            IN_CALL: 0,\n            ON_HOLD: 1,\n            RINGING: 2,\n            ENDED: 3,\n            REJECTED: 4,\n            OUTGOING: 5,\n            INCOMING: 6,\n            ANSWERING: 7,\n            JOINED: 8,\n            RENEGOTIATION: 9,\n            TRANSFERRED: 10,\n            ON_REMOTE_HOLD: 11,\n            CALL_IN_PROGRESS: 12,\n            EARLY_MEDIA: 13,\n            TRANSFER_FAILURE: 14,\n            REPLACING: 15\n        },\n        CALL_HOLD_STATES = {\n            LOCAL_HOLD: 0,\n            REMOTE_HOLD: 1,\n            BOTH_HOLD: 2\n        },\n        LOCAL_STATUS_CODES = {\n            STATUS_CODE_NOT_PROVIDED: '9900',\n            ENDED_BY_LOCAL: '9901',\n            REJECTED_BY_LOCAL: '9902',\n            IGNORED_BY_LOCAL: '9903',\n            RESPONDED_FROM_ANOTHER_DEVICE: '9904',\n            SESSION_COMPLETED: '9905',\n            JOIN_COMPLETED: '9906',\n            TRANSFERRED: '9907'\n        },\n        LOCAL_REASON_TEXTS = {\n            STATUS_CODE_NOT_PROVIDED: 'Reason not provided',\n            ENDED_BY_LOCAL: 'Ended by local user',\n            REJECTED_BY_LOCAL: 'Rejected by local user',\n            IGNORED_BY_LOCAL: 'Ignored by local user',\n            RESPONDED_FROM_ANOTHER_DEVICE: 'Responded from another device',\n            SESSION_COMPLETED: 'Session completed',\n            JOIN_COMPLETED: 'Join operation has completed',\n            TRANSFERRED: 'Transferred by remote user'\n        };\n\n    this.IncomingCall = function(callid, data) {\n        var id = callid,\n            options = data,\n            sendVideo = true,\n            isJoin = false,\n            buttonDisabler = false,\n            btnTimeout, auditTimer;\n\n        this.isOutgoing = false;\n        this.notificationQueue = new Queue();\n        this.onLocalStreamAdded = null;\n        this.onStreamAdded = null;\n        this.onMute = null;\n        this.onStateChange = null;\n        this.timestamp = Date.now();\n\n        this.getRemoteVideoState = function() {\n            return self.getRemoteVideoState(callid);\n        };\n\n        this.mute = function() {\n            var param = {\n                callid: id,\n                mute: true\n            };\n\n            return self.mute(param);\n        };\n        this.unmute = function() {\n            var param = {\n                callid: id,\n                mute: false\n            };\n\n            return self.mute(param);\n        };\n\n        this.silence = function() {\n            var param = {\n                callid: id,\n                silence: true\n            };\n\n            return self.silence(param);\n        };\n        this.unsilence = function() {\n            var param = {\n                callid: id,\n                silence: false\n            };\n\n            return self.silence(param);\n        };\n\n        this.isSilenced = function() {\n            return self.isSilenced({callid: id});\n        };\n\n        this.answer = function(onSuccess, onFailure, sendInitialVideo, videoResolution, params) {\n            var param = {\n                callid: id,\n                sendInitialVideo: sendInitialVideo,\n                videoResolution: videoResolution\n            };\n\n            param = extend(param, params);\n\n            if (options.answer) {\n                return self.answer(param, onSuccess, onFailure);\n            } else {\n                _utils.callFunctionIfExist(onFailure, _core.Errors.NOT_ALLOWED_SERVICE);\n            }\n        };\n\n        this.reject = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            if (options.reject) {\n                return self.reject(param, onSuccess, onFailure);\n            } else {\n                _utils.callFunctionIfExist(onFailure, _core.Errors.NOT_ALLOWED_SERVICE);\n            }\n        };\n\n        this.ignore = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.ignore(param, onSuccess, onFailure);\n        };\n\n        this.forward = function(address, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                address: address\n            };\n\n            if (options.forward) {\n                return self.forward(param, onSuccess, onFailure);\n            } else {\n                _utils.callFunctionIfExist(onFailure, _core.Errors.NOT_ALLOWED_SERVICE);\n            }\n        };\n\n        this.canReject = function() {\n            return options.reject === true;\n        };\n\n        this.canForward = function() {\n            return options.forward === true;\n        };\n\n        this.canAnswer = function() {\n            return options.answer === true;\n        };\n\n        this.canSendVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorSendLocalVideo(param);\n        };\n\n        this.canReceiveVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorReceiveRemoteVideo(param);\n        };\n\n        this.getHoldState = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.getHoldStateOfCall(param);\n\n        };\n\n        this.getCustomParameters = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.getCustomParametersOfCall(param);\n        };\n\n        this.setCustomParameters = function(customParams) {\n            var param = {\n                callid: id,\n                customParams: customParams\n            };\n\n            return self.setCustomParametersOfCall(param);\n        };\n\n        this.getId = function() {\n            return id;\n        };\n\n        this.end = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.end(param, onSuccess, onFailure);\n        };\n\n        this.hold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.hold(param, onSuccess, onFailure);\n        };\n\n        this.unhold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.unhold(param, onSuccess, onFailure);\n        };\n\n        this.getWebRtcStats = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.getWebRtcStats(param, onSuccess, onFailure);\n        };\n\n        this.getNativeWebRtcStats = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.getNativeWebRtcStats(param, onSuccess, onFailure);\n        };\n\n        this.startWebRtcStatsTimer = function(interval, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                interval: interval\n            };\n\n            return self.startWebRtcStatsTimer(param, onSuccess, onFailure);\n        };\n\n        this.stopWebRtcStatsTimer = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.stopWebRtcStatsTimer(param);\n        };\n\n        this.directTransfer = function(address, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                address: address\n            };\n\n            return self.directTransfer(param, onSuccess, onFailure);\n        };\n\n        this.consultativeTransfer = function(transferredCallId, onSuccess, onFailure) {\n            var param = {\n                currentCallId: id,\n                targetCallId: transferredCallId\n            };\n\n            return self.consultativeTransfer(param, onSuccess, onFailure);\n        };\n\n        this.videoStop = function(onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                isVideoStart: false\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.videoStart = function(onSuccess, onFailure, videoResolution) {\n            var param = {\n                callid: id,\n                isVideoStart: true,\n                videoResolution: videoResolution\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.getMediaStream = function() {\n            return self.getMediaStream(id);\n        };\n\n        /**\n         * Start sharing the screen for this call after the call is established.\n         *\n         * @name fcs.call.IncomingCall#screenSharingStart\n         * @function\n         * @param {function} [onSuccess] The onSuccess() to be called when the screen sharing is started\n         * @param {function} [onFailure] The onFailure() to be called when the screen sharing could not be started\n         * @param {function} [onStopped] The onStopped() to be called when the user has clicked to stop sharing the screen.\n         * @param {object} [options] The screen sharing options\n         * @param {number} [options.width=1024] The width of the screen to request.\n         * @param {number} [options.height=768] The height of the screen to request.\n         * @param {number} [options.frameRate=15] The number of frames per second to request.\n         */\n        this.screenSharingStart = function(onSuccess, onFailure, onStopped, options) {\n            var param = {\n                callid: id,\n                isScreenStart: true,\n                options: options\n            };\n            self.screenStopStart(param, onSuccess, onFailure, onStopped);\n        };\n\n        /**\n         * Stop sharing the screen for this call after the call is established.\n         *\n         * @name fcs.call.OutgoingCall#screenSharingStop\n         * @function\n         * @param {function} [onSuccess] The onSuccess() to be called when the screen sharing is stopped.\n         * @param {function} [onFailure] The onFailure() to be called when the screen sharing could not be stopped.\n         */\n        this.screenSharingStop = function(onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                isScreenStart: false,\n                options: {}\n            };\n            self.screenStopStart(param, onSuccess, onFailure, null);\n        };\n\n        this.join = function(anotherCall, onSuccess, onFailure, isVideoEnabled, videoResolution) {\n            var param = {\n                callid1: id,\n                callid2: anotherCall.getId()\n            };\n\n            return self.join(param, onSuccess, onFailure, isVideoEnabled, videoResolution);\n        };\n\n        this.sendDTMF = function(tone) {\n            var param = {\n                callid: id,\n                tone: tone\n            };\n\n            return self.sendDTMF(param);\n        };\n\n        this.sendCustomParameters = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.sendCustomParameters(param, onSuccess, onFailure);\n        };\n\n        this.sendIntraFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            if (sendVideo) {\n                return self.sendIntraFrame(param);\n            }\n        };\n\n        this.sendBlackFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.sendBlackFrame(param);\n        };\n\n        this.refreshVideoRenderer = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.refreshVideoRenderer(param);\n        };\n\n        this.getJoin = function() {\n            return isJoin;\n        };\n\n        this.setJoin = function(join) {\n            isJoin = join;\n        };\n\n        this.getButtonDisabler = function() {\n            return buttonDisabler;\n        };\n\n        this.setButtonDisabler = function(disable) {\n            buttonDisabler = disable;\n            if (buttonDisabler) {\n                btnTimeout = setTimeout(function() {\n                    buttonDisabler = false;\n                }, 4000);\n            }\n        };\n\n        this.clearBtnTimeout = function() {\n            clearTimeout(btnTimeout);\n        };\n\n        this.setAuditTimer = function(audit) {\n            auditTimer = setInterval(function() {\n                audit();\n            }, _config.callAuditTimer ? _config.callAuditTimer : 30000);\n        };\n\n        this.clearAuditTimer = function() {\n            clearInterval(auditTimer);\n        };\n\n        this.isCallMuted = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isCallMuted(param);\n        };\n\n        /* DEPRECIATED */\n        this.isVideoNegotationAvailable = function(id) {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotationAvailable(param);\n        };\n\n        this.isVideoNegotiationAvailable = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotiationAvailable(param);\n        };\n\n        this.changeDevices = function () {\n            var param = {\n                callid: id\n            };\n\n            return self.changeDevices(param);\n        };\n    };\n    this.OutgoingCall = function(callid) {\n        var id = callid,\n            sendVideo = true,\n            isJoin = false,\n            buttonDisabler = false,\n            btnTimeout, auditTimer;\n\n        this.isOutgoing = true;\n        this.notificationQueue = new Queue();\n        this.onLocalStreamAdded = null;\n        this.onStreamAdded = null;\n        this.onMute = null;\n        this.onStateChange = null;\n        this.timestamp = Date.now();\n\n        this.canSendVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorSendLocalVideo(param);\n        };\n\n        this.getRemoteVideoState = function() {\n            return self.getRemoteVideoState(callid);\n        };\n\n        this.canSendVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorSendLocalVideo(param);\n        };\n\n        this.canReceiveVideo = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.canOriginatorReceiveRemoteVideo(param);\n        };\n\n        this.getHoldState = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.getHoldStateOfCall(param);\n        };\n\n        this.getCustomParameters = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.getCustomParametersOfCall(param);\n        };\n\n        this.setCustomParameters = function(customParams) {\n            var param = {\n                callid: id,\n                customParams: customParams\n            };\n\n            return self.setCustomParametersOfCall(param);\n        };\n\n        this.getId = function() {\n            return id;\n        };\n\n        this.sendIntraFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            if (sendVideo) {\n                return self.sendIntraFrame(param);\n            }\n        };\n\n        this.sendBlackFrame = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.sendBlackFrame(param);\n        };\n\n        this.refreshVideoRenderer = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.refreshVideoRenderer(param);\n        };\n\n        this.mute = function() {\n            var param = {\n                callid: id,\n                mute: true\n            };\n\n            return self.mute(param);\n        };\n\n        this.unmute = function() {\n            var param = {\n                callid: id,\n                mute: false\n            };\n\n            return self.mute(param);\n        };\n\n        this.silence = function() {\n            var param = {\n                callid: id,\n                silence: true\n            };\n\n            return self.silence(param);\n        };\n\n        this.unsilence = function() {\n            var param = {\n                callid: id,\n                silence: false\n            };\n\n            return self.silence(param);\n        };\n\n        this.isSilenced = function() {\n            return self.isSilenced({callid: id});\n        };\n\n        this.end = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.end(param, onSuccess, onFailure);\n        };\n\n        this.hold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.hold(param, onSuccess, onFailure);\n        };\n\n        this.unhold = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.unhold(param, onSuccess, onFailure);\n        };\n\n        this.getWebRtcStats = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.getWebRtcStats(param, onSuccess, onFailure);\n        };\n\n        this.getNativeWebRtcStats = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.getNativeWebRtcStats(param, onSuccess, onFailure);\n        };\n\n        this.startWebRtcStatsTimer = function(interval, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                interval: interval\n            };\n\n            return self.startWebRtcStatsTimer(param, onSuccess, onFailure);\n        };\n\n        this.stopWebRtcStatsTimer = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.stopWebRtcStatsTimer(param);\n        };\n\n        this.directTransfer = function(address, onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                address: address\n            };\n\n            return self.directTransfer(param, onSuccess, onFailure);\n        };\n\n        this.consultativeTransfer = function(transfaredCallId, onSuccess, onFailure) {\n            var param = {\n                currentCallId: id,\n                targetCallId: transfaredCallId\n            };\n            return self.consultativeTransfer(param, onSuccess, onFailure);\n        };\n\n        this.videoStop = function(onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                isVideoStart: false\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.videoStart = function(onSuccess, onFailure, videoResolution) {\n            var param = {\n                callid: id,\n                isVideoStart: true,\n                videoResolution: videoResolution\n            };\n\n            return self.videoStopStart(param, onSuccess, onFailure);\n        };\n\n        this.getMediaStream = function() {\n            return self.getMediaStream(id);\n        };\n\n        /**\n         * Start sharing the screen for this call after the call is established.\n         *\n         * @name fcs.call.OutgoingCall#screenSharingStart\n         * @function\n         * @param {function} [onSuccess] The onSuccess() to be called when the screen sharing is started\n         * @param {function} [onFailure] The onFailure() to be called when the screen sharing could not be started\n         * @param {function} [onStopped] The onStopped() to be called when the user has clicked to stop sharing the screen.\n         * @param {object} [options] The screen sharing options\n         * @param {number} [options.width=1024] The width of the screen to request.\n         * @param {number} [options.height=768] The height of the screen to request.\n         * @param {number} [options.frameRate=15] The number of frames per second to request.\n         */\n        this.screenSharingStart = function(onSuccess, onFailure, onStopped, options) {\n            var param = {\n                callid: id,\n                isScreenStart: true,\n                options: options\n            };\n            self.screenStopStart(param, onSuccess, onFailure, onStopped);\n        };\n\n        /**\n         * Stop sharing the screen for this call after the call is established.\n         *\n         * @name fcs.call.OutgoingCall#screenSharingStop\n         * @function\n         * @param {function} [onSuccess] The onSuccess() to be called when the screen sharing is stopped.\n         * @param {function} [onFailure] The onFailure() to be called when the screen sharing could not be stopped.\n         */\n        this.screenSharingStop = function(onSuccess, onFailure) {\n            var param = {\n                callid: id,\n                isScreenStart: false,\n                options: {}\n            };\n            self.screenStopStart(param, onSuccess, onFailure, null);\n        };\n\n        this.join = function(anotherCall, onSuccess, onFailure, isVideoEnabled, videoResolution) {\n            var param = {\n                callid1: id,\n                callid2: anotherCall.getId()\n            };\n\n            return self.join(param, onSuccess, onFailure, isVideoEnabled, videoResolution);\n        };\n\n        this.sendDTMF = function(tone) {\n            var param = {\n                callid: id,\n                tone: tone\n            };\n\n            return self.sendDTMF(param);\n        };\n\n        this.sendCustomParameters = function(onSuccess, onFailure) {\n            var param = {\n                callid: id\n            };\n\n            return self.sendCustomParameters(param, onSuccess, onFailure);\n        };\n\n        this.getJoin = function() {\n            return isJoin;\n        };\n\n        this.setJoin = function(join) {\n            isJoin = join;\n        };\n\n        this.getButtonDisabler = function() {\n            return buttonDisabler;\n        };\n\n        this.setButtonDisabler = function(disable) {\n            buttonDisabler = disable;\n            if (buttonDisabler) {\n                btnTimeout = setTimeout(function() {\n                    buttonDisabler = false;\n                }, 4000);\n            }\n        };\n\n        this.clearBtnTimeout = function() {\n            clearTimeout(btnTimeout);\n        };\n\n        this.setAuditTimer = function(audit) {\n            auditTimer = setInterval(function() {\n                audit();\n            }, _config.callAuditTimer ? _config.callAuditTimer : 30000);\n        };\n\n        this.clearAuditTimer = function() {\n            clearInterval(auditTimer);\n        };\n\n        this.isCallMuted = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isCallMuted(param);\n        };\n\n        /* DEPRECIATED */\n        this.isVideoNegotationAvailable = function(id) {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotationAvailable(param);\n        };\n\n        this.isVideoNegotiationAvailable = function() {\n            var param = {\n                callid: id\n            };\n\n            return self.isVideoNegotiationAvailable(param);\n        };\n\n        this.changeDevices = function () {\n            var param = {\n                callid: id\n            };\n\n            return self.changeDevices(param);\n        };\n    };\n\n    this.LocalAudioBridge = function() {\n        var bridgedCalls = [];\n\n        /**\n         * This reserves a property name for a callback method which keeps\n         * the state of the Kandy SDK informed about which active calls exist\n         * in this bridge\n         *\n         * @type {Function}\n         */\n        this.onCallsChange = null;\n\n        this.muteLocalAudio = function() {\n            bridgedCalls.forEach(function(bridgedCall) {\n                _webRtcManager.muteAudioTrack(bridgedCall, true);\n            });\n        };\n\n        this.unmuteLocalAudio = function() {\n            bridgedCalls.forEach(function(bridgedCall) {\n                _webRtcManager.muteAudioTrack(bridgedCall, false);\n            });\n        };\n\n        this.silenceRemoteAudio = function() {\n            bridgedCalls.forEach(function(bridgedCall) {\n                bridgedCall.silenced = true;\n                _webRtcManager.updateSilenceStatus(bridgedCall);\n            });\n        };\n\n        this.unsilenceRemoteAudio = function() {\n            bridgedCalls.forEach(function(bridgedCall) {\n                bridgedCall.silenced = false;\n                _webRtcManager.updateSilenceStatus(bridgedCall);\n            });\n        };\n\n        this.add = function(call, onSuccess, onFailure ) {\n            var internalCall;\n            if (!(call instanceof self.IncomingCall) && !(call instanceof self.OutgoingCall)){\n                logger.error('LocalAudioBridge failure to add a non call object');\n                _utils.callFunctionIfExist(onFailure, errors.INVALID_PARAMETER);\n                return;\n            }\n\n            internalCall = calls[call.getId()];\n\n            if(!internalCall) {\n                logger.error('LocalAudioBridge failure to add a call which does not exist');\n                _utils.callFunctionIfExist(onFailure, errors.INVALID_PARAMETER);\n                return;\n            }\n\n            if (internalCall.currentState === fsmState.LOCAL_HOLD) {\n                logger.error('LocalAudioBridge failure to add a call which is on hold');\n                _utils.callFunctionIfExist(onFailure, errors.STATE);\n                return;\n            }\n\n            if (internalCall.bridge){\n                logger.error('LocalAudioBridge failure to add a call which is already bridged');\n                _utils.callFunctionIfExist(onFailure, errors.ENTRY_ALREADY_EXISTS);\n                return;\n            }\n\n            logger.info('LocalAudioBridge adding call:' + internalCall.id);\n\n            try {\n                bridgedCalls.forEach(function(bridgedCall) {\n                    //verify if the call is not ended before merging\n                    if(bridgedCall.currentState && bridgedCall.currentState !== fsmState.INIT) {\n                        _webRtcManager.mergeAudioStream(bridgedCall, internalCall);\n                    } else {\n                        logger.debug('Cannot merge audio of calls with init State:' + bridgedCall.id);\n                    }\n                });\n            } catch(e) {\n                _utils.callFunctionIfExist(onFailure, e);\n                return;\n            }\n\n            bridgedCalls.push(internalCall);\n            internalCall.bridge = this;\n            // Notify the SDK that the bridge's call list has changed, by accessing a callback method on the bridge\n            _utils.callFunctionIfExist(this.onCallsChange, bridgedCalls);\n            _utils.callFunctionIfExist(onSuccess);\n        };\n\n        this.remove = function(call, onSuccess, onFailure) {\n            var internalCall;\n            if (!(call instanceof self.IncomingCall) && !(call instanceof self.OutgoingCall)){\n                logger.error('LocalAudioBridge failure to remove a non call object');\n                _utils.callFunctionIfExist(onFailure, errors.INVALID_PARAMETER);\n                return;\n            }\n\n            internalCall = calls[call.getId()];\n\n            var bridgeIndex = bridgedCalls.indexOf(internalCall);\n            if (bridgeIndex === -1){\n                logger.error('LocalAudioBridge failure to remove a call which is not in the bridge');\n                _utils.callFunctionIfExist(onFailure, errors.INVALID_PARAMETER);\n                return;\n            }\n\n            logger.info('LocalAudioBridge removing call:' + internalCall.id);\n\n            bridgedCalls.splice(bridgeIndex, 1);\n            delete internalCall.bridge;\n            // Notify the SDK that the bridge's call list has changed, by accessing a callback method on the bridge\n            _utils.callFunctionIfExist(this.onCallsChange, bridgedCalls);\n\n            try {\n                bridgedCalls.forEach(function(bridgedCall) {\n                    if(bridgedCall.currentState && bridgedCall.currentState !== fsmState.INIT) {\n                        _webRtcManager.unMergeAudioStream(bridgedCall, internalCall);\n                    }\n                });\n            } catch(e) {\n                _utils.callFunctionIfExist(onFailure, e);\n            }\n            _utils.callFunctionIfExist(onSuccess);\n        };\n\n        this.close = function() {\n            var call;\n            logger.info('Closing LocalAudioBridge');\n            while(bridgedCalls.length > 0) {\n                call = bridgedCalls.pop();\n                if (call.currentState && call.currentState !== fsmState.INIT) {\n                    bridgedCalls.forEach(function(bridgedCall) {\n                        if(bridgedCall.currentState && bridgedCall.currentState !== fsmState.INIT) {\n                            try {\n                                _webRtcManager.unMergeAudioStream(bridgedCall, call);\n                            } catch(e){\n                                logger.info('Could not unmerge stream for call:' + call.id);\n                            }\n                        }\n                    });\n                }\n                delete call.bridge;\n            }\n            var bridgeIndex = bridges.indexOf(this);\n            bridges.splice(bridgeIndex, 1);\n        };\n\n        this.cleanInternalCall = function(internalCall) {\n            logger.debug('Cleaning bridged call');\n            var callIndex = bridgedCalls.indexOf(internalCall);\n            // This check used to compare for callIndex > 0, but it was determined that the call should be removed\n            // even if it is the only call in the bridge\n            if(callIndex > -1) {\n                bridgedCalls.splice(callIndex, 1);\n                delete internalCall.bridge;\n                // Notify the SDK that the bridge's call list has changed, by accessing a callback method on the bridge\n                _utils.callFunctionIfExist(this.onCallsChange, bridgedCalls);\n            }\n        };\n    };\n\n    self.consultativeTransfer = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.currentCallId],\n            targetCall = calls[data.targetCallId],\n            currentCallState, targetCallState;\n        internalCall.targetCallId = data.targetCallId;\n        if (targetCall.callerNumber) {\n            internalCall.targetAddress = targetCall.callerNumber;\n        } else {\n            internalCall.targetAddress = targetCall.call.callerNumber;\n        }\n        currentCallState = _callFSM.getCurrentState(internalCall);\n        targetCallState = _callFSM.getCurrentState(targetCall);\n        if ((currentCallState === fsmState.LOCAL_HOLD ||\n                currentCallState === fsmState.BOTH_HOLD) &&\n            (targetCallState === fsmState.LOCAL_HOLD ||\n                targetCallState === fsmState.BOTH_HOLD)) {\n            _callControlService.transfer(internalCall.id, internalCall.targetAddress, internalCall.targetCallId, function() {\n                logger.info('consultative transfer successful. callId: ' + internalCall.id);\n                self.delegateToCallFSM(internalCall, fsmNotificationEvent.consultativeTransfer_GUI);\n                _utils.callFunctionIfExist(onSuccess);\n            }, function(e) {\n                logger.error('consultative transfer failed. callId: ' + internalCall.id);\n                _utils.callFunctionIfExist(onFailure, e);\n            });\n        } else if (currentCallState === fsmState.LOCAL_HOLDING) {\n            if (!internalCall.transferTrigger) {\n                internalCall.transferTrigger = function() {\n                    self.consultativeTransfer(data, onSuccess, onFailure);\n                    delete this.transferTrigger;\n                };\n            } else {\n                _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            }\n        } else if (targetCallState === fsmState.LOCAL_HOLDING) {\n            if (!targetCall.transferTrigger) {\n                targetCall.transferTrigger = function() {\n                    self.consultativeTransfer(data, onSuccess, onFailure);\n                    delete this.transferTrigger;\n                };\n            } else {\n                _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            }\n        } else {\n            logger.error('Cannot consultative transfer in INIT callstate :' + _core.Errors.STATE);\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n        }\n    };\n\n    /*\n     * When connection re-establishes sets isReconnected flag true\n     */\n    function onConnectionLost() {\n        isReconnected = true;\n    }\n\n    /*\n     * clear call resources\n     * clear long call audit\n     * clear webrtc resources\n     * triger web part\n     *\n     * @param call call object\n     * @param state state that will be returned to web part\n     */\n    function clearResources(call, preserveCallObject) {\n        var onSuccess, onFailure, callStats = call, bridge;\n        if (call.call) {\n            call.call.clearAuditTimer();\n            call.isAuditing = false;\n        }\n        if (call.pendingRequestTimer) {\n            clearTimeout(call.pendingRequestTimer);\n        }\n        _webRtcManager.stopWebRtcStatsTimer(call);\n        callStats.cache = true;\n        _webRtcManager.getWebRtcStats(callStats, onSuccess, onFailure);\n        //clear webRTC resources\n        _webRtcManager.processEnd(call);\n        bridge = call.bridge;\n        if (bridge) {\n            bridge.cleanInternalCall(call);\n        }\n        if (typeof preserveCallObject === 'undefined') {\n            clearCallObject(call);\n        }\n    }\n\n    function clearCallObject(call) {\n        //clear call object\n        delete calls[call.id];\n    }\n\n    function setNotificationStateOfCallToBusy(internalCall) {\n        logger.debug('Setting notification state to BUSY for call: ' + internalCall.id);\n        internalCall.notificationState = NOTIFICATION_STATE.BUSY;\n    }\n\n    function setNotificationStateOfCallToIdle(internalCall) {\n        logger.debug('Setting notification state to IDLE for call: ' + internalCall.id);\n        internalCall.notificationState = NOTIFICATION_STATE.IDLE;\n    }\n\n    function isNotificationStateOfCallBusy(internalCall) {\n        return internalCall.notificationState === NOTIFICATION_STATE.BUSY;\n    }\n\n    function triggerQueue(call) {\n        if (!isQueueEnabled) {\n            return;\n        }\n        logger.debug('NOTIFICATION_QUEUE: Process completed, notification queue state changed to IDLE');\n        setNotificationStateOfCallToIdle(call);\n        if (call.call.notificationQueue.size() > 0) {\n            logger.debug('NOTIFICATION_QUEUE: New notification found in queue, processing it!');\n            var notificationObj = call.call.notificationQueue.dequeue();\n            self.onNotificationEvent(notificationObj.type, notificationObj.sessionParams, notificationObj.callNotificationParams);\n        }\n    }\n\n    function processStartCallQueue(internalCall){\n        //put the notification for the same call id that were received before the answer into the\n        //call notificationQueue and remove any expired notifications.\n        logger.info('Processing startCallQueue');\n        startCallQueue = startCallQueue.filter(function(notification){\n            if (notification.expires < Date.now()) {\n                return false;\n            } else if(notification.sessionParams.sessionData === internalCall.id){\n                internalCall.call.notificationQueue.enqueue(notification);\n                return false;\n            }\n            return true;\n        });\n        if(internalCall.call.notificationQueue.size() > 0){\n            setTimeout(function(){\n                triggerQueue(internalCall);\n            },1);\n        }\n    }\n\n    function onSubscriptionReEstablished() {\n        var id, internalCall;\n        if (isReconnected) {\n            isReconnected = false;\n            for (id in calls) {\n                if (calls.hasOwnProperty(id)) {\n                    internalCall = calls[id];\n\n                    if (internalCall) {\n                        const defaultActiveCallTimeoutMS = 120000; // 2 minutes\n                        var activeCallTimeout = (typeof(_config.activeCallTimeoutMS)!== 'undefined')? _config.activeCallTimeoutMS: defaultActiveCallTimeoutMS;\n                        var callAge = (Date.now() - internalCall.call.timestamp);\n\n                        // if there is a call, it's ringing, and it's old, end it.\n                        // Otherwise, process it.\n                        if (_callFSM.getCurrentState(internalCall) === fsmState.RINGING && callAge > activeCallTimeout ) {\n                            // Send 0 to delete the call\n                            internalCall.call.onStateChange(CALL_STATES.ENDED, 0);\n                            clearResources(internalCall);\n                        } else {\n                            setNotificationStateOfCallToBusy(internalCall);\n                            self.delegateToCallFSM(internalCall, fsmNotificationEvent.performReconnectWorkaround_JSL);\n                        }\n                    }\n                }\n            }\n        }\n        /*\n        * For all internal calls, GET the status of the calls and update their state accordignly if required\n        * Assumptions:\n        *  1. Signalling server supports Kandy Link 4.7.1+\n        * Responsibilities:\n        *  1. Update the call state if the call is out of sync (call's status does not match response from server)\n        */\n        if (!_config.callResyncOnConnect) {\n            return;\n        }\n        for (id in calls) {\n            if (calls.hasOwnProperty(id) && calls[id]) {\n                internalCall = calls[id];\n                var callStateOnConnect = _callFSM.getCurrentState(internalCall);\n                // Only need to proceed if the call is active (i.e., not ended) and there is no ongoing operation.\n                if (internalCall.notificationState !== NOTIFICATION_STATE.BUSY && callStateOnConnect !== fsmState.ENDED && callStateOnConnect !== fsmState.REJECTED) {\n                    _callControlService.getSession(id,\n                        function(response) {\n                            /*\n                                * If the current call state is ringing OR if the state of the call was connected/on hold before we\n                                * did the GET, look at the response of the GET request.\n                                * If call is ringing and GET session returns ringing, we don't need to do anything\n                                * Also, if we were previously connected, but GET returns ringing, this could be due to an operation that was resolved\n                                * between the GET request and response. In any case, no need to look at GET response for this scenario.\n                                */\n                            if (\n                                internalCall.notificationState !== NOTIFICATION_STATE.BUSY &&\n                                _callFSM.getCurrentState(internalCall) === fsmState.RINGING &&\n                                response.callControlResponse.state === 'ANSWERED'\n                            ) {\n                                internalCall.localStatusCode = LOCAL_STATUS_CODES.RESPONDED_FROM_ANOTHER_DEVICE;\n                                internalCall.localReasonText = LOCAL_REASON_TEXTS.RESPONDED_FROM_ANOTHER_DEVICE;\n                                internalCall.call.onStateChange(CALL_STATES.ENDED, 0);\n                                clearResources(internalCall);\n                            }\n                        },\n                        function(response) {\n                            var currentCallState = _callFSM.getCurrentState(internalCall);\n                            if (\n                                currentCallState !== fsmState.ENDED && currentCallState !== fsmState.REJECTED &&\n                                response && response.statusCode === 47\n                            ) {\n                                // Call not found on server, end call.\n                                if (!internalCall.localStatusCode) {\n                                    internalCall.localStatusCode = LOCAL_STATUS_CODES.STATUS_CODE_NOT_PROVIDED;\n                                }\n                                if (!internalCall.localReasonText) {\n                                    internalCall.localReasonText = LOCAL_REASON_TEXTS.STATUS_CODE_NOT_PROVIDED;\n                                }\n                                internalCall.call.onStateChange(CALL_STATES.ENDED, 0);\n                                clearResources(internalCall);\n                            } else {\n                                logger.info(`Unable to sync call ${id} due to an error. Error: ${response}`);\n                            }\n                        });\n                }\n            }\n        }\n    }\n\n    self.CALL_STATES = CALL_STATES;\n    self.CALL_HOLD_STATES = CALL_HOLD_STATES;\n    self.LOCAL_STATUS_CODES = LOCAL_STATUS_CODES;\n    self.LOCAL_REASON_TEXTS = LOCAL_REASON_TEXTS;\n\n    self.initMedia = function(data, onSuccess, onFailure) {\n        _webRtcManager.initMedia(function() {\n            _utils.callFunctionIfExist(onSuccess);\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        }, data.options);\n    };\n\n    self.set_logSeverityLevel = function(data) {\n        _webRtcManager.set_logSeverityLevel(data.level);\n    };\n\n    self.enable_logCallback = function() {\n        _webRtcManager.enable_logCallback();\n    };\n\n    self.disable_logCallback = function() {\n        _webRtcManager.disable_logCallback();\n    };\n\n    self.get_audioInDeviceCount = function() {\n        return _webRtcManager.get_audioInDeviceCount();\n    };\n\n    self.get_audioOutDeviceCount = function() {\n        return _webRtcManager.get_audioOutDeviceCount();\n    };\n\n    self.get_videoDeviceCount = function() {\n        return _webRtcManager.get_videoDeviceCount();\n    };\n\n    function mapGetUserMediaErrorToFcsError(e) {\n        switch (e) {\n        case _core.call.MediaErrors.NOT_FOUND:\n            return _core.Errors.MEDIA_NOT_FOUND;\n        case _core.call.MediaErrors.NOT_ALLOWED:\n            return _core.Errors.MEDIA_NOT_ALLOWED;\n        case _core.call.MediaErrors.INVALID_PARAMETER:\n            return _core.Errors.INVALID_PARAMETER;\n        default:\n            return e;\n        }\n    }\n\n    self.getUserMedia = function(data, onSuccess, onFailure) {\n        if (data.privateStream) {\n\n            _webRtcManager.privateGetUserMedia(\n                onSuccess,\n                function(e) {\n                    _utils.callFunctionIfExist(onFailure, mapGetUserMediaErrorToFcsError(e));\n                }, data);\n        } else {\n            _webRtcManager.getUserMedia(\n                onSuccess,\n                function(e) {\n                    _utils.callFunctionIfExist(onFailure, mapGetUserMediaErrorToFcsError(e));\n                }, data);\n        }\n    };\n\n    self.getWebRtcStats = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid];\n\n        return _webRtcManager.getWebRtcStats(internalCall, onSuccess, onFailure);\n    };\n\n    self.getNativeWebRtcStats = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid];\n\n        return _webRtcManager.getNativeWebRtcStats(internalCall, onSuccess, onFailure);\n    };\n\n    self.startWebRtcStatsTimer = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            interval;\n\n        if (data.interval !== parseInt(data.interval, 10)) {\n            return;\n        }\n        // Change interval value(seconds) to miliseconds\n        interval = parseInt(data.interval) * 1000;\n        return _webRtcManager.startWebRtcStatsTimer(internalCall, interval, onSuccess, onFailure);\n    };\n\n    self.stopWebRtcStatsTimer = function(data) {\n        var internalCall = calls[data.callid];\n\n        return _webRtcManager.stopWebRtcStatsTimer(internalCall);\n    };\n\n    self.showSettingsWindow = function(data, onSuccess, onFailure) {\n        _webRtcManager.showSettingsWindow(function() {\n            _utils.callFunctionIfExist(onSuccess);\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        }, data.options);\n    };\n\n    self.createStreamRenderer = function(data) {\n        return _webRtcManager.createStreamRenderer(data.stream, data.container, data.options);\n    };\n\n    self.disposeStreamRenderer = function(data) {\n        _webRtcManager.disposeStreamRenderer(data.container);\n    };\n\n    self.createLocalAudioBridge = function(options, onSuccess, onFailure) {\n        if (_webRtcManager.canMergeAudio()) {\n            var bridge = new self.LocalAudioBridge(options);\n            bridges.push(bridge);\n            _utils.callFunctionIfExist(onSuccess, bridge);\n        } else {\n            logger.error('LocalAudioBridge not supported in this browser');\n            _utils.callFunctionIfExist(onFailure);\n        }\n    };\n\n    self.isPluginEnabled = function() {\n        return _webRtcManager.isPluginEnabled();\n    };\n\n    self.hasGotCalls = function() {\n        var callid, internalCall;\n        for (callid in calls) {\n            if (calls.hasOwnProperty(callid)) {\n                internalCall = calls[callid];\n                if (internalCall) {\n                    logger.info('has got call - id: ' + callid + ' - state: ' + _callFSM.getCurrentState(internalCall));\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n    self.getCalls = function() {\n        return calls;\n    };\n\n    self.sendIntraFrame = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            _webRtcManager.sendIntraFrame(internalCall);\n        }\n    };\n\n    self.sendBlackFrame = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            _webRtcManager.sendBlackFrame(internalCall);\n        }\n    };\n\n    self.delegateToCallFSM = function(call, stateMessage) {\n        _callFSM.handleEvent(call, stateMessage, self.onStateChange);\n    };\n\n    self.setUpdateCandidateCallbackToCall = function(call) {\n        call.updateCandidates = function(candidateArray) {\n            _callControlService.updateIceCandidate({\n                id: call.id,\n                iceCandidates: candidateArray\n            });\n        };\n    };\n\n    self.answer = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            videoNegotiationAvailable = self.isVideoNegotiationAvailable(data),\n            opts = {\n                videoResolution: data.videoResolution\n            },\n            offerToReceiveVideo;\n        opts.isAudioEnabled = data.isAudioEnabled === false ? false : true;\n\n        logger.info('Answering ' + (videoNegotiationAvailable ? 'video' : 'audio') + ' call with microphone ' + (opts.isAudioEnabled ? 'on' : 'off') + ' and camera' + (opts.sendInitialVideo ? 'on' : 'off'));\n\n        if (internalCall) {\n            if (internalCall.sdp) {\n                //check with the state machine if the current state would accept an answer.\n                if (_callFSM.getCurrentState(internalCall) !== fsmState.RINGING) {\n                    _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n                } else {\n                    opts.isVideoEnabled = videoNegotiationAvailable === false ? false : data.sendInitialVideo;\n                    self.getUserMedia(opts, function getUserMediaSuccessCallback(mediaInfo) {\n                        internalCall.isVideoSourceAllowed = mediaInfo.video;\n                        internalCall.isVideoEnabled = data.sendInitialVideo;\n                        internalCall.customParameters = data.customParameters;\n                        _webRtcManager.storeLocalStreamToCall(internalCall, mediaInfo.id);\n\n                        _webRtcManager.createAnswer(internalCall, function createAnswerSuccessCallback(sdp) {\n                            logger.info('[callManager.answer : sdp ]' + sdp);\n\n                            //change call state\n                            self.delegateToCallFSM(internalCall, fsmNotificationEvent.answer_GUI);\n\n                            //send answer call\n                            _callControlService.answerCall(internalCall.id, sdp, function() {\n                                _utils.callFunctionIfExist(onSuccess);\n                                _webRtcManager.addLocalStream(internalCall);\n                            }, function(e) {\n                                _utils.callFunctionIfExist(onFailure, e);\n                            },\n                            data.customParameters);\n                        }, function createAnswerFailureCallback(e) {\n                            logger.error('[callManager.answer] Error : ' + e);\n                            //Change state when the call have failed\n                            //This will trigger send reject\n                            self.delegateToCallFSM(internalCall, fsmNotificationEvent.end_GUI);\n                            // Call the failure callback, so the application knows it was\n                            //      an error that occurred.\n                            _utils.callFunctionIfExist(onFailure, e);\n                        }, data.sendInitialVideo);\n                    }, function getUserMediaFailureCallback(e) {\n                        _utils.callFunctionIfExist(onFailure, e);\n                    });\n                }\n            } else {\n                //slow start case\n                if (_callFSM.getCurrentState(internalCall) !== fsmState.RINGING_SLOW) {\n                    _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n                } else {\n                    offerToReceiveVideo = data.sendInitialVideo ? true : data.isVideoEnabled;\n                    opts.isVideoEnabled = data.sendInitialVideo;\n                    logger.info('[callManager.answer] Answering call in slow start scenario.');\n                    self.getUserMedia(opts, function getUserMediaSuccessCallback(mediaInfo) {\n                        internalCall.isVideoSourceAllowed = mediaInfo.video;\n                        internalCall.isVideoEnabled = data.sendInitialVideo;\n                        internalCall.customParameters = data.customParameters;\n                        _webRtcManager.storeLocalStreamToCall(internalCall, mediaInfo.id);\n\n                        _webRtcManager.createOffer(internalCall, function createOfferSuccessCallback(sdp) {\n                            internalCall.sdp = sdp;\n\n                            self.delegateToCallFSM(internalCall, fsmNotificationEvent.answer_GUI);\n\n                            _callControlService.answerCall(internalCall.id, sdp, function() {\n                                _utils.callFunctionIfExist(onSuccess);\n                                _webRtcManager.addLocalStream(internalCall);\n                            }, function(e) {\n                                _utils.callFunctionIfExist(onFailure, e);\n                            },\n                            data.customParameters);\n                        }, function createOfferFailureCallback(e) {\n                            logger.error('[callManager.offer] Error : ' + e);\n                            //Change state when the call have failed\n                            //This will trigger send reject\n                            self.delegateToCallFSM(internalCall, fsmNotificationEvent.end_GUI);\n                            // Call the failure callback, so the application knows it was\n                            //      an error that occurred.\n                            _utils.callFunctionIfExist(onFailure, e);\n                        }, data.sendInitialVideo, offerToReceiveVideo, true);\n                    }, function getUserMediaFailureCallback(e) {\n                        _utils.callFunctionIfExist(onFailure, e);\n                    });\n\n                }\n            }\n        }\n    };\n\n    self.getIncomingCallById = function(data) {\n        var call = null,\n            cachedCall, internalCall;\n\n        cachedCall = JSON.parse(_cache.getItem(data.callid));\n        if (cachedCall) {\n\n            call = new self.IncomingCall(data.callid, {\n                reject: cachedCall.optionReject,\n                forward: cachedCall.optionForward,\n                answer: cachedCall.optionAnswer\n            });\n\n            call.canOrigReceiveVideo = _sdpParser.isSdpHasVideo(cachedCall.sdp);\n\n            call.callerNumber = cachedCall.callerNumber;\n            call.callerName = cachedCall.callerName;\n            call.calleeNumber = cachedCall.calleeNumber;\n            call.primaryContact = cachedCall.primaryContact;\n\n            internalCall = {\n                'call': call,\n                'sdp': cachedCall.sdp,\n                'id': data.callid\n            };\n\n            calls[data.callid] = internalCall;\n\n            self.delegateToCallFSM(internalCall, fsmNotificationEvent.callNotify);\n        }\n\n        return call;\n    };\n\n    function cacheCall(internalCall) {\n        var callToCache = {\n            'sdp': internalCall.sdp,\n            'callerNumber': internalCall.call.callerNumber,\n            'callerName': internalCall.call.callerName,\n            'calleeNumber': internalCall.call.calleeNumber,\n            'primaryContact': internalCall.call.primaryContact,\n            'optionReject': internalCall.call.canReject(),\n            'optionForward': internalCall.call.canForward(),\n            'optionAnswer': internalCall.call.canAnswer()\n        };\n\n        _cache.setItem(internalCall.id, JSON.stringify(callToCache));\n    }\n\n    self.start = function(data, onSuccess, onFailure) {\n        var internalCall = {},\n            screenShare = data.sendScreenShare,\n            sendInitialVideo = (data.sendInitialVideo || screenShare),\n            offerToReceiveVideo = sendInitialVideo ? true : data.isVideoEnabled,\n            opts = {\n                isVideoEnabled: data.sendInitialVideo,\n                videoResolution: data.videoResolution,\n                isAudioEnabled: data.isAudioEnabled === false ? false : (screenShare ? false : true),\n                requestScreenShare: screenShare,\n                mediaSourceId: data.mediaSourceId\n            };\n\n        //We should not allow to make a call without media\n        if(!opts.isAudioEnabled && !opts.isVideoEnabled && !screenShare){\n            logger.error('Cannot make a call without media.');\n            _utils.callFunctionIfExist(onFailure, errors.MEDIA_REQUIRED);\n            return;\n        }\n\n        logger.info('start call... with data: ' +  JSON.stringify(data));\n\n        self.getUserMedia(opts, function getUserMediaSuccessCallback(mediaInfo) {\n            internalCall.isVideoSourceAllowed = mediaInfo.video ? true : false;\n            internalCall.isVideoEnabled = sendInitialVideo;\n            internalCall.isScreenShared = screenShare;\n            _webRtcManager.storeLocalStreamToCall(internalCall, mediaInfo.id);\n            self.setUpdateCandidateCallbackToCall(internalCall);\n            _webRtcManager.createOffer(internalCall, function createOfferSuccessCallback(sdp) {\n                logger.info('[callManager.start : sdp ]' + sdp);\n\n                internalCall.sdp = sdp;\n                startCallInProgress ++;\n                _callControlService.startCall(\n                    parseAddress(data.from, data.contact),\n                    parseAddress(data.to),\n                    sdp,\n                    function(callid) {\n\n                        internalCall.call = new self.OutgoingCall(callid);\n                        internalCall.id = callid;\n                        internalCall.callerNumber = data.to;\n                        internalCall.customParameters = data.customParameters;\n\n                        // Track the remote participant for an outgoing call.\n                        internalCall.call.remoteParticipant = {\n                            displayNumber: data.to\n                        };\n\n                        self.delegateToCallFSM(internalCall, fsmNotificationEvent.callStart_GUI);\n                        calls[callid] = internalCall;\n\n                        startCallInProgress --;\n                        if(startCallQueue.length > 0){\n                            processStartCallQueue(internalCall);\n                        }\n\n                        // we need to wait until call variable to be created\n                        setTimeout(function() {\n                            _webRtcManager.addLocalStream(internalCall);\n                        }, 10);\n                        _utils.callFunctionIfExist(onSuccess, internalCall.call);\n                    },\n                    function(e) {\n                        startCallInProgress --;\n                        //TODO: update call state\n                        _utils.callFunctionIfExist(onFailure, e);\n                    },\n                    data.customParameters);\n            }, function createOfferFailureCallback(e) {\n                logger.error('[callManager.start] Error : ' + e);\n                _utils.callFunctionIfExist(onFailure, e);\n            }, sendInitialVideo, offerToReceiveVideo);\n        }, function getUserMediaFailureCallback(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        });\n    };\n\n    self.reject = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid];\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        self.delegateToCallFSM(internalCall, fsmNotificationEvent.endReject_GUI);\n\n        _callControlService.reject(data.callid, function() {\n            _utils.callFunctionIfExist(onSuccess);\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        });\n\n    };\n\n    self.sendCustomParameters = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid];\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        var customParameters = internalCall.customParameters;\n\n        if (customParameters) {\n            _callControlService.sendCustomParameters(data.callid, customParameters, function() {\n                _utils.callFunctionIfExist(onSuccess);\n            }, function(e) {\n                _utils.callFunctionIfExist(onFailure, e);\n            });\n        } else {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n        }\n    };\n\n    self.ignore = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid];\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        self.delegateToCallFSM(internalCall, fsmNotificationEvent.endIgnore_GUI);\n        _utils.callFunctionIfExist(onSuccess);\n    };\n    self.forward = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid];\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        _callControlService.forward(data.callid, data.address, function() {\n            self.delegateToCallFSM(internalCall, fsmNotificationEvent.forward_GUI);\n            _utils.callFunctionIfExist(onSuccess);\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        });\n    };\n\n    function handleFailure(internalCall, failureHandler, failureEvent, retry) {\n        setNotificationStateOfCallToBusy(internalCall);\n        _webRtcManager.revertRtcState(internalCall, triggerQueue, triggerQueue);\n\n        if (failureEvent) {\n            self.delegateToCallFSM(internalCall, failureEvent);\n        }\n\n        if (retry && retry.timeout) {\n            internalCall.pendingRequestTimer = setTimeout(function() {\n                internalCall.pendingRequestTimer = null;\n                retry.args.push(true);\n                retry.handler.apply(null, retry.args);\n            }, retry.timeout * 1000);\n        } else {\n            if (failureHandler) {\n                // TODO: need to add an error code\n                _utils.callFunctionIfExist(failureHandler);\n            }\n        }\n    }\n\n    function handleRequestFailure(internalCall, failureHandler, retry) {\n        handleFailure(internalCall, failureHandler,\n            fsmNotificationEvent.requestFailure_JSL, retry);\n    }\n\n    function handleWebrtcFailure(internalCall, failureHandler) {\n        handleFailure(internalCall, failureHandler,\n            fsmNotificationEvent.webrtcFailure_JSL);\n    }\n\n    self.getMediaStream = function(callId) {\n        var internalCall = calls[callId];\n        if(internalCall.localMedia){\n            return internalCall.localMedia.originalStream;\n        } else {\n            return null;\n        }\n    };\n\n    self.hold = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState;\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        if (isNotificationStateOfCallBusy(internalCall)) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        currentCallState = _callFSM.getCurrentState(internalCall);\n\n        if (currentCallState !== fsmState.COMPLETED &&\n            currentCallState !== fsmState.REMOTE_HOLD) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        if (internalCall.pendingRequestTimer) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.PENDING_REQUEST);\n            return;\n        }\n\n        internalCall.lastUpdateRequest = {\n            handler: self.hold,\n            args: [data, onSuccess, onFailure]\n        };\n\n        setNotificationStateOfCallToBusy(internalCall);\n\n        self.delegateToCallFSM(internalCall, fsmNotificationEvent.hold_GUI);\n        _webRtcManager.createHoldUpdate(internalCall,\n            true,\n            (currentCallState === fsmState.REMOTE_HOLD),\n            function(sdp) {\n                logger.debug('[callManager.hold->createHoldUpdate : sdp ]' + sdp);\n                _callControlService.hold(internalCall.id, sdp,\n                    function() {\n                        triggerQueue(internalCall);\n                        _utils.callFunctionIfExist(onSuccess);\n                    },\n                    function(err) {\n                        handleRequestFailure(internalCall, onFailure, {\n                            handler: self.hold,\n                            args: [data, onSuccess, onFailure],\n                            timeout: err.retryAfter\n                        });\n                    },\n                    internalCall.customParameters);\n            },\n            function() {\n                handleWebrtcFailure(internalCall, onFailure);\n            });\n    };\n\n    self.unhold = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState;\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        if (isNotificationStateOfCallBusy(internalCall)) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        currentCallState = _callFSM.getCurrentState(internalCall);\n\n        if (currentCallState !== fsmState.LOCAL_HOLD &&\n            currentCallState !== fsmState.BOTH_HOLD) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        if (internalCall.pendingRequestTimer) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.PENDING_REQUEST);\n            return;\n        }\n\n        internalCall.lastUpdateRequest = {\n            handler: self.unhold,\n            args: [data, onSuccess, onFailure]\n        };\n\n        setNotificationStateOfCallToBusy(internalCall);\n\n        self.delegateToCallFSM(internalCall, fsmNotificationEvent.unhold_GUI);\n        _webRtcManager.createHoldUpdate(internalCall, false,\n            (currentCallState === fsmState.BOTH_HOLD),\n            function(sdp) {\n                logger.debug('[callManager.unhold->createHoldUpdate : sdp ]' + sdp);\n                _callControlService.unhold(internalCall.id, sdp,\n                    function() {\n                        triggerQueue(internalCall);\n                        _webRtcManager.addLocalStream(internalCall);\n                        _utils.callFunctionIfExist(onSuccess);\n                    },\n                    function(err) {\n                        handleRequestFailure(internalCall, onFailure, {\n                            handler: self.unhold,\n                            args: [data, onSuccess, onFailure],\n                            timeout: err.retryAfter\n                        });\n                    },\n                    internalCall.customParameters);\n            },\n            function() {\n                handleWebrtcFailure(internalCall, onFailure);\n            });\n    };\n\n    self.directTransfer = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState;\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        currentCallState = _callFSM.getCurrentState(internalCall);\n\n        if (currentCallState === fsmState.LOCAL_HOLD || currentCallState === fsmState.BOTH_HOLD || currentCallState === fsmState.COMPLETED) {\n            //TODO: force localhold - if the user is not on hold\n            logger.info('[callManager.directTransfer->sendTransfer : transfer target ]' + data.address);\n            _callControlService.transfer(internalCall.id, parseAddress(data.address), undefined, function() {\n                self.delegateToCallFSM(internalCall, fsmNotificationEvent.transfering);\n                _utils.callFunctionIfExist(onSuccess);\n                logger.info('[callManager.directTransfer->sentTransfer : transfer target ]' + data.address);\n            }, function(e) {\n                _utils.callFunctionIfExist(onFailure, e);\n            });\n        } else if (currentCallState === fsmState.LOCAL_HOLDING) {\n            if (!internalCall.transferTrigger) {\n                internalCall.transferTrigger = function() {\n                    self.directTransfer(data, onSuccess, onFailure);\n                    delete this.transferTrigger;\n                };\n            }\n        } else {\n            logger.error('directTransfer call is not in correct state: ' + currentCallState);\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n        }\n\n    };\n\n    self.videoUpdate = function(data, onSuccess, onFailure, retryCallback) {\n        var internalCall = calls[data.callid],\n            isVideoStart;\n\n        isVideoStart = internalCall.isVideoEnabled || internalCall.isScreenShared;\n\n        self.delegateToCallFSM(internalCall, fsmNotificationEvent.videoStopStart_GUI);\n        _webRtcManager.createUpdate(\n            internalCall,\n            function(sdp) {\n                _callControlService.reinvite(internalCall.id, sdp,\n                    function() {\n                        setNotificationStateOfCallToIdle(internalCall);\n                        _webRtcManager.addLocalStream(internalCall);\n                        _utils.callFunctionIfExist(onSuccess);\n                    },\n                    function(err) {\n                        handleRequestFailure(internalCall, onFailure, {\n                            handler: retryCallback,\n                            args: [data, onSuccess, onFailure],\n                            timeout: err.retryAfter\n                        });\n                    },\n                    internalCall.customParameters);\n            },\n            function() {\n                logger.error('reinvite->createUpdate ');\n                handleWebrtcFailure(internalCall, onFailure);\n            },\n            isVideoStart\n        );\n    };\n\n    self.videoStopStart = function(data, onSuccess, onFailure) {\n        var internalCall = calls[data.callid],\n            currentCallState,\n            opts = {\n                isVideoEnabled: true,\n                videoResolution: data.videoResolution\n            };\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        if (isNotificationStateOfCallBusy(internalCall)) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        currentCallState = _callFSM.getCurrentState(internalCall);\n        if (currentCallState !== fsmState.COMPLETED) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            return;\n        }\n\n        if (internalCall.pendingRequestTimer) {\n            _utils.callFunctionIfExist(onFailure, _core.Errors.PENDING_REQUEST);\n            return;\n        }\n\n        internalCall.lastUpdateRequest = {\n            handler: self.videoStopStart,\n            args: [data, onSuccess, onFailure]\n        };\n\n        setNotificationStateOfCallToBusy(internalCall);\n\n        if (!internalCall.isVideoSourceAllowed && data.isVideoStart) {\n            self.getUserMedia(opts, function getUserMediaSuccessCallback(mediaInfo) {\n                internalCall.isVideoSourceAllowed = true;\n                internalCall.isVideoEnabled = true;\n                _webRtcManager.storeLocalStreamToCall(internalCall, mediaInfo.id);\n\n                // If the screen is shared, we don't need to do an update since the\n                // video state won't have changed.\n                if (!internalCall.isScreenShared) {\n                    self.videoUpdate(data, onSuccess, onFailure, self.videoStopStart);\n                }\n            }, function getUserMediaFailureCallback(e) {\n                // Reset busy flag to be able to receive further notifications\n                setNotificationStateOfCallToIdle(internalCall);\n                _utils.callFunctionIfExist(onFailure, e);\n            });\n        } else {\n            internalCall.isVideoEnabled = data.isVideoStart;\n\n            // If the screen is shared, we don't need to do an update since the\n            // video state won't have changed.\n            if (!internalCall.isScreenShared) {\n                self.videoUpdate(data, onSuccess, onFailure, self.videoStopStart);\n            }\n        }\n    };\n\n    self.screenStopStart = function(data, onSuccess, onFailure, onScreenStop) {\n        var internalCall = calls[data.callid],\n            currentCallState;\n\n        if (!internalCall) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        if (isNotificationStateOfCallBusy(internalCall)) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        currentCallState = _callFSM.getCurrentState(internalCall);\n        if (currentCallState !== fsmState.COMPLETED) {\n            _utils.callFunctionIfExist(onFailure, errors.STATE);\n            return;\n        }\n\n        if (internalCall.pendingRequestTimer) {\n            _utils.callFunctionIfExist(onFailure, errors.PENDING_REQUEST);\n            return;\n        }\n\n        if (data.isScreenStart) {\n\n            // If we are already in the process of starting screensharing, don't\n            // try again until it's done.\n            if (internalCall.isStartingScreenMedia) {\n                _utils.callFunctionIfExist(onFailure);\n                return;\n            }\n\n            internalCall.isStartingScreenMedia = true;\n\n            _webRtcManager.startScreenMedia(function(mediaInfo) {\n                internalCall.isScreenShared = true;\n                internalCall.isStartingScreenMedia = false;\n                _webRtcManager.updateLocalStreamToCall(internalCall, mediaInfo.id);\n                self.videoUpdate(data, onSuccess, onFailure, self.screenStopStart);\n            },\n            function() {\n                internalCall.isScreenShared = false;\n                internalCall.isStartingScreenMedia = false;\n                _utils.callFunctionIfExist(onFailure);\n            },\n            data.options,\n            function() {\n                if (_callFSM.getCurrentState(internalCall) === fsmState.COMPLETED) {\n                    //Screen sharing video stream has been stopped, act as if someone called screenStopStart\n                    //but pass the result to onScreenStop instead.\n                    self.screenStopStart({...data, isScreenStart:false}, onScreenStop, function() {\n                        logger.error('Failed to stop screen properly after user stopped the stream via' +\n                                ' the browser controls');\n                    }, false);\n                } else if (internalCall.isScreenShared) {\n                    internalCall.isScreenShared = false;\n                    _webRtcManager.stopScreenMedia();\n                    _utils.callFunctionIfExist(onScreenStop);\n                }\n            });\n        } else if (internalCall.isScreenShared) {\n            internalCall.isScreenShared = false;\n            _webRtcManager.stopScreenMedia();\n\n            self.videoUpdate(data, onSuccess, onFailure, self.screenStopStart);\n        }\n    };\n\n    self.mute = function(data) {\n        var call = calls[data.callid];\n        if (call) {\n            _webRtcManager.muteAudioTrack(call, data.mute);\n            _utils.callFunctionIfExist(call.call.onMute, data.mute);\n        }\n    };\n\n    self.silence = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            internalCall.silenced = data.silence;\n            _webRtcManager.updateSilenceStatus(internalCall);\n        }\n    };\n\n    self.isSilenced = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            return internalCall.silenced;\n        }\n    };\n\n    self.sendDTMF = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            _webRtcManager.sendDTMF(internalCall, data.tone);\n        }\n    };\n\n    self.join = function(data, onSuccess, onFailure, isVideoEnabled, videoResolution) {\n        var internalCall1 = calls[data.callid1],\n            internalCall2 = calls[data.callid2],\n            newInternalCall = {},\n            currentCallState1,\n            currentCallState2,\n            opts = {\n                isVideoEnabled: isVideoEnabled,\n                videoResolution: videoResolution\n            };\n\n        if ((internalCall1) && (internalCall2)) {\n            currentCallState1 = _callFSM.getCurrentState(internalCall1);\n            currentCallState2 = _callFSM.getCurrentState(internalCall2);\n            if (currentCallState1 === fsmState.LOCAL_HOLDING ||\n                currentCallState2 === fsmState.LOCAL_HOLDING) {\n                _utils.callFunctionIfExist(onFailure, _core.Errors.PENDING_REQUEST);\n                return;\n            }\n            if ((currentCallState1 === fsmState.LOCAL_HOLD ||\n                    currentCallState1 === fsmState.REMOTE_HOLD ||\n                    currentCallState1 === fsmState.BOTH_HOLD) &&\n                (currentCallState2 === fsmState.LOCAL_HOLD ||\n                    currentCallState2 === fsmState.REMOTE_HOLD ||\n                    currentCallState2 === fsmState.BOTH_HOLD)) {\n\n                self.getUserMedia(opts, function(mediaInfo) {\n                    newInternalCall.isVideoSourceAllowed = mediaInfo.video;\n                    _webRtcManager.storeLocalStreamToCall(newInternalCall, mediaInfo.id);\n                    self.setUpdateCandidateCallbackToCall(newInternalCall);\n                    _webRtcManager.createOffer(newInternalCall,\n                        function(sdp) {\n                            logger.info('join->doOffer : sdp ' + sdp);\n                            newInternalCall.sdp = sdp;\n                            _callControlService.join(\n                                internalCall1.id,\n                                internalCall2.id,\n                                sdp,\n                                function(callid) {\n\n                                    newInternalCall.call = new self.OutgoingCall(callid);\n                                    newInternalCall.id = callid;\n                                    // Mark the call as a joined call.\n                                    newInternalCall.call.setJoin(true);\n                                    // Since we setJoin(true), we need to pretend that this is a thing apparently.\n                                    newInternalCall.call.onJoin = function() {\n                                        logger.debug('Default onJoin called for call. ' + callid);\n                                    };\n                                    newInternalCall.firstInternalCallId = internalCall1.id;\n                                    newInternalCall.secondInternalCallId = internalCall2.id;\n\n                                    // refer will be handled by client. We are going to need callID of partyB and partyC\n                                    if (_config.clientControlled === 'true') {\n                                        newInternalCall.isReferer = true;\n                                        newInternalCall.refer1ID = internalCall1.id;\n                                        newInternalCall.refer2ID = internalCall2.id;\n                                    }\n\n                                    self.delegateToCallFSM(internalCall1, fsmNotificationEvent.joining_Notify);\n                                    self.delegateToCallFSM(internalCall2, fsmNotificationEvent.joining_Notify);\n                                    self.delegateToCallFSM(newInternalCall, fsmNotificationEvent.joiningSuccess_Notify);\n                                    calls[callid] = newInternalCall;\n\n                                    _utils.callFunctionIfExist(onSuccess, newInternalCall.call);\n                                },\n                                function(e) {\n                                    logger.error('callControlService.join Failed!! sdp ' + sdp);\n                                    _utils.callFunctionIfExist(onFailure, e);\n                                },\n                                internalCall1.customParameters);\n                        },\n                        function(e) {\n                            logger.error('doOffer Failed!!');\n                            _utils.callFunctionIfExist(onFailure, e);\n                        }, isVideoEnabled);\n                }, function(e) {\n                    _utils.callFunctionIfExist(onFailure, e);\n                });\n            } else {\n                _utils.callFunctionIfExist(onFailure, _core.Errors.STATE);\n            }\n        }\n    };\n\n    self.transfer = function() {\n\n    };\n\n    self.end = function(data, onSuccess) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            //check with the state machine if the current state would accept an endCall.\n            if (_callFSM.getCurrentState(internalCall) === fsmState.INIT) {\n                logger.error('Cannot end call in INIT callstate :' + _core.Errors.STATE);\n            } else {\n                //send the end call to webrtc abstraction, change call state\n                //this will trigger the send endcall or reject call\n                self.delegateToCallFSM(internalCall, fsmNotificationEvent.end_GUI);\n\n                clearResources(internalCall, true);\n                _utils.callFunctionIfExist(onSuccess);\n            }\n        }\n\n    };\n\n    self.clickToCall = function(data, onSuccess, onFailure) {\n        _callControlService.clickToCall(data.callingParty, data.calledParty, function() {\n            _utils.callFunctionIfExist(onSuccess);\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        });\n    };\n\n    self.getIMRN = function(data, onSuccess, onFailure) {\n        _callControlService.getIMRN(data.realm, data.source, data.destination, function() {\n            _utils.callFunctionIfExist(onSuccess);\n        }, function(e) {\n            _utils.callFunctionIfExist(onFailure, e);\n        });\n    };\n\n    self.cerateIncomingCallInFSM = function(call, sdp) {\n\n        logger.info('incomingCall : sdp = ' + sdp);\n        var internalCall = {\n            'call': call,\n            'sdp': sdp,\n            'id': call.getId(),\n            'supportTrickle': _sdpParser.isSdpHasTrickle(sdp) && (_config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE)\n        };\n        logger.info('incomingCall: ' + call.getId());\n\n        if (_config.continuity && call.canAnswer()) {\n            cacheCall(internalCall);\n        }\n        self.setUpdateCandidateCallbackToCall(internalCall);\n\n        calls[call.getId()] = internalCall;\n        if (!sdp) {\n            self.delegateToCallFSM(internalCall, fsmNotificationEvent.callNotify_noSDP);\n        } else {\n            self.delegateToCallFSM(internalCall, fsmNotificationEvent.callNotify);\n        }\n    };\n\n\n\n    self.onNotificationEvent = function(type, sessionParams, notificationParams) {\n        var callid = sessionParams.sessionData,\n            statusCode = sessionParams.statusCode,\n            reasonText = sessionParams.reasonText,\n            sdp = sessionParams.sdp,\n            referTo = sessionParams.referTo,\n            referredBy = sessionParams.referredBy,\n            retryAfter = sessionParams.retryAfter,\n            internalCall = calls[callid];\n\n        logger.debug('Notification received ' + type + ' callid:' + callid);\n        if(sdp){\n            logger.debug('onNotificationEvent', sdp);\n        }\n        if (internalCall) {\n            if (isQueueEnabled && isNotificationStateOfCallBusy(internalCall) &&\n                (type !== fsmNotificationEvent.callEnd_Notify) && (type !== fsmNotificationEvent.callCancel_Notify)) {\n                logger.debug('NOTIFICATION_QUEUE: notification state is busy, adding process to the queue!');\n                internalCall.call.notificationQueue.enqueue({\n                    type: type,\n                    sessionParams: sessionParams\n                });\n                logger.debug('NOTIFICATION_QUEUE: queue size is now ' + internalCall.call.notificationQueue.size());\n                return;\n            }\n\n            if (isQueueEnabled) {\n                setNotificationStateOfCallToBusy(internalCall);\n            }\n\n            if (sdp) {\n                internalCall.prevRemoteSdp = internalCall.stableRemoteSdp;\n                internalCall.supportTrickle = _sdpParser.isSdpHasTrickle(sdp) && (_config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE);\n                sdp = _sdpParser.deleteGoogleIceFromSdp(sdp);\n                internalCall.sdp = sdp;\n            }\n            if (referTo && referredBy) {\n                internalCall.referTo = referTo;\n                internalCall.referredBy = referredBy;\n            }\n            if(notificationParams) {\n                // Update the exposed call object so it has the remote participant info.\n                if(internalCall.call.isOutgoing) {\n                    if(notificationParams.remoteDisplayNumber) {\n                        internalCall.call.calleeNumber = notificationParams.remoteDisplayNumber;\n                    }\n                    if(notificationParams.remoteName) {\n                        internalCall.call.calleeName = notificationParams.remoteName;\n                    }\n                } else {\n                    if(notificationParams.remoteDisplayNumber) {\n                        internalCall.call.callerNumber = notificationParams.remoteDisplayNumber;\n                    }\n                    if(notificationParams.remoteName) {\n                        internalCall.call.callerName = notificationParams.remoteName;\n                    }\n                }\n\n                // Keep the remote participant info on the exposed call up-to-date if there is new info.\n                if(notificationParams.remoteDisplayNumber) {\n                    if (!internalCall.call.hasOwnProperty('remoteParticipant')) {\n                        internalCall.call.remoteParticipant = {};\n                    }\n                    internalCall.call.remoteParticipant.displayNumber = notificationParams.remoteDisplayNumber;\n\n                    if(notificationParams.remoteName) {\n                        internalCall.call.remoteParticipant.displayName = notificationParams.remoteName;\n                    }\n                }\n            }\n\n            internalCall.retryAfter = retryAfter;\n            internalCall.statusCode = statusCode;\n            internalCall.reasonText = reasonText;\n            self.delegateToCallFSM(internalCall, type);\n        } else if(startCallInProgress > 0) {\n            //If the call does not exist it could mean the event was received out of order, and that the call is not yet created.\n            logger.info('Pushing event to startCallQueue');\n            startCallQueue.push({\n                type: type,\n                sessionParams: sessionParams,\n                expires: Date.now() + 30000 //lets expire in 30 seconds.\n            });\n        }\n    };\n\n    self.onStateChange = function(call, event) {\n        var callStates = CALL_STATES,\n            transferEvent = _callFSM.TransferEvent,\n            i, isJoin, isLocalHold, auditTimerDelay, startAuditTimer,\n            internalCall1, internalCall2;\n\n        calls[call.id] = call;\n\n        function triggerCallState(state, doNotTriggerQueue) {\n            const stateText = find(stateName => CALL_STATES[stateName] === state, Object.keys(CALL_STATES));\n            logger.debug('triggerCallState:  stateCode =   ' + state + '   state =   ' + stateText + '    call.statusCode =  ' + call.statusCode + '   call.reasonText =  ' + call.reasonText);\n            call.call.callState = state;\n            _utils.callFunctionIfExist(call.call.onStateChange, state, call.statusCode, call.reasonText, {\n                localStatusCode: call.localStatusCode,\n                localReasonText: call.localReasonText\n            });\n            if (!doNotTriggerQueue) {\n                triggerQueue(call);\n            }\n        }\n\n        function triggerCallStateWithoutQueue(state) {\n            triggerCallState(state, true);\n        }\n\n        auditTimerDelay = function() {\n            setTimeout(function() {\n                if (_core.isConnected()) {\n                    _callControlService.audit(call.id, function() {\n                        logger.info('Audit kicked off: Success for: ' + call.id);\n                    }, function() {\n                        logger.error('Audit: Fail for: ' + call.id);\n                        // no need to end the call after audit fail\n                    });\n                }\n            }, AUDIT_KICKOFF_TIMEOUT);\n        };\n\n        startAuditTimer = function() {\n            if (!call.isAuditing) {\n                call.call.setAuditTimer(function() {\n                    if (_core.isConnected()) {\n                        _callControlService.audit(call.id, function() {\n                            logger.info('Audit: Success for: ' + call.id);\n                        }, function() {\n                            logger.error('Audit: Fail for: ' + call.id);\n                            // no need to end the call after audit fail\n                            triggerQueue(call);\n                        });\n                    }\n                });\n                call.isAuditing = true;\n            }\n        };\n\n        logger.info('Transfer Event: ' + event + '. callId: ' + call.id);\n        switch (event) {\n        case transferEvent.startCallReplace_fsm:\n            triggerCallState(callStates.REPLACING);\n            break;\n        case transferEvent.joiningSuccess_fsm:\n            // Emit a state change event for the new joined call.\n            call.localStatusCode = LOCAL_STATUS_CODES.JOIN_COMPLETED;\n            call.localReasonText = LOCAL_REASON_TEXTS.JOIN_COMPLETED;\n            triggerCallState(callStates.IN_CALL);\n            break;\n        case transferEvent.callStart_fsm:\n        case transferEvent.localHolding_fsm:\n        case transferEvent.localUnHolding_fsm:\n        case transferEvent.localVideoStopStart_fsm:\n        case transferEvent.slowStartOfferProcessed_fsm:\n        case transferEvent.rejectWithoutClearCallObject_GUI:\n            break;\n        case transferEvent.deviceChange_fsm:\n        case transferEvent.ignoredNotification_fsm:\n        case transferEvent.answeringRingingSlow_fsm:\n        case transferEvent.localHold_fsm:\n        case transferEvent.localUnHold_fsm:\n        case transferEvent.answerRingingSlow_fsm:\n        case transferEvent.transfering_fsm:\n            triggerQueue(call);\n            break;\n        case transferEvent.ringing_fsm:\n            triggerCallState(callStates.RINGING);\n            break;\n        case transferEvent.callReceived_fsm:\n            //TODO maybe set that this is a slow start\n            triggerCallState(callStates.INCOMING);\n            break;\n        case transferEvent.answer_fsm:\n            auditTimerDelay();\n            startAuditTimer();\n            triggerCallState(callStates.IN_CALL);\n            break;\n        case transferEvent.ignore_GUI:\n            call.localStatusCode = LOCAL_STATUS_CODES.IGNORED_BY_LOCAL;\n            call.localReasonText = LOCAL_REASON_TEXTS.IGNORED_BY_LOCAL;\n            clearCallObject(call);\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.respondedFromAnotherDevice_fsm:\n            call.localStatusCode = LOCAL_STATUS_CODES.RESPONDED_FROM_ANOTHER_DEVICE;\n            call.localReasonText = LOCAL_REASON_TEXTS.RESPONDED_FROM_ANOTHER_DEVICE;\n            clearCallObject(call);\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.reject_GUI:\n        case transferEvent.forward_fsm:\n            clearResources(call);\n            break;\n        case transferEvent.sessionComplete_fsm:\n            _callControlService.endCall(call.id, function() {\n                logger.info('callControlService.endCall successful. callId: ' + call.id);\n            }, function() {\n                logger.error('callControlService.endCall FAILED!!.callId: ' + call.id);\n            });\n            clearResources(call);\n            // Emit a state change event with \"transition\" explanation.\n            call.localStatusCode = LOCAL_STATUS_CODES.JOIN_COMPLETED;\n            call.localReasonText = LOCAL_REASON_TEXTS.JOIN_COMPLETED;\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.sessionFail_fsm:\n        case transferEvent.transferFail_fsm:\n            call.forceNewPeer = true;\n            triggerCallState(callStates.TRANSFER_FAILURE);\n            break;\n        case transferEvent.replaceCallCompleted_fsm:\n        case transferEvent.callCompleted_fsm:\n            // Workaround for webrtc dtls and firefox pranswer support bug. Can be removed when fixed by browsers.\n            // dtls is enabled listened early media as answer. Now has to create a new peer for actual answer sdp, only if the sdp is different.\n            if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n                if(_sdpParser.compareSDPForEarlyMedia(call.stableRemoteSdp, call.sdp)){\n                    logger.info('Early Media with same sdp on DTLS');\n                    auditTimerDelay();\n                    startAuditTimer();\n                    triggerCallState(callStates.IN_CALL);\n                } else {\n                    logger.info('Handle answer sdp after session progress when dtls is enabled. Create new peer workaround.');\n                    self.delegateToCallFSM(call, fsmNotificationEvent.performCreateNewPeerWorkaround_JSL);\n                }\n                break;\n            }\n\n            auditTimerDelay();\n            _webRtcManager.processAnswer(call,\n                function() {\n                    startAuditTimer();\n                    triggerCallState(callStates.IN_CALL);\n                },\n                function(err) {\n                    if (err === CONSTANTS.WEBRTC.ERROR.ICE_ICELITE) {\n                        logger.info('ice-lite - ice change. Create new peer workaround.');\n                        self.delegateToCallFSM(call, fsmNotificationEvent.performCreateNewPeerWorkaround_JSL);\n                    } else {\n                        clearResources(call);\n                        triggerCallState(callStates.ENDED);\n                    }\n                });\n            //if client is handling the refers, we need to trigger the refers for partyB and partyC from referer\n            if (call.isReferer) {\n                for (i in calls) {\n                    if (calls.hasOwnProperty(i)) {\n                        if (calls[i] && (calls[i].id === call.refer1ID || calls[i].id === call.refer2ID)) {\n                            calls[i].referCall(call.referTo, call.referredBy);\n                        }\n                    }\n                }\n            }\n            break;\n        case transferEvent.startCallReplaceRejected_fsm:\n        case transferEvent.noAnswer_fsm:\n            clearResources(call);\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.remoteEnd_fsm:\n            if ((call.firstInternalCallId) && (call.secondInternalCallId)) {\n                internalCall1 = calls[call.firstInternalCallId];\n                self.delegateToCallFSM(internalCall1, fsmNotificationEvent.revertState_JSL);\n                internalCall2 = calls[call.secondInternalCallId];\n                self.delegateToCallFSM(internalCall2, fsmNotificationEvent.revertState_JSL);\n            }\n            // if call's previous call state is RINGING check replacingCallId value\n            if (call.previousState === fsmState.RINGING && call.replacingCallId) {\n                var replacingCall = calls[call.replacingCallId];\n                // if there us replacingCallId and replacing call 's state is active then unmute it\n                if (replacingCall) {\n                    logger.info('[onStateChange] replacing call\\'s state: ' + replacingCall.currentState);\n                    if (replacingCall.currentState === fsmState.COMPLETED) {\n                        logger.info('[onStateChange] replacing call has unmuted: ' + replacingCall.currentState);\n                        replacingCall.call.unmute();\n                    }\n                } else {\n                    logger.info('[onStateChange] replacing call has not found, replacingCallId: ' + call.replacingCallId);\n                }\n            }\n\n            if (!call.localStatusCode && !call.localReasonText) {\n                call.localStatusCode = LOCAL_STATUS_CODES.STATUS_CODE_NOT_PROVIDED;\n                call.localReasonText = LOCAL_REASON_TEXTS.STATUS_CODE_NOT_PROVIDED;\n            }\n\n            clearResources(call);\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.localEnding_fsm:\n            call.localStatusCode = LOCAL_STATUS_CODES.ENDED_BY_LOCAL;\n            call.localReasonText = LOCAL_REASON_TEXTS.ENDED_BY_LOCAL;\n            _callControlService.endCall(call.id, function() {\n                logger.info('CallControlService endCall successful. callId: ' + call.id);\n            }, function() {\n                logger.error('Cannot callControlService endCall. callId: ' + call.id);\n            }, call.localReasonText);\n            clearCallObject(call);\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.localEndingWithoutClearCallObject_fsm:\n            call.localStatusCode = LOCAL_STATUS_CODES.ENDED_BY_LOCAL;\n            call.localReasonText = LOCAL_REASON_TEXTS.ENDED_BY_LOCAL;\n            _callControlService.endCall(call.id, function() {\n                logger.info('CallControlService endCall successful. callId: ' + call.id);\n            }, function() {\n                logger.error('Cannot callControlService endCall. callId: ' + call.id);\n            }, call.localReasonText);\n            break;\n        case transferEvent.localEnd_fsm:\n            call.localStatusCode = LOCAL_STATUS_CODES.ENDED_BY_LOCAL;\n            call.localReasonText = LOCAL_REASON_TEXTS.ENDED_BY_LOCAL;\n            clearCallObject(call);\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.localReject_fsm:\n            call.localStatusCode = LOCAL_STATUS_CODES.REJECTED_BY_LOCAL;\n            call.localReasonText = LOCAL_REASON_TEXTS.REJECTED_BY_LOCAL;\n            clearCallObject(call);\n            triggerCallState(callStates.ENDED);\n            break;\n        case transferEvent.callCompletedAnswering_fsm:\n            logger.info('callManager: Call Completed Answering Event. callId: ' + call.id);\n            var isRemoteHold;\n            if (call.sdp) {\n                _sdpParser.init(call.sdp);\n                isRemoteHold = _sdpParser.isRemoteHold();\n            }\n            _webRtcManager.processAnswer(call, function () {\n                if (isRemoteHold) {\n                    call.currentState =  fsmState.REMOTE_HOLD;\n                    triggerCallState(callStates.ON_REMOTE_HOLD);\n                } else {\n                    triggerCallState(callStates.IN_CALL);\n                }\n                auditTimerDelay();\n                startAuditTimer();\n            }, function () {\n                clearResources(call);\n                triggerCallState(callStates.ENDED);\n            }, true);\n            break;\n        case transferEvent.remoteHold_fsm:\n            switch (_callFSM.getCurrentState(call)) {\n            case fsmState.REMOTE_HOLD:\n                triggerCallState(callStates.ON_REMOTE_HOLD);\n                break;\n            case fsmState.BOTH_HOLD:\n                triggerCallState(callStates.ON_HOLD);\n                break;\n            default:\n                triggerQueue(call);\n                break;\n            }\n            break;\n        case transferEvent.remoteUnHold_fsm:\n\n            // If the remote user changed, then this unhold was due to a transfer.\n            if(call.remoteParticipantChanged) {\n                call.remoteEndPointChanged = undefined;\n                call.localStatusCode = LOCAL_STATUS_CODES.TRANSFERRED;\n                call.localReasonText = LOCAL_REASON_TEXTS.TRANSFERRED;\n            }\n\n            switch (_callFSM.getCurrentState(call)) {\n            case fsmState.LOCAL_HOLD:\n                triggerCallState(callStates.ON_HOLD);\n                break;\n            case fsmState.COMPLETED:\n                triggerCallState(callStates.IN_CALL);\n                break;\n            default:\n                triggerQueue(call);\n                break;\n            }\n            break;\n        case transferEvent.remoteHolding_fsm:\n            isLocalHold = (_callFSM.getCurrentState(call) === fsmState.LOCAL_HOLD) || (_callFSM.getCurrentState(call) === fsmState.BOTH_HOLD);\n            _webRtcManager.processHold(call, true, isLocalHold, function(sdp) {\n                logger.info('[callManager.onStateChange.transferEvent.remoteHold_fsm->processHold : sdp ]' + sdp);\n                _callControlService.respondToRemoteHold(call.id, sdp, function() {\n                    logger.info('Remote Hold Transfer Event Successful. callId: ' + call.id);\n                    self.delegateToCallFSM(call, fsmNotificationEvent.remoteHoldProcessed_JSL);\n                }, function(errorStr) {\n                    logger.error('Remote Hold Transfer Event FAILED!! - ' + errorStr);\n                    handleRequestFailure(call);\n                },\n                call.customParameters);\n            }, function(errorStr) {\n                logger.error('Remote Hold FAILED!! - ' + errorStr);\n                handleWebrtcFailure(call);\n            });\n            break;\n        case transferEvent.remoteOfferDuringLocalHold_fsm:\n            _webRtcManager.processRemoteOfferOnLocalHold(call, function(sdp) {\n                logger.info('onStateChange.transferEvent.remoteOfferDuringLocalHold_fsm : sdp ' + sdp);\n                _callControlService.respondCallUpdate(call.id, sdp, function() {\n                    logger.info('Remote Offer During Local Hold Transfer Event successful. callId: ' + call.id);\n                    triggerQueue(call);\n                }, function(errorStr) {\n                    handleRequestFailure(call);\n                    logger.error('Remote Offer During Local Hold  Transfer Event FAILED!! - ' + errorStr);\n                },\n                call.customParameters);\n            }, function(errorStr) {\n                logger.error('Remote Offer During Local Hold FAILED!! - ' + errorStr);\n                handleWebrtcFailure(call);\n            });\n            break;\n        case transferEvent.slowStartOfferDuringOnCall_fsm:\n        case transferEvent.slowStartOfferDuringRemoteHold_fsm:\n            _webRtcManager.createReOffer(call, function(sdp) {\n                logger.info('onStateChange.transferEvent.createReOffer: sdp ' + sdp);\n                _callControlService.respondCallUpdate(call.id, sdp, function() {\n                    logger.info('Slow Start Offer respondCallUpdate successful. callId: ' + call.id);\n                    self.delegateToCallFSM(call, fsmNotificationEvent.slowStartOfferProcessed_JSL);\n                    triggerQueue(call);\n                }, function(errorStr) {\n                    logger.error('Slow Start Offer respondCallUpdate FAILED!! - ' + errorStr);\n                    handleRequestFailure(call);\n                },\n                call.customParameters);\n            }, function(errorStr) {\n                logger.error('Slow Start Offer createReOffer FAILED!! - ' + errorStr);\n                handleWebrtcFailure(call);\n            }, false);\n            break;\n        case transferEvent.performReconnectWorkaround_fsm:\n            _webRtcManager.createReOffer(call, function createReOfferSuccessCallback(sdp) {\n                logger.info('onStateChange.transferEvent.createReOffer : sdp ' + sdp);\n                _callControlService.reinvite(call.id, sdp, function reInviteSuccessCallback() {\n                    setNotificationStateOfCallToIdle(call);\n                    _webRtcManager.addLocalStream(call);\n                    logger.info('callControlService.reinvite successful. callId: ' + call.id);\n                }, function (e) {\n                    //statusCode 42 =  RESOURCE_IDENTIFIER_DOES_NOT_EXIST\n                    if (e.statusCode === 42) {\n                        // Call object removed and  onStateChange event triggered with ENDED state.\n                        // Because call session already ended on call server.\n                        // Operation can not be on this call.\n                        // Call object must be removed and should be given information to the web application side.\n                        logger.info('Call is ended.Because call session is not active. callId: ' + call.id);\n                        clearResources(call);\n                        triggerCallState(callStates.ENDED);\n                    } else {\n                        self.delegateToCallFSM(call, fsmNotificationEvent.requestFailure_JSL);\n                    }\n                },\n                call.customParameters);\n            }, function() {\n                handleWebrtcFailure(call);\n            }, true);\n            break;\n        case transferEvent.performCreateNewPeerWorkaround_fsm:\n            logger.info('performCreateNewPeerWorkaround_fsm');\n            _webRtcManager.createReOffer(call,\n                function createReOfferSuccessCallback(sdp) {\n                    logger.info('createReOfferSuccessCallback: sdp ' + sdp);\n                    _callControlService.reinvite(call.id, sdp,\n                        function reInviteSuccessCallback() {\n                            logger.info('reInviteSuccessCallback.');\n                            _webRtcManager.addLocalStream(call);\n                            startAuditTimer();\n                            triggerQueue(call);\n                        },\n                        function reInviteFailureCallback() {\n                            logger.info('reInviteFailureCallback.');\n                            self.end({\n                                callid: call.id\n                            }, function() {\n                                logger.info('end success.');\n                                clearResources(call);\n                                triggerCallState(callStates.ENDED);\n                            });\n                        },\n                        call.customParameters);\n                },\n                function createReOfferFailureCallback() {\n                    self.end({\n                        callid: call.id\n                    }, function() {\n                        logger.info('end success.');\n                        clearResources(call);\n                        triggerCallState(callStates.ENDED);\n                    });\n                }, false);\n            break;\n        case transferEvent.remoteUnHolding_fsm:\n            isLocalHold = (call.previousState === fsmState.LOCAL_HOLD) || (call.previousState === fsmState.BOTH_HOLD);\n            _webRtcManager.processHold(call, false, isLocalHold, function(sdp) {\n                logger.info('onStateChange.transferEvent.remoteUnHold_fsm->processHold : sdp ' + sdp);\n                _callControlService.respondToRemoteUnhold(call.id, sdp, function() {\n                    logger.info('Remote UnHold Transfer Event successful. callId: ' + call.id);\n                    self.delegateToCallFSM(call, fsmNotificationEvent.remoteUnHoldProcessed_JSL);\n                }, function(errorStr) {\n                    logger.error('Remote UnHold Transfer Event FAILED!! - ' + errorStr);\n                    handleRequestFailure(call);\n                },\n                call.customParameters);\n            }, function(errorStr) {\n                logger.error('Remote UnHold FAILED!! - ' + errorStr);\n                handleWebrtcFailure(call);\n            });\n            break;\n        case transferEvent.renegotiationCompleted_fsm:\n            triggerCallState(callStates.RENEGOTIATION);\n            break;\n        case transferEvent.remoteOffer_fsm:\n        case transferEvent.remoteCallUpdate_fsm:\n            _webRtcManager.processUpdate(call, function(sdp) {\n                logger.info('onStateChange.transferEvent.remoteCallUpdate_fsm->processUpdate : sdp ' + sdp);\n                _callControlService.respondCallUpdate(call.id, sdp, function() {\n                    logger.info('Remote Call Update Transfer Event Successful. callId: ' + call.id);\n                    self.delegateToCallFSM(call, fsmNotificationEvent.remoteOfferProcessed_JSL);\n                }, function(errorStr) {\n                    logger.error('Remote Call Update Transfer Event FAILED!! - ' + errorStr);\n                    handleRequestFailure(call);\n                },\n                call.customParameters);\n            }, function(errorStr) {\n                logger.error('Remote Call Update FAILED!! - ' + errorStr);\n                handleWebrtcFailure(call);\n            }, call.currentState === fsmState.LOCAL_HOLD ? true : false);\n            break;\n        case transferEvent.respondCallHoldUpdate_fsm:\n            isJoin = call.call.getJoin();\n            _webRtcManager.processHoldRespond(call, function() {\n                logger.info('Respond Call Hold Update Event Successful. callId: ' + call.id);\n                switch (_callFSM.getCurrentState(call)) {\n                case fsmState.REMOTE_HOLD:\n                    triggerCallState(callStates.ON_REMOTE_HOLD);\n                    break;\n                case fsmState.LOCAL_HOLD:\n                case fsmState.BOTH_HOLD:\n                    triggerCallState(callStates.ON_HOLD);\n                    if (typeof call.transferTrigger === 'function') {\n                        call.transferTrigger();\n                    }\n                    break;\n                case fsmState.COMPLETED:\n                    triggerCallState(callStates.IN_CALL);\n                    break;\n                }\n            }, function(e) {\n                logger.error('Respond Call Hold Update Event FAILED: ' + e);\n                triggerQueue(call);\n            }, isJoin);\n\n            //enable clicking\n            call.call.setButtonDisabler(false);\n            call.call.clearBtnTimeout();\n\n            if (isJoin === true) {\n                call.call.onJoin();\n            }\n\n            break;\n        case transferEvent.respondCallUpdate_fsm:\n            isJoin = call.call.getJoin();\n\n            //enable clicking\n            call.call.setButtonDisabler(false);\n            call.call.clearBtnTimeout();\n\n            //If this is a join call we need to send join request\n            //onJoin() function is created at callController.js\n            if (isJoin === true) {\n                _webRtcManager.processRespond(call, function() {\n                    logger.info('Respond Call Update Event Successful. callId: ' + call.id);\n                    triggerCallState(callStates.RENEGOTIATION);\n                }, function(e) {\n                    logger.error('Respond Call Update Event FAILED: ' + e);\n                    triggerQueue(call);\n                }, isJoin);\n\n                call.call.onJoin();\n            } else {\n                _webRtcManager.processRespond(call, function() {\n                    logger.info('Respond Call Update Event Successful. callId: ' + call.id);\n                    switch (_callFSM.getCurrentState(call)) {\n                    case fsmState.REMOTE_HOLD:\n                        triggerCallState(callStates.ON_REMOTE_HOLD);\n                        break;\n                    case fsmState.BOTH_HOLD:\n                        triggerCallState(callStates.ON_HOLD);\n                        break;\n                    case fsmState.LOCAL_HOLD:\n                        triggerCallState(callStates.ON_HOLD);\n                        break;\n                    case fsmState.COMPLETED:\n                        triggerCallState(callStates.IN_CALL);\n                        break;\n                    }\n                }, function(e) {\n                    logger.error('Respond Call Update Event FAILED: ' + e);\n                    triggerQueue(call);\n                }, isJoin);\n            }\n            break;\n        case transferEvent.remotePranswer_fsm:\n            // Workaround for webrtc dtls and firefox pranswer support bug. Can be removed when fixed by browsers.\n            // https://code.google.com/p/webrtc/issues/detail?id=3349\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1004510\n            if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n                logger.info('Only first sessionProgress notification is processed, so ignoring this one.');\n                triggerQueue(call);\n            } else {\n                _webRtcManager.processAnswer(call,\n                    function() {\n                        triggerCallState(callStates.EARLY_MEDIA);\n                    },\n                    function(e) {\n                        logger.error('Process answer for session progress FAILED: ' + e);\n                        triggerQueue(call);\n                    });\n            }\n            break;\n        case transferEvent.joining_fsm:\n            //if client is handling the refers from referer we need to trigger the refers for partyB and partyC\n            if (_config.clientControlled === 'true') {\n                call.referCall = function(referTo, referredBy) {\n                    _callControlService.refer(call.id, referTo, referredBy, function() {\n                        logger.info('Joining Event Successful. callId: ' + call.id);\n                        self.delegateToCallFSM(call, fsmNotificationEvent.refer_JSL);\n                    }, function(errorStr) {\n                        logger.error('Joining Event FAILED!!' + errorStr);\n                    });\n                };\n            }\n            triggerQueue(call);\n            break;\n        case transferEvent.transferSuccess_fsm:\n            call.localStatusCode = LOCAL_STATUS_CODES.SESSION_COMPLETED;\n            call.localReasonText = LOCAL_REASON_TEXTS.SESSION_COMPLETED;\n            _callControlService.endCall(call.id, function() {\n                logger.info('callControlService.endCall successful. callId: ' + call.id);\n            }, function() {\n                logger.error('callControlService.endCall FAILED!! callId: ' + call.id);\n            });\n            triggerCallState(callStates.TRANSFERRED);\n            triggerCallState(callStates.ENDED);\n            clearResources(call);\n            logger.info('endCall successful. callId: ' + call.id);\n            break;\n        case transferEvent.stateReverted_fsm:\n            //enable clicking\n            call.call.setButtonDisabler(false);\n            call.call.clearBtnTimeout();\n\n            switch (_callFSM.getCurrentState(call)) {\n            case fsmState.REMOTE_HOLD:\n                triggerCallStateWithoutQueue(callStates.ON_REMOTE_HOLD);\n                break;\n            case fsmState.BOTH_HOLD:\n                triggerCallStateWithoutQueue(callStates.ON_HOLD);\n                break;\n            case fsmState.LOCAL_HOLD:\n                triggerCallStateWithoutQueue(callStates.ON_HOLD);\n                break;\n            case fsmState.COMPLETED:\n                triggerCallStateWithoutQueue(callStates.IN_CALL);\n                break;\n            default:\n                logger.error('CANNOT REVERT THE STATE: ' + _callFSM.getCurrentState(call) + '. callId: ' + call.id);\n                break;\n            }\n            break;\n        case transferEvent.glareCondition_fsm:\n            handleFailure(call, null, null, {\n                handler: call.lastUpdateRequest.handler,\n                args: call.lastUpdateRequest.args,\n                timeout: call.retryAfter\n            });\n            break;\n        default:\n            logger.error('Undefined transition event: ' + event + ' for ' + call.id);\n            triggerQueue(call);\n            break;\n\n        }\n\n    };\n\n    self.refreshVideoRenderer = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            _webRtcManager.refreshVideoRenderer(internalCall);\n        }\n    };\n\n    self.hasVideoDevice = function() {\n        return _webRtcManager.isVideoSourceAvailable();\n    };\n\n    self.hasAudioDevice = function() {\n        return _webRtcManager.isAudioSourceAvailable();\n    };\n\n    self.hasScreenSharing = function() {\n        return _webRtcManager.isScreenSourceAvailable();\n    };\n\n    self.getLocalVideoResolutions = function() {\n        return _webRtcManager.getLocalVideoResolutions();\n    };\n\n    self.getRemoteVideoResolutions = function() {\n        return _webRtcManager.getRemoteVideoResolutions();\n    };\n\n    self.isCallMuted = function(data) {\n        return _webRtcManager.isAudioMuted(calls[data.callid]);\n    };\n\n    /* DEPRECIATED */\n    self.isVideoNegotationAvailable = function(data) {\n        var call = calls[data.callid];\n        if (call.sdp) {\n            return _sdpParser.isSdpHasVideo(call.sdp);\n        } else {\n            return false;\n        }\n    };\n\n    self.isVideoNegotiationAvailable = function(data) {\n        var call = calls[data.callid];\n        if (call.sdp) {\n            return _sdpParser.isSdpHasVideo(call.sdp);\n        } else {\n            return false;\n        }\n    };\n\n    self.getRemoteVideoState = function(callid) {\n        var call = calls[callid];\n        if (call.sdp) {\n            return call.remoteVideoState;\n        } else {\n            return false;\n        }\n    };\n\n    self.isSendInitialVideoEnabled = function(data) {\n        var call = calls[data.callid];\n        if (call.sdp) {\n            return _sdpParser.isSdpVideoSendEnabled(call.sdp);\n        } else {\n            return false;\n        }\n    };\n\n    self.getHoldStateOfCall = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            return CALL_HOLD_STATES[_callFSM.getCurrentState(internalCall)];\n        }\n        return undefined;\n    };\n\n    self.getCustomParametersOfCall = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall && internalCall.customParameters) {\n            return internalCall.customParameters;\n        }\n        return [];\n    };\n\n    self.setCustomParametersOfCall = function(data) {\n        var internalCall = calls[data.callid];\n        if (internalCall) {\n            internalCall.customParameters = data.customParams;\n            return true;\n        }\n        return false;\n    };\n\n    self.canOriginatorSendLocalVideo = function(data) {\n        var call = calls[data.callid];\n        if (call) {\n            return _webRtcManager.canOriginatorSendLocalVideo(call);\n        }\n        return false;\n    };\n\n    self.canOriginatorReceiveRemoteVideo = function(data) {\n        var call = calls[data.callid];\n        if (call) {\n            return _webRtcManager.canOriginatorReceiveRemoteVideo(call);\n        }\n        return false;\n    };\n\n    self.getStreamById = function(data) {\n        return _webRtcManager.getStreamById(data.streamId);\n    };\n\n    self.removeStreamById = function(data) {\n        _webRtcManager.removeStreamById(data.streamId);\n    };\n\n    self.setSelectedMicrophoneId = function(data) {\n        _webRtcManager.setSelectedMicrophoneId(data.microphoneId);\n    };\n\n    self.setSelectedSpeakerId = function(data, onSuccess, onFailure) {\n        _webRtcManager.setSelectedSpeakerId(data.speakerId, onSuccess, onFailure);\n    };\n\n    self.setSelectedCameraId = function(data) {\n        _webRtcManager.setSelectedCameraId(data.cameraId);\n    };\n\n    self.getCameraList = function(params) {\n        _webRtcManager.getCameraList(function(cameraList) {\n            _utils.callFunctionIfExist(params.onSuccess, cameraList);\n        });\n    };\n\n    self.getMicrophoneList = function(params) {\n        _webRtcManager.getMicrophoneList(function(microphoneList) {\n            _utils.callFunctionIfExist(params.onSuccess, microphoneList);\n        });\n    };\n\n    self.getSpeakerList = function(params) {\n        _webRtcManager.getSpeakerList(function(speakerList) {\n            _utils.callFunctionIfExist(params.onSuccess, speakerList);\n        });\n    };\n\n    self.changeDevices = function(data, onSuccess, onFailure) {\n        var internalCall, internalCallId;\n\n        function reInviteFailureCallback() {\n            logger.info('reInviteFailureCallback.');\n            setNotificationStateOfCallToIdle(internalCall);\n            self.end({\n                callid: internalCall.id\n            }, function() {\n                logger.info('end success.');\n\n            });\n        }\n\n        function reInviteSuccessCallback() {\n            logger.info('reInviteSuccessCallback.');\n            self.delegateToCallFSM(internalCall, fsmNotificationEvent.deviceChange_GUI);\n            setNotificationStateOfCallToIdle(internalCall);\n            _webRtcManager.addLocalStream(internalCall);\n            _utils.callFunctionIfExist(onSuccess);\n        }\n\n        function createReOfferSuccessCallback(sdp) {\n            internalCall.sdp = sdp;\n            logger.info('createReOfferSuccessCallback: sdp ' + sdp);\n            setNotificationStateOfCallToBusy(internalCall);\n            _callControlService.reinvite(internalCall.id, sdp,\n                reInviteSuccessCallback, reInviteFailureCallback, internalCall.customParameters\n            );\n        }\n\n        function createReOfferFailureCallback(e) {\n            logger.error('[callManager.offer] Error : ' + e);\n        }\n\n        function getUserMediaFailureCallback(e) {\n            logger.error('[getUserMedia] Error : ' + e);\n            _utils.callFunctionIfExist(onFailure, e);\n        }\n\n        function getUserMediaSuccessCallback(mediaInfo) {\n            internalCall.isVideoSourceAllowed = mediaInfo.video;\n            _webRtcManager.storeLocalStreamToCall(internalCall, mediaInfo.id);\n\n            _webRtcManager.createReOffer(internalCall, createReOfferSuccessCallback, createReOfferFailureCallback, true);\n        }\n\n        function replaceStream(call) {\n            var opts = {\n                isVideoEnabled: self.isVideoNegotiationAvailable({callid: call.id})\n            };\n            // below line is added as a workaround for mobile clients.\n            // there must be one active camera stream on mobile,\n            // that's why the old one must be deleted before getting access to the new one.\n            _webRtcManager.deleteLocalStream(call);\n\n            self.getUserMedia(opts, getUserMediaSuccessCallback, getUserMediaFailureCallback);\n        }\n\n        if (data.callid) {\n            internalCall = calls[data.callid];\n            replaceStream(internalCall);\n        } else {\n            for (internalCallId in calls) {\n                if (internalCallId) {\n                    internalCall = calls[internalCallId];\n                    replaceStream(internalCall);\n                }\n            }\n        }\n    };\n\n    /**\n     * Forward the function call to the webRtcManager.\n     */\n    self.changeSpeaker = function(params, onSuccess, onFailure) {\n        _webRtcManager.changeSpeaker(params.speakerId, onSuccess, onFailure);\n    };\n\n    self.handleIncomingIceCandidate = function(data) {\n        logger.debug('handleIncomingIceCandidate  ');\n        var sessionParams = data.sessionParams;\n\n        if (!data.sessionParams) {\n            logger.warn('incomingIceCandidate received without any parameters');\n            return;\n        }\n\n        var internalCall = calls[sessionParams.sessionData],\n            candidates = sessionParams.iceCandidates;\n\n        if (!internalCall || !candidates){\n            logger.warn('incomingIceCandidate received without a call id or any candidates ');\n            return;\n        }\n\n        _webRtcManager.addRemoteCandidates(internalCall, candidates);\n    };\n\n\n    _notificationCallBacks.call = function handleIncomingCall(data) {\n        // disabling the notifications for verizon demo\n        if (!_config.anonymous) {\n            var sdp, actions, params, calls,\n                call = null,\n                callid = null,\n                options = {},\n                callParams = data.callNotificationParams || {},\n                dispositionParams = data.callDispositionParams,\n                sessionParams = data.sessionParams,\n                callerName, callerNumber, calleeNumber, primaryContact;\n\n            //Since session also include disposition use it as default\n            params = sessionParams ? sessionParams : (dispositionParams ? dispositionParams : null);\n            logger.info('params: ' + params);\n\n            // send ringing notify to Spidr once a call is received\n            if(_config.ringingFeedback) {\n                _callControlService.ringing(params.sessionData);\n            }\n\n            if (params) {\n                actions = params.actions;\n                logger.info('actions: ' + actions);\n                if (params.sessionData) {\n                    callid = params.sessionData;\n                    calls = self.getCalls();\n                    if (calls[callid] !== undefined) {\n                        logger.info('call already exists: ' + callid);\n                        return;\n                    }\n                    logger.info('sessionData: ' + callid);\n                }\n                if (actions) {\n                    options.reject = (actions.indexOf('reject', 0) > -1);\n                    options.forward = (actions.indexOf('forward', 0) > -1);\n                    options.answer = (actions.indexOf('answer', 0) > -1);\n                }\n                if (params.sdp) {\n                    sdp = params.sdp;\n                }\n            }\n\n            call = new self.IncomingCall(callid, options);\n\n            //Let's not overwrite values that are undefined\n\n            callerNumber = getProperty(callParams, 'callerDisplayNumber');\n            if(callerNumber) {\n                call.callerNumber = callerNumber;\n            }\n            callerName = getProperty(callParams, 'callerName');\n            if(callerName) {\n                call.callerName = callerName;\n            }\n\n            calleeNumber = getProperty(callParams, 'calleeDisplayNumber');\n            if(calleeNumber) {\n                call.calleeNumber = calleeNumber;\n            }\n\n            primaryContact = getProperty(callParams, 'primaryContact');\n            if (primaryContact) {\n                call.primaryContact = primaryContact.split(';')[0];\n            }\n\n            // Track the remote participant information when a call is received.\n            call.remoteParticipant = {\n                displayNumber: getProperty(callParams, 'callerDisplayNumber'),\n                displayName: getProperty(callParams, 'callerName')\n            };\n\n            // Note: Some of our clients (KCS) need access to all the custom parameters received on an\n            // incoming call. Here we add a catch-all rawParameters that includes everything passed in.\n            call.rawParameters = params;\n\n            self.cerateIncomingCallInFSM(call, sdp);\n\n            //notify the callback\n            _utils.callFunctionIfExist(_core.call.onReceived, call);\n        }\n    };\n\n    function handleCallControlNotification(type, data) {\n        var sessionParams = data.sessionParams;\n        var callNotificationParams = data.callNotificationParams;\n        logger.info('CallControl notification received ' + type + ' sessionData:' + sessionParams.sessionData);\n        if (sessionParams.referTo) {\n            logger.info('CallControl notification received: ' + 'referTo:' + sessionParams.referTo + ' referredBy: ' + sessionParams.referredBy);\n        }\n        if (sessionParams) {\n            self.onNotificationEvent(type, sessionParams, callNotificationParams);\n        }\n    }\n\n    self.handleReplacesFailure = function(newlyCreatedCall) {\n        self.delegateToCallFSM(newlyCreatedCall, fsmNotificationEvent.callEnd_Notify);\n        self.sendRejectCallReplace(newlyCreatedCall);\n    };\n\n    self.handleReplacesWebrtcFailure = function(newlyCreatedCall) {\n        handleWebrtcFailure(newlyCreatedCall);\n        self.sendRejectCallReplace(newlyCreatedCall);\n    };\n\n    self.sendRejectCallReplace = function(newlyCreatedCall) {\n        _callControlService.rejectCallReplace(newlyCreatedCall, function() {\n            logger.info('[NotificationCallBacks.startCallReplace] rejectCallReplace has sent');\n        }, function() {\n            logger.info('[NotificationCallBacks.startCallReplace] rejectCallReplace could not sent');\n        });\n    };\n\n    self.createNewCall = function(notificationWithSdp, newlyCreatedCallId) {\n        if (notificationWithSdp) {\n            // notification with sdp is received, need to process the sdp and create an answer\n            return new self.IncomingCall(newlyCreatedCallId);\n        } else {\n            // slow start notification is received, need to create a new offer\n            return new self.OutgoingCall(newlyCreatedCallId);\n        }\n    };\n\n    self.handleStartCallReplaceNotification = function(data) {\n        var newlyCreatedSessionParams = data.sessionParams, // newly created session params\n            transferredCallId = data.replaces, // old session params that is being replaced by sessionParams\n            newlyCreatedCall = {},\n            remoteParty = data.remoteParty,\n            newlyCreatedCallId = newlyCreatedSessionParams.sessionData, // getting transfer target address\n            notificationWithSdp = !!newlyCreatedSessionParams.sdp;\n\n        newlyCreatedCall.call = self.createNewCall(notificationWithSdp, newlyCreatedCallId);\n        if (transferredCallId !== null && remoteParty !== null) {\n            logger.info('[NotificationCallBacks.handleStartCallReplaceNotification] notification received sessionData:' + newlyCreatedCallId);\n            var calls = self.getCalls(); // getting callid that is newly created\n            if (calls[newlyCreatedCallId] === undefined && calls[transferredCallId] !== undefined) {\n                // can be getting call object that is about to transferring\n                var transferredCall = calls[transferredCallId],\n                    transferredCallState = _callFSM.getCurrentState(transferredCall),\n                    isSendInitialVideo = self.isSendInitialVideoEnabled({\n                        'callid': transferredCallId\n                    });\n                newlyCreatedCall.id = newlyCreatedCallId;\n                newlyCreatedCall.sdp = newlyCreatedSessionParams.sdp;\n                newlyCreatedCall.currentState = fsmState.REPLACING;\n                _utils.callFunctionIfExist(_core.call.onCallReplaceReceived, newlyCreatedCall, transferredCall);\n                self.delegateToCallFSM(newlyCreatedCall, fsmNotificationEvent.startCallReplace_Notify);\n\n                if ((transferredCallState === fsmState.COMPLETED || transferredCallState === fsmState.REMOTE_HOLD)) {\n                    var opts = {\n                            isVideoEnabled: isSendInitialVideo\n                        }, successCallback = function () {\n                            // if previous call is an active call, mute it\n                            if (transferredCallState === fsmState.COMPLETED) {\n                                transferredCall.call.mute();\n                            }\n                            _callControlService.acceptCallReplace(newlyCreatedCall, function() {\n                                logger.info('[NotificationCallBacks.startCallReplace] onSuccess');\n                                newlyCreatedCall.callerNumber = remoteParty;\n                                newlyCreatedCall.replacingCallId = transferredCallId; // this will be used for unmuting previous call, when there occurs error while replacing call\n                                calls[newlyCreatedCallId] = newlyCreatedCall;\n                                setTimeout(function() {\n                                    _webRtcManager.addLocalStream(newlyCreatedCall);\n                                }, 10);\n                            }, function() {\n                                logger.info('[NotificationCallBacks.startCallReplace] onFailure');\n                                // unmute previousCall if previous call is active call, unmute it\n                                if (transferredCallState === fsmState.COMPLETED) {\n                                    transferredCall.call.unmute();\n                                }\n                                self.handleReplacesFailure(newlyCreatedCall);\n                            },\n                            data.customParameters);\n                        }, failureCallback = function () {\n                            logger.error('[NotificationCallBacks.handleStartCallReplaceNotification] webrtc error');\n                            self.handleReplacesWebrtcFailure(newlyCreatedCall);\n                        };\n\n                    self.getUserMedia(opts, function getUserMediaSuccessCallback(mediaInfo) {\n                        newlyCreatedCall.isVideoSourceAllowed = mediaInfo.video;\n                        _webRtcManager.storeLocalStreamToCall(newlyCreatedCall, mediaInfo.id);\n                        if (notificationWithSdp) {\n                            _webRtcManager.createAnswer(newlyCreatedCall, successCallback, failureCallback, isSendInitialVideo);\n                        } else {\n                            _webRtcManager.createOffer(newlyCreatedCall, successCallback, failureCallback, isSendInitialVideo);\n                        }\n                    }, function getUserMediaFailureCallback() {\n                        logger.error('[NotificationCallBacks.handleStartCallReplaceNotification] getUserMediaFailureCallback Error');\n                        self.handleReplacesFailure(newlyCreatedCall);\n                    });\n                } else {\n                    logger.info('[NotificationCallBacks.handleStartCallReplaceNotification] transferredCall is not in appropriate state: ' + transferredCallState);\n                    self.handleReplacesFailure(newlyCreatedCall);\n                }\n            } else {\n                logger.info('[NotificationCallBacks.handleStartCallReplaceNotification] newlyCreatedCallId already exists: ' + newlyCreatedCallId + ' or transferredCallId does not exists: ' + transferredCallId);\n                self.handleReplacesFailure(newlyCreatedCall);\n            }\n        } else {\n            logger.info('[NotificationCallBacks.handleStartCallReplaceNotification] replaces or remoteParty values is null');\n            self.handleReplacesFailure(newlyCreatedCall);\n        }\n    };\n\n    _notificationCallBacks.ringing = function(data) {\n        handleCallControlNotification(fsmNotificationEvent.ringing_Notify, data);\n    };\n\n    _notificationCallBacks.sessionProgress = function(data) {\n        //We are discarding the sessionProgress if the SDP is empty\n        if (data.sessionParams.sdp !== '') {\n            handleCallControlNotification(fsmNotificationEvent.sessionProgress, data);\n        } else {\n            logger.info('Warning: SDP of sessionProgress is empty.');\n        }\n    };\n\n    _notificationCallBacks.startCallUpdate = function handleStartCallUpdateNotification(data) {\n\n        // Helper function for getting info from callParams.\n        function getCallerInfo(callParams) {\n            var userId = callParams.callerDisplayNumber;\n            if(userId.indexOf('@') === -1) {\n                // Make sure the userId has a domain.\n                userId += _core.getDomain();\n            }\n            return {\n                // callParams has both number and name for caller.\n                displayNumber: userId,\n                displayName: callParams.callerName\n            };\n        }\n\n        // Helper function for getting info from callParams.\n        function getCalleeInfo(callParams) {\n            var userId = callParams.calleeDisplayNumber;\n            if(userId.indexOf('@') === -1) {\n                // Make sure the userId has a domain.\n                userId += _core.getDomain();\n            }\n            return {\n                // callParams only has number for callee.\n                displayNumber: userId\n            };\n        }\n\n        var sdp = data.sessionParams.sdp,\n            notificationEvent = fsmNotificationEvent.startCallUpdate_slowStart_Notify,\n\n            callid = data.sessionParams.sessionData,\n            callParams = data.callNotificationParams || {},\n            internalCall = calls[callid],\n            remoteCallParams = {\n                RemoteDisplayName: '',\n                RemoteDisplayNumber: ''\n            };\n\n        if (sdp) {\n            _sdpParser.init(sdp);\n            if (_sdpParser.isRemoteHold()) {\n                notificationEvent = fsmNotificationEvent.startCallUpdate_remoteHold_Notify;\n            } else {\n                notificationEvent = fsmNotificationEvent.startCallUpdate_remoteOffer_Notify;\n            }\n        }\n        if (internalCall) {\n            if (!internalCall.remoteDisplayNumber) {\n                internalCall.remoteDisplayNumber = getProperty(callParams, 'callerDisplayNumber');\n            }\n\n            if (internalCall.remoteDisplayNumber !== getProperty(callParams, 'callerDisplayNumber')) {\n                remoteCallParams.RemoteDisplayName = getProperty(callParams, 'callerName');\n                remoteCallParams.RemoteDisplayNumber = getProperty(callParams, 'callerDisplayNumber');\n\n                logger.info('Remote User has changed from :' + internalCall.call.callerName + '<' +\n                    internalCall.call.callerNumber + '> to ' + remoteCallParams.RemoteDisplayName + '<' +\n                    remoteCallParams.RemoteDisplayNumber + '>');\n\n                internalCall.remoteDisplayNumber = getProperty(callParams, 'callerDisplayNumber');\n                //This is for consultative transfer with slow start\n                internalCall.remoteEndPointChanged = true;\n\n                // Update the exposed call as well.\n                internalCall.call.calleeNumber = getProperty(callParams, 'calleeDisplayNumber');\n                internalCall.call.callerName = getProperty(callParams, 'callerName');\n                internalCall.call.callerNumber = getProperty(callParams, 'callerDisplayNumber');\n\n                _utils.callFunctionIfExist(_core.call.onRemoteEndPointChange, remoteCallParams);\n            }\n\n            var currentUser = _core.getUser();\n            var remoteParticipant;\n            // Outgoing call means the remote pariticpant is the callee.\n            if(internalCall.call.isOutgoing) {\n\n                // Double check that current user is the caller ...SPiDR switches\n                //      them during a transfer operation.\n                if(currentUser.indexOf(callParams.callerDisplayNumber) > -1) {\n                    remoteParticipant = getCalleeInfo(callParams);\n                } else {\n                    remoteParticipant = getCallerInfo(callParams);\n                }\n            } else {\n                // Incoming call means the remote participant is the caller.\n\n                // Double check that current user is the callee ...SPiDR switches\n                //      them during a transfer operation.\n                if(currentUser.indexOf(callParams.calleeDisplayNumber) > -1) {\n                    remoteParticipant = getCallerInfo(callParams);\n                } else {\n                    remoteParticipant = getCalleeInfo(callParams);\n                }\n            }\n\n            logger.info('Call remote participant:', remoteParticipant);\n\n            // If the remote participant changed, update it and notify the application.\n            if(remoteParticipant.displayNumber !== internalCall.call.remoteParticipant.displayNumber) {\n\n                // Edge-case: In a transfer operation, SPiDR switches the caller and callee users,\n                //      which triggers the \"changed remote\" logic. Ignore that case.\n                if(currentUser !== remoteParticipant.displayNumber) {\n                    internalCall.call.remoteParticipant = remoteParticipant;\n                    // Set a flag on the call to be used by the FSM.\n                    internalCall.remoteParticipantChanged = true;\n                    _utils.callFunctionIfExist(internalCall.call.onRemoteEndPointChange, remoteParticipant);\n                }\n            }\n        }\n\n        handleCallControlNotification(notificationEvent, data);\n    };\n\n    _notificationCallBacks.respondCallUpdate = function handleRespondCallUpdateNotification(data) {\n        if (data.sessionParams && data.sessionParams.retryAfter) {\n            handleCallControlNotification(fsmNotificationEvent.respondCallUpdate_glareCondition_Notify, data);\n        } else {\n            var sdp = data.sessionParams.sdp,\n                callid = data.sessionParams.sessionData,\n                internalCall = calls[callid],\n                notificationEvent = fsmNotificationEvent.respondCallUpdate_Notify;\n            if (internalCall && internalCall.previousState === fsmState.REMOTE_HOLD &&\n                _sdpParser.isAudioSdpDirectionSendonly(sdp)\n            ) {\n                notificationEvent = fsmNotificationEvent.respondCallUpdate_Notify_sendOnly;\n            }\n            handleCallControlNotification(notificationEvent, data);\n        }\n    };\n\n    _notificationCallBacks.sessionComplete = function handleSssionCompleteNotification(data) {\n        handleCallControlNotification(fsmNotificationEvent.sessionComplete_Notify, data);\n    };\n\n    _notificationCallBacks.sessionFail = function handleSessionFailNotification(data) {\n        handleCallControlNotification(fsmNotificationEvent.sessionFail_Notify, data);\n    };\n\n    _notificationCallBacks.callEnd = function handleCallEndNotification(data) {\n        handleCallControlNotification(fsmNotificationEvent.callEnd_Notify, data);\n    };\n\n    _notificationCallBacks.trying = function handleTryingNotification(data) {\n        handleCallControlNotification(fsmNotificationEvent.trying_Notify, data);\n    };\n\n    _notificationCallBacks.callCancel = function handleCallCancelNotification(data) {\n        handleCallControlNotification(fsmNotificationEvent.callCancel_Notify, data);\n    };\n\n    _notificationCallBacks.accepted = function handleAcceptedNotification(data) {\n        handleCallControlNotification(fsmNotificationEvent.accepted_Notify, data);\n    };\n\n    // here make parsing operations and then send sessionParams to the callManeger\n    _notificationCallBacks.startCallReplace = function(data) {\n        logger.debug('startCallReplace received: sdp: ' + data.sessionParams.sdp);\n        self.handleStartCallReplaceNotification(data);\n    };\n\n    _notificationCallBacks.IceCandidate = function(data) {\n        self.handleIncomingIceCandidate(data);\n    };\n\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.DEVICE_SUBSCRIPTION_STARTED, onSubscriptionReEstablished);\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.CONNECTION_REESTABLISHED, onConnectionLost);\n    _globalBroadcaster.subscribe(CONSTANTS.EVENT.NOTIFICATION_CHANNEL_LOST, onConnectionLost);\n\n    //@{test-methods}\n    self.setCalls = function(_calls) {\n        calls = _calls;\n    };\n    self.setNotificationState = function(_notificationState) {\n        this.notificationState = _notificationState;\n    };\n\n    self.getStartCallQueue = function() {\n        return startCallQueue;\n    };\n    //@{test-methods}\n}\n","import {getProperty} from '../../utils';\nimport CONSTANTS from '../../constants';\n\nexport function CallControlServiceImpl({\n    Http: _server,\n    LogManager: _logManager,\n    Cache: _cache,\n    Config: _config,\n    SdpPipeline: _sdpPipeline\n}) {\n\n    var logger = _logManager.getLogger('callControlService');\n\n    function runSdpPipeline(callid, sdp, operation, type) {\n        return _sdpPipeline(callid, sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SEND_LOCAL, type);\n    }\n\n    function addNotificationChannel(data) {\n        if (_config.anonymous && _cache.getItem('NotificationId')) {\n            data.callMeRequest.notifyChannelId = _cache.getItem('NotificationId');\n        }\n    }\n\n    function errorParser(jqXHR) {\n        if (jqXHR && jqXHR.responseText) {\n            return JSON.parse(jqXHR.responseText).callControlResponse;\n        }\n    }\n\n    this.startCall = function(from, to, sdp, onSuccess, onFailure, customParameters) {\n        const modifiedSdp = runSdpPipeline(undefined, sdp, CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n        logger.info('Call Start Function: ' + from + ' --> ' + to);\n\n        // response of the startCall contains callid/sessionData\n        // callMe and callControl returns same response but object types have different namse\n        function parseCallStart(data) {\n            var callid, response = _config.anonymous ? data.callMeResponse : data.callControlResponse;\n            if (response) {\n                callid = response.sessionData;\n            }\n            return callid;\n        }\n\n        function dataType() {\n            var data;\n            if (_config.anonymous) {\n                data = {\n                    'callMeRequest': {\n                        'type': 'callStart',\n                        'from': from,\n                        'to': to,\n                        'sdp': modifiedSdp\n                    }\n                };\n                if (customParameters) {\n                    data.callMeRequest.customParameters = customParameters;\n                }\n            } else {\n                data = {\n                    'callControlRequest': {\n                        'type': 'callStart',\n                        'from': from,\n                        'to': to,\n                        'sdp': modifiedSdp\n                    }\n                };\n                if (customParameters) {\n                    data.callControlRequest.customParameters = customParameters;\n                }\n                if (_config.earlyMedia === true ||\n                    _config.callReplace === true) {\n                    data.callControlRequest.supported = [];\n                }\n                if (_config.earlyMedia === true) {\n                    data.callControlRequest.supported.push('earlymedia');\n                }\n                if (_config.callReplace === true) {\n                    data.callControlRequest.supported.push('replacecall');\n                }\n            }\n            return data;\n        }\n\n        var data = dataType(),\n            realm = _config.realm;\n        addNotificationChannel(data);\n\n        _server.sendPostRequest({\n            'url': _server.getWAMUrl(1, _config.anonymous ? '/callMe' + (realm ? ('?tokenrealm=' + realm) : '') : '/callControl'),\n            'data': data\n        },\n        onSuccess,\n        onFailure,\n        parseCallStart,\n        errorParser\n        );\n    };\n\n    this.audit = function(callid, onSuccess, onFailure) {\n        var data, realm = _config.realm;\n\n        if (_config.anonymous) {\n            data = {\n                'callMeRequest': {\n                    'type': 'audit'\n                }\n            };\n        } else {\n            data = {\n                'callControlRequest': {\n                    'type': 'audit'\n                }\n            };\n        }\n\n        //TODO JF verify if we need to always do that and not only for callMe realm;\n        if (realm) {\n            callid = callid.split('%0A')[0];\n        }\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid + (realm ? ('?tokenrealm=' + realm) : '')),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.hold = function(callid, sdp, onSuccess, onFailure, customParameters) {\n        const modifiedSdp = runSdpPipeline(callid, sdp, CONSTANTS.WEBRTC.SDP.OPERATION.HOLD, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n        logger.info('Hold Function : sdp : ' + modifiedSdp);\n        var data, realm = _config.realm;\n\n        if (_config.anonymous) {\n            data = {\n                'callMeRequest':\n                {\n                    'type':'startCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callMeRequest.customParameters = customParameters;\n            }\n        }\n        else {\n            data = {\n                'callControlRequest':\n                {\n                    'type':'startCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callControlRequest.customParameters = customParameters;\n            }\n        }\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid + (realm?('?tokenrealm=' + realm):'')),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.unhold = function(callid, sdp, onSuccess, onFailure, customParameters) {\n        const modifiedSdp = runSdpPipeline(callid, sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n        logger.info('UnHold Function : sdp : ' + modifiedSdp);\n        var data, realm = _config.realm;\n\n        if (_config.anonymous) {\n            data = {\n                'callMeRequest':\n                {\n                    'type':'startCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callMeRequest.customParameters = customParameters;\n            }\n        }\n        else {\n            data = {\n                'callControlRequest':\n                {\n                    'type':'startCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callControlRequest.customParameters = customParameters;\n            }\n        }\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid + (realm?('?tokenrealm=' + realm):'')),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.reinvite = function(callid, sdp, onSuccess, onFailure, customParameters) {\n        const modifiedSdp = runSdpPipeline(callid, sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n        logger.info('reinvite Function : sdp : ' + modifiedSdp);\n\n        var data, realm = _config.realm;\n\n        if (_config.anonymous) {\n            data = {\n                'callMeRequest':\n                {\n                    'type':'startCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callMeRequest.customParameters = customParameters;\n            }\n        }\n        else {\n            data = {\n                'callControlRequest':\n                {\n                    'type':'startCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callControlRequest.customParameters = customParameters;\n            }\n        }\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid + (realm?('?tokenrealm=' + realm):'')),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.respondCallUpdate = function(callid, sdp, onSuccess, onFailure, customParameters, operation=CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE) {\n        const modifiedSdp = runSdpPipeline(callid, sdp, operation, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n        logger.info('Respond Call Update Function : sdp : ' + modifiedSdp);\n        var data, realm = _config.realm;\n\n        if (_config.anonymous) {\n            data = {\n                'callMeRequest':\n                {\n                    'type':'respondCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callMeRequest.customParameters = customParameters;\n            }\n        }\n        else {\n            data = {\n                'callControlRequest':\n                {\n                    'type':'respondCallUpdate',\n                    'sdp': modifiedSdp\n                }\n            };\n            if (customParameters) {\n                data.callControlRequest.customParameters = customParameters;\n            }\n        }\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid + (realm?('?tokenrealm=' + realm):'')),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.respondToRemoteHold = function(callid, sdp, onSuccess, onFailure, customParameters) {\n        this.respondCallUpdate(callid, sdp, onSuccess, onFailure, customParameters, CONSTANTS.WEBRTC.SDP.OPERATION.HOLD);\n    };\n\n    this.respondToRemoteUnhold = function(callid, sdp, onSuccess, onFailure, customParameters) {\n        this.respondCallUpdate(callid, sdp, onSuccess, onFailure, customParameters, CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD);\n    };\n\n    this.join = function(firstSessionData, secondSessionData, sdp, onSuccess, onFailure, customParameters) {\n        const modifiedSdp = runSdpPipeline(undefined, sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n        logger.info('Join Function : sdp : ' + modifiedSdp);\n\n        function parseJoin(data) {\n            var callid, response = data.callControlResponse;\n\n            if (response) {\n                callid = response.sessionData;\n            }\n\n            return callid;\n        }\n\n        var data = {\n            'callControlRequest': {\n                'type': 'join',\n                'firstSessionData': firstSessionData,\n                'secondSessionData': secondSessionData,\n                'sdp': modifiedSdp\n            }\n        };\n        if (customParameters) {\n            data.callControlRequest.customParameters = customParameters;\n        }\n\n        if (_config.clientControlled === 'true') {\n            data.callControlRequest.clientControlled = 'true';\n        }\n\n\n        _server.sendPostRequest({\n            'url': _server.getWAMUrl(1, '/callControl/'),\n            'data': data\n        },\n        onSuccess,\n        onFailure,\n        parseJoin,\n        errorParser\n        );\n    };\n\n    this.refer = function(callid, referTo, referredBy, onSuccess, onFailure) {\n        logger.info('Refer Function : refer to: ' + referTo);\n        var data = {\n            'callControlRequest': {\n                'type': 'refer',\n                'from': referredBy,\n                'to': referTo\n            }\n        };\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, '/callControl/callSessions/' + callid),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.endCall = function(callid, onSuccess, onFailure, localReasonText) {\n        var realm = _config.realm;\n        logger.info('endCall Function: ' + callid);\n\n        var endUrl = (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid;\n        var queryString = (localReasonText ? ('?reasonText=' + localReasonText) : '');\n        if(realm) {\n            let delimiter = queryString ? '&' : '?';\n            queryString += (realm ? (delimiter + 'tokenrealm=' + realm) : '');\n        }\n\n        _server.sendDeleteRequest({\n            'url': _server.getWAMUrl(1, endUrl + queryString),\n            'data': {}\n        },\n        onSuccess,\n        onFailure,\n        null,\n        errorParser\n        );\n    };\n\n    this.answerCall = function(callid, sdp, onSuccess, onFailure, customParameters) {\n        const modifiedSdp = runSdpPipeline(callid, sdp, CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n        logger.info('Answer Call Function : sdp : ' + modifiedSdp);\n\n        var data = {\n            'callControlRequest': {\n                'type': 'callAnswer',\n                'sdp': modifiedSdp\n            }\n        };\n        if (customParameters) {\n            data.callControlRequest.customParameters = customParameters;\n        }\n\n        if (_config.callReplace === true) {\n            data.callControlRequest.supported = ['replacecall'];\n        }\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, '/callControl/callSessions/' + callid),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    function makeRequest(action, sessionData, onSuccess, onFailure, address) {\n        logger.info('makeRequest Function with action : ' + action);\n        var data = {\n            'callDispositionRequest': {\n                'action': action,\n                'sessionData': sessionData\n            }\n        };\n        if (address) {\n            data.callDispositionRequest.address = address;\n        }\n        _server.sendPostRequest({\n            'url': _server.getWAMUrl(1, '/calldisposition'),\n            'data': data\n        },\n        onSuccess,\n        onFailure,\n        null,\n        errorParser\n        );\n    }\n\n    this.sendCustomParameters = function(callid, customParameters, onSuccess, onFailure) {\n        logger.info('sendCustomParameters Function with parameters : ' + customParameters);\n        var data, realm = _config.realm;\n        if (_config.anonymous) {\n            data = {\n                'callMeRequest': {\n                    'type': 'sendCustomHeaders',\n                    'customParameters': customParameters\n                }\n            };\n        } else {\n            data = {\n                'callControlRequest': {\n                    'type': 'sendCustomHeaders',\n                    'customParameters': customParameters\n                }\n            };\n        }\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid + (realm?('?tokenrealm=' + realm):'')),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n\n    this.reject = function(callid, onSuccess, onFailure) {\n        var dummy;\n        logger.info('Reject Function: ' + callid);\n        makeRequest('reject', callid, onSuccess, onFailure, dummy);\n    };\n\n\n    this.forward = function(callid, address, onSuccess, onFailure) {\n        logger.info('Forward Function : address: ' + address);\n        makeRequest('forward', callid, onSuccess, onFailure, address);\n    };\n\n    this.transfer = function(callid, address, sessiondataToTransfer, onSuccess, onFailure) {\n        logger.info('Call Transfer Function : target address: ' + address);\n        var data = {\n            'callControlRequest': {\n                'type': 'transfer',\n                'address': address,\n                'sessionData': sessiondataToTransfer\n            }\n        };\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, '/callControl/callSessions/' + callid),\n            'data': data\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.clickToCall = function(callingParty, calledParty, onSuccess, onFailure) {\n        var data = {\n            'clickToCallRequest': {\n                'callingParty': callingParty,\n                'calledParty': calledParty\n            }\n        };\n        _server.sendPostRequest({\n            'url': _server.getWAMUrl(1, '/clicktocall'),\n            'data': data\n        },\n        onSuccess,\n        onFailure\n        );\n    };\n\n    this.getIMRN = function(realm, source, destination, onSuccess, onFailure) {\n        logger.info('(Wam Call) getIMRN Function ');\n\n        function parseIMRNResponse(IMRNdata) {\n            var receivedIMRN;\n            if (IMRNdata && IMRNdata.imrnResponse) {\n                receivedIMRN = getProperty(IMRNdata.imrnResponse, 'imrn');\n            }\n            return receivedIMRN;\n        }\n\n        if (destination.match('@')) {\n            if (destination.split(':')[0] !== 'sip') {\n                destination = 'sip:' + destination;\n            }\n        }\n\n        var data = {\n            'imrnRequest': {\n                'realm': realm,\n                'sourceAddress': source,\n                'destinationAddress': destination\n            }\n        };\n        _server.sendPostRequest({\n            'url': _server.getWAMUrl(1, '/imrn'),\n            'data': data\n        },\n        onSuccess,\n        onFailure,\n        parseIMRNResponse\n        );\n    };\n\n    this.acceptCallReplace = function(callData, onSuccess, onFailure, customParameters) {\n        function parseAcceptCallReplaceData(data) {\n            logger.info('acceptCallReplace.data: ' + data);\n            return data;\n        }\n\n        function dataType() {\n            var data;\n            data = {\n                'callControlRequest': {\n                    'type': 'acceptCallReplace',\n                    'sdp': callData.sdp\n                }\n            };\n            if (customParameters) {\n                data.callControlRequest.customParameters = customParameters;\n            }\n\n            return data;\n        }\n        var data = dataType();\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, '/callControl/callSessions/' + callData.id),\n            'data': data\n        },\n        onSuccess,\n        onFailure,\n        parseAcceptCallReplaceData,\n        errorParser\n        );\n    };\n\n    this.rejectCallReplace = function(callData, onSuccess, onFailure) {\n        function parseRejectCallReplaceData(data) {\n            logger.info('rejectCallReplace.data: ' + data);\n            return data;\n        }\n\n        function dataType() {\n            var data;\n            data = {\n                'callControlRequest': {\n                    'type': 'rejectCallReplace',\n                }\n            };\n            return data;\n        }\n        var data = dataType();\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, '/callControl/callSessions/' + callData.id),\n            'data': data\n        },\n        onSuccess,\n        onFailure,\n        parseRejectCallReplaceData,\n        errorParser\n        );\n    };\n\n    this.ringing = function(callid) {\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, '/callControl/callSessions/' + callid),\n            'data': {\n                'callControlRequest': {\n                    'type': 'ringing'\n                }\n            }\n        }, null, null, null, errorParser);\n    };\n\n    this.updateIceCandidate = function(callData, onSuccess, onFailure) {\n        var realm = _config.realm;\n\n        _server.sendPutRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callData.id + (realm ? ('?tokenrealm=' + realm) : '')),\n            'data': {\n                'callControlRequest': {\n                    'type': 'updateIceCandidate',\n                    'iceCandidates': callData.iceCandidates\n                }\n            }\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n    this.getSession = function(callid, onSuccess, onFailure) {\n        _server.sendGetRequest({\n            'url': _server.getWAMUrl(1, (_config.anonymous ? '/callMe/callSessions/' : '/callControl/callSessions/') + callid)\n        }, onSuccess, onFailure, null, errorParser);\n    };\n\n}\n","import {CallImpl} from './call';\n\nexport default {\n    Call: container => new CallImpl(container)\n};\n","import adaptorModule from './adaptor/module';\nimport decoratorModule from './decorator/module';\nimport modelModule from './model/module';\n\nimport { WebRtcManager } from './webRtcManager';\nimport { WebRtcAdaptorFactory } from './webRtcAdaptorFactory';\n\n\nexport default {\n    ... adaptorModule,\n    ... decoratorModule,\n    ... modelModule,\n\n    WebRtcAdaptorFactory: container => new WebRtcAdaptorFactory(container),\n    WebRtcManager: container => new WebRtcManager(container)\n};\n","import {WebRtcAdaptorImpl} from './webRtcAdaptor';\nimport {WebRtcChromeAdaptorImpl} from './webRtcChromeAdaptor';\nimport {WebRtcContainerAdaptorImpl} from './webRtcContainerAdaptor';\nimport {WebRtcFirefoxAdaptorImpl} from './webRtcFirefoxAdaptor';\nimport {WebRtcFirefoxEsrAdaptorImpl} from './webRtcFirefoxEsrAdaptor';\nimport {WebRtcPluginAdaptorImpl} from './webRtcPluginAdaptor';\nimport {WebRtcPluginv22AdaptorImpl} from './webRtcPluginv22Adaptor';\nimport {WebRtcPluginv31AdaptorImpl} from './webRtcPluginv31Adaptor';\n\nexport default {\n    WebRtcAdaptorBaseFactory: container =>\n        (decorator, model) =>\n            new WebRtcAdaptorImpl({decorator, model, ...container }),\n\n    WebRtcChromeAdaptorFactory: container =>\n        function(base, decorator, model) {\n\n            decorator = decorator || container.WebRtcChromeDecoratorFactory;\n            model = model || container.WebRtcChromeAdaptorModelFactory();\n            base = base || container.WebRtcAdaptorBaseFactory(decorator, model);\n\n            return new WebRtcChromeAdaptorImpl({ base, decorator, model, ...container });\n        },\n\n    WebRtcContainerAdaptorFactory: container =>\n        function(base, decorator, model) {\n\n            decorator = decorator || container.WebRtcChromeDecoratorFactory;\n            model = model || container.WebRtcChromeAdaptorModelFactory();\n            base = base || container.WebRtcAdaptorBaseFactory(decorator, model);\n\n            return new WebRtcContainerAdaptorImpl({ base, decorator, model, ...container });\n        },\n\n    WebRtcFirefoxAdaptorFactory: container =>\n        function(base, decorator, model) {\n\n            decorator = decorator || container.WebRtcFirefoxDecoratorFactory;\n            model = model || container.WebRtcFirefoxAdaptorModelFactory();\n            base = base || container.WebRtcAdaptorBaseFactory(decorator, model);\n\n            return new WebRtcFirefoxAdaptorImpl({ base, decorator, model, ...container });\n        },\n\n    WebRtcFirefoxEsrAdaptorFactory: container =>\n        function(base, decorator, model) {\n\n            decorator = decorator || container.WebRtcFirefoxDecoratorFactory;\n            model = model || container.WebRtcFirefoxAdaptorModelFactory();\n            base = base || container.WebRtcFirefoxAdaptorFactory(undefined, decorator, model);\n\n            return new WebRtcFirefoxEsrAdaptorImpl({ base, decorator, model, ...container });\n        },\n\n    WebRtcPluginAdaptorFactory: container =>\n        function(base, decorator, model) {\n\n            decorator = decorator || container.WebRtcDecoratorFactory;\n            model = model || container.WebRtcPluginAdaptorModelFactory();\n            base = base || container.WebRtcAdaptorBaseFactory(decorator, model);\n\n            return new WebRtcPluginAdaptorImpl({ base, decorator, model, ...container });\n        },\n\n    WebRtcPluginv22AdaptorFactory: container =>\n        function(base, decorator, model) {\n\n            decorator = decorator || container.WebRtcDecoratorFactory;\n            model = model || container.WebRtcPluginAdaptorModelFactory();\n            base = base || container.WebRtcPluginAdaptorFactory(decorator, model);\n\n            return new WebRtcPluginv22AdaptorImpl({ base, decorator, model, ...container });\n        },\n\n    WebRtcPluginv31AdaptorFactory: container =>\n        function(base, decorator, model) {\n\n            decorator = decorator || container.WebRtcDecoratorFactory;\n            model = model || container.WebRtcPluginAdaptorModelFactory();\n            base = base || container.WebRtcPluginAdaptorFactory(base, decorator, model);\n\n            return new WebRtcPluginv31AdaptorImpl({ base, decorator, model, ...container });\n        },\n};\n","import CONSTANTS from '../../constants';\nimport {mediaErrors} from '../../call/call';\nimport {getInteger, compose, makeSafeForCSS} from '../../utils';\nimport errors from '../../errors';\n\nexport function WebRtcAdaptorImpl({\n    decorator: _decorator,\n    model: _model,\n    LogManager: _logManager,\n    Utils: _utils,\n    SdpParser: _sdpParser,\n    Cache: _cache,\n    Core: _fcs,\n    Config: _config,\n    SdpPipeline: _sdpPipeline\n}) {\n    /*\n     * ABE-832: On MAC OS, Safari browser version 6.1 doesn't recognize array\n     * indices of integer type. Therefore, all [0] calls are changed to [\"0\"].\n     * All other browser types function correctly with both integer and string\n     * indices.\n     *\n     * Right now, this only affects arrays coming from the plugin.\n     *\n     * That's why we use zero = \"0\". Using \"0\" directly didn't work because\n     * minification replaces it with 0.\n     */\n    var self = this,\n        logger = _logManager.getLogger('WebRtcAdaptorImpl'),\n        zero = '0',\n        peerId = 0;\n\n    logger.debug('WebRtcAdaptor initializing');\n\n    compose(_model, self);\n\n    self.performSdpWorkaroundsBeforeProcessingIncomingSdp = function(sdp) {\n        sdp = _sdpParser.updateH264LevelTo42E01F(sdp, self.isH264Enabled());\n        sdp = _sdpParser.deleteBandwidthLineFromSdp(sdp);\n        sdp = _sdpParser.removeG722Codec(sdp);\n        return sdp;\n    };\n\n    self.setRemoteDescription = function(operation, call, peer, type, sdp, onSuccess, onFailure) {\n        var remoteDesc;\n\n        function storeRemoteSdp() {\n            call.stableRemoteSdp = sdp;\n            logger.debug('stored stable remote sdp');\n            if (typeof onSuccess === 'function') {\n                onSuccess();\n            }\n        }\n\n        if (peer) {\n            if (operation) {\n                sdp = _sdpPipeline(call.id, sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_REMOTE, type);\n            }\n\n            remoteDesc = self.getRtcLibrary().createRTCSessionDescription(type, sdp);\n            peer.setRemoteDescription(remoteDesc, storeRemoteSdp, onFailure);\n        } else {\n            storeRemoteSdp();\n        }\n    };\n\n    self.isVideoDirectionsSendRecv = function(localSdp, remoteSdp) {\n        return _sdpParser.isVideoSdpDirectionSendrecv(localSdp) &&\n            _sdpParser.isVideoSdpDirectionSendrecv(remoteSdp);\n    };\n\n    self.isAudioDirectionsSendRecv = function(localSdp, remoteSdp) {\n        return _sdpParser.isAudioSdpDirectionSendrecv(localSdp) &&\n            _sdpParser.isAudioSdpDirectionSendrecv(remoteSdp);\n    };\n\n    self.isSdpDirectionsSendRecv = function(localSdp, remoteSdp) {\n        var isAudioSdpDirectionsSendRecv = self.isAudioDirectionsSendRecv(localSdp, remoteSdp);\n        if (_sdpParser.isSdpHasVideo(localSdp)) {\n            return isAudioSdpDirectionsSendRecv && self.isVideoDirectionsSendRecv(localSdp, remoteSdp);\n        }\n\n        return isAudioSdpDirectionsSendRecv;\n    };\n\n    self.oldSolutionNeeded = function(oldSdp, newSdp) {\n        var oldVideoLine = _sdpParser.isSdpHasVideo(oldSdp),\n            newVideoLine = _sdpParser.isSdpHasVideo(newSdp),\n            oldSessionId = _sdpParser.getSessionIdFromSdp(oldSdp),\n            newSessionId = _sdpParser.getSessionIdFromSdp(newSdp),\n            telephoneEventPayloadChanged = _sdpParser.hasCodecPayloadChanged(oldSdp, newSdp);\n\n        logger.debug('telephoneEventPayloadChanged: ' + telephoneEventPayloadChanged + ' session changed: ' + (oldSessionId !== newSessionId) + ' video line changed: ' + (oldVideoLine !== newVideoLine));\n        if (telephoneEventPayloadChanged || oldSessionId !== newSessionId || oldVideoLine !== newVideoLine) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    self.iceCredentialsChanged = function(oldSdp, newSdp) {\n        var oldVideoUfrag = _sdpParser.getICEParams(oldSdp, CONSTANTS.SDP.ICE_UFRAG, true),\n            newVideoUfrag = _sdpParser.getICEParams(newSdp, CONSTANTS.SDP.ICE_UFRAG, true);\n\n        logger.debug('ufrag changed: ' + (oldVideoUfrag !== newVideoUfrag));\n        if (oldVideoUfrag !== newVideoUfrag) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /*\n     * update codecs accordingly\n     */\n    self.updateCodecs = function(call, oSdp) {\n        oSdp = _sdpParser.replaceCodecs(oSdp, call.codecsToReplace ? call.codecsToReplace : _config.codecsToReplace);\n        oSdp = _sdpParser.updateAudioCodec(oSdp);\n        oSdp = _sdpParser.updateVideoCodec(oSdp);\n        return oSdp;\n    };\n\n    /*\n     * Overrides configured codec values with originators value, in this case, webRtc is terminator side\n     */\n    self.overrideConfiguredCodecValues = function(call, sdp) {\n        var index, newValue;\n        call.codecsToReplace = call.codecsToReplace ? call.codecsToReplace : JSON.parse(JSON.stringify(_config.codecsToReplace));\n        if (call.codecsToReplace) {\n            for (index = 0; index < call.codecsToReplace.length; index++) {\n                newValue = _sdpParser.getPayloadTypeOf(call.codecsToReplace[index].name, sdp);\n                if (newValue && (newValue !== -1)) {\n                    // getPayloadTypeOf method could return\n                    // either array or string\n                    // In such case, arrays first element will be used\n                    if (Array.isArray(newValue)) {\n                        newValue = newValue[0];\n                    }\n                    call.codecsToReplace[index].value = newValue;\n                }\n            }\n        }\n    };\n\n    //This function is called internally when we make a new call or hold/unhold scenario\n    // Native implementation lies on webRtcAdaptor.js\n    self.addLocalStream = function(internalCall) {\n        var stream, fireEvent = false,\n            isSendingLocalVideo = self.canOriginatorSendLocalVideo(internalCall);\n\n        if (internalCall.localMedia && internalCall.localMedia.stream) {\n            if (isSendingLocalVideo) {\n                stream = internalCall.localMedia.stream;\n\n                // Note: don't think this next assignment is needed.\n                internalCall.call.localStream = stream;\n                if (self.getDefaultVideoContainer()) {\n                    fireEvent = self.useDefaultRenderer(stream, true, true);\n                } else if (self.getLocalVideoContainer()) {\n                    fireEvent = self.createStreamRenderer(stream, self.getLocalVideoContainer(), {\n                        audio: false,\n                        video: true,\n                        split: true\n                    });\n                } else {\n                    fireEvent = true;\n                }\n\n                logger.debug('onLocalStreamAdded: ' + stream.id);\n                if (fireEvent) {\n                    self.fireOnLocalStreamAddedEvent(internalCall, stream);\n                }\n            } else {\n                if (self.getDefaultVideoContainer()) {\n                    if (self.getDefaultVideoContainer().lastElementChild) {\n                        self.disposeStreamRenderer(self.getDefaultVideoContainer().lastElementChild);\n                    }\n                } else if (self.getLocalVideoContainer()) {\n                    self.disposeStreamRenderer(self.getLocalVideoContainer());\n                }\n            }\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n\n    self.fireOnLocalStreamAddedEvent = function(call, stream) {\n        if (call && call.call && call.call.onLocalStreamAdded) {\n            _utils.callFunctionIfExist(call.call.onLocalStreamAdded, stream);\n        }\n    };\n\n    self.storeLocalStreamToCall = function(call, localStreamId) {\n        logger.debug('assigning local stream [' + localStreamId + '] to call: ' + call.id);\n        if (call.localMedia) {\n            self.endLocalMedia(call.localMedia);\n        }\n        self.updateLocalStreamToCall(call, localStreamId);\n    };\n\n    self.updateLocalStreamToCall = function(call, localStreamId) {\n        call.localMedia = self.getLocalStreamMap().get(localStreamId);\n    };\n\n    /*\n     * createNativeReOffer\n     */\n    self.createReOffer = function(call, onSuccess, onFailure, usePreviousMediaDirection) {\n        var peer = call.peer,\n            localDescObj, localAudioDirection, localVideoDirection,\n            prevLocalSdp = call.stableLocalSdp,\n            deleteVideoStream = false;\n\n        logger.debug('createReOffer:' + call.id);\n\n        if (!usePreviousMediaDirection) {\n            deleteVideoStream = !call.initialVideoState && _sdpParser.isSdpHasVideo(call.stableLocalSdp);\n        }\n\n        //TODO Why does a ReOffer absolutelty needs a new peer? There was no check here\n        if (self.createNewPeerForCall(call, deleteVideoStream)) {\n            peer = call.peer;\n        }\n\n        peer.createOffer(\n            function createReOfferCreateOfferSuccessCallback(oSdp) {\n\n                if (usePreviousMediaDirection) {\n                    localAudioDirection = _sdpParser.getAudioSdpDirection(prevLocalSdp);\n                    oSdp.sdp = _sdpParser.updateAudioSdpDirection(oSdp.sdp, localAudioDirection);\n                    localVideoDirection = _sdpParser.getVideoSdpDirection(prevLocalSdp);\n                    oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, localVideoDirection);\n                }\n\n                oSdp.sdp = _sdpParser.deleteCryptoZeroFromSdp(oSdp.sdp);\n                oSdp.sdp = _sdpParser.removeG722Codec(oSdp.sdp);\n                oSdp.sdp = _sdpParser.deleteCryptoFromSdp(oSdp.sdp, self.isDtlsEnabled());\n\n                oSdp.sdp = _sdpParser.updateVersion(prevLocalSdp, oSdp.sdp);\n                oSdp.sdp = self.updateCodecs(call, oSdp.sdp);\n                oSdp.sdp = _sdpParser.updateOpusConfig(oSdp.sdp, _config.opusConfig);\n                oSdp.sdp = _sdpParser.setTrickleOption(oSdp.sdp, _config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE);\n\n                oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.REOFFER, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n                localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, oSdp.sdp);\n\n                logger.trace('createReOffer: Setting local description with (offer) SDP: ' + oSdp.sdp);\n\n                peer.setLocalDescription(localDescObj, function createReOfferSetLocalDescriptionSuccessCallback() {\n                    logger.debug('createReOffer: setLocalDescription success' + call.id);\n                    if (_config.trickleIceSupport === CONSTANTS.TRICKLE.FULL) {\n                        _utils.callFunctionIfExist(onSuccess, oSdp.sdp);\n                    }\n                }, function createReOfferSetLocalDescriptionFailureCallback(e) {\n                    logger.debug('createReOffer: setLocalDescription failed!!' + e + call.id);\n                    _utils.callFunctionIfExist(onFailure);\n                });\n            },\n            function createReOfferCreateOfferFailureCallback(e) {\n                logger.error('createReOffer: createOffer failed!! ' + e);\n                _utils.callFunctionIfExist(onFailure);\n            });\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.getLocalAudioTrack = function(peer) {\n        logger.debug('getLocalAudioTrack');\n        var audioTracks;\n\n        if(peer.getSenders) {\n            /**\n             * RTCPeerConnection.getLocalStreams is being deprecated.\n             * Prefer to use RTCPeerConnection.getSenders if present.\n             */\n            // Retrieve the relevant RTCRtpSender objects.\n            var audioSenders = peer.getSenders().filter(function(sender) {\n                return sender.track.kind === 'audio';\n            });\n            // Retrieve the tracks from the audio senders.\n            audioTracks = audioSenders.map(function(sender) {\n                return sender.track;\n            });\n\n            if (audioTracks && audioTracks.length > 0) {\n                return audioTracks[0];\n            }\n        } else if (peer.getLocalStreams) {\n            var streams = peer.getLocalStreams();\n            if (streams && streams.length > 0) {\n                audioTracks = streams[zero].getAudioTracks();\n                if (audioTracks && audioTracks.length > 0) {\n                    return audioTracks[zero];\n                }\n            }\n        }\n\n        return null;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.getLocalVideoTrack = function(peer) {\n        logger.debug('getLocalVideoTrack');\n        var streams, videoTracks;\n\n        if(peer.getSenders) {\n            /**\n             * RTCPeerConnection.getLocalStreams is being deprecated.\n             * Prefer to use RTCPeerConnection.getSenders if present.\n             */\n            // Retrieve the relevant RTCRtpSender objects.\n            var videoSenders = peer.getSenders().filter(function(sender) {\n                return sender.track.kind === 'video';\n            });\n            // Retrieve the tracks from the audio senders.\n            videoTracks = videoSenders.map(function(sender) {\n                return sender.track;\n            });\n\n            if (videoTracks && videoTracks.length > 0) {\n                return videoTracks[0];\n            }\n        } else if (peer.getLocalStreams) {\n            streams = peer.getLocalStreams();\n            if (streams && streams.length > 0){\n                videoTracks = streams[zero].getVideoTracks();\n                if (videoTracks && videoTracks.length > 0) {\n                    return videoTracks[zero];\n                }\n            }\n        }\n\n        return null;\n    };\n\n    self.getRemoteVideoTrack = function(peer) {\n        logger.debug('getRemoteVideoTrack');\n        var streams;\n\n        if (peer.getRemoteStreams) {\n            streams = peer.getRemoteStreams();\n            if (streams && streams[zero]) {\n                return streams[zero].getVideoTracks();\n            }\n        }\n\n        return [];\n    };\n\n    self.muteAudioTrack = function(call, mute, userAction) {\n        if (!self.isInitialized()) {\n            logger.warn('muteAudioTrack: Plugin is not installed');\n            return;\n        }\n\n        if (!call.peer) {\n            return;\n        }\n\n        if(call.localMedia) {\n\n            var newMuteState = call.audioMuted;\n\n            // Mute both the audio gain node and the original track. This will help in some cases\n            // where muting the track doesn't work.\n            if (call.localMedia.audioGain) {\n                logger.info('Setting mute state [' + mute + '] on gain node for call [' + call.id + ']');\n                call.localMedia.audioGain.gain.value = mute ? 0 : 1;\n                newMuteState = mute;\n            }\n\n            if (call.localMedia.originalStream) {\n                var audioTracks = call.localMedia.originalStream.getAudioTracks();\n                var localAudioTrack;\n\n                if (audioTracks && audioTracks.length > 0) {\n                    localAudioTrack = audioTracks[zero];\n                }\n\n                if (localAudioTrack) {\n                    logger.info('mute Audio Track [' + localAudioTrack.id + '], call [' + call.id + '] mute=' + mute);\n                    localAudioTrack.enabled = !mute;\n                    newMuteState = mute;\n                }\n            }\n\n            call.audioMuted = newMuteState;\n            if (userAction) {\n                call.fcsUserAudioMuteState = newMuteState;\n            }\n        }\n    };\n\n    self.muteVideoTrack = function(call, mute, userAction) {\n        var localVideoTrack, videoTracks;\n\n        if (!self.isInitialized()) {\n            logger.warn('muteVideoTrack: Plugin is not installed');\n            return;\n        }\n\n        if (!call.peer) {\n            return;\n        }\n\n        if(call.localMedia && call.localMedia.originalStream){\n            videoTracks = call.localMedia.originalStream.getVideoTracks();\n        }\n\n        if (videoTracks && videoTracks.length > 0) {\n            localVideoTrack = videoTracks[zero];\n        }\n\n        if (localVideoTrack) {\n            logger.info('mute Video Track [' + localVideoTrack.id + '], call [' + call.id + '] mute=' + mute);\n            localVideoTrack.enabled = !mute;\n            call.videoMuted = mute;\n            if (userAction) {\n                call.fcsUserVideoMuteState = mute;\n            }\n        }\n    };\n\n    self.updateSilenceStatus = function(call) {\n        if (!self.isInitialized()) {\n            logger.warn('muteAudioTrack: Plugin is not installed');\n            return;\n        }\n\n        if (!call.remoteStream) {\n            // We don't have a remote stream yet. Return, and later when the peer and stream is created we will update the silence.\n            return;\n        }\n\n        const safeStreamId = makeSafeForCSS(call.remoteStream.id);\n\n        // Find stream audio sinks for this stream and mute their volume. Do this via the DOM.\n        // Will only support <video> and <audio> tags created via `createStreamRenderer`\n        // Once found, set their muted state to the silence state.\n\n        const audioRenderer = document.querySelector('#audio-stream-id-' + safeStreamId);\n        if (audioRenderer) {\n            // Found matching audio renderer. Set the muted status.\n            audioRenderer.muted = call.silenced;\n        } else {\n            // Couldn't find an audio renderer, try to see if there is a video renderer. This is only\n            // possible in non-split mode (legacy). Or for local stream, which would be a different stream id.\n            const videoRenderer = document.querySelector('#video-stream-id-' + safeStreamId);\n            if (videoRenderer) {\n                videoRenderer.muted = call.silenced;\n            }\n        }\n    };\n\n    self.isAudioMuted = function(call) {\n        if (call && call.audioMuted) {\n            return call.audioMuted;\n        }\n        return false;\n    };\n\n    /**\n     * Sets the mute state of the call to last value specified by the user.\n     * For example, if a call was unmuted before a hold, it will go back to being unmuted after the call comes off of hold.\n     * @function\n     * @param {Object} call internalCall\n     *\n     */\n    self.restoreUserMuteStateOfCall = function(call) {\n        var previousMuteStateOfAudio = false,\n            previousMuteStateOfVideo = false;\n        if (!call.peer) {\n            return;\n        }\n\n        if (call.fcsUserAudioMuteState) {\n            previousMuteStateOfAudio = call.fcsUserAudioMuteState;\n        }\n\n        if (call.fcsUserVideoMuteState) {\n            previousMuteStateOfVideo = call.fcsUserVideoMuteState;\n        }\n\n        logger.debug('previous audio mute state of call: ' + previousMuteStateOfAudio);\n        logger.debug('previous video mute state of call: ' + previousMuteStateOfVideo);\n        self.muteAudioTrack(call, previousMuteStateOfAudio);\n        self.muteVideoTrack(call, previousMuteStateOfVideo);\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     * Mutes audio and video tracks (to be used during Hold)\n     *\n     * @ignore\n     * @name rtc.mute\n     * @function\n     * @param {Object} call internalCall\n     * @param {boolean} mute true to mute, false to unmute\n     */\n    self.muteOnHold = function(call, mute) {\n        self.muteAudioTrack(call, mute);\n        self.muteVideoTrack(call, mute);\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    // initNativeMedia\n    self.initMedia = function(onSuccess, onFailure, options) {\n        self.setInitialized(true);\n        _decorator(self.getRtcLibrary());\n\n        function setMediaSources() {\n            self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n                self.setMediaSources(mediaSourceInfo);\n            });\n        }\n\n        self.getRtcLibrary().initScreenSharing(function() {\n            // Regardless of success or error, set the media sources.\n            setMediaSources();\n\n            _utils.callFunctionIfExist(onSuccess);\n        }, function(error) {\n            // Regardless of success or error, set the media sources.\n            setMediaSources();\n\n            _utils.callFunctionIfExist(onFailure, error);\n        }, options);\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     * performNativeVideoStartWorkaround - term side cannot see orig's video\n     */\n    self.performVideoStartWorkaround = function(operation, call, onSuccess, onFail) {\n        var peer = call.peer, remoteAudioState, remoteVideoState, localSdp;\n\n        //disable the workaround by default, as it is not necessairy in Chrome above version 62\n        // It is requiried in Electron 2.x\n        if(!_config.performVideoStartWorkaround){\n            onSuccess();\n            return;\n        }\n\n        if (!_sdpParser.isSdpHasVideo(call.sdp)) {\n            self.setRemoteDescription(operation, call, null, null, call.sdp, onSuccess, onFail);\n            return;\n        }\n\n        logger.debug('Workaround to play video');\n\n        localSdp = call.stableLocalSdp ? call.stableLocalSdp : call.peer.localDescription.sdp;\n        call.sdp = _sdpParser.addSdpMissingCryptoLine(call.sdp);\n\n        remoteAudioState = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        call.sdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n        call.sdp = _sdpParser.updateVideoSdpDirectionToInactive(call.sdp);\n\n        //TODO: not sure if needed since we don't do pvwa anymore\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        logger.trace('performVideoStartWorkaround: Setting remote description with (offer) SDP: ' + call.sdp);\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp,\n            function pvswFirstSetRemoteDescriptionSuccessCallback() {\n                logger.debug('performVideoStartWorkaround: first setRemoteDescription success');\n\n                // restore original values\n                call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, remoteAudioState);\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, remoteVideoState);\n\n                logger.trace('performVideoStartWorkaround: Setting remote description with (offer) SDP: ' + call.sdp);\n                self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp,\n                    function pvswSecondSetRemoteDescriptionSuccessCallback() {\n                        logger.debug('performVideoStartWorkaround: second setRemoteDescription success');\n                        peer.createAnswer(\n                            function pvswCreateAnswerSuccessCallback(obj) {\n                                if (remoteAudioState === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                    obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                                }\n\n                                if (remoteVideoState === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                    obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                                } else if (self.canOriginatorSendLocalVideo(call)) {\n                                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                                } else {\n                                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                                }\n\n                                obj.sdp = _sdpParser.checkAndRestoreICEParams(obj.sdp, call.sdp);\n\n                                //Set role to what we should be\n                                obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n\n                                obj.sdp = _sdpParser.updateVersion(localSdp, obj.sdp);\n                                obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n\n                                obj.sdp = _sdpPipeline(call.id, obj.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                                logger.trace('performVideoStartWorkaround: Setting local description with (answer) SDP: ' + obj.sdp);\n                                peer.setLocalDescription(\n                                    self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, obj.sdp),\n                                    function pvswSetLocalDescriptionSuccessCallback() {\n                                        logger.debug('performVideoStartWorkaround: setlocalDescription success');\n                                        _utils.callFunctionIfExist(onSuccess);\n                                    },\n                                    function pvswSetLocalDescriptionFailureCallback(e) {\n                                        logger.debug('performVideoStartWorkaround: setlocalDescription failed!!' + e);\n                                        _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: setlocalDescription failed!!');\n                                    }\n                                );\n                            },\n                            function pvswCreateAnswerFailureCallback(e) {\n                                logger.debug('performVideoStartWorkaround: createAnswer failed!! ' + e);\n                                _utils.callFunctionIfExist(onFail, 'Session cannot be created');\n                            }\n                        );\n                    },\n                    function pvswSecondSetRemoteDescriptionFailureCallback(e) {\n                        logger.debug('performVideoStartWorkaround: second setRemoteDescription failed!!' + e);\n                        _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: second setRemoteDescription failed!!');\n                    }\n                );\n            },\n            function pvswFirstSetRemoteDescriptionFailureCallback(e) {\n                logger.debug('performVideoStartWorkaround: first setRemoteDescription failed!!' + e);\n                _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: first setRemoteDescription failed!!');\n            }\n        );\n    };\n\n    self.createAudioContext = function() {\n        window.AudioContext = window.AudioContext || window.webkitAudioContext ||\n            window.mozAudioContext || window.oAudioContext || window.msAudioContext;\n        /*\n         * Issues surrounding AudioContext usage/sharing: KAA-434 and KAA-2646\n         */\n        try {\n            var context = new window.AudioContext();\n            return context;\n        } catch (e) {\n            logger.error('Failed to create AudioContext:' + e);\n            return;\n        }\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.getUserMedia = function(params) {\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n            var mediaInfo, mediaStreamSource, mediaStreamDestination, constraints = {\n                    audio: false,\n                    video: false\n                },\n                localMedia;\n            self.setMediaSources(mediaSourceInfo);\n\n            if (mediaSourceInfo) {\n                if (!mediaSourceInfo.audioSourceAvailable) {\n                    logger.debug('No Audio Source available.');\n                    _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_FOUND);\n                    return;\n                }\n            }\n\n            var audioContext = self.createAudioContext();\n            if(!audioContext) {\n                _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_INITIALIZED);\n                return;\n            }\n\n            if (self.getVideoSourceAvailable()) {\n                constraints.video = params.options.videoConstraints;\n            }\n            if (self.getAudioSourceAvailable()) {\n                constraints.audio = params.options.audioConstraints;\n            }\n\n            logger.debug('getUserMedia - constraints: ', constraints);\n            self.getRtcLibrary().getUserMedia(constraints, function getUserMediaSuccessCallback(stream) {\n                var audioGain;\n                mediaStreamDestination = audioContext.createMediaStreamDestination();\n                if (stream.getAudioTracks() && stream.getAudioTracks()[zero]) {\n                    mediaStreamSource = audioContext.createMediaStreamSource(stream);\n                    audioGain = audioContext.createGain();\n                    mediaStreamSource.connect(audioGain);\n                    audioGain.connect(mediaStreamDestination);\n                }\n\n                if (stream.getVideoTracks() && stream.getVideoTracks()[zero]) {\n                    mediaStreamDestination.stream.addTrack(stream.getVideoTracks()[zero]);\n                }\n\n                localMedia = {\n                    audioContext: audioContext,\n                    audioGain: audioGain,\n                    mediaStreamDestination: mediaStreamDestination,\n                    stream: mediaStreamDestination.stream,\n                    mediaStreamSource: mediaStreamSource,\n                    mergedSources: {},\n                    originalStream: stream\n                };\n                self.setLocalMedia(localMedia);\n                self.getLocalStreamMap().add(localMedia.stream.id, localMedia);\n                self.setInitialized(true);\n\n                mediaInfo = {\n                    audio: constraints.audio,\n                    video: constraints.video,\n                    id: localMedia.stream.id,\n                    originalStream: stream\n                };\n\n                logger.debug('User has granted access to local media: ', localMedia);\n                _utils.callFunctionIfExist(params.onSuccess, mediaInfo);\n            }, function getUserMediaFailureCallback(error) {\n                logger.error('Failed to get access to local media. Error: ', error);\n                _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_ALLOWED);\n            });\n        });\n    };\n\n    self.replaceVideoStream = function(targetStream, sourceStream) {\n        if (targetStream && typeof targetStream.getVideoTracks === 'function') {\n            var targetVideoTracks = targetStream.getVideoTracks();\n            for (var i = 0; i < targetVideoTracks.length; ++i) {\n                targetStream.removeTrack(targetVideoTracks[i]);\n            }\n\n            if (sourceStream && typeof sourceStream.getVideoTracks === 'function') {\n                var sourceVideoTracks = sourceStream.getVideoTracks();\n                if (sourceVideoTracks && sourceVideoTracks.length) {\n                    targetStream.addTrack(sourceVideoTracks[zero]);\n                }\n            }\n        }\n\n        return {\n            id: targetStream.id\n        };\n    };\n\n    self.mergeAudioStream = function(call1, call2){\n        var remoteStream1, remoteStream2, source1, source2;\n\n        logger.info('Merging Audio Streams for Calls: ' + call1.id + ' and :' + call2.id);\n\n        remoteStream1 = call1.peer.getRemoteStreams()[0];\n        remoteStream2 = call2.peer.getRemoteStreams()[0];\n\n        if (typeof remoteStream1 === 'undefined' || typeof remoteStream2 === 'undefined') {\n            logger.debug('Failed to get access to audio media.');\n            throw errors.MEDIA_NOT_FOUND;\n        }\n\n        source1 = call2.localMedia.audioContext.createMediaStreamSource(remoteStream1);\n        source2 = call1.localMedia.audioContext.createMediaStreamSource(remoteStream2);\n\n        source1.connect(call2.localMedia.mediaStreamDestination);\n        source2.connect(call1.localMedia.mediaStreamDestination);\n\n        call1.localMedia.mergedSources[call2.id] = source2;\n        call2.localMedia.mergedSources[call1.id] = source1;\n    };\n\n    self.unMergeAudioStream = function(call1, call2){\n        var source1, source2;\n\n        logger.info('unMerging Audio Streams for Calls: ' + call1.id + ' and :' + call2.id);\n\n        source2 = call1.localMedia.mergedSources[call2.id];\n        if (source2) {\n            source2.disconnect();\n        }\n        delete call1.localMedia.mergedSources[call2.id];\n\n        source1 = call2.localMedia.mergedSources[call1.id];\n        if (source1) {\n            source1.disconnect();\n        }\n        delete call2.localMedia.mergedSources[call1.id];\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.startScreenMedia = function(onSuccess, onFailure, onEnded) {\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n            var video_constraints;\n            self.setMediaSources(mediaSourceInfo);\n            if (self.getScreenSourceAvailable()) {\n                video_constraints = {\n                    mandatory: {\n                        'maxFrameRate': self.getScreenFrameRate(),\n                        'maxWidth': self.getScreenWidth(),\n                        'maxHeight': self.getScreenHeight()\n                    },\n                    mediaSource: 'screen'\n                };\n\n                self.getRtcLibrary().getUserMedia({\n                    video: video_constraints,\n                    audio: false\n                }, function(stream) {\n                    //TODO: This seems wrong since we are modifying the last stream and not the stream from the call, we should use call.localMedia.stream\n                    var mediaInfo = self.replaceVideoStream(self.getLocalMedia().stream, stream),\n                        oldStream = self.getScreenStream();\n\n                    // If there is an old screen stream, just stop it but prevent the stop from happening\n                    if (oldStream) {\n                        oldStream.getVideoTracks()[0].onended = null;\n                        self.getRtcLibrary().stopStream(oldStream);\n                    }\n\n                    stream.getVideoTracks()[0].onended = onEnded;\n                    self.setScreenStream(stream);\n\n                    logger.debug('User granted access to screen media.');\n                    _utils.callFunctionIfExist(onSuccess, mediaInfo);\n\n                }, function() {\n                    logger.debug('Failed to get access to screen media.');\n                    _utils.callFunctionIfExist(onFailure, mediaErrors.NOT_ALLOWED);\n                }, onEnded);\n            } else {\n                _utils.callFunctionIfExist(onFailure, mediaErrors.NOT_FOUND);\n            }\n        });\n    };\n\n    self.stopScreenMedia = function() {\n        var screenStream = self.getScreenStream();\n\n        //TODO: This seems wrong since we are modifying the last stream and not the stream from the call, we should use call.localMedia.stream and call.localMedia.originalStream\n        self.replaceVideoStream(self.getLocalMedia().stream, self.getLocalMedia().originalStream);\n\n        if (screenStream) {\n            self.getRtcLibrary().stopStream(screenStream);\n            self.setScreenStream(null);\n        }\n    };\n\n    self.createDataChannelOffer = function(call, successCallback, failureCallback) {\n        logger.debug('createDataChannelOffer: state= ' + call.peer.signalingState);\n        var peer = call.peer, localDesc;\n\n        peer.createOffer(function (oSdp) {\n            oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.DATA_CHANNEL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n            localDesc = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, oSdp.sdp);\n\n            logger.trace('createDataChannelOffer: Setting local description with (offer) SDP: ' + oSdp.sdp);\n            peer.setLocalDescription(localDesc, function () {\n                //Due to stun requests, successCallback will be called by onIceCandidate()\n            }, function (error) {\n                logger.error('createDataChannelOffer: setLocalDescription failed : ' + error);\n                _utils.callFunctionIfExist(failureCallback, 'createDataChannelOffer: setLocalDescription failed');\n            });\n        }, function (e) {\n            logger.error('createDataChannelOffer: createOffer failed!! ' + e);\n            _utils.callFunctionIfExist(failureCallback);\n        });\n    };\n\n    self.createDataChannelAnswer = function (call, successCallback, failureCallback) {\n        logger.debug('createDataChannelAnswer: state= ' + call.peer.signalingState);\n        var peer = call.peer, remoteDesc, localDesc;\n\n        call.sdp = _sdpPipeline(call.id, call.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.DATA_CHANNEL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_REMOTE, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n        remoteDesc = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp);\n        peer.setRemoteDescription(remoteDesc, function () {\n            peer.createAnswer(function (oSdp) {\n                oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.DATA_CHANNEL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                localDesc = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, oSdp.sdp);\n\n                logger.trace('createDataChannelAnswer: Setting local description with (answer) SDP: ' + oSdp.sdp);\n                peer.setLocalDescription(localDesc, function () {\n                    //Due to stun requests, successCallback will be called by onIceCandidate()\n                }, function (e) {\n                    logger.error('createDataChannelAnswer: setLocalDescription failed : ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'createDataChannelAnswer setLocalDescription failed');\n                });\n            }, function (e) {\n                logger.error('createDataChannelAnswer: failed!! Error: ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n            });\n        }, function (e) {\n            logger.error('createDataChannelAnswer: setRemoteDescription failed!! Error: ' + e);\n        });\n    };\n\n    self.processDataChannelAnswer = function (call, successCallback, failureCallback) {\n        logger.debug('processDataChannelAnswer: state= ' + call.peer.signalingState);\n        var peer = call.peer, remoteDesc;\n\n        call.sdp = _sdpPipeline(call.id, call.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.DATA_CHANNEL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_REMOTE, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n        remoteDesc = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp);\n\n        peer.setRemoteDescription(remoteDesc, function () {\n            logger.debug('processDataChannelAnswer: setRemoteDescription success');\n            _utils.callFunctionIfExist(successCallback);\n        }, function (e) {\n            logger.error('processDataChannelAnswer: setRemoteDescription failed: ' + e);\n            _utils.callFunctionIfExist(failureCallback);\n        });\n    };\n\n    // createNativeOffer, Native implementation lies on webRtcAdaptor.js\n    self.createOffer = function(call, successCallback, failureCallback, sendInitialVideo, offerToReceiveVideo, isAnswer) {\n        logger.debug('createOffer: sendInitialVideo= ' + sendInitialVideo + ' offerToReceiveVideo= ' + offerToReceiveVideo + ' state= ' + call.peer.signalingState);\n        var peer = call.peer;\n\n        if(call.localMedia && call.localMedia.stream){\n            call.peer.addStream(call.localMedia.stream);\n        }\n\n        peer.createOffer(\n            function createOfferSuccessCallback(oSdp) {\n\n                sendInitialVideo = sendInitialVideo && self.getVideoSourceAvailable();\n                if (sendInitialVideo) {\n                    oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                } else {\n                    oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                }\n\n                oSdp.sdp = _sdpParser.deleteCryptoZeroFromSdp(oSdp.sdp);\n\n                oSdp.sdp = _sdpParser.removeG722Codec(oSdp.sdp);\n\n                oSdp.sdp = _sdpParser.deleteCryptoFromSdp(oSdp.sdp, self.isDtlsEnabled());\n\n                oSdp.sdp = self.updateCodecs(call, oSdp.sdp);\n                oSdp.sdp = _sdpParser.updateOpusConfig(oSdp.sdp, _config.opusConfig);\n                oSdp.sdp = _sdpParser.setTrickleOption(oSdp.sdp, _config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE);\n\n                // If it was specified that this SDP operation is a call answer operation, then\n                //      provide that to the SDP pipeline. This occurs during slow start scenarios,\n                //      but createOffer is most often a call start operation.\n                var operation = (isAnswer ? CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL : CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL);\n                oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n                logger.trace('createOffer: Setting local description with (offer) SDP: ' + oSdp.sdp);\n                peer.setLocalDescription(\n                    self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, oSdp.sdp),\n                    function createOfferSetLocalDescriptionSuccessCallback() {\n                        if (_config.trickleIceSupport === CONSTANTS.TRICKLE.FULL) {\n                            _utils.callFunctionIfExist(successCallback, oSdp.sdp);\n                        }\n                        // ELSE due to stun requests, successCallback will be called by onIceCandidate()\n                    },\n                    function createOfferSetLocalDescriptionFailureCallback(error) {\n                        logger.error('createOffer: setLocalDescription failed : ' + error);\n                        _utils.callFunctionIfExist(failureCallback, 'createOffer: setLocalDescription failed');\n                    });\n            },\n            function createOfferFailureCallback(e) {\n                logger.error('createOffer: createOffer failed!! ' + e);\n                _utils.callFunctionIfExist(failureCallback);\n            }, { offerToReceiveVideo: offerToReceiveVideo ? 1 : 0 });\n    };\n\n    /*\n     *  Native implementation lies on webRtcAdaptor.js\n     *  createNativeAnswer to be used when native webrtc is enabled.\n     *  @param {type} call\n     *  @param {type} successCallback\n     *  @param {type} failureCallback\n     *  @param {type} isVideoEnabled\n     */\n    self.createAnswer = function(call, successCallback, failureCallback, isVideoEnabled) {\n        logger.debug('createAnswer: isVideoEnabled = ' + isVideoEnabled + ', state= ' + call.peer.signalingState);\n        var peer = call.peer;\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        if(call.localMedia && call.localMedia.stream){\n            call.peer.addStream(call.localMedia.stream);\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.deleteFingerprintOrCrypto(call.sdp, self.isDtlsEnabled());\n\n        logger.trace('createAnswer: Setting remote description with (offer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp,\n            function createAnswerSetRemoteDescriptionSuccessCallback() {\n                call.remoteVideoState = _sdpParser.getSdpDirection(call.sdp, CONSTANTS.STRING.VIDEO);\n\n                peer.createAnswer(\n                    function(oSdp) {\n                        isVideoEnabled = isVideoEnabled && self.getVideoSourceAvailable() && _sdpParser.isSdpHasVideo(call.sdp);\n                        oSdp.sdp = _sdpParser.updateOpusConfig(oSdp.sdp, _config.opusConfig);\n                        if (isVideoEnabled) {\n                            if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                                oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                if (_sdpParser.getVideoSdpDirection(call.sdp) !== CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                    oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                                } else {\n                                    oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                                }\n                            }\n                        } else {\n                            if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                                oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            } else {\n                                oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n                        }\n\n                        self.muteOnHold(call, false);\n\n                        // createAnswer generates an sdp without ice params\n                        // copy ice params to the local sdp\n                        // scenario: incoming video call from pcc in brokeronly config\n                        oSdp.sdp = _sdpParser.checkAndRestoreICEParams(oSdp.sdp, call.sdp);\n\n                        oSdp.sdp = _sdpParser.setTrickleOption(oSdp.sdp, _config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE);\n\n                        oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                        logger.trace('createAnswer: Setting local description with (answer) SDP: ' + oSdp.sdp);\n                        peer.setLocalDescription(\n                            self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, oSdp.sdp),\n                            function createAnswerSetLocalDescriptionSuccessCallback() {\n                                if (_config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE && call.supportTrickle) {\n                                    _utils.callFunctionIfExist(successCallback, oSdp.sdp);\n                                }\n                                // ELSE due to stun requests, successCallback will be called by onIceCandidate()\n                            },\n                            function createAnswerSetLocalDescriptionFailureCallback(e) {\n                                logger.error('createAnswer: setLocalDescription failed : ' + e);\n                                _utils.callFunctionIfExist(failureCallback, 'createNativeAnswer setLocalDescription failed');\n                            });\n                    },\n                    function createAnswerFailureCallback(e) {\n                        logger.error('createAnswer: failed!! Error: ' + e);\n                        _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                    });\n            },\n            function createAnswerSetRemoteDescriptionFailureCallback(e) {\n                logger.error('createAnswer: setremotedescription failed!! Error: ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'createAnswer setRemoteDescription failed');\n            });\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     * createNativeUpdate to be used when the video start or stop\n     */\n    self.createUpdate = function(call, successCallback, failureCallback, isVideoStart) {\n        logger.debug('createUpdate: isVideoStart= ' + isVideoStart + ' state= ' + call.peer.signalingState);\n        var peer, localDesc, localSdp = call.stableLocalSdp;\n\n        if(self.needNewPeer(call, true)) {\n            self.createNewPeerForCall(call);\n        }\n\n        peer = call.peer;\n\n        self.getRtcLibrary().updateStream(peer, call);\n\n        peer.createOffer(function createUpdateCreateOfferSuccessCallback(obj) {\n            isVideoStart = isVideoStart && self.getVideoSourceAvailable();\n\n            if (isVideoStart) {\n                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n            } else {\n                if (_sdpParser.isVideoSdpDirectionInactive(call.stableRemoteSdp)) {\n                    obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                } else {\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                }\n            }\n            obj.sdp = self.updateCodecs(call, obj.sdp);\n            obj.sdp = _sdpParser.updateVersion(localSdp, obj.sdp);\n            obj.sdp = _sdpParser.deleteCryptoZeroFromSdp(obj.sdp);\n            obj.sdp = _sdpParser.removeG722Codec(obj.sdp);\n            obj.sdp = _sdpParser.deleteCryptoFromSdp(obj.sdp, self.isDtlsEnabled());\n            obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n            obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n            obj.sdp = _sdpPipeline(call.id, obj.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n            localDesc = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, obj.sdp);\n\n            var createUpdateCreateOfferSetLocalDescriptionSuccessCallback = function() {\n                logger.debug('createUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                // The above process un-mutes the client. We must ensure it continues to be muted if necessary.\n                if(call.audioMuted){\n                    logger.debug('video started while muted, re-mute the microphone');\n                    self.muteAudioTrack(call, true, false);\n                }\n\n                if (call.supportTrickle) {\n                    logger.debug('Call supports Trickle ice not waiting for candidates');\n                    _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                } else if (peer.iceGatheringState === 'complete') {\n                    if (call.successCallback) {\n                        logger.debug('createUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                    }\n                }\n            };\n\n            logger.trace('createUpdate: Setting local description with (offer) SDP: ' + obj.sdp);\n            peer.setLocalDescription(localDesc, function (){\n                // This is a workaround to prevent an issue with ordering of events in Chrome\n                // We add a delay so that the iceGatheringState reflects the real state.\n                // https://bugs.chromium.org/p/webrtc/issues/detail?id=1873\n                setTimeout(createUpdateCreateOfferSetLocalDescriptionSuccessCallback, 10);\n            }, function crateUpdateCreateOfferSetLocalDescriptionFailureCallback(e) {\n                logger.debug('createUpdate: createOffer setLocalDescription failed: ' + e);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n        }, function createUpdateCrateOfferFailureCallback(e) {\n            logger.debug('createUpdate: createOffer failed!!: ' + e);\n            failureCallback();\n        });\n    };\n\n    /*\n     * Reverts RTC engine's state\n     */\n    self.revertRtcState = function(call, successCallback, failureCallback) {\n        var peer = call.peer,\n            obj, localSdp = call.stableLocalSdp,\n            remoteSdp = call.stableRemoteSdp,\n            rtcState = peer.signalingState;\n        remoteSdp = _sdpParser.deleteGoogleIceFromSdp(remoteSdp);\n        switch (rtcState) {\n        case CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE:\n        case CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.HAVE_LOCAL_OFFER:\n            //TODO what should we do here?\n            localSdp = _sdpParser.setTcpSetupAttribute(localSdp, 'actpass');\n            obj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, localSdp);\n            logger.trace('revertRtcState[stable|local_offer]: Setting local description with (offer) SDP: ' + localSdp);\n            peer.setLocalDescription(\n                obj,\n                function revertRtcStateLocalDescriptionSuccessCallback() {\n                    logger.debug('revertRtcState[stable|local_offer]: setLocalDescription success');\n                    //TODO what should we do here? that seems to be the only place where the remoteTcpSetupAttribute is used.\n                    // it seems would so use the stable remote sdp to lookup or the stable local\n                    //remoteSdp = _sdpParser.setTcpSetupAttribute(remoteSdp, call.remoteTcpSetupAttribute);\n\n                    logger.trace('revertRtcState[stable|local_offer]: Setting remote description with (answer) SDP: ' + remoteSdp);\n                    self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.REVERT_RTC_STATE, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, remoteSdp,\n                        function revertRtcStateRemoteDescriptionSuccessCallback() {\n                            logger.debug('revertRtcState[stable|local_offer]: setRemoteDescription success');\n                            if (peer.iceGatheringState === 'complete') {\n                                _utils.callFunctionIfExist(successCallback);\n                            }\n                        },\n                        function revertRtcStateRemoteDescriptionFailureCallback(error) {\n                            logger.error('revertRtcState[stable|local_offer]: setRemoteDescription failed: ' + error);\n                            _utils.callFunctionIfExist(failureCallback, call);\n                        });\n                },\n                function revertRtcStateLocalDescriptionFailureCallback(error) {\n                    logger.error('revertRtcState[stable|local_offer]: setLocalDescription failed: ' + error);\n                    _utils.callFunctionIfExist(failureCallback, call);\n                }\n            );\n            break;\n        case CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.HAVE_REMOTE_OFFER:\n            //TODO what should we do here?\n            remoteSdp = _sdpParser.setTcpSetupAttribute(remoteSdp, 'actpass');\n            logger.trace('revertRtcState[remote_offer]: Setting remote description with (offer) SDP: ' + remoteSdp);\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.REVERT_RTC_STATE, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, remoteSdp,\n                function revertRtcStateRemoteDescriptionSuccessCallback() {\n                    logger.debug('revertRtcState[remote_offer]: setRemoteDescription success');\n                    //TODO what should we do here?\n                    localSdp = _sdpParser.setTcpSetupAttribute(localSdp, call.dtlsRole);\n                    obj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, localSdp);\n                    logger.trace('revertRtcState[remote_offer]: Setting local description with (answer) SDP: ' + localSdp);\n                    peer.setLocalDescription(\n                        obj,\n                        function revertRtcStateLocalDescriptionSuccessCallback() {\n                            logger.debug('revertRtcState[remote_offer]: setLocalDescription success');\n                            if (peer.iceGatheringState === 'complete') {\n                                _utils.callFunctionIfExist(successCallback);\n                            }\n                        },\n                        function revertRtcStateLocalDescriptionFailureCallback(error) {\n                            logger.error('revertRtcState[remote_offer]: setRemoteDescription failed: ' + error);\n                            _utils.callFunctionIfExist(failureCallback, call);\n                        }\n                    );\n                },\n                function revertRtcStateRemoteDescriptionFailureCallback(error) {\n                    logger.error('revertRtcState[remote_offer]: setLocalDescription failed: ' + error);\n                    _utils.callFunctionIfExist(failureCallback, call);\n                });\n            break;\n        default:\n            logger.debug('revertRtcState: not applicible for state: ' + rtcState);\n        }\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     * createNativeHoldUpdate to be used when native webrtc is enabled\n     */\n    self.createHoldUpdate = function(call, hold, remote_hold_status, successCallback, failureCallback) {\n        logger.debug('createHoldUpdate: local hold= ' + hold + ' remote hold= ' + remote_hold_status + ' state= ' + call.peer.signalingState);\n        var peer, localDescObj, localSdp;\n\n        var operation = hold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        localSdp = call.stableLocalSdp;\n\n        if(self.needNewPeer(call, true)) {\n            self.createNewPeerForCall(call);\n        }\n\n        peer = call.peer;\n\n        peer.createOffer(function createHoldUpdateCreateOfferSuccessCallback(obj) {\n            if (hold) {\n                if (!remote_hold_status) {\n                    obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                    if(_config.videoInactiveOnHold){\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                    } else {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                    }\n                } else {\n                    obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                    obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                }\n            } else if (remote_hold_status) {\n                obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n            } else {\n                obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                if (self.canOriginatorSendLocalVideo(call)) {\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                } else {\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                }\n            }\n            obj.sdp = self.updateCodecs(call, obj.sdp);\n            obj.sdp = _sdpParser.updateVersion(localSdp, obj.sdp);\n            obj.sdp = _sdpParser.deleteCryptoZeroFromSdp(obj.sdp);\n            obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n\n            //ABE-11044 workaround. Remove after Chrome 51 release.\n            obj.sdp = _sdpParser.checkandReplaceAPTValue(obj.sdp);\n            obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n            obj.sdp = _sdpPipeline(call.id, obj.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n            localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, obj.sdp);\n\n            var createHoldUpdateSetLocalDescriptionSuccessCallback = function() {\n                logger.debug('createHoldUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                if (call.supportTrickle) {\n                    _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                } else if (peer.iceGatheringState === 'complete') {\n                    if (call.successCallback) {\n                        logger.debug('createHoldUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                    }\n                }\n            };\n\n            logger.trace('createHoldUpdate: Setting local description with (offer) SDP: ' + obj.sdp);\n            peer.setLocalDescription(localDescObj, function (){\n                setTimeout(createHoldUpdateSetLocalDescriptionSuccessCallback, 10);\n            }, function createHoldUpdateSetLocalDescriptionFailureCallback(error) {\n                logger.error('createHoldUpdate: setLocalDescription failed: ' + error.message);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n        }, function createHoldUpdateCreateOfferFailureCallback(error) {\n            logger.error('createHoldUpdate: createOffer failed: ' + error.message);\n            _utils.callFunctionIfExist(failureCallback);\n        });\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    // processNativeHold\n    self.processHold = function(call, hold, local_hold_status, successCallback, failureCallback) {\n        logger.debug('processHold: local hold= ' + local_hold_status + ' remote hold= ' + hold + ' state= ' + call.peer.signalingState);\n        var peer,\n            audioDirection, videoDirection,\n            peerLocalSdp, inactiveRemoteSdp, remoteSdp;\n        peerLocalSdp = call.stableLocalSdp;\n\n        var operation = hold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        audioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        videoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if (!local_hold_status && !hold) {\n            self.muteOnHold(call, false);\n        }\n\n        //we need to do something in this case because the remove might offer active or passive but chrome does not allow that\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        // This is required for PCC and meetme with video.\n        // PCC and meetme(Media Server) not supperted VP8/VP9 codec.\n        // so video calls can not be established\n        // local video should be set to false\n        if (!(_sdpParser.isVideoCodecsSupported(call.sdp, self.isH264Enabled())) && !(_sdpParser.isSdpHasVP8Codec(call.sdp)) && (call.sdp.indexOf(CONSTANTS.SDP.M_LINE + CONSTANTS.STRING.VIDEO + ' 0 ', 0) === -1)) {\n            self.setOriginatorSendLocalVideo(call, call.sdp, false);\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n        call.sdp = _sdpParser.checkAndRestoreICEParams(call.sdp, peerLocalSdp);\n\n        // chrome38 fix\n        inactiveRemoteSdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n        inactiveRemoteSdp = _sdpParser.updateVideoSdpDirectionToInactive(inactiveRemoteSdp);\n\n        if(self.needNewPeer(call, true, true)) {\n            self.createNewPeerForCall(call);\n        }\n\n        peer = call.peer;\n\n        if (_sdpParser.isSdpHasVideo(call.prevRemoteSdp) && (!_sdpParser.isSdpHasVideo(call.sdp))) {\n            self.setOriginatorSendLocalVideo(call, call.sdp, false);\n        }\n\n        // 1st setRemoteDescription to make webrtc remove the audio and/or video streams\n        // 2nd setRemote will add the audio stream back so that services like MOH can work\n        // This code will also run in UnHold scenario, and it will remove & add video stream\n        logger.trace('processHold: Setting remote description with (offer) SDP: ' + inactiveRemoteSdp);\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, inactiveRemoteSdp, function processHoldSetFirstRemoteDescriptionSuccessCallback() {\n            remoteSdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n\n            logger.trace('processHold: Setting remote description with (offer) SDP: ' + remoteSdp);\n            self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, remoteSdp, function processHoldSetSecondRemoteDescriptionSuccessCallback() {\n                if (!hold && !local_hold_status && (videoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE)) {\n                    call.remoteVideoState = CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n                } else {\n                    call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                }\n                peer.createAnswer(function processHoldCreateAnswerSuccessCallback(obj) {\n\n                    logger.debug('processHold: isSdpEnabled audio= ' + _sdpParser.isAudioSdpEnabled(obj.sdp) + ' video= '+ _sdpParser.isVideoSdpEnabled(obj.sdp));\n\n                    if (hold) {\n                        logger.debug('processHold: Remote HOLD');\n                        obj.sdp = _sdpParser.respondToRemoteSdpDirections(obj.sdp, call.sdp);\n                    } else if (!local_hold_status) {\n                        logger.debug('processHold: Remote UNHOLD: direction left as it is');\n\n                        if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                            if (self.canOriginatorSendLocalVideo(call)) {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            }\n                        } else {\n                            if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                            } else {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n                        }\n                        //change audio's direction to sendrecv for ssl attendees in a 3wc\n                        obj.sdp = _sdpParser.changeDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n                    } else if (local_hold_status && !hold) {\n                        logger.debug('processHold: Remote UNHOLD on local hold');\n\n                        if (audioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                            obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                        } else {\n                            obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        }\n\n                        if (self.canOriginatorSendLocalVideo(call)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                        }\n                    }\n\n                    obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n                    obj.sdp = _sdpParser.updateVersion(peerLocalSdp, obj.sdp);\n                    obj.sdp = _sdpParser.checkIceParamsLengths(obj.sdp, call.sdp);\n                    obj.sdp = _sdpParser.checkAndRestoreICEParams(obj.sdp, call.sdp);\n                    if (_sdpParser.isSdpHasVideoWithZeroPort(obj.sdp) && self.getDefaultVideoContainer()) {\n                        self.useDefaultRenderer(false, false, false);\n                    }\n\n                    //This one is important because the remote party might have offered pasive or active, but we had set it to actpass so that chrome works.\n                    obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n                    obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n                    logger.trace('processHold: Setting local description with SDP: ' + obj.sdp);\n\n                    obj.sdp = _sdpPipeline(call.id, obj.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n                    peer.setLocalDescription(obj, function processHoldSetLocalDescriptionSuccessCallback() {\n                        logger.debug('processHold: setLocalDescription success!! ' + 'iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                        if (call.supportTrickle) {\n                            _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                        } else if (peer.iceGatheringState === 'complete') {\n                            if (call.successCallback) {\n                                logger.debug('processHold iceGatheringState completed ' + peer.localDescription.sdp);\n                                _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                            }\n                        }\n                    }, function processHoldSetLocalDescriptionFailureCallback(e) {\n                        logger.error('processHold: setLocalDescription failed!! ' + e);\n                        _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                    });\n                }, function processHoldCreateAnswerFailureCallback(e) {\n                    logger.error('processHold: createAnswer failed!!: ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                });\n            }, function processHoldSetSecondRemoteDescriptionFailureCallback(e) {\n                logger.error('processHold: second setRemoteDescription failed!! ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n            });\n        }, function processHoldSetFirstRemoteDescriptionFailureCallback(e) {\n            logger.debug('processHold: first setRemoteDescription failed!! ' + e);\n            _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n        });\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    // processNativeUpdate\n    self.processUpdate = function (call, successCallback, failureCallback) {\n        logger.debug('processUpdate: state= ' + call.peer.signalingState);\n        var peer,\n            remoteAudioState, remoteVideoState, remoteVideoDirection,\n            localDescObj, peerLocalSdp;\n        peerLocalSdp = call.stableLocalSdp;\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        // Meetme workaround\n        call.sdp = _sdpParser.addSdpMissingCryptoLine(call.sdp);\n\n        call.sdp = _sdpParser.checkAndRestoreICEParams(call.sdp, peerLocalSdp);\n\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE &&\n                call.currentState === 'COMPLETED') {\n            switch (call.remoteVideoState) {\n            case CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE:\n            case CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY:\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                break;\n            case CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE:\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                break;\n            }\n        }\n\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n        //this part is a work-around for webrtc bug\n        //set remote description with inactive media lines first.\n        //then set remote description with original media lines.\n\n        //keep original values of remote audio and video states\n        remoteAudioState = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n\n        if(self.needNewPeer(call, true, true)) {\n            self.createNewPeerForCall(call);\n        }\n\n        peer = call.peer;\n\n        //Since Chrome does not support offer with anything else than actpass, we need to set it.\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        //set media lines with inactive state for workaround\n        call.sdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n        call.sdp = _sdpParser.updateVideoSdpDirectionToInactive(call.sdp);\n\n        logger.trace('processUpdate: Setting remote description with (offer) SDP: ' + call.sdp);\n\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp, function processUpdateWorkaroundSetRemoteDescriptionSuccessCallback() {\n            logger.debug('processUpdate: workaround setRemoteDescription success');\n\n            //restore original values\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, remoteAudioState);\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, remoteVideoState);\n            logger.trace('processUpdate: Setting remote description with (offer) SDP: ' + call.sdp);\n\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp, function processUpdateSetRemoteDescriptionSuccessCallback() {\n                logger.debug('processUpdate: setRemoteDescription success');\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n                peer.createAnswer(function processUpdateCreateAnswerSuccessCallback(obj) {\n                    logger.debug('processUpdate: isSdpEnabled audio= ' + _sdpParser.isAudioSdpEnabled(obj.sdp) + ' video= ' + _sdpParser.isVideoSdpEnabled(obj.sdp));\n\n                    if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                        if (self.canOriginatorSendLocalVideo(call)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                        }\n                    } else {\n                        if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                        }\n                    }\n                    obj.sdp = _sdpParser.updateVersion(peerLocalSdp, obj.sdp);\n                    obj.sdp = _sdpParser.checkIceParamsLengths(obj.sdp, call.sdp);\n\n                    //This is important because we changed the remote role to actpass for chrome.\n                    obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n                    obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n                    obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n                    obj.sdp = _sdpPipeline(call.id, obj.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                    localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, obj.sdp);\n\n                    var processUpdateSetLocalDescriptionSuccessCallback = function() {\n                        logger.debug('processUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                        if (call.supportTrickle) {\n                            _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                        } else if (peer.iceGatheringState === 'complete') {\n                            if (call.successCallback) {\n                                logger.debug('processUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                                _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                            }\n                        }\n                    };\n\n                    logger.trace('processUpdate: Setting local description with (answer) SDP: ' + obj.sdp);\n                    peer.setLocalDescription(localDescObj, function () {\n                        // This is a workaround to prevent an issue with ordering of events in Chrome\n                        // We add a delay so that the iceGatheringState reflects the real state.\n                        // https://bugs.chromium.org/p/webrtc/issues/detail?id=1873\n                        setTimeout(processUpdateSetLocalDescriptionSuccessCallback, 10);\n                    }, function processUpdateSetLocalDescriptionSuccessCallback(e) {\n                        logger.debug('processUpdate: setlocalDescription failed!!' + e);\n                        _utils.callFunctionIfExist(failureCallback, 'processUpdate: setlocalDescription failed!!');\n                    });\n                }, function processUpdateCreateAnswerFailureCallback(e) {\n                    logger.debug('processUpdate: createAnswer failed!! ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                });\n            }, function processUpdateSetRemoteDescriptionSuccessCallback(e) {\n                logger.debug('processUpdate: setRemoteDescription failed!!' + e);\n                _utils.callFunctionIfExist(failureCallback, 'processUpdate: setRemoteDescription failed!!');\n            });\n        }, function processUpdateWorkaroundSetRemoteDescriptionSuccessCallback(e) {\n            logger.debug('processUpdate: workaround setRemoteDescription failed!!' + e);\n            _utils.callFunctionIfExist(failureCallback, 'processUpdate: workaround setRemoteDescription failed!!');\n        });\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    // processNativeAnswer\n    self.processAnswer = function(call, onSuccess, onFail, isAnswer) {\n        logger.debug('processAnswer: state= ' + call.peer.signalingState);\n        var onSuccessAfterWorkarounds, setRemoteDescription,\n            remoteVideoDirection, localVideoDirection,\n            peer = call.peer,\n            origSdp;\n\n        // If it was specified that this SDP operation is a call answer operation, then\n        //      provide that to the SDP pipeline. This occurs during slow start scenarios,\n        //      but processAnswer is most often a call start operation.\n        var callOperation = ( isAnswer ? CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL : CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL );\n\n        onSuccessAfterWorkarounds = function() {\n            call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n            _utils.callFunctionIfExist(onSuccess);\n        };\n\n        setRemoteDescription = function(operation, call, onSuccess, onFailure) {\n            logger.trace('processAnswer: Setting remote description with (answer) SDP: ' + call.sdp);\n            self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n                function() {\n                    logger.debug('processAnswer: setRemoteDescription success');\n                    onSuccess();\n                },\n                function(e) {\n                    logger.error('processAnswer: setRemoteDescription failed: ' + e);\n                    onFailure();\n                });\n        };\n\n        call.sdp = _sdpParser.updateH264LevelTo42E01F(call.sdp, self.isH264Enabled());\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, peer.localDescription.sdp, self.isH264Enabled());\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n\n        if (peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.HAVE_REMOTE_PRANSWER) {\n\n            if (_sdpParser.isIceLite(call.prevRemoteSdp) !== _sdpParser.isIceLite(call.sdp)) {\n                logger.debug('ice - ice-lite change.');\n                onFail(CONSTANTS.WEBRTC.ERROR.ICE_ICELITE);\n                return;\n            }\n\n            origSdp = call.sdp;\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            logger.debug('call processPrAnswer again to trigger on remote stream added with updated sdp.');\n\n\n            self.processPreAnswer(call,\n                function() {\n                    call.sdp = origSdp;\n                    logger.debug('processPrAnswer success callback. Restore original sdp.');\n                    setRemoteDescription(callOperation, call, onSuccessAfterWorkarounds, onFail);\n                },\n                function() {\n                    call.sdp = origSdp;\n                    logger.debug('processPrAnswer failure callback. Restore original sdp.');\n                    setRemoteDescription(callOperation, call, onSuccessAfterWorkarounds, onFail);\n                }\n            );\n            return;\n        }\n\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n        localVideoDirection = _sdpParser.getVideoSdpDirection(call.peer.localDescription.sdp);\n\n        // this is needed for buggy webrtc api. when term answers with video to audio only call\n        // this scenario does not work without converting to sendrecv\n        logger.debug('processAnswer: ice-lite: do remote video escalation');\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n\n        if ((localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY || localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) &&\n            (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE || remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY)) {\n\n            // Audio <--> Audio : apply workaround step 1\n\n            setRemoteDescription(callOperation, call, onSuccessAfterWorkarounds, onFail);\n        } else if (localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY &&\n            (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY || remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE)) {\n\n            // Audio  <--> Audio-Video\n            setRemoteDescription(null, call, function() {\n                self.performVideoStartWorkaround(callOperation, call, onSuccessAfterWorkarounds, onFail);\n            }, onFail);\n        } else {\n            // Audio <--> Audio\n            // Or\n            // Audio-Video <--> Audio-Video\n            // there is remote video, no need for orig side workaround\n\n            setRemoteDescription(callOperation, call, onSuccessAfterWorkarounds, onFail);\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    // processNativePreAnswer\n    self.processPreAnswer = function(call, onSuccess, onFailure) {\n        logger.debug('processPreAnswer: state= ' + call.peer.signalingState);\n        var peer = call.peer;\n\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, call.peer.localDescription.sdp, self.isH264Enabled());\n\n        logger.trace('processPreAnswer: Setting remote description with (pranswer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.PRANSWER, call.sdp,\n            function processPreAnswerSetRemoteDescriptionSuccessCallback() {\n                self.setOriginatorReceiveRemoteVideo(call);\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                onSuccess();\n                logger.debug('processPreAnswer: setRemoteDescription success');\n            },\n            function processPreAnswerSetRemoteDescriptionFailureCallback(e) {\n                logger.error('processPreAnswer: setRemoteDescription failed: ' + e);\n                onFailure(e);\n            });\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    // processNativeRespond\n    self.processRespond = function(call, onSuccess, onFail, isJoin) {\n        var remoteVideoDirection,\n            peer = call.peer,\n            remoteSdpHasVideo = false;\n\n        logger.debug('processRespond: state= ' + call.peer.signalingState);\n\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, null, null, call.sdp, onSuccess, onFail);\n            return;\n        }\n\n        remoteSdpHasVideo = _sdpParser.isSdpHasVideo(call.sdp);\n\n        if (remoteSdpHasVideo) {\n            call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, call.stableLocalSdp, self.isH264Enabled());\n\n            remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n            if ((remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) && (call.currentState === 'COMPLETED')) {\n                switch (call.remoteVideoState) {\n                case CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE:\n                case CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY:\n                    call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                    break;\n                }\n            }\n            call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n        }\n\n        if (isJoin) {\n            call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n            self.muteOnHold(call, false);\n        }\n\n        logger.trace('processRespond: Setting remote description with (answer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.RESPOND, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp, function() {\n            logger.debug('processRespond: setRemoteDescription success');\n            var onSuccessAfterWorkarounds = function() {\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                _utils.callFunctionIfExist(onSuccess);\n            };\n            self.performVideoStartWorkaround(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n        }, function(e) {\n            logger.debug('processRespond: setRemoteDescription failed: ' + e);\n            _utils.callFunctionIfExist(onFail);\n        });\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     * processNativeHoldRespond\n     */\n    self.processHoldRespond = function(call, onSuccess, onFailure, isJoin) {\n        var remoteAudioDirection,\n            remoteVideoDirection,\n            onSuccessAfterWorkaround,\n            localHoldFlag = false,\n            remoteHoldFlag = false;\n\n        onSuccessAfterWorkaround = function() {\n            //call.remoteVideoState = getSdpDirection(call.sdp, video);\n            _utils.callFunctionIfExist(onSuccess);\n        };\n\n        //TODO why not FF check here\n        if(self.needNewPeer(call, false)) {\n            self.createNewPeerForCall(call);\n        }\n\n        logger.debug('processHoldRespond: state= ' + call.peer.signalingState + ' call.currentState= ' + call.currentState);\n\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            logger.trace('processHoldRespond: onRemoteStreamAdded');\n            self.onRemoteStreamAdded(call);\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.HOLD, call, null, null, call.sdp, onSuccess, onFailure);\n            return;\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, call.stableLocalSdp, self.isH264Enabled());\n\n        _sdpParser.init(call.sdp);\n        remoteHoldFlag = _sdpParser.isRemoteHold();\n\n        localHoldFlag = (call.currentState === 'LOCAL_HOLD');\n\n        remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        call.remoteVideoState = remoteVideoDirection;\n\n        logger.debug('processHoldRespond: localHold= ' + localHoldFlag + ' remoteHold= ' + remoteHoldFlag);\n\n        /* Required for MOH - start */\n        if (remoteHoldFlag === false) {\n            if ((remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) && (call.currentState === 'REMOTE_HOLD')) {\n                logger.debug('set current web state to COMPLETED');\n                call.previousState = call.currentState;\n                call.currentState = 'COMPLETED';\n            }\n        } else {\n            if (call.currentState === 'COMPLETED') {\n                logger.debug('set current web state to REMOTE_HOLD');\n                call.previousState = call.currentState;\n                call.currentState = 'REMOTE_HOLD';\n            }\n        }\n\n        if (localHoldFlag || remoteHoldFlag) {\n            logger.debug('processHoldRespond: ' + call.currentState + ' : video -> inactive');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n        }\n\n        if ((remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) && (call.currentState === 'COMPLETED')) {\n            logger.debug('processHoldRespond: video inactive -> recvonly');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n        }\n        /* Required for MOH - end */\n\n        if (isJoin) {\n            self.muteOnHold(call, false);\n        }\n\n        // this is required for displaying remote video when direction is send only\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n\n        if (localHoldFlag && remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Audio');\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        }\n\n        if (localHoldFlag && remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Video');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n        }\n\n        // If we have a configuration to force disable media on hold we tell chrome that the other side is inactive this will\n        // prevent chrome from sending noise even after being muted.\n        if (localHoldFlag && _config.forceDisableMediaOnHold && remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            logger.debug('processHoldRespond: Changing remote direction from recvonly to inactive');\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n            remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        }\n\n        if (remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n            remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            logger.trace('processHoldRespond: Setting remote description with (answer) SDP: ' + call.sdp);\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.HOLD, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n                function processHoldRespondSetRemoteDescriptionSuccessCallback() {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns success');\n                    onSuccessAfterWorkaround();\n                },\n                function processHoldRespondSetRemoteDescriptionFailureCallback(e) {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns failed: ' + e);\n                    _utils.callFunctionIfExist(onFailure);\n                }\n            );\n        } else {\n            self.setRemoteDescription(null, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n                function processHoldRespondSetRemoteDescriptionSuccessCallback() {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns success');\n                    self.performVideoStartWorkaround(CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD, call, onSuccessAfterWorkaround, onFailure);\n                },\n                function processHoldRespondSetRemoteDescriptionFailureCallback(e) {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns failed: ' + e);\n                    _utils.callFunctionIfExist(onFailure);\n                }\n            );\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.processRemoteOfferOnLocalHold = function(call, successCallback, failureCallback) {\n        logger.info('processRemoteOfferOnLocalHold');\n        if (call.peer) {\n            _utils.callFunctionIfExist(successCallback, call.stableLocalSdp);\n        } else {\n            _utils.callFunctionIfExist(failureCallback, 'we dont have a peer object somehow');\n        }\n    };\n\n    self.removeJslIdFromContainer = function() {\n        if (self.getDefaultVideoContainer()) {\n            self.getDefaultVideoContainer().removeAttribute('jsl-id');\n            self.disposeStreamRenderer(self.getDefaultVideoContainer().lastElementChild);\n        } else if (self.getLocalVideoContainer()) {\n            self.getLocalVideoContainer().removeAttribute('jsl-id');\n            self.disposeStreamRenderer(self.getLocalVideoContainer());\n        }\n    };\n\n    self.clearLocalMediaProperties = function(localMedia) {\n        localMedia.stream = null;\n        localMedia.originalStream = null;\n        localMedia.audioContext = null;\n        localMedia.audioGain = null;\n        localMedia.mediaStreamDestination = null;\n    };\n\n    self.endLocalMedia = function(localMedia) {\n        if (localMedia && localMedia.stream && !localMedia.privateStream) {\n            logger.info('stopping local media ' + localMedia.stream.id);\n            self.getLocalStreamMap().remove(localMedia.stream.id);\n            self.getRtcLibrary().detachWebAudioContextFromLocalMedia(localMedia);\n            self.getRtcLibrary().stopLocalMedia(localMedia);\n            self.clearLocalMediaProperties(localMedia);\n        }\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     * process the end call that was received\n     *\n     * @ignore\n     * @name rtc.processEnd.stop\n     */\n    self.processEnd = function(call) {\n        var id, localStreamEntries, streams;\n        self.clearIceCandidateCollectionTimer(call);\n        self.clearUpdateCandidateInterval(call);\n        self.clearWebrtcLogCollectionInterval(call);\n        if (call.peer) {\n            logger.info('close peer connection ' + call.id);\n\n            if (call.peer.getRemoteStreams) {\n                streams = call.peer.getRemoteStreams();\n                if (streams && streams[0]) {\n                    self.onRemoteStreamRemoved(call, { stream :streams[0] });\n                }\n            }\n\n            if (call.peer.signalingState !== 'closed') {\n                call.peer.close();\n            }\n            self.endLocalMedia(call.localMedia);\n\n            self.setPeerCount(self.getPeerCount() - 1);\n            if (self.getPeerCount() <= 0) {\n                self.removeJslIdFromContainer();\n\n                localStreamEntries = self.getLocalStreamMap().entries();\n                for (id in localStreamEntries) {\n                    if (localStreamEntries.hasOwnProperty(id)) {\n                        self.endLocalMedia(self.getLocalStreamMap().get(id));\n                    }\n                }\n            }\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.onSessionConnecting = function() {\n        logger.debug('onSessionConnecting');\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.onSessionOpened = function() {\n        logger.debug('onSessionOpened');\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.onSignalingStateChange = function(call) {\n        //TODO may need to move the state changes for webrtc here\n        logger.debug('Signalling state changed: state= ' + call.peer.signalingState);\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.useDefaultRenderer = function(stream, local, isVideoTrackAvailable, muted = false) {\n        var videoContainer;\n\n        if (self.getDefaultVideoContainer() && self.getDefaultVideoContainer().children.length === 0) {\n            // Create divs for the remote and local\n            self.getDefaultVideoContainer().innerHTML = '<div style=\\'height:100%;width:100%\\'></div><div style=\\'position:absolute;bottom:10px;right:10px;height:30%; width:30%;\\'></div>';\n        }\n\n        if (local) {\n            videoContainer = self.getDefaultVideoContainer().lastElementChild;\n        } else {\n            videoContainer = self.getDefaultVideoContainer().firstElementChild;\n            videoContainer.style.width = '100%';\n        }\n        return self.createStreamRenderer(stream, videoContainer, {\n            audio: !local,\n            video: isVideoTrackAvailable,\n            split: true,\n            muted\n        });\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.createStreamRenderer = function(stream, container, { audio = true, video = true, split = false, muted = false } = {}) {\n\n        /**\n         * Sets the output speaker for audio from the HTMLElement to the default\n         *    speaker.\n         * The default speaker should have been set previously using the\n         *    `setDefaultDevices` API.\n         * The element must support `.setSinkId` to be able to change speaker.\n         * @method setSelectedSpeaker\n         * @param  {HTMLElement} element\n         */\n        function setSelectedSpeaker(element) {\n            var speakerId = self.getSelectedSpeakerId();\n            if (!speakerId) {\n                logger.debug('No default speaker set. Not changing sinkId.');\n                return;\n            }\n\n            if(typeof element.setSinkId !== 'undefined') {\n                element.setSinkId(speakerId)\n                    .then(function() {\n                        logger.debug('Default speaker set.', speakerId);\n                    })\n                    .catch(function(error) {\n                        logger.debug('Could not set default speaker. ' + speakerId, error);\n                    });\n            } else {\n                logger.debug('Renderer does not support changing speaker.');\n            }\n        }\n\n        var videoRenderer, renderer, safeStreamId;\n\n        if (!stream || !container) {\n            return;\n        }\n\n        safeStreamId = makeSafeForCSS(stream.id);\n\n        if (video) {\n            // Note: We don't care that the video is being re-used for some reason.\n            videoRenderer = container.querySelector('video');\n            if (!videoRenderer) {\n                videoRenderer = document.createElement('video');\n                container.appendChild(videoRenderer);\n            }\n\n            // Adjust the id of the video renderer with the new id.\n            videoRenderer.id = 'video-stream-id-' + safeStreamId;\n            videoRenderer.srcObject = stream;\n            videoRenderer.style.width = '100%';\n            videoRenderer.style.height = '100%';\n\n            videoRenderer.autoplay = 'true';\n            if (!audio || muted || split) {\n                videoRenderer.muted = 'true';\n            }\n            //This seems required on Android, as changing an existing video element does not trigger the autoplay\n            var playPromise = videoRenderer.play();\n            if(playPromise !== undefined) {\n                // `.play()` is async and returns a promise in some browsers.\n                playPromise.catch(function(error) {\n                    logger.debug('Autoplay video was prevented.', error);\n                });\n            }\n\n            // Always set the output speaker for all renderer elements. This\n            //    works-around certain scenarios where audio comes from the\n            //    wrong speaker after re-renders (eg. unhold, stop video).\n            // Reference: KAA-1824\n            setSelectedSpeaker(videoRenderer);\n        }\n\n        if (audio && split) {\n            if (safeStreamId) {\n                renderer = container.querySelector('#audio-stream-id-' + safeStreamId);\n                if (!renderer) {\n                    renderer = document.createElement('audio');\n                    renderer.id = 'audio-stream-id-' + safeStreamId;\n                    container.appendChild(renderer);\n                }\n            }\n            if (muted) {\n                renderer.muted = 'true';\n            }\n            renderer.autoplay = 'true';\n            renderer.srcObject = stream;\n\n            // Always set the output speaker for all renderer elements. This\n            //    works-around certain scenarios where audio comes from the\n            //    wrong speaker after re-renders (eg. unhold, stop video).\n            // Reference: KAA-1824\n            setSelectedSpeaker(renderer);\n        } else {\n            renderer = videoRenderer;\n        }\n\n        return renderer;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.addCallIdInPluginContainer = function(call) {\n        logger.info('addCallIdInPluginContainer Call ID= ' + call.id);\n        if (self.getDefaultVideoContainer()) {\n            self.getDefaultVideoContainer().setAttribute('jsl-id', call.id);\n        } else if (self.getRemoteVideoContainer()) {\n            self.getRemoteVideoContainer().setAttribute('jsl-id', call.id);\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.isActiveCallInVideoContainer = function(container, call) {\n        logger.info('isActiveCallInVideoContainer Call ID= ' + call.id);\n        if (container.getAttribute('jsl-id') !== 'undefined') {\n            logger.info('isActiveCallInVideoContainer Jsl Id= ' + container.getAttribute('jsl-id'));\n            if (call.id !== container.getAttribute('jsl-id')) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // nativeOnRemoteStreamAdded\n    self.onRemoteStreamAdded = function(call, event) {\n        var fireEvent,\n            remoteVideoTracks = [],\n            isVideoTrackAvailable = false;\n\n        if (self.getDefaultVideoContainer()) {\n            if (!self.isActiveCallInVideoContainer(self.getDefaultVideoContainer(), call)) {\n                logger.debug('onRemoteStreamAdded: It is not active call. Call Id: ' + call.id);\n                return;\n            }\n        } else if (self.getRemoteVideoContainer()) {\n            if (!self.isActiveCallInVideoContainer(self.getRemoteVideoContainer(), call)) {\n                logger.debug('onRemoteStreamAdded: It is not active call. Call Id: ' + call.id);\n                return;\n            }\n        }\n\n        // The idea with this 'if' is that the first time this gets called, we will have an event.\n        // Subsequent calls, don't need the stream.\n        if (event && event.stream) {\n            call.remoteStream = event.stream;\n            call.remoteStreamId = event.stream.id;\n            event.stream.onaddtrack = function(){\n                logger.debug('onaddtrack for stream ' + event.stream.id);\n                self.onRemoteStreamAdded(call);\n            };\n\n            remoteVideoTracks = event.stream.getVideoTracks();\n        } else {\n            remoteVideoTracks = self.getRemoteVideoTrack(call.peer);\n            if (!call.remoteStream) {\n                logger.error('About to try to render video without having a stream. This state should not happen');\n            }\n        }\n\n        if (remoteVideoTracks && _sdpParser.isVideoSdpEnabled(call.sdp)) {\n            if (remoteVideoTracks.length > 0) {\n                isVideoTrackAvailable = true;\n            }\n        }\n\n        if (call.mergedCall) {\n            var source = call.mergedCall.localMedia.audioContext.createMediaStreamSource(event.stream);\n            source.connect(call.mergedCall.localMedia.mediaStreamDestination);\n            call.mergedCall.localMedia.mergedSource = source;\n        }\n\n        if (self.getDefaultVideoContainer()) {\n            fireEvent = self.useDefaultRenderer(call.remoteStream, false, isVideoTrackAvailable, call.silenced);\n        } else if (self.getRemoteVideoContainer()) {\n            fireEvent = self.createStreamRenderer(call.remoteStream, self.getRemoteVideoContainer(), {\n                video : isVideoTrackAvailable,\n                split: true,\n                muted: call.silenced\n            });\n        } else {\n            fireEvent = true;\n        }\n\n        logger.debug('onRemoteStreamAdded: ' + call.remoteStreamId);\n        if (fireEvent) {\n            self.fireOnStreamAddedEvent(call, call.remoteStream);\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.fireOnStreamAddedEvent = function(call, stream) {\n        if (call && call.call && call.call.onStreamAdded) {\n            self.setOriginatorReceiveRemoteVideo(call);\n            _utils.callFunctionIfExist(call.call.onStreamAdded, stream);\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.onRemoteStreamRemoved = function(call, event) {\n        var container;\n        logger.info('removing stream ' + event.stream.id);\n        if (self.getDefaultVideoContainer()) {\n            container = self.getDefaultVideoContainer().firstElementChild;\n        } else if (self.getRemoteVideoContainer()) {\n            container = self.getRemoteVideoContainer();\n        }\n        self.disposeStreamRenderer(container, event.stream.id);\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.clearUpdateCandidateInterval = function(call) {\n        clearInterval(call.updateCandidateInterval);\n        call.updateCandidateInterval = null;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.clearIceCandidateCollectionTimer = function(call) {\n        //This method wasn't implemented in webrtc.js\n        clearTimeout(call.iceCandidateCollectionTimer);\n        call.iceCandidateCollectionTimer = null;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.onIceCandidate = function(call, event) {\n        var sdp;\n        if (event.candidate === null) {\n            logger.debug('Null candidate received.');\n            if (call.successCallback) {\n                sdp = call.peer.localDescription.sdp;\n\n                if (_sdpParser.hasCandidates(sdp, call.relayCandidateCycle, _config.relayCandidateCollectionTimeoutCycle)) {\n                    self.clearIceCandidateCollectionTimer(call);\n                    logger.debug('Candidates received, invoking successCallback.');\n\n                    call.successCallback(sdp);\n                } else {\n                    logger.trace('Sdp does not have candidates.');\n                }\n            }\n        } else {\n            logger.debug('ICE candidate received: sdpMLineIndex = ' + event.candidate.sdpMLineIndex +\n                ', candidate = ' + event.candidate.candidate + ' for call : ' + call.id);\n\n            // if successCallback haven't been cleared, candidates will be sent via successCallback\n            // otherwise candidates will be sent via updateIceCandidates request\n            if (!call.successCallback) {\n                if (!call.candidateArray) {\n                    call.candidateArray = [];\n                }\n                call.candidateArray.push(event.candidate);\n                self.updateCandidates(call);\n            }\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.onIceComplete = function(call) {\n        var sdp;\n        logger.debug('All ICE candidates received for call : ' + call.id);\n        self.clearIceCandidateCollectionTimer(call);\n\n        if (call.successCallback) {\n            sdp = call.peer.localDescription.sdp;\n\n            logger.trace('onIceComplete sdp : ' + sdp);\n\n            call.successCallback(sdp);\n        }\n    };\n\n    self.onDataChannel = function(dataChannelWrapperObj, event) {\n        dataChannelWrapperObj.dataChannel = event.channel;\n        _utils.callFunctionIfExist(dataChannelWrapperObj.onDataChannel, dataChannelWrapperObj);\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.iceCandidateCollectionTimeoutHandler = function(call) {\n        var sdp = call.peer.localDescription.sdp;\n        self.clearIceCandidateCollectionTimer(call);\n        if (_config.relayCandidateCollectionTimeoutCycle) {\n            call.relayCandidateCycle++;\n        }\n        // set timeout if there is no ice candidate available or\n        // when audio, video port assignment isn't complete\n        if (!_sdpParser.hasCandidates(sdp, call.relayCandidateCycle, _config.relayCandidateCollectionTimeoutCycle)) {\n            logger.debug('Re-setting ice candidate collection timeout: ' + _config.iceCandidateCollectionTimeoutInterval);\n            call.iceCandidateCollectionTimer = setTimeout(function() {\n                self.iceCandidateCollectionTimeoutHandler(call);\n            }, _config.iceCandidateCollectionTimeoutInterval);\n            return;\n        }\n\n        if (call.successCallback) {\n            logger.debug('Ice candidate collection interrupted after given timeout, invoking successCallback.');\n            call.successCallback(sdp);\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.setupIceCandidateCollectionTimer = function(call) {\n        if (_config.iceCandidateCollectionTimeoutInterval) {\n            if (!call.iceCandidateCollectionTimer) {\n                logger.debug('Setting ice candidate collection timeout: ' + _config.iceCandidateCollectionTimeoutInterval);\n                if (_config.relayCandidateCollectionTimeoutCycle) {\n                    call.relayCandidateCycle = 1;\n                }\n                call.iceCandidateCollectionTimer = setTimeout(function() {\n                    self.iceCandidateCollectionTimeoutHandler(call);\n                }, _config.iceCandidateCollectionTimeoutInterval);\n            } else {\n                logger.trace('Ice candidate collection timer exists.');\n            }\n        }\n    };\n\n    self.getNativeWebRtcStats = function(call, onSuccess, onFailure) {\n        try {\n            if (call) {\n                logger.debug('getNativeWebRtcStats called');\n                call.peer.getStats(function(stats) {\n                    if (stats !== undefined && stats !== null) {\n                        var results = stats.result();\n                        _utils.callFunctionIfExist(onSuccess, results);\n                    }\n                });\n            }\n        } catch (err) {\n            logger.error('Failed to get all WebRTC Statistics: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n    };\n\n    self.getWebRtcStats = function(call, onSuccess, onFailure) {\n        try {\n            if (call) {\n                logger.debug('getWebRtcStats called');\n                self.collectWebRtcStats(call.sdp, call.peer,\n                    function(stats) {\n                        var accumulatedStats = self.getAccumulatedWebRtcStats(call.stats, stats, call.cache);\n                        _utils.callFunctionIfExist(onSuccess, accumulatedStats);\n                    },\n                    onFailure);\n            } else {\n                var cacheWebRtcStats = JSON.parse(_cache.getItem(_fcs.getUser() + '_stats'));\n                _utils.callFunctionIfExist(onSuccess, cacheWebRtcStats);\n            }\n        } catch (err) {\n            logger.error('Failed to get WebRTC Statistics: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n        return self.getStats();\n    };\n\n    self.getAccumulatedWebRtcStats = function(statsList, currentStats, callCache) {\n        var i, accumulatedStats = {\n            audio: {\n                packetsSent: 0,\n                bytesSent: 0,\n                bytesReceived: 0,\n                peerAddress: null,\n                codec: null,\n                packetsLost: 0,\n                jitter: null,\n                rtt: null\n            },\n            video: {\n                packetsSent: 0,\n                bytesSent: 0,\n                bytesReceived: 0,\n                peerAddress: null,\n                codec: null,\n                packetsLost: 0,\n                rtt: null\n            }\n        };\n        if (statsList !== undefined) {\n            for (i = 0; i < statsList.length; i++) {\n                self.accumulateStats(accumulatedStats.audio, statsList[i].audio);\n                self.accumulateStats(accumulatedStats.video, statsList[i].video);\n            }\n        }\n\n        self.accumulateStats(accumulatedStats.audio, currentStats.audio);\n        accumulatedStats.audio.peerAddress = currentStats.audio.peerAddress;\n        accumulatedStats.audio.codec = currentStats.audio.codec;\n        accumulatedStats.audio.jitter = currentStats.audio.jitter;\n        accumulatedStats.audio.rtt = currentStats.audio.rtt;\n\n        self.accumulateStats(accumulatedStats.video, currentStats.video);\n        accumulatedStats.video.peerAddress = currentStats.video.peerAddress;\n        accumulatedStats.video.codec = currentStats.video.codec;\n        accumulatedStats.video.rtt = currentStats.video.rtt;\n\n        if (callCache && _config.recordCallStats) {\n            // if flag enabled, allow saving the call statistics in app's local storage\n            _cache.setItem(_fcs.getUser() + '_stats', JSON.stringify(accumulatedStats));\n        }\n        return accumulatedStats;\n    };\n\n    self.accumulateStats = function(accumulatedStatsObj, statsObj) {\n        accumulatedStatsObj.packetsSent += getInteger(statsObj.packetsSent);\n        accumulatedStatsObj.bytesSent += getInteger(statsObj.bytesSent);\n        accumulatedStatsObj.bytesReceived += getInteger(statsObj.bytesReceived);\n        accumulatedStatsObj.packetsLost += getInteger(statsObj.packetsLost) === -1 ? 0 : getInteger(statsObj.packetsLost);\n    };\n\n    self.collectWebRtcStats = function(statsSdp, peer, onSuccess, onFailure) {\n        try {\n            if (peer) {\n                logger.debug('collectWebRtcStats called');\n                peer.getStats(function(stats) {\n                    if (stats !== undefined && stats !== null) {\n                        var results = stats.result();\n                        self.setWebRtcStats(results, statsSdp);\n\n                        _utils.callFunctionIfExist(onSuccess, self.getStats());\n                    }\n                });\n            }\n        } catch (err) {\n            logger.error('Failed to collectWebRtcStats: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n\n        return self.getStats();\n    };\n\n    self.setWebRtcStats = function(results, statsSdp) {\n\n        var i, j, res, names, mediaDescriptions, sdpAudioPort, sdpVideoPort,\n            transportId, googChannelId, googCodecName, alwaysMediaOnBroker,\n            stats = {\n                audio: {\n                    packetsSent: null,\n                    bytesSent: null,\n                    bytesReceived: null,\n                    peerAddress: '',\n                    codec: null,\n                    packetsLost: null,\n                    jitter: null,\n                    rtt: null\n                },\n                video: {\n                    packetsSent: null,\n                    bytesSent: null,\n                    bytesReceived: null,\n                    peerAddress: null,\n                    codec: null,\n                    packetsLost: null,\n                    rtt: null\n                }\n            };\n\n        if (_sdpParser.isIceLite(statsSdp)) {\n            alwaysMediaOnBroker = true;\n        } else {\n            alwaysMediaOnBroker = false;\n        }\n\n        if (statsSdp !== undefined && statsSdp !== null && results !== undefined && results !== null) {\n            _sdpParser.init(statsSdp);\n            _sdpParser.parseSDP(statsSdp);\n            mediaDescriptions = _sdpParser.getMediaDescriptions();\n\n            if (mediaDescriptions !== undefined) {\n                if (mediaDescriptions[0] !== undefined) {\n                    sdpAudioPort = mediaDescriptions[0].port;\n                }\n\n                if (mediaDescriptions[1] !== undefined) {\n                    sdpVideoPort = mediaDescriptions[1].port;\n                }\n            }\n\n            for (i = 0; i < results.length; i++) {\n                res = results[i];\n                names = res.names();\n                if (names !== undefined) {\n                    for (j = 0; j < names.length; j++) {\n                        googChannelId = res.stat('googChannelId');\n                        transportId = res.stat('transportId');\n                        googCodecName = res.stat('googCodecName');\n                        if ((transportId !== undefined && transportId.indexOf('audio') > -1) ||\n                            (googChannelId !== undefined && googChannelId.indexOf('audio') > -1)) {\n\n                            if (googCodecName === 'VP8' || googCodecName === 'H264') {\n                                self.fillStats(stats.video, res, names, j, sdpVideoPort, alwaysMediaOnBroker);\n                            } else {\n                                self.fillStats(stats.audio, res, names, j, sdpAudioPort, alwaysMediaOnBroker);\n                            }\n                        } else if ((transportId !== undefined && transportId.indexOf('video') > -1) ||\n                            (googChannelId !== undefined && googChannelId.indexOf('video') > -1)) {\n                            self.fillStats(stats.video, res, names, j, sdpVideoPort, alwaysMediaOnBroker);\n                        }\n\n                    }\n                    if (!alwaysMediaOnBroker && sdpVideoPort !== undefined) {\n                        stats.video.peerAddress = stats.audio.peerAddress.split(':')[0];\n                    }\n                    self.setStats(stats);\n                }\n            }\n        }\n\n    };\n\n    self.fillStats = function(statsObj, res, names, index, sdpRemotePort, alwaysMediaOnBroker) {\n        var remotePort, remoteAddress;\n\n        if ((res.stat('googActiveConnection') === 'true') && alwaysMediaOnBroker) {\n            remoteAddress = res.stat('googRemoteAddress');\n\n            if (remoteAddress !== undefined) {\n                if (remoteAddress.split(':') !== undefined && remoteAddress.split(':')[1] !== undefined) {\n                    remotePort = remoteAddress.split(':')[1];\n                }\n\n                if (remotePort === sdpRemotePort) {\n\n                    statsObj.peerAddress = remoteAddress;\n\n                    if (names[index] === 'bytesReceived') {\n                        statsObj.bytesReceived = res.stat(names[index]);\n                    }\n\n                    if (names[index] === 'packetsSent') {\n                        statsObj.packetsSent = res.stat(names[index]);\n                    }\n\n                    if (names[index] === 'bytesSent') {\n                        statsObj.bytesSent = res.stat(names[index]);\n                    }\n                }\n            }\n        }\n\n        if ((res.stat('googActiveConnection') === 'true') && !alwaysMediaOnBroker) {\n            remoteAddress = res.stat('googRemoteAddress');\n            statsObj.peerAddress = remoteAddress;\n        }\n\n        if (res.type === 'ssrc') {\n            if (names[index] === 'packetsLost') {\n                statsObj.packetsLost = res.stat(names[index]);\n            }\n\n            if (names[index] === 'googCodecName') {\n                statsObj.codec = res.stat(names[index]);\n            }\n\n            if (names[index] === 'googJitterReceived') {\n                statsObj.jitter = res.stat(names[index]);\n            }\n\n            if (names[index] === 'googRtt') {\n                statsObj.rtt = res.stat(names[index]);\n            }\n\n            if (!alwaysMediaOnBroker) {\n                if (names[index] === 'bytesReceived') {\n                    statsObj.bytesReceived = res.stat(names[index]);\n                }\n                if (names[index] === 'packetsSent') {\n                    statsObj.packetsSent = res.stat(names[index]);\n                }\n                if (names[index] === 'bytesSent') {\n                    statsObj.bytesSent = res.stat(names[index]);\n                }\n            }\n        }\n    };\n\n    self.clearWebrtcLogCollectionInterval = function(call) {\n        //This method wasn't implemented in webrtc.js\n        clearInterval(call.webrtcLogCollectionInterval);\n        call.webrtcLogCollectionInterval = null;\n    };\n\n    self.webrtcLogCollectionTimeoutHandler = function(call) {\n        if (call && call.peer && call.peer.signalingState !== 'closed') {\n            call.peer.getStats(function(stats) {\n                var results = stats.result(),\n                    i, j, res, names, statObj,\n                    resultLength, namesLength;\n                resultLength = results.length;\n                for (i = 0; i < resultLength; ++i) {\n                    res = results[i];\n                    if (!res.local || res.local === res) {\n                        statObj = {};\n                        statObj.timestamp = res.timestamp;\n                        if (res.id) {\n                            statObj.id = res.id;\n                        }\n                        if (res.type) {\n                            statObj.type = res.type;\n                        }\n\n                        if (res.names) {\n                            names = res.names();\n                            namesLength = names.length;\n                            for (j = 0; j < namesLength; ++j) {\n                                statObj[names[j]] = res.stat(names[j]);\n                            }\n                        } else {\n                            if (res.stat('audioOutputLevel')) {\n                                statObj.audioOutputLevel = res.stat('audioOutputLevel');\n                            }\n                        }\n                        logger.trace('Peer connection stats, report[' + i + ']: ', statObj);\n                    }\n                }\n            });\n        } else {\n            self.clearWebrtcLogCollectionInterval(call);\n        }\n    };\n\n    self.setupWebrtcLogCollectionTimer = function(call) {\n        if (_config.webrtcLogCollectionInterval) {\n            self.clearWebrtcLogCollectionInterval(call);\n            var logCollectionInterval = _config.webrtcLogCollectionInterval * 1000;\n            logger.debug('Setting webrtc log collection interval: ' + logCollectionInterval);\n            call.webrtcLogCollectionInterval = setInterval(function() {\n                self.webrtcLogCollectionTimeoutHandler(call);\n            }, logCollectionInterval);\n        }\n    };\n\n    self.oniceconnectionstatechange = function(call) {\n        var state, mediaStates = _fcs.call.MediaStates, iceConnectionState = call.peer.iceConnectionState;\n        logger.debug('ICE connection state change : ' + iceConnectionState);\n        if(iceConnectionState === 'new') {\n            state = mediaStates.NEW;\n        } else if(iceConnectionState === 'checking') {\n            state = mediaStates.CHECKING;\n        } else if(iceConnectionState === 'connected') {\n            state = mediaStates.CONNECTED;\n        } else if(iceConnectionState === 'completed') {\n            state = mediaStates.COMPLETED;\n        } else if(iceConnectionState === 'failed') {\n            state = mediaStates.FAILED;\n        } else if(iceConnectionState === 'disconnected') {\n            state = mediaStates.DISCONNECTED;\n        } else if(iceConnectionState === 'closed') {\n            state = mediaStates.CLOSED;\n        } else {\n            logger.debug('ICE connection state was not recognized');\n        }\n\n        if(state) {\n            _utils.callFunctionIfExist(call.call.onMediaStateChange, state);\n        }\n    };\n\n    self.createDataChannel = function(dataChannelWrapperObj, onSuccess, onFailure, options) {\n        try {\n            dataChannelWrapperObj.dataChannel = dataChannelWrapperObj.peer.createDataChannel(options);\n            onSuccess(dataChannelWrapperObj);\n        } catch (error) {\n            logger.error('Failed to create data channel, exception: ' + error.message);\n            onFailure(error);\n        }\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.createPeer = function(call) {\n        try {\n            var pc, constraints = {}, i, servers = [],\n                iceServerUrl, config, useIceServer;\n\n            useIceServer = !_config.ignoreIceParamsForServices || _config.ignoreIceParamsForServices.indexOf('call') !== -1;\n            logger.info('useIceServer: ' + useIceServer);\n            if (useIceServer) {\n                iceServerUrl = self.getIceServerUrl();\n            }\n\n            if (iceServerUrl instanceof Array) {\n                for (i = 0; i < iceServerUrl.length; i++) {\n                    servers[i] = iceServerUrl[i];\n                }\n            } else if (!iceServerUrl || iceServerUrl === '') {\n                servers = [];\n            } else {\n                servers[0] = iceServerUrl;\n            }\n            config = {\n                iceServers: servers,\n\n                // TODO: Remove this, I believe this is no longer doing anything.\n                // NOTE: This is added temporarily because Chrome and Firefox have required set\n                // by default and the media broker doesn't support multiplexing. ADG-14986\n                rtcpMuxPolicy: 'negotiate',\n\n                // NOTE: Make sure plan-b remains as default until WebRTC gateway can support unified plan.\n                sdpSemantics: 'plan-b'\n            };\n\n            // If present, take the call constraints provided as config.\n            if(_config.callConstraints && _config.callConstraints.chrome) {\n                // If any constraint is malformed, the RTCPeerConnection will fail to be created.\n                logger.debug('Using custom peer constraints for call.', _config.callConstraints.chrome);\n                constraints = _config.callConstraints.chrome;\n            }\n\n            constraints.optional = constraints.optional || [];\n            constraints.optional.push({\n                'DtlsSrtpKeyAgreement': self.isDtlsEnabled()\n            });\n\n            if (self.isDscpEnabled() !== undefined) {\n                constraints.optional.push({\n                    'googDscp': true\n                });\n            }\n\n            //Add iceTransportPolicy:relay in order to force TURN\n            if(_config.useRelayOnly) {\n                config.iceTransportPolicy = 'relay';\n            }\n\n            if (_config.bundlePolicy !== CONSTANTS.WEBRTC.SDP.BUNDLE_POLICY.DISABLED) {\n                config.bundlePolicy = _config.bundlePolicy;\n            }\n\n\n            pc = self.getRtcLibrary().createRTCPeerConnection(config, constraints);\n            pc._peerId = peerId++;\n\n            if (call.peer) {\n                logger.debug(`createPeer - Peer Id: ${call.peer._peerId} - detaching old peer from call ${call.id}.`);\n\n                // Let's make sure we stop listening to any events from the old peer.\n                call.peer.onconnecting = undefined;\n                call.peer.onopen = undefined;\n                call.peer.onsignalingstatechange = undefined;\n                call.peer.onaddstream = undefined;\n                call.peer.onremovestream = undefined;\n                call.peer.onicecandidate = undefined;\n                call.peer.onicecomplete = undefined;\n                call.peer.oniceconnectionstatechange = undefined;\n                call.peer.ondatachannel = undefined;\n                call.peer.onicegatheringstatechange = undefined;\n\n                // Close the peer, it is no longer needed.\n                call.peer.close();\n            }\n\n            self.setPeerCount(self.getPeerCount() + 1);\n            call.peer = pc;\n\n            logger.debug(`createPeer - Peer Id: ${pc._peerId} - created new peer and attached to call (${call.id}).`);\n\n            pc.onconnecting = function(event) {\n                self.onSessionConnecting(call, event);\n            };\n            pc.onopen = function(event) {\n                self.onSessionOpened(call, event);\n            };\n            pc.onsignalingstatechange = function(event) {\n                self.onSignalingStateChange(call, event);\n            };\n            pc.onaddstream = function(event) {\n                self.onRemoteStreamAdded(call, event);\n            };\n            pc.onremovestream = function(event) {\n                self.onRemoteStreamRemoved(call, event);\n            };\n            pc.onicecandidate = function(event) {\n                if (pc !== call.peer) {\n                    logger.error(`Peer Id: ${pc._peerId} - received notification from detached peer not on call (Other Peer id: ${call.peer._peerId} )`);\n                    return;\n                }\n                if (pc.iceGatheringState === 'complete') {\n                    logger.debug(`Peer Id: ${pc._peerId} - ice gathering complete`);\n                    self.onIceComplete(call);\n                } else {\n                    self.setupIceCandidateCollectionTimer(call);\n                    self.onIceCandidate(call, event);\n                }\n            };\n            pc.onicecomplete = function() {\n                if (pc !== call.peer) {\n                    logger.error(`Peer Id: ${pc._peerId} - received notification from detached peer not on call (Other Peer id: ${call.peer._peerId} )`);\n                    return;\n                }\n\n                self.onIceComplete(call);\n            };\n            pc.oniceconnectionstatechange = function(event) {\n                self.oniceconnectionstatechange(call, event);\n            };\n            pc.ondatachannel = function(event) {\n                self.onDataChannel(call, event);\n            };\n\n            pc.onicegatheringstatechange = function() {\n                logger.debug(`Peer Id: ${pc._peerId} - ice gathering state change:` + pc.iceGatheringState);\n            };\n\n            logger.info(`Peer Id: ${pc._peerId} - create PeerConnection successfully.`);\n\n            self.setupWebrtcLogCollectionTimer(call);\n\n            return true;\n        } catch (err) {\n            logger.error('Failed to create PeerConnection, exception: ' + err.message);\n        }\n        return false;\n    };\n\n    self.needNewPeer = function(call, checkFireFox, incomingSDP) {\n        if(call.forceNewPeer) {\n            call.forceNewPeer = false;\n            return true;\n        }\n\n        if(checkFireFox){\n            if(_sdpParser.isRemoteEndFirefox(call.sdp)){\n                logger.debug('New peer needed as remote end is FireFox');\n                return true;\n            }\n        }\n\n        //We only want to compare those when this is an incoming SDP, not when we create an update\n        if(incomingSDP && call.prevRemoteSdp && call.sdp ){\n            if(_sdpParser.getSessionIdFromSdp(call.prevRemoteSdp) !== _sdpParser.getSessionIdFromSdp(call.sdp)){\n                logger.debug('New peer needed as session id has changed');\n                return true;\n            }\n\n            if(_sdpParser.getFingerprintFromSdp(call.prevRemoteSdp) !== _sdpParser.getFingerprintFromSdp(call.sdp)){\n                logger.debug('New peer needed as DTLS Fingerprint has changed');\n                return true;\n            }\n\n            if(_sdpParser.hasCodecPayloadChanged(call.prevRemoteSdp, call.sdp)){\n                logger.debug('New peer needed as Codec Payload has changed');\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    self.createNewPeerForCall = function(call, deleteVideoStream) {\n        var isNewPeerCreated = false,\n            oldPeer,\n            videoTrack;\n        if (call.peer) {\n            oldPeer = call.peer;\n            self.collectWebRtcStats(call.sdp, oldPeer,\n                function(stats) {\n                    logger.debug('collectWebRtcStats successfull');\n                    if (call.stats === undefined) {\n                        call.stats = [];\n                    }\n                    call.stats.push(stats);\n                    if (oldPeer.signalingState !== 'closed') {\n                        oldPeer.close();\n                    }\n                    self.setPeerCount(self.getPeerCount() - 1);\n                    call.dtmfSender = null;\n                },\n                function() {\n                    logger.debug('collectWebRtcStats failed');\n                    if (oldPeer.signalingState !== 'closed') {\n                        oldPeer.close();\n                    }\n                    self.setPeerCount(self.getPeerCount() - 1);\n                    call.dtmfSender = null;\n                });\n        }\n\n        logger.trace('Creating new peer for call: ' + call.id);\n\n        if(self.createPeer(call)){\n            logger.trace('New peer has created for call: ' + call.id);\n            if(call.localMedia && call.localMedia.stream){\n                if (deleteVideoStream) {\n                    videoTrack = call.localMedia.stream.getVideoTracks()[0];\n                    if(videoTrack) {\n                        call.localMedia.stream.removeTrack(videoTrack);\n                    } else {\n                        logger.debug('Designated to remove track after new'\n                            + ' peer creation, but no video track found.');\n                    }\n                }\n                call.peer.addStream(call.localMedia.stream);\n            }\n\n            isNewPeerCreated = true;\n        } else {\n            logger.error('New peer creation has failed!: ' + call.id);\n            if (call.stats) {\n                call.stats.pop();\n            }\n        }\n        return isNewPeerCreated;\n    };\n\n    /*\n     * Gets remote video resolutions with the order below\n     * remoteVideoHeight-remoteVideoWidth\n     *\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.getRemoteVideoResolutions = function() {\n        var remoteResolution = [],\n            remoteVideoHeight,\n            remoteVideoWidth;\n\n        if (self.getRemoteVideoContainer()) {\n            if (!self.getRemoteVideoContainer().firstChild) {\n                return remoteResolution;\n            }\n\n            remoteVideoHeight = self.getRemoteVideoContainer().firstChild.videoHeight;\n            remoteVideoWidth = self.getRemoteVideoContainer().firstChild.videoWidth;\n\n        } else {\n            if (!self.getDefaultVideoContainer().firstElementChild.firstChild) {\n                return remoteResolution;\n            }\n\n            remoteVideoHeight = self.getDefaultVideoContainer().firstElementChild.firstChild.videoHeight;\n            remoteVideoWidth = self.getDefaultVideoContainer().firstElementChild.firstChild.videoWidth;\n        }\n\n        logger.debug('remote video resolutions of plugin webrtc...');\n        logger.debug('remoteVideoWidth  : ' + remoteVideoWidth);\n        logger.debug('remoteVideoHeight : ' + remoteVideoHeight);\n\n        remoteResolution.push(remoteVideoHeight);\n        remoteResolution.push(remoteVideoWidth);\n\n        self.getLocalVideoResolutions();\n\n        return remoteResolution;\n    };\n\n    /*\n     * Gets local video resolutions with the order below\n     * localVideoHeight-localVideoWidth\n     *\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.getLocalVideoResolutions = function() {\n        var localResolution = [],\n            localVideoHeight,\n            localVideoWidth;\n\n        if (self.getLocalVideoContainer()) {\n            if (!self.getLocalVideoContainer().firstChild) {\n                return localResolution;\n            }\n\n            localVideoHeight = self.getLocalVideoContainer().firstChild.videoHeight;\n            localVideoWidth = self.getLocalVideoContainer().firstChild.videoWidth;\n\n        } else {\n            if (!self.getDefaultVideoContainer().lastElementChild.firstChild) {\n                return localResolution;\n            }\n\n            localVideoHeight = self.getDefaultVideoContainer().lastElementChild.firstChild.videoHeight;\n            localVideoWidth = self.getDefaultVideoContainer().lastElementChild.firstChild.videoWidth;\n        }\n\n        logger.debug('local video resolutions of plugin webrtc...');\n        logger.debug('localVideoWidth  : ' + localVideoWidth);\n        logger.debug('localVideoHeight : ' + localVideoHeight);\n\n        localResolution.push(localVideoHeight);\n        localResolution.push(localVideoWidth);\n\n        return localResolution;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.refreshVideoRenderer = function() {\n        return;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.sendIntraFrame = function() {\n        return;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.sendBlackFrame = function() {\n        return;\n    };\n\n    // Native implementation lies on webRtcAdaptor.js\n    self.disposeStreamRenderer = function(container, id='') {\n        const safeId = makeSafeForCSS(id);\n\n        logger.info('disposeStreamRenderer');\n        if (container) {\n            if (safeId) {\n                var renderer = container.querySelector('#stream-id-' + safeId);\n                if(renderer){\n                    container.removeChild(renderer);\n                }\n            } else {\n                container.innerHTML = '';\n            }\n        }\n    };\n\n    self.sendInbandDTMF = function(call, tone, audioContext) {\n        var oscillator1, oscillator2, freq1, freq2, gainNode, mediaStreamDestination;\n\n        if(call.localMedia && call.localMedia.mediaStreamDestination){\n            mediaStreamDestination = call.localMedia.mediaStreamDestination;\n        } else {\n            logger.error('could not send DTMF as there is no media');\n            return;\n        }\n\n        logger.info('sending inband DTMF tone: ' + tone);\n        if (tone === '1') {\n            freq1 = '697';\n            freq2 = '1209';\n        }\n        if (tone === '2') {\n            freq1 = '697';\n            freq2 = '1336';\n        }\n        if (tone === '3') {\n            freq1 = '697';\n            freq2 = '1477';\n        }\n        if (tone === '4') {\n            freq1 = '770';\n            freq2 = '1209';\n        }\n        if (tone === '5') {\n            freq1 = '770';\n            freq2 = '1336';\n        }\n        if (tone === '6') {\n            freq1 = '770';\n            freq2 = '1477';\n        }\n        if (tone === '7') {\n            freq1 = '852';\n            freq2 = '1209';\n        }\n        if (tone === '8') {\n            freq1 = '852';\n            freq2 = '1336';\n        }\n        if (tone === '9') {\n            freq1 = '852';\n            freq2 = '1477';\n        }\n        if (tone === '*') {\n            freq1 = '941';\n            freq2 = '1209';\n        }\n        if (tone === '0') {\n            freq1 = '941';\n            freq2 = '1336';\n        }\n        if (tone === '#') {\n            freq1 = '941';\n            freq2 = '1477';\n        }\n\n        oscillator1 = audioContext.createOscillator();\n        oscillator1.type = 'sine';\n        oscillator1.frequency.value = freq1;\n        gainNode = audioContext.createGain ? audioContext.createGain() : audioContext.createGainNode();\n        oscillator1.connect(gainNode, 0, 0);\n        gainNode.connect(mediaStreamDestination);\n        gainNode.gain.value = 0.1;\n        oscillator1.start();\n\n        oscillator2 = audioContext.createOscillator();\n        oscillator2.type = 'sine';\n        oscillator2.frequency.value = freq2;\n        gainNode = audioContext.createGain ? audioContext.createGain() : audioContext.createGainNode();\n        oscillator2.connect(gainNode);\n        gainNode.connect(mediaStreamDestination);\n        gainNode.gain.value = 0.1;\n        oscillator2.start();\n\n        setTimeout(function() {\n            oscillator1.disconnect();\n            oscillator2.disconnect();\n        }, 100);\n    };\n\n    /**\n     * Send DTMF tone\n     * Native implementation lies on webRtcAdaptor.js\n     *\n     * @ignore\n     * @name rtc.sendDTMF\n     * @function\n     * @param {Object} call internalCall\n     * @param {String} tone DTMF tone\n     */\n    self.sendDTMF = function(call, tone) {\n        var audioContext, localAudioTrack;\n\n        if (!_sdpParser.isSdpHasTelephoneEvent(call.peer.remoteDescription.sdp)) {\n            audioContext = call.localMedia.audioContext;\n            self.sendInbandDTMF(call, tone, audioContext);\n        } else {\n            logger.info('sending outband DTMF tone: ' + tone);\n            if (!call.dtmfSender) {\n                localAudioTrack = self.getLocalAudioTrack(call.peer);\n                if (!localAudioTrack) {\n                    return;\n                }\n                call.dtmfSender = call.peer.createDTMFSender(localAudioTrack);\n                if (!call.dtmfSender) {\n                    return;\n                }\n            }\n\n            if (call.dtmfSender.canInsertDTMF === true) {\n                call.dtmfSender.insertDTMF(tone, 400);\n            } else {\n                logger.error('Failed to execute \\'insertDTMF\\' on \\'RTCDTMFSender\\': The \\'canInsertDTMF\\' attribute is false: this sender cannot send DTMF');\n            }\n        }\n    };\n\n    self.showSettingsWindow = function() {\n        self.getRtcLibrary().showSettingsWindow();\n    };\n\n    self.set_logSeverityLevel = function(level) {\n        self.getRtcLibrary().set_logSeverityLevel(level);\n    };\n\n    self.enable_logCallback = function() {\n        var pluginLogger = _logManager.getLogger('rtcPlugin');\n        self.getRtcLibrary().enable_logCallback(pluginLogger);\n    };\n\n    self.disable_logCallback = function() {\n        self.getRtcLibrary().disable_logCallback();\n    };\n\n    self.get_audioInDeviceCount = function() {\n        return self.getRtcLibrary().get_audioInDeviceCount();\n    };\n\n    self.get_audioOutDeviceCount = function() {\n        return self.getRtcLibrary().get_audioOutDeviceCount();\n    };\n\n    self.get_videoDeviceCount = function() {\n        return self.getRtcLibrary().get_videoDeviceCount();\n    };\n\n    // set local client's video send status\n    self.setOriginatorSendLocalVideo = function(call, tSdp, status) {\n        var videoSendEnabled = _sdpParser.isVideoSdpEnabled(tSdp);\n        call.canOrigSendVideo = status && videoSendEnabled;\n    };\n\n    // check if local client sends video\n    self.canOriginatorSendLocalVideo = function(call) {\n        return call.canOrigSendVideo;\n    };\n\n    // set local client's video receive status\n    self.setOriginatorReceiveRemoteVideo = function(call) {\n        call.canOrigReceiveVideo = _sdpParser.isVideoSdpEnabled(call.sdp);\n    };\n\n    // check if local client receives video\n    self.canOriginatorReceiveRemoteVideo = function(call) {\n        return call.canOrigReceiveVideo;\n    };\n\n    self.setDTLSRoleFromStableLocalSDP = function(call) {\n        call.dtlsRole =_sdpParser.getTcpSetupAttribute(call.stableLocalSdp);\n    };\n\n    self.handleDTLSRoleFromRemoteSDP = function(call) {\n        if(!self.isDtlsEnabled()) {\n            return;\n        }\n        var remote_role = _sdpParser.getTcpSetupAttribute(call.sdp),\n            local_role = 'active';\n\n        //if we already have a role we don't want to chane it.\n        if((call.dtlsRole === 'active' || call.dtlsRole === 'passive') && remote_role === 'actpass'){\n            logger.debug('Setting local DTLS role from remote SDP : keeping existing role');\n            return;\n        }\n\n        //if we detect a conflict where both ends says they are actpass use fingerprint comparaison and modify the incoming sdp\n        if(call.dtlsRole === 'actpass' && remote_role === 'actpass'){\n            if(_sdpParser.getFingerprintFromSdp(call.lastLocalSdp) < _sdpParser.getFingerprintFromSdp(call.sdp)){\n                local_role = 'passive';\n            } else {\n                local_role = 'active';\n            }\n            call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, local_role === 'active' ? 'passive' : 'active', true);\n            logger.debug('Setting local DTLS role from remote SDP : ' + local_role + ' baed on fingerprint comparaison');\n        }\n\n        if (remote_role === 'active') {\n            local_role = 'passive';\n        }\n\n        logger.debug('Setting local DTLS role from remote SDP : ' + local_role);\n\n        call.dtlsRole = local_role;\n    };\n\n    self.setDTLSRole = function(call, role) {\n        call.dtlsRole = role;\n    };\n\n    /*\n     * TODO: add selected speaker to the audio constraint, after chrome implementation\n     */\n    self.prepareAudioConstraints = function(data) {\n        var mediaConstraints = self.getUserMediaContraints(),\n            selectedMicrophoneId = self.getSelectedMicrophoneId();\n        if(data && (data.isAudioEnabled === false || data.requestScreenShare || data.mediaSourceId)){\n            return false;\n        } else {\n            if (selectedMicrophoneId) {\n                if (typeof mediaConstraints.audio === 'boolean') {\n                    mediaConstraints.audio = {};\n                }\n                mediaConstraints.audio.deviceId = selectedMicrophoneId;\n            }\n            return mediaConstraints.audio;\n        }\n    };\n\n    var updateVideoConstraints = function (videoConstraints, videoResolution, deviceId) {\n        // If the constraint is a boolean, leave it as such if no resolution or deviceId was specified\n        if (typeof videoConstraints === 'boolean') {\n            if (!videoResolution && !deviceId) {\n                return videoConstraints;\n            }\n\n            videoConstraints = {};\n        }\n\n        if (videoResolution) {\n            videoConstraints.height = {\n                max: videoResolution.maxHeight ? videoResolution.maxHeight : videoResolution.height,\n                min: videoResolution.minHeight ? videoResolution.minHeight : videoResolution.height\n            };\n            videoConstraints.width = {\n                max: videoResolution.maxWidth ? videoResolution.maxWidth : videoResolution.width,\n                min: videoResolution.minWidth ? videoResolution.minWidth : videoResolution.width\n            };\n        }\n\n        videoConstraints.deviceId = deviceId;\n        return videoConstraints;\n    };\n\n    self.prepareVideoConstraints = function(data) {\n        var mediaConstraints,\n            selectedCameraId = self.getSelectedCameraId(),\n            isVideoEnabled, videoResolution, requestScreenShare, mediaSourceId, frameRate;\n\n        if (!data) {\n            data = {};\n        }\n        isVideoEnabled = data.isVideoEnabled;\n        videoResolution = data.videoResolution;\n        requestScreenShare = data.requestScreenShare;\n        mediaSourceId = data.mediaSourceId;\n        frameRate = data.frameRate;\n        if (!isVideoEnabled && !requestScreenShare && !mediaSourceId) {\n            return false;\n        }\n\n        if(isVideoEnabled){\n            mediaConstraints = self.getUserMediaContraints();\n            mediaConstraints.video = updateVideoConstraints(mediaConstraints.video, videoResolution, selectedCameraId);\n        }\n\n        //We need to handle specific resolution constraints for screen sharing.\n        if (requestScreenShare || mediaSourceId) {\n            //Need to use the default as we cannot\n            mediaConstraints = {\n                video : {\n                    mandatory: {\n                        'maxFrameRate': 15,\n                        'maxWidth' : 1024,\n                        'maxHeight' : 768\n                    },\n                    mediaSource: 'screen'\n                }\n            };\n\n            if (frameRate) {\n                mediaConstraints.video.mandatory.maxFrameRate = frameRate;\n            }\n\n            if (videoResolution) {\n                mediaConstraints.video.mandatory.maxWidth = videoResolution.maxWidth ? videoResolution.maxWidth : videoResolution.width;\n                mediaConstraints.video.mandatory.maxHeight = videoResolution.maxHeight ? videoResolution.maxHeight : videoResolution.height;\n            }\n\n            if (mediaSourceId) {\n                mediaConstraints.video.mandatory = { chromeMediaSourceId: mediaSourceId };\n            }\n        }\n        return mediaConstraints.video;\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.privateGetUserMedia = function(params) {\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback() {\n            var mediaInfo, privateMedia,\n                constraints = {\n                    audio: params.options.audioConstraints,\n                    video: params.options.videoConstraints\n                };\n\n            self.getRtcLibrary().getUserMedia(constraints, function privateGetUserMediaSuccessCallback(stream) {\n                privateMedia = {\n                    stream: stream,\n                    privateStream: params.options.privateStream\n                };\n                self.getPrivateStreamMap().add(stream.id, privateMedia);\n\n                mediaInfo = {\n                    id: stream.id,\n                    stream: stream\n                };\n                _utils.callFunctionIfExist(params.onSuccess, mediaInfo);\n            }, function privateGetUserMediaFailureCallback() {\n                _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_ALLOWED);\n            });\n        });\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.getCameraList = function(onSuccess) {\n        var index, cameraList = [],\n            sourceList = [];\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n            sourceList = mediaSourceInfo.sourceList;\n            for (index = 0; index < sourceList.length; index++) {\n                if (sourceList[index].kind === 'video' || sourceList[index].kind === 'videoinput') {\n                    cameraList.push(sourceList[index]);\n                }\n            }\n            _utils.callFunctionIfExist(onSuccess, cameraList);\n        });\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.getMicrophoneList = function(onSuccess) {\n        var index, microphoneList = [],\n            sourceList = [];\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n            sourceList = mediaSourceInfo.sourceList;\n            for (index = 0; index < sourceList.length; index++) {\n                if (sourceList[index].kind === 'audio' || sourceList[index].kind === 'audioinput') {\n                    microphoneList.push(sourceList[index]);\n                }\n            }\n            _utils.callFunctionIfExist(onSuccess, microphoneList);\n        });\n    };\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     */\n    self.getSpeakerList = function(onSuccess) {\n        var index, speakerList = [],\n            sourceList = [];\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n            sourceList = mediaSourceInfo.sourceList;\n            for (index = 0; index < sourceList.length; index++) {\n                if (sourceList[index].kind === 'audiooutput') {\n                    speakerList.push(sourceList[index]);\n                }\n            }\n            _utils.callFunctionIfExist(onSuccess, speakerList);\n        });\n    };\n\n    self.removeStreamById = function(id) {\n        var localStream = self.getStreamById(id);\n        if (localStream) {\n            self.getRtcLibrary().stopStream(localStream.stream);\n            self.removeStreamFromMap(id);\n        }\n    };\n\n    self.updateCandidates = function(call) {\n        // check if peer has remote description\n        // if not it means call isn't established yet and\n        // updateIceCandidate requests will be rejected from Spidr\n        if (call.peer.remoteDescription && call.peer.remoteDescription.sdp) {\n            logger.debug('updateCandidates is called with: ', call.candidateArray);\n            _utils.callFunctionIfExist(call.updateCandidates, call.candidateArray);\n            call.candidateArray = [];\n            self.clearUpdateCandidateInterval(call);\n        } else {\n            logger.warn('remote party is not ready to receive candidates');\n            if (!call.updateCandidateInterval) {\n                call.updateCandidateInterval = setInterval(()=>{\n                    self.updateCandidates(call);\n                }, 1000);\n            }\n        }\n    };\n\n    self.addRemoteCandidates = function(call, candidateArray) {\n        var peer = call.peer,\n            candidate,\n            length = candidateArray.length;\n\n        for (var i = 0; i < length; i++) {\n            // update candidate parameter type from Object to RTCIceCandidate, Firefox can only work with RTCIceCandidate\n            candidate = self.getRtcLibrary().createRTCIceCandidate(candidateArray[i]);\n            logger.debug('candidate to be added:  ', candidate);\n\n            peer.addIceCandidate(candidate).then(()=>{\n                logger.debug('addIceCandidate success:  ');\n            }).catch(e=>{\n                logger.error('Error: Failure during addIceCandidate : ',  e);\n            });\n        }\n    };\n\n    /**\n     * Changes the sinkId for the current call's video element.\n     * This changes the speaker used for audio. The \"sink Id\" is the speaker Id.\n     */\n    self.setContainerSinkId = function(speakerId, onSuccess, onFailure) {\n\n        if(!speakerId) {\n            _utils.callFunctionIfExist(onFailure, 'No speaker ID provided.');\n            return;\n        }\n        logger.debug('Setting container\\'s speaker id.', speakerId);\n\n        var videoEl;\n        if(self.getDefaultVideoContainer()) {\n            // DefaultVideoContainer has both remote and local video elements.\n            videoEl = self.getDefaultVideoContainer().children[0].firstChild;\n        } else if(self.getRemoteVideoContainer()) {\n            // RemoteVideoContainer is only the remote video element.\n            videoEl = self.getRemoteVideoContainer().children[0];\n        } else {\n            logger.debug('No video container found.');\n            _utils.callFunctionIfExist(onFailure, 'No video container found.');\n            return;\n        }\n\n        if(videoEl && typeof videoEl.sinkId !== 'undefined') {\n            logger.debug('Changing sinkId for element:', videoEl);\n            videoEl.setSinkId(speakerId)\n                .then(function() {\n                    logger.debug('Speaker successfully changed.', speakerId);\n                    _utils.callFunctionIfExist(onSuccess);\n                })\n                .catch(function(error) {\n                    logger.debug('Failed to change speaker.', error);\n                    _utils.callFunctionIfExist(onFailure, 'Failed to change speaker.');\n                });\n        } else {\n            logger.warn('Changing speaker not supported for this browser.');\n            _utils.callFunctionIfExist(onFailure, 'Not supported.');\n        }\n    };\n\n    logger.debug('WebRtcAdaptor initialized');\n}\n","import {mediaErrors} from '../../call/call.js';\nimport {compose} from '../../utils';\n\nexport function WebRtcChromeAdaptorImpl({\n    base: _super,\n    model: _model,\n    LogManager: _logManager,\n    Utils: _utils\n}) {\n    var self = this,\n        logger = _logManager.getLogger('WebRtcChromeAdaptorImpl');\n    logger.debug('WebRtcChromeAdaptor initializing');\n\n    /*\n     * Native implementation lies on webRtcAdaptor.js\n     * Most of this function is identitical to the native implementation.\n     */\n    self.startScreenMedia = function(onSuccess, onFailure, onEnded) {\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n            var video_constraints;\n            self.setMediaSources(mediaSourceInfo);\n            if (self.getScreenSourceAvailable()) {\n                video_constraints = {\n                    mandatory: {\n                        'maxFrameRate': self.getScreenFrameRate(),\n                        'maxWidth': self.getScreenWidth(),\n                        'maxHeight': self.getScreenHeight()\n                    },\n                    mediaSource: 'screen'\n                };\n\n                // This if statement is the only change from the default adaptor.\n                if(self.getMediaSourceId()) {\n                    video_constraints.mandatory.chromeMediaSourceId = self.getMediaSourceId();\n                }\n\n                self.getRtcLibrary().getUserMedia({\n                    video: video_constraints\n                }, function(stream) {\n                    var mediaInfo = self.replaceVideoStream(self.getLocalMedia().stream, stream),\n                        oldStream = self.getScreenStream();\n\n                    // If there is an old screen stream, just stop it but prevent the stop from happening\n                    if(oldStream) {\n                        oldStream.getVideoTracks()[0].onended = null;\n                        self.getRtcLibrary().stopStream(oldStream);\n                    }\n\n                    stream.getVideoTracks()[0].onended = onEnded;\n                    self.setScreenStream(stream);\n\n                    logger.debug('user granted access to local media.');\n                    _utils.callFunctionIfExist(onSuccess, mediaInfo);\n\n                }, function() {\n                    logger.debug('Failed to get access to screen media.');\n                    _utils.callFunctionIfExist(onFailure, mediaErrors.NOT_ALLOWED);\n                }, onEnded);\n            } else {\n                _utils.callFunctionIfExist(onFailure, mediaErrors.NOT_FOUND);\n            }\n        });\n    };\n\n    compose(_super, self);\n    compose(_model, self);\n\n    logger.debug('WebRtcChromeAdaptor initialized');\n}\n","import CONSTANTS from '../../constants';\nimport {compose} from '../../utils';\n\nexport function WebRtcContainerAdaptorImpl({\n    base: _super,\n    model: _model,\n    LogManager: _logManager,\n    Utils: _utils,\n    SdpParser: _sdpParser,\n    Config: _config,\n    SdpPipeline: _sdpPipeline\n}) {\n    var self = this,\n        logger = _logManager.getLogger('WebRtcContainerAdaptorImpl');\n    logger.debug('WebRtcContainerAdaptor initializing');\n\n    compose(_super, self);\n    compose(_model, self);\n\n    // Container implementation lies on webRtcContainerAdaptor.js\n    self.performVideoStartWorkaround = function(operation, call, onSuccess, onFail) {\n        var peer = call.peer,\n            remoteAudioState, remoteVideoState, callSdpWithNoSsrc, localSdp;\n\n        if (!_sdpParser.isSdpHasVideo(call.sdp)) {\n            self.setRemoteDescription(operation, call, null, null, call.sdp, onSuccess, onFail);\n            return;\n        }\n\n        logger.debug('Workaround to play video');\n\n        localSdp = call.stableLocalSdp ? call.stableLocalSdp : call.peer.localDescription.sdp;\n        call.sdp = _sdpParser.addSdpMissingCryptoLine(call.sdp);\n\n        remoteAudioState = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        call.sdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n        call.sdp = _sdpParser.updateVideoSdpDirectionToInactive(call.sdp);\n\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        // In Peer-Peer call, in order to remove remote stream properly,\n        // ssrc lines should be deleted so that workaround below will\n        // first remove the remote stream and then re-add it according to\n        // actuall call sdp.\n        // In Non Peer-Peer call, ther is no ssrc line in sdp so it is safe\n        // to keep method below.\n        callSdpWithNoSsrc = _sdpParser.deleteSsrcFromSdp(call.sdp);\n\n        logger.trace('performVideoStartWorkaround: Setting remote description with (offer) SDP: ' + callSdpWithNoSsrc);\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, callSdpWithNoSsrc,\n            function pvswFirstSetRemoteDescriptionSuccessCallback() {\n                logger.debug('performVideoStartWorkaround: first setRemoteDescription success');\n\n                // restore original values\n                call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, remoteAudioState);\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, remoteVideoState);\n\n                logger.trace('performVideoStartWorkaround: Setting remote description with (offer) SDP: ' + call.sdp);\n                self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp,\n                    function pvswSecondSetRemoteDescriptionSuccessCallback() {\n                        logger.debug('performVideoStartWorkaround: second setRemoteDescription success');\n                        peer.createAnswer(\n                            function pvswCreateAnswerSuccessCallback(obj) {\n                                if (remoteAudioState === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                    obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                                }\n\n                                if (remoteVideoState === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                    obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                                } else if (self.canOriginatorSendLocalVideo(call)) {\n                                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                                } else {\n                                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                                }\n\n                                obj.sdp = _sdpParser.checkAndRestoreICEParams(obj.sdp, call.sdp);\n\n                                obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n\n                                obj.sdp = _sdpParser.updateVersion(localSdp, obj.sdp);\n\n                                obj.sdp = _sdpPipeline(call.id, obj.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                                logger.trace('performVideoStartWorkaround: Setting local description with (answer) SDP: ' + obj.sdp);\n                                peer.setLocalDescription(\n                                    self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, obj.sdp),\n                                    function pvswSetLocalDescriptionSuccessCallback() {\n                                        logger.debug('performVideoStartWorkaround: setlocalDescription success');\n                                        _utils.callFunctionIfExist(onSuccess);\n                                    },\n                                    function pvswSetLocalDescriptionFailureCallback(e) {\n                                        logger.debug('performVideoStartWorkaround: setlocalDescription failed!!' + e);\n                                        _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: setlocalDescription failed!!');\n                                    });\n                            },\n                            function pvswCreateAnswerFailureCallback(e) {\n                                logger.debug('performVideoStartWorkaround: createAnswer failed!! ' + e);\n                                _utils.callFunctionIfExist(onFail, 'Session cannot be created');\n                            });\n                    },\n                    function pvswSecondSetRemoteDescriptionFailureCallback(e) {\n                        logger.debug('performVideoStartWorkaround: second setRemoteDescription failed!!' + e);\n                        _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: second setRemoteDescription failed!!');\n                    });\n            },\n            function pvswFirstSetRemoteDescriptionFailureCallback(e) {\n                logger.debug('performVideoStartWorkaround: first setRemoteDescription failed!!' + e);\n                _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: first setRemoteDescription failed!!');\n            });\n    };\n\n    // Container implementation lies on webRtcContainerAdaptor.js\n    self.createAnswer = function(call, successCallback, failureCallback, isVideoEnabled) {\n        logger.debug('createAnswer: isVideoEnabled= ' + isVideoEnabled + ' state= ' + call.peer.signalingState);\n        var peer = call.peer;\n\n        if(call.localMedia && call.localMedia.stream){\n            call.peer.addStream(call.localMedia.stream);\n        }\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.deleteFingerprintOrCrypto(call.sdp, self.isDtlsEnabled());\n\n        if (!_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n            // delete ssrc only from video, keep audio ssrc to hear audio\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n        }\n\n        logger.trace('createAnswer: Setting remote description with (offer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp,\n            function createAnswerSetRemoteDescriptionSuccessCallback() {\n                call.remoteVideoState = _sdpParser.getSdpDirection(call.sdp, CONSTANTS.STRING.VIDEO);\n\n                peer.createAnswer(\n                    function(oSdp) {\n                        isVideoEnabled = isVideoEnabled && self.getVideoSourceAvailable() && _sdpParser.isSdpHasVideo(call.sdp);\n\n                        if (isVideoEnabled) {\n                            if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                                oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                if (_sdpParser.getVideoSdpDirection(call.sdp) !== CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                    oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                                } else {\n                                    oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                                }\n                            }\n                        } else {\n                            if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                                oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            } else {\n                                oSdp.sdp = _sdpParser.updateSdpDirection(oSdp.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n                        }\n\n                        self.muteOnHold(call, false);\n\n                        // createAnswer generates an sdp without ice params\n                        // copy ice params to the local sdp\n                        // scenario: incoming video call from pcc in brokeronly config\n                        oSdp.sdp = _sdpParser.checkAndRestoreICEParams(oSdp.sdp, call.sdp);\n\n                        oSdp.sdp = _sdpParser.setTrickleOption(oSdp.sdp, _config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE);\n\n                        logger.trace('createAnswer: Setting local description with (answer) SDP: ' + oSdp.sdp);\n\n                        oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n                        peer.setLocalDescription(\n                            self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, oSdp.sdp),\n                            function createAnswerSetLocalDescriptionSuccessCallback() {\n                                if (_config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE && call.supportTrickle) {\n                                    _utils.callFunctionIfExist(successCallback, oSdp.sdp);\n                                }\n                                // ELSE due to stun requests, successCallback will be called by onIceCandidate()\n                            },\n                            function createAnswerSetLocalDescriptionFailureCallback(e) {\n                                logger.error('createAnswer: setLocalDescription failed : ' + e);\n                                _utils.callFunctionIfExist(failureCallback, 'createNativeAnswer setLocalDescription failed');\n                            });\n                    },\n                    function createAnswerFailureCallback(e) {\n                        logger.error('createAnswer: failed!! Error: ' + e);\n                        _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                    });\n            },\n            function createAnswerSetRemoteDescriptionFailureCallback(e) {\n                logger.error('createAnswer: setremotedescription failed!! Error: ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'createAnswer setRemoteDescription failed');\n            });\n    };\n\n    // Container implementation lies on webRtcContainerAdaptor.js\n    self.processHold = function(call, hold, local_hold_status, successCallback, failureCallback) {\n        logger.debug('processHold: local hold= ' + local_hold_status + ' remote hold= ' + hold + ' state= ' + call.peer.signalingState);\n        var peer,\n            audioDirection, videoDirection,\n            peerLocalSdp, inactiveRemoteSdp, remoteSdp;\n        peerLocalSdp = call.stableLocalSdp;\n\n        var operation = hold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        audioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        videoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if (!local_hold_status && !hold) {\n            self.muteOnHold(call, false);\n        }\n\n        //we need to do something in this case because the remove might offer active or passive but chrome does not allow that\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        // This is required for PCC and meetme with video.\n        // PCC and meetme(Media Server) not supperted VP8/VP9 codec.\n        // so video calls can not be established\n        // local video should be set to false\n        if (!(_sdpParser.isVideoCodecsSupported(call.sdp, self.isH264Enabled())) && !(_sdpParser.isSdpHasVP8Codec(call.sdp)) && (call.sdp.indexOf(CONSTANTS.SDP.M_LINE + CONSTANTS.STRING.VIDEO + ' 0 ', 0) === -1)) {\n            self.setOriginatorSendLocalVideo(call, call.sdp, false);\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n        call.sdp = _sdpParser.checkAndRestoreICEParams(call.sdp, peerLocalSdp);\n\n        // chrome38 fix\n        inactiveRemoteSdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n        inactiveRemoteSdp = _sdpParser.updateVideoSdpDirectionToInactive(inactiveRemoteSdp);\n\n        if(self.needNewPeer(call, true, true)) {\n            self.createNewPeerForCall(call);\n        }\n\n        peer = call.peer;\n\n        if (_sdpParser.isSdpHasVideo(call.prevRemoteSdp) && (!_sdpParser.isSdpHasVideo(call.sdp))) {\n            self.setOriginatorSendLocalVideo(call, call.sdp, false);\n        }\n\n        inactiveRemoteSdp = _sdpParser.deleteSsrcFromSdp(inactiveRemoteSdp);\n\n        // 1st setRemoteDescription to make webrtc remove the audio and/or video streams\n        // 2nd setRemote will add the audio stream back so that services like MOH can work\n        // This code will also run in UnHold scenario, and it will remove & add video stream\n        logger.trace('processHold: Setting remote description with (offer) SDP: ' + inactiveRemoteSdp);\n\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, inactiveRemoteSdp, function processHoldSetFirstRemoteDescriptionSuccessCallback() {\n            remoteSdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n\n            if (_sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n                _sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n                remoteSdp = _sdpParser.deleteInactiveVideoSsrc(remoteSdp);\n            }\n            logger.trace('processHold: Setting remote description with (offer) SDP: ' + remoteSdp);\n\n            self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, remoteSdp, function processHoldSetSecondRemoteDescriptionSuccessCallback() {\n                if (!hold && !local_hold_status && (videoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE)) {\n                    call.remoteVideoState = CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n                } else {\n                    call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                }\n                peer.createAnswer(function processHoldCreateAnswerSuccessCallback(obj) {\n                    logger.debug('processHold: isSdpEnabled audio= ' + _sdpParser.isAudioSdpEnabled(obj.sdp));\n                    logger.debug('processHold: isSdpEnabled video= ' + _sdpParser.isVideoSdpEnabled(obj.sdp));\n\n                    if (hold) {\n                        logger.debug('processHold: Remote HOLD');\n                        obj.sdp = _sdpParser.respondToRemoteSdpDirections(obj.sdp, call.sdp);\n                    } else if (!local_hold_status) {\n                        logger.debug('processHold: Remote UNHOLD: direction left as it is');\n\n                        if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                            if (self.canOriginatorSendLocalVideo(call)) {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            }\n                        } else {\n                            if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                            } else {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n                        }\n                        //change audio's direction to sendrecv for ssl attendees in a 3wc\n                        obj.sdp = _sdpParser.changeDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n                    } else if (local_hold_status && !hold) {\n                        logger.debug('processHold: Remote UNHOLD on local hold');\n\n                        if (audioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                            obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                        } else {\n                            obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        }\n\n                        if (self.canOriginatorSendLocalVideo(call)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                        }\n                    }\n\n                    obj.sdp = _sdpParser.updateVersion(peerLocalSdp, obj.sdp);\n                    obj.sdp = _sdpParser.checkIceParamsLengths(obj.sdp, call.sdp);\n                    obj.sdp = _sdpParser.checkAndRestoreICEParams(obj.sdp, call.sdp);\n                    if (_sdpParser.isSdpHasVideoWithZeroPort(obj.sdp) && self.getDefaultVideoContainer()) {\n                        self.useDefaultRenderer(false, false, false);\n                    }\n\n                    //This one is important because the remote party might have offered pasive or active, but we had set it to actpass so that chrome works.\n                    obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n\n                    //TODO This is not in the normal webrtc adapter\n                    obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n                    obj.sdp = _sdpPipeline(call.id, obj.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, obj.type);\n\n                    logger.trace('processHold: Setting local description with SDP: ' + obj.sdp);\n                    peer.setLocalDescription(obj, function processHoldSetLocalDescriptionSuccessCallback() {\n                        logger.debug('processHold: setLocalDescription success!! ' + 'iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n\n                        if (call.supportTrickle) {\n                            // Trickle ICE is supported; continue processing the operation right away.\n                            _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                        } else {\n                            // Need to wait for ICE gathering to finish.\n                            if (peer.iceGatheringState === 'complete') {\n                                // ICE gathering is already done; continue processing the operation right away.\n                                logger.debug('processHold iceGatheringState completed ' + peer.localDescription.sdp);\n                                _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                            } else {\n                                /**\n                                 * We need to wait for ICE gathering to finish. The operation should continue\n                                 *    being processed when ICE is done (onIceComplete listener), which should\n                                 *    use the call.successCallback function.\n                                 */\n                                logger.debug('Waiting for ICE gathering to complete.');\n                            }\n                        }\n                    }, function processHoldSetLocalDescriptionFailureCallback(e) {\n                        logger.error('processHold: setLocalDescription failed!! ' + e);\n                        _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                    });\n                }, function processHoldCreateAnswerFailureCallback(e) {\n                    logger.error('processHold: createAnswer failed!!: ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                });\n            }, function processHoldSetSecondRemoteDescriptionFailureCallback(e) {\n                logger.error('processHold: second setRemoteDescription failed!! ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n            });\n        }, function processHoldSetFirstRemoteDescriptionFailureCallback(e) {\n            logger.debug('processHold: first setRemoteDescription failed!! ' + e);\n            _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n        });\n    };\n\n    // Container implementation lies on webRtcContainerAdaptor.js\n    self.processUpdate = function(call, successCallback, failureCallback) {\n        logger.debug('processUpdate: state= ' + call.peer.signalingState);\n        var peer,\n            remoteAudioState, remoteVideoState, remoteVideoDirection, callSdpWithNoSsrc,\n            localDescObj, peerLocalSdp;\n        peerLocalSdp = call.stableLocalSdp;\n\n        // Meetme workaround\n        call.sdp = _sdpParser.addSdpMissingCryptoLine(call.sdp);\n\n        call.sdp = _sdpParser.checkAndRestoreICEParams(call.sdp, peerLocalSdp);\n\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE &&\n          call.currentState === 'COMPLETED') {\n            switch (call.remoteVideoState) {\n            case CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE:\n            case CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY:\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                break;\n            case CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE:\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                break;\n            }\n        }\n\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n        //this part is a work-around for webrtc bug\n        //set remote description with inactive media lines first.\n        //then set remote description with original media lines.\n\n        //keep original values of remote audio and video states\n        remoteAudioState = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        // delete all ssrc lines from the sdp before setting first remote description\n        // set second remote description with all ssrc lines included\n        if (remoteVideoState === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n            remoteVideoState === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n        }\n\n        if(self.needNewPeer(call, true, true)) {\n            self.createNewPeerForCall(call);\n        }\n\n        peer = call.peer;\n\n        //Since Chrome does not support offer with anything else than actpass, we need to set it.\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        //set media lines with inactive state for workaround\n        call.sdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n        call.sdp = _sdpParser.updateVideoSdpDirectionToInactive(call.sdp);\n\n        callSdpWithNoSsrc = _sdpParser.deleteSsrcFromSdp(call.sdp);\n\n        logger.trace('processUpdate: Setting remote description with (offer) SDP: ' + callSdpWithNoSsrc);\n\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, callSdpWithNoSsrc, function processUpdateWorkaroundSetRemoteDescriptionSuccessCallback() {\n            logger.debug('processUpdate: workaround setRemoteDescription success');\n\n            //restore original values\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, remoteAudioState);\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, remoteVideoState);\n            logger.trace('processUpdate: Setting remote description with (offer) SDP: ' + call.sdp);\n\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp, function processUpdateSetRemoteDescriptionSuccessCallback() {\n                logger.debug('processUpdate: setRemoteDescription success');\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n                peer.createAnswer(function processUpdateCreateAnswerSuccessCallback(obj) {\n                    logger.debug('processUpdate: isSdpEnabled audio= ' + _sdpParser.isAudioSdpEnabled(obj.sdp));\n                    logger.debug('processUpdate: isSdpEnabled video= ' + _sdpParser.isVideoSdpEnabled(obj.sdp));\n\n                    if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                        if (self.canOriginatorSendLocalVideo(call)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                        }\n                    } else {\n                        if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                        }\n                    }\n                    obj.sdp = _sdpParser.updateVersion(peerLocalSdp, obj.sdp);\n                    obj.sdp = _sdpParser.checkIceParamsLengths(obj.sdp, call.sdp);\n\n                    //This is important because we changed the remote role to actpass for chrome.\n                    obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n                    obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n                    obj.sdp = _sdpPipeline(call.id, obj.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                    localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, obj.sdp);\n\n                    logger.trace('processUpdate: Setting local description with (answer) SDP: ' + obj.sdp);\n                    peer.setLocalDescription(localDescObj, function processUpdateSetLocalDescriptionSuccessCallback() {\n                        logger.debug('processUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                        if (call.supportTrickle) {\n                            _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                        } else if (peer.iceGatheringState === 'complete') {\n                            if (call.successCallback) {\n                                logger.debug('processUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                                _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                            }\n                        }\n                    }, function processUpdateSetLocalDescriptionSuccessCallback(e) {\n                        logger.debug('processUpdate: setlocalDescription failed!!' + e);\n                        _utils.callFunctionIfExist(failureCallback, 'processUpdate: setlocalDescription failed!!');\n                    });\n                }, function processUpdateCreateAnswerFailureCallback(e) {\n                    logger.debug('processUpdate: createAnswer failed!! ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                });\n            }, function processUpdateSetRemoteDescriptionSuccessCallback(e) {\n                logger.debug('processUpdate: setRemoteDescription failed!!' + e);\n                _utils.callFunctionIfExist(failureCallback, 'processUpdate: setRemoteDescription failed!!');\n            });\n        }, function processUpdateWorkaroundSetRemoteDescriptionSuccessCallback(e) {\n            logger.debug('processUpdate: workaround setRemoteDescription failed!!' + e);\n            _utils.callFunctionIfExist(failureCallback, 'processUpdate: workaround setRemoteDescription failed!!');\n        });\n    };\n\n    // Container implementation lies on webRtcContainerAdaptor.js\n    self.processAnswer = function(call, onSuccess, onFail) {\n        logger.debug('processAnswer: state= ' + call.peer.signalingState);\n        var onSuccessAfterWorkarounds, setRemoteDescription,\n            remoteVideoDirection, localVideoDirection,\n            peer = call.peer,\n            origSdp;\n\n        onSuccessAfterWorkarounds = function() {\n            call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n            _utils.callFunctionIfExist(onSuccess);\n        };\n\n        setRemoteDescription = function(operation, call, onSuccess, onFailure) {\n            logger.trace('processAnswer: Setting remote description with (answer) SDP: ' + call.sdp);\n            self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n                function() {\n                    logger.debug('processAnswer: setRemoteDescription success');\n                    onSuccess();\n                },\n                function(e) {\n                    logger.error('processAnswer: setRemoteDescription failed: ' + e);\n                    onFailure();\n                });\n        };\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, peer.localDescription.sdp, self.isH264Enabled());\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n\n        if (peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.HAVE_REMOTE_PRANSWER) {\n\n            if (_sdpParser.isIceLite(call.prevRemoteSdp) !== _sdpParser.isIceLite(call.sdp)) {\n                logger.debug('ice - ice-lite change.');\n                onFail(CONSTANTS.WEBRTC.ERROR.ICE_ICELITE);\n                return;\n            }\n\n            origSdp = call.sdp;\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            logger.debug('call processPrAnswer again to trigger on remote stream added with updated sdp.');\n            self.processPreAnswer(call,\n                function() {\n                    call.sdp = origSdp;\n                    logger.debug('processPrAnswer success callback. Restore original sdp.');\n                    setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n                },\n                function() {\n                    call.sdp = origSdp;\n                    logger.debug('processPrAnswer failure callback. Restore original sdp.');\n                    setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n                }\n            );\n            return;\n        }\n\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n        localVideoDirection = _sdpParser.getVideoSdpDirection(call.peer.localDescription.sdp);\n\n        // this is needed for buggy webrtc api. when term answers with video to audio only call\n        // this scenario does not work without converting to sendrecv\n        logger.debug('processAnswer: ice-lite: do remote video escalation');\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n\n        if ((localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY || localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) &&\n            (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE || remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY)) {\n\n            // delete ssrc only from video, keep audio ssrc to hear audio\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n\n            // Audio <--> Audio : apply workaround step 1\n\n            setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n\n        } else if (localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY &&\n            (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY || remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE)) {\n\n            // Audio  <--> Audio-Video\n\n            setRemoteDescription(null, call, function() {\n                self.performVideoStartWorkaround(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n            }, onFail);\n\n        } else {\n\n            // Audio-Video <--> Audio-Video\n            // there is remote video, no need for orig side workaround\n\n            setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n        }\n\n    };\n\n    // Container implementation lies on webRtcContainerAdaptor.js\n    self.processRespond = function(call, onSuccess, onFail, isJoin) {\n        var remoteVideoDirection, callSdpWithNoSsrc,\n            peer = call.peer,\n            remoteSdpHasVideo = false;\n\n        logger.debug('processRespond: state= ' + call.peer.signalingState);\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, null, null, call.sdp, onSuccess, onFail);\n            return;\n        }\n\n        remoteSdpHasVideo = _sdpParser.isSdpHasVideo(call.sdp);\n\n        if (remoteSdpHasVideo) {\n            call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, call.stableLocalSdp, self.isH264Enabled());\n\n            remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n            if ((remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) && (call.currentState === 'COMPLETED')) {\n                switch (call.remoteVideoState) {\n                case CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE:\n                case CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY:\n                    call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                    break;\n                }\n            }\n            call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n        }\n\n        if (isJoin) {\n            call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n            self.muteOnHold(call, false);\n        }\n\n        // delete all ssrc lines from the sdp before setting first remote description\n        // set second remote description with all ssrc lines included\n\n        if (remoteSdpHasVideo && (_sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n                _sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY)) {\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n        }\n\n        callSdpWithNoSsrc = _sdpParser.deleteSsrcFromSdp(call.sdp);\n\n        logger.trace('processRespond: Setting remote description with (answer) SDP: ' + callSdpWithNoSsrc);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.RESPOND, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, callSdpWithNoSsrc, function() {\n            logger.debug('processRespond: setRemoteDescription success');\n            var onSuccessAfterWorkarounds = function() {\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                _utils.callFunctionIfExist(onSuccess);\n            };\n            self.performVideoStartWorkaround(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n        }, function(e) {\n            logger.debug('processRespond: setRemoteDescription failed: ' + e);\n            _utils.callFunctionIfExist(onFail);\n        });\n    };\n\n    // Container implementation lies on webRtcContainerAdaptor.js\n    self.processHoldRespond = function(call, onSuccess, onFailure, isJoin) {\n        var remoteAudioDirection,\n            remoteVideoDirection,\n            onSuccessAfterWorkaround,\n            localHoldFlag = false,\n            remoteHoldFlag = false;\n\n        onSuccessAfterWorkaround = function() {\n            //call.remoteVideoState = getSdpDirection(call.sdp, video);\n            _utils.callFunctionIfExist(onSuccess);\n        };\n\n        if(self.needNewPeer(call, false)) {\n            self.createNewPeerForCall(call);\n        }\n\n        logger.debug('processHoldRespond: state= ' + call.peer.signalingState + ' call.currentState= ' + call.currentState);\n\n        _sdpParser.init(call.sdp);\n\n        remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        var isHold = remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n            remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n\n        var operation = isHold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            logger.trace('processHoldRespond: onRemoteStreamAdded');\n            self.onRemoteStreamAdded(call);\n            self.setRemoteDescription(operation, call, null, null, call.sdp, onSuccess, onFailure);\n            return;\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, call.stableLocalSdp, self.isH264Enabled());\n\n        remoteHoldFlag = _sdpParser.isRemoteHold();\n\n        localHoldFlag = (call.currentState === 'LOCAL_HOLD');\n\n        call.remoteVideoState = remoteVideoDirection;\n\n        logger.debug('processHoldRespond: localHold= ' + localHoldFlag + ' remoteHold= ' + remoteHoldFlag);\n\n        /* Required for MOH - start */\n        if (remoteHoldFlag === false) {\n            if ((remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) && (call.currentState === 'REMOTE_HOLD')) {\n                logger.debug('set current web state to COMPLETED');\n                call.previousState = call.currentState;\n                call.currentState = 'COMPLETED';\n            }\n        } else {\n            if (call.currentState === 'COMPLETED') {\n                logger.debug('set current web state to REMOTE_HOLD');\n                call.previousState = call.currentState;\n                call.currentState = 'REMOTE_HOLD';\n            }\n        }\n\n        if (localHoldFlag || remoteHoldFlag) {\n            logger.debug('processHoldRespond: ' + call.currentState + ' : video -> inactive');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n        }\n\n        if ((remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) && (call.currentState === 'COMPLETED')) {\n            logger.debug('processHoldRespond: video inactive -> recvonly');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n        }\n        /* Required for MOH - end */\n\n        if (isJoin) {\n            self.muteOnHold(call, false);\n        }\n\n        // this is required for displaying remote video when direction is send only\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n        if (_sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n            _sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n        }\n\n        if (localHoldFlag && remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Audio');\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        }\n\n        if (localHoldFlag && remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Video');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n        }\n\n        // If we have a configuration to force disable media on hold we tell chrome that the other side is inactive this will\n        // prevent chrome from sending noise even after being muted.\n        if (localHoldFlag && _config.forceDisableMediaOnHold && remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            logger.debug('processHoldRespond: Changing remote direction from recvonly to inactive');\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n            remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        }\n\n        if (isHold) {\n            logger.debug('processHoldRespond: Setting remote description with (answer) SDP: ' + call.sdp);\n            self.setRemoteDescription(operation, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n                function processHoldRespondSetRemoteDescriptionSuccessCallback() {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns success');\n                    onSuccessAfterWorkaround();\n                },\n                function processHoldRespondSetRemoteDescriptionFailureCallback(e) {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns failed: ' + e);\n                    _utils.callFunctionIfExist(onFailure);\n                }\n            );\n        } else {\n            self.setRemoteDescription(null, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n                function processHoldRespondSetRemoteDescriptionSuccessCallback() {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns success');\n                    self.performVideoStartWorkaround(operation, call, onSuccessAfterWorkaround, onFailure);\n                },\n                function processHoldRespondSetRemoteDescriptionFailureCallback(e) {\n                    logger.debug('processHoldRespond: setRemoteDescription typeAns failed: ' + e);\n                    _utils.callFunctionIfExist(onFailure);\n                }\n            );\n        }\n    };\n\n    logger.debug('WebRtcContainerAdaptor initialized');\n}\n","import CONSTANTS from '../../constants';\nimport {getInteger, compose} from '../../utils';\nimport constants from '../../constants';\n\nexport function WebRtcFirefoxAdaptorImpl({\n    base: _super,\n    mode: _model,\n    LogManager: _logManager,\n    Utils: _utils,\n    SdpParser: _sdpParser,\n    Config: _config,\n    SdpPipeline: _sdpPipeline\n}) {\n    var self = this,\n        logger = _logManager.getLogger('WebRtcFirefoxAdaptorImpl'),\n        peerId = 0;\n    logger.debug('WebRtcFirefoxAdaptor initializing');\n\n    compose(_super, self);\n    compose(_model, self);\n\n    // firefoxPerformSdpWorkaroundsBeforeProcessingIncomingSdp\n    self.performSdpWorkaroundsBeforeProcessingIncomingSdp = function(sdp) {\n        sdp = _sdpParser.updateH264LevelTo42E01F(sdp, self.isH264Enabled());\n        sdp = _sdpParser.deleteBandwidthLineFromSdp(sdp);\n        sdp = _sdpParser.addRtpmapForPCMU(sdp);\n        sdp = _sdpParser.addRtpmapForPCMA(sdp);\n        sdp = _sdpParser.removeG722Codec(sdp);\n        sdp = _sdpParser.setOpusCodecToLowerCase(sdp);\n        return sdp;\n    };\n\n    // firefoxCreateOffer\n    self.createOffer = function(call, successCallback, failureCallback, sendInitialVideo, offerToReceiveVideo) {\n        logger.debug('createOffer: sendInitialVideo= ' + sendInitialVideo + ' state= ' + call.peer.signalingState);\n        var peer = call.peer;\n\n        if(call.localMedia && call.localMedia.stream){\n            call.peer.addStream(call.localMedia.stream);\n        }\n\n        peer.createOffer(\n            function createOfferSuccessCallback(oSdp) {\n                sendInitialVideo = sendInitialVideo && self.getVideoSourceAvailable();\n                if (sendInitialVideo) {\n                    oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                } else {\n                    oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                }\n\n                oSdp.sdp = _sdpParser.deleteCryptoZeroFromSdp(oSdp.sdp);\n\n                oSdp.sdp = _sdpParser.removeG722Codec(oSdp.sdp);\n\n                oSdp.sdp = _sdpParser.deleteCryptoFromSdp(oSdp.sdp, self.isDtlsEnabled());\n                oSdp.sdp = _sdpParser.setTcpSetupAttribute(oSdp.sdp, 'actpass');\n\n                oSdp.sdp = self.updateCodecs(call, oSdp.sdp);\n                oSdp.sdp = _sdpParser.updateOpusConfig(oSdp.sdp, _config.opusConfig);\n                oSdp.sdp = _sdpParser.setTrickleOption(oSdp.sdp, _config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE);\n\n                oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n                logger.trace('createOffer: Setting local description with (offer) SDP: ' + oSdp.sdp);\n                peer.setLocalDescription(\n                    self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, oSdp.sdp),\n                    function createOfferSetLocalDescriptionSuccessCallback() {\n                        if (_config.trickleIceSupport === CONSTANTS.TRICKLE.FULL) {\n                            _utils.callFunctionIfExist(successCallback, oSdp.sdp);\n                        }\n                        // ELSE due to stun requests, successCallback will be called by onIceCandidate()\n                    },\n                    function createOfferSetLocalDescriptionFailureCallback(error) {\n                        logger.error('createOffer: setLocalDescription failed : ' + error);\n                        _utils.callFunctionIfExist(failureCallback, 'createOffer: setLocalDescription failed');\n                    });\n            },\n            function createOfferFailureCallback(e) {\n                logger.error('createOffer: createOffer failed!! ' + e);\n                _utils.callFunctionIfExist(failureCallback);\n            }, { offerToReceiveVideo: offerToReceiveVideo ? 1 : 0 });\n    };\n\n    // firefoxCreateReOffer\n    self.createReOffer = function(call, onSuccess, onFailure, usePreviousMediaDirection) {\n        var peer = call.peer,\n            localDescObj, localAudioDirection, localVideoDirection,\n            prevLocalSdp = call.stableLocalSdp,\n            deleteVideoStream = false;\n\n        logger.debug('createReOffer:' + call.id);\n\n        if (!usePreviousMediaDirection) {\n            deleteVideoStream = !call.initialVideoState && _sdpParser.isSdpHasVideo(call.stableLocalSdp);\n        }\n\n        self.createNewPeerForCall(call, deleteVideoStream);\n        peer = call.peer;\n\n        peer.createOffer(\n            function createReOfferCreateOfferSuccessCallback(oSdp) {\n\n                if (usePreviousMediaDirection) {\n                    localAudioDirection = _sdpParser.getAudioSdpDirection(prevLocalSdp);\n                    oSdp.sdp = _sdpParser.updateAudioSdpDirection(oSdp.sdp, localAudioDirection);\n                    localVideoDirection = _sdpParser.getVideoSdpDirection(prevLocalSdp);\n                    oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, localVideoDirection);\n                }\n\n                oSdp.sdp = _sdpParser.deleteCryptoZeroFromSdp(oSdp.sdp);\n                oSdp.sdp = _sdpParser.removeG722Codec(oSdp.sdp);\n                oSdp.sdp = _sdpParser.deleteCryptoFromSdp(oSdp.sdp, self.isDtlsEnabled());\n                oSdp.sdp = _sdpParser.setTcpSetupAttribute(oSdp.sdp, 'actpass');\n                oSdp.sdp = _sdpParser.updateVersion(prevLocalSdp, oSdp.sdp);\n                oSdp.sdp = self.updateCodecs(call, oSdp.sdp);\n                oSdp.sdp = _sdpParser.updateOpusConfig(oSdp.sdp, _config.opusConfig);\n                oSdp.sdp = _sdpParser.setTrickleOption(oSdp.sdp, _config.trickleIceSupport !== CONSTANTS.TRICKLE.NONE);\n\n                oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.REOFFER, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n                localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, oSdp.sdp);\n\n                logger.trace('createReOffer: Setting local description with (offer) SDP: ' + oSdp.sdp);\n                peer.setLocalDescription(localDescObj, function createReOfferSetLocalDescriptionSuccessCallback() {\n                    logger.debug('createReOffer: setLocalDescription success' + call.id);\n                    if (_config.trickleIceSupport === CONSTANTS.TRICKLE.FULL) {\n                        _utils.callFunctionIfExist(onSuccess, oSdp.sdp);\n                    }\n                }, function createReOfferSetLocalDescriptionFailureCallback(e) {\n                    logger.debug('createReOffer: setLocalDescription failed!!' + e + call.id);\n                    _utils.callFunctionIfExist(onFailure);\n                });\n            },\n            function createReOfferCreateOfferFailureCallback(e) {\n                logger.error('createReOffer: createOffer failed!! ' + e);\n                _utils.callFunctionIfExist(onFailure);\n            });\n    };\n\n    // firefoxProcessAnswer\n    self.processAnswer = function(call, successCallback, failureCallback) {\n        var peer = call.peer;\n        logger.debug('processAnswer: state= ' + peer.signalingState);\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, peer.localDescription.sdp, self.isH264Enabled());\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n\n        call.sdp = _sdpPipeline(call.id, call.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_REMOTE, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n        logger.trace('processAnswer: Setting remote description with (answer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.ANSWER_CALL, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n            function processAnswerSetRemoteDescriptionSuccessCallback() {\n                logger.debug('processAnswer: setRemoteDescription success');\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                _utils.callFunctionIfExist(successCallback);\n            },\n            function processAnswerSetRemoteDescriptionFailureCallback(e) {\n                logger.error('processAnswer: setRemoteDescription failed: ' + e.message);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n    };\n\n    // firefoxRevertRtcState\n    self.revertRtcState = function(call, successCallback) {\n        //no need to create new peer to handle revertRtc case. Peer will be handled after retryAfter period.\n\n        // TODO: Setting timeout to 0 skips the problem of successive holds without glare condition\n        // A real solution have to be found\n        setTimeout(function() {\n            _utils.callFunctionIfExist(successCallback, call);\n        }, 0);\n    };\n\n    // firefoxCreateHoldUpdate\n    self.createHoldUpdate = function(call, hold, remote_hold_status, successCallback, failureCallback) {\n        logger.debug('createHoldUpdate: local hold= ' + hold + ' remote hold= ' + remote_hold_status + ' state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            localDescObj,\n            localSdp,\n            createHoldUpdate,\n            hasActiveVideo;\n\n        var operation = hold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        createHoldUpdate = function() {\n            localSdp = call.stableLocalSdp;\n\n            self.createNewPeerForCall(call);\n            peer = call.peer;\n\n            peer.createOffer(function createHoldUpdateCreateOfferSuccessCallback(obj) {\n\n                if (hold) {\n                    if (!remote_hold_status) {\n                        obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                    } else {\n                        obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                        obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                    }\n                } else if (remote_hold_status) {\n                    obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                } else {\n                    obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                    if (self.canOriginatorSendLocalVideo(call)) {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                    } else {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                    }\n                }\n                obj.sdp = self.updateCodecs(call, obj.sdp);\n                obj.sdp = _sdpParser.updateVersion(localSdp, obj.sdp);\n                obj.sdp = _sdpParser.deleteCryptoZeroFromSdp(obj.sdp);\n                obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, 'actpass');\n                obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n                obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n                obj.sdp = _sdpPipeline(call.id, obj.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n                localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, obj.sdp);\n\n                logger.trace('createHoldUpdate: Setting local description with (offer) SDP: ' + obj.sdp);\n                peer.setLocalDescription(localDescObj, function createHoldUpdateSetLocalDescriptionSuccessCallback() {\n                    logger.debug('createHoldUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                    if (call.supportTrickle) {\n                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                    } else if (peer.iceGatheringState === 'complete') {\n                        if (call.successCallback) {\n                            logger.debug('createHoldUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                            _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                        }\n                    }\n                }, function createHoldUpdateSetLocalDescriptionFailureCallback(error) {\n                    logger.error('createHoldUpdate: setLocalDescription failed: ' + error.message);\n                    _utils.callFunctionIfExist(failureCallback);\n                });\n            }, function createHoldUpdateCreateOfferFailureCallback(error) {\n                logger.error('createHoldUpdate: createOffer failed: ' + error.message);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n        };\n\n        hasActiveVideo = _sdpParser.isSdpHasVideo(call.sdp) &&\n            !_sdpParser.isVideoSdpDirectionInactive(call.stableLocalSdp);\n\n        if (!call.isVideoSourceAllowed && hasActiveVideo) {\n\n            // TODO: This should not be done here just for code consistency\n            self.getUserMedia({\n                onSuccess: function (mediaInfo) {\n                    self.storeLocalStreamToCall(call, mediaInfo.id);\n                    call.isVideoSourceAllowed = mediaInfo.video;\n                    createHoldUpdate();\n                }, onFailure: function () {\n                    _utils.callFunctionIfExist(failureCallback);\n                }, options: {\n                    audioConstraints: true,\n                    videoConstraints: true\n                }});\n        } else {\n            if (hasActiveVideo) {\n                call.isVideoSourceAllowed = true;\n            }\n            createHoldUpdate();\n        }\n    };\n\n    // firefoxProcessHold\n    self.processHold = function(call, hold, local_hold_status, successCallback, failureCallback) {\n        logger.debug('processHold: local hold= ' + local_hold_status + ' remote hold= ' + hold + ' state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            audioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n\n        if (!local_hold_status && !hold) {\n            self.muteOnHold(call, false);\n        }\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null);\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        if(self.needNewPeer(call, true, true)) {\n            self.createNewPeerForCall(call);\n        }\n\n        peer = call.peer;\n\n        logger.trace('processHold: Setting remote description with (offer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.HOLD, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp, function processHoldSetRemoteDescriptionSuccessCallback() {\n            peer.createAnswer(function (obj) {\n                if (hold) {\n                    logger.debug('processHold: Remote HOLD');\n                    obj.sdp = _sdpParser.respondToRemoteSdpDirections(obj.sdp, call.sdp);\n                } else if (!local_hold_status) {\n                    logger.debug('processHold: Remote UNHOLD: direction left as it is');\n\n                    if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                        if (self.canOriginatorSendLocalVideo(call)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                        }\n                    } else {\n                        if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        } else {\n                            obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                        }\n                    }\n                    //change audio's direction to sendrecv for ssl attendees in a 3wc\n                    obj.sdp = _sdpParser.changeDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n                } else if (local_hold_status && !hold) {\n                    logger.debug('processHold: Remote UNHOLD on local hold');\n\n                    if (audioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                        obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                    } else {\n                        obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                    }\n\n                    if (self.canOriginatorSendLocalVideo(call)) {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                    } else {\n                        obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                    }\n                }\n\n                obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n                obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n                obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n                logger.trace('processHold: Setting local description with SDP: ' + obj.sdp);\n\n                obj.sdp = _sdpPipeline(call.id, obj.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.HOLD, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, obj.type);\n\n                peer.setLocalDescription(obj, function processHoldSetLocalDescriptionSuccessCallback() {\n                    logger.debug('processHold: setLocalDescription succeeded');\n                    if (call.supportTrickle) {\n                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                    }\n                }, function processHoldSetLocalDescriptionFailureCallback(e) {\n                    logger.error('processHold: setLocalDescription failed!! ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                });\n            }, function () {\n                logger.debug('processHold: createAnswer failed!!');\n                _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n            });\n        }, function processHoldSetRemoteDescriptionFailureCallback(e) {\n            logger.error('processHold: setRemoteDescription failed: ' + e.message);\n            _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n        });\n    };\n\n    // firefoxProcessHoldRespond\n    self.processHoldRespond = function(call, onSuccess, onFailure, isJoin) {\n        var remoteAudioDirection,\n            remoteVideoDirection,\n            localHoldFlag = false,\n            remoteHoldFlag = false;\n\n        logger.debug('processHoldRespond: state= ' + call.peer.signalingState + ' call.currentState= ' + call.currentState);\n\n        if(self.needNewPeer(call, false)) {\n            self.createNewPeerForCall(call);\n        }\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.HOLD, call, null, null, call.sdp, onSuccess, onFailure);\n            return;\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, call.stableLocalSdp, self.isH264Enabled());\n\n        _sdpParser.init(call.sdp);\n        remoteHoldFlag = _sdpParser.isRemoteHold();\n\n        localHoldFlag = (call.currentState === 'LOCAL_HOLD');\n\n        remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        call.remoteVideoState = remoteVideoDirection;\n\n        logger.debug('processHoldRespond: localHold= ' + localHoldFlag + ' remoteHold= ' + remoteHoldFlag);\n\n        /* Required for MOH - start */\n        if (remoteHoldFlag === false) {\n            if ((remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) && (call.currentState === 'REMOTE_HOLD')) {\n                logger.debug('set current web state to COMPLETED');\n                call.previousState = call.currentState;\n                call.currentState = 'COMPLETED';\n            }\n        } else {\n            if (call.currentState === 'COMPLETED') {\n                logger.debug('set current web state to REMOTE_HOLD');\n                call.previousState = call.currentState;\n                call.currentState = 'REMOTE_HOLD';\n            }\n        }\n\n        if (localHoldFlag || remoteHoldFlag) {\n            logger.debug('processHoldRespond: ' + call.currentState + ' : video -> inactive');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n        }\n\n        /* Required for MOH - end */\n\n        if (isJoin) {\n            self.muteOnHold(call, false);\n        }\n\n        // this is required for displaying remote video when direction is send only\n        // call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, video);\n\n        if (localHoldFlag && remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Audio');\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n        }\n\n        if (localHoldFlag && remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Video');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n        }\n\n        logger.trace('processHoldRespond: Setting remote description with (answer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.HOLD, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n            function processHoldRespondSetRemoteDescriptionSuccessCallback() {\n                logger.debug('processHoldRespond: setRemoteDescription typeAns success');\n                _utils.callFunctionIfExist(onSuccess);\n            },\n            function processHoldRespondSetRemoteDescriptionFailureCallback(e) {\n                logger.debug('processHoldRespond: setRemoteDescription typeAns failed: ' + e);\n                _utils.callFunctionIfExist(onFailure);\n            });\n    };\n\n    // firefoxCreateUpdate\n    self.createUpdate = function(call, successCallback, failureCallback, isVideoStart) {\n        logger.debug('createUpdate: isVideoStart= ' + isVideoStart + ' state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            localDesc;\n\n        self.createNewPeerForCall(call);\n        peer = call.peer;\n\n        peer.createOffer(function createUpdateCreateOfferSuccessCallback(obj) {\n            isVideoStart = isVideoStart && self.getVideoSourceAvailable();\n            if (isVideoStart) {\n                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n            } else {\n                if (_sdpParser.isVideoSdpDirectionInactive(call.stableRemoteSdp)) {\n                    obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                } else {\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                }\n            }\n            obj.sdp = self.updateCodecs(call, obj.sdp);\n            obj.sdp = _sdpParser.updateVersion(call.stableLocalSdp, obj.sdp);\n            obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, 'actpass');\n            obj.sdp = _sdpParser.deleteCryptoZeroFromSdp(obj.sdp);\n            obj.sdp = _sdpParser.removeG722Codec(obj.sdp);\n            obj.sdp = _sdpParser.deleteCryptoFromSdp(obj.sdp, self.isDtlsEnabled());\n            obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n            obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n            obj.sdp = _sdpPipeline(call.id, obj.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n            localDesc = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, obj.sdp);\n\n            logger.trace('createUpdate: Setting local description with (offer) SDP: ' + obj.sdp);\n            peer.setLocalDescription(localDesc, function createUpdateCreateOfferSetLocalDescriptionSuccessCallback() {\n                logger.debug('createUpdate: createOffer setLocalDescription success ');\n\n                // The above process un-mutes the client. We must ensure it continues to be muted if necessary.\n                if(call.audioMuted){\n                    logger.debug('video started while muted, re-mute the microphone');\n                    self.muteAudioTrack(call, true, false);\n                }\n\n                if (call.supportTrickle) {\n                    _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                }\n                // ELSE since the candidates have changed we will call the successCallback at onIceCandidate\n            }, function crateUpdateCreateOfferSetLocalDescriptionFailureCallback(e) {\n                logger.debug('createUpdate: createOffer setLocalDescription failed: ' + e);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n        }, function createUpdateCrateOfferFailureCallback(e) {\n            logger.debug('createUpdate: createOffer failed!!: ' + e);\n            _utils.callFunctionIfExist(failureCallback);\n        });\n    };\n\n    // firefoxProcessUpdate\n    self.processUpdate = function(call, successCallback, failureCallback) {\n        logger.debug('processUpdate: state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            localDescObj, peerLocalSdp;\n        peerLocalSdp = call.stableLocalSdp;\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        // Meetme workarounds\n        call.sdp = _sdpParser.addSdpMissingCryptoLine(call.sdp);\n        call.sdp = _sdpParser.checkAndRestoreICEParams(call.sdp, peerLocalSdp);\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n\n        self.createNewPeerForCall(call);\n        peer = call.peer;\n\n        //This is highly required for meetme on DTLS\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        logger.trace('processUpdate: Setting remote description with (offer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp, function processUpdateSetRemoteDescriptionSuccessCallback() {\n            logger.debug('processUpdate: setRemoteDescription success');\n            call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n            peer.createAnswer(function processUpdateCreateAnswerSuccessCallback(obj) {\n                if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                    if (self.canOriginatorSendLocalVideo(call)) {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                    } else {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                    }\n                } else {\n                    if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                    } else {\n                        obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                    }\n                }\n\n                obj.sdp = _sdpParser.updateVersion(peerLocalSdp, obj.sdp);\n                obj.sdp = _sdpParser.checkIceParamsLengths(obj.sdp, call.sdp);\n                obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, call.dtlsRole);\n                obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n                obj.sdp = _sdpParser.setTrickleOption(obj.sdp, call.supportTrickle);\n\n                obj.sdp = _sdpPipeline(call.id, obj.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, obj.sdp);\n\n                logger.trace('processUpdate: Setting local description with (answer) SDP: ' + obj.sdp);\n                peer.setLocalDescription(localDescObj, function processUpdateSetLocalDescriptionSuccessCallback() {\n                    logger.debug('processUpdate: setlocalDescription success');\n                    if (call.supportTrickle) {\n                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                    }\n                    // ELSE since the candidates have changed we will call the successCallback at onIceCandidate\n                }, function processUpdateSetLocalDescriptionSuccessCallback(e) {\n                    logger.debug('processUpdate: setlocalDescription failed!!' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'processUpdate: setlocalDescription failed!!');\n                });\n            }, function processUpdateCreateAnswerFailureCallback(e) {\n                logger.debug('processUpdate: createAnswer failed!! ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n            });\n        }, function processUpdateSetRemoteDescriptionSuccessCallback(e) {\n            logger.debug('processUpdate: setRemoteDescription failed!!' + e);\n            _utils.callFunctionIfExist(failureCallback, 'processUpdate: setRemoteDescription failed!!');\n        });\n    };\n\n    // firefoxProcessRespond\n    self.processRespond = function(call, onSuccess, onFail, isJoin) {\n        var peer = call.peer;\n        logger.debug('processRespond: state= ' + call.peer.signalingState);\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, null, null, call.sdp, onSuccess, onFail);\n            return;\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, call.stableLocalSdp, self.isH264Enabled());\n\n        if (isJoin) {\n            call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n            self.muteOnHold(call, false);\n        }\n\n        logger.trace('processRespond: Setting remote description with (answer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp, function processRespondSetRemoteDescriptionSuccessCallback() {\n            logger.debug('processRespond: setRemoteDescription success');\n            call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n            _utils.callFunctionIfExist(onSuccess);\n        }, function processRespondSetRemoteDescriptionSuccessCallback(e) {\n            logger.debug('processRespond: setRemoteDescription failed: ' + e);\n            _utils.callFunctionIfExist(onFail);\n        });\n    };\n\n    // firefoxSendDTMF\n    self.sendDTMF = function(call, tone) {\n        var audioContext,\n            senders,\n            dtmfSender;\n\n        if (!_sdpParser.isSdpHasTelephoneEvent(call.peer.remoteDescription.sdp)) {\n            if (call.localMedia && call.localMedia.audioContext) {\n                audioContext = call.localMedia.audioContext;\n                self.sendInbandDTMF(call, tone, audioContext);\n            } else {\n                logger.debug('No local media to send DTMF');\n            }\n        } else {\n            senders = call.peer.getSenders();\n\n            if (senders) {\n                dtmfSender = senders[0].dtmf;\n                if (!dtmfSender) {\n                    logger.debug('Couldn\\'t find dtmf sender');\n                } else {\n                    dtmfSender.insertDTMF(tone, 400);\n                }\n            } else {\n                logger.debug('Senders in peer connection couldn\\'t be found');\n            }\n        }\n    };\n\n    // firefoxIceCandidateCollectionTimeoutHandler\n    self.iceCandidateCollectionTimeoutHandler = function(call) {\n        var sdp = call.peer.localDescription.sdp;\n        self.clearIceCandidateCollectionTimer(call);\n        if (_config.relayCandidateCollectionTimeoutCycle) {\n            call.relayCandidateCycle++;\n        }\n        sdp = _sdpParser.findZeroConnectionIPandModify(sdp);\n\n        // set timeout if there is no ice candidate available or\n        // when audio, video port assignment isn't complete\n        if (!_sdpParser.hasCandidates(sdp, call.relayCandidateCycle, _config.relayCandidateCollectionTimeoutCycle)) {\n            logger.debug('Re-setting ice candidate collection timeout: ' + _config.iceCandidateCollectionTimeoutInterval);\n            call.iceCandidateCollectionTimer = setTimeout(function() {\n                self.iceCandidateCollectionTimeoutHandler(call);\n            }, _config.iceCandidateCollectionTimeoutInterval);\n            return;\n        }\n\n        if (call.successCallback) {\n            logger.debug('Ice candidate collection interrupted after given timeout, invoking successCallback.');\n            sdp = _sdpParser.deleteCurlyBracketsSDP(sdp);\n            if (!self.isH264Enabled()) {\n                sdp = _sdpParser.removeH264Codec(sdp);\n            }\n            if (!_sdpParser.isSdpHasUfrag(sdp)) {\n                sdp = _sdpParser.checkAndRestoreICEParams(sdp, call.stableLocalSdp);\n                logger.debug('Absent ufrag due to inactive video direction is restored from that in stable local sdp');\n            }\n            call.successCallback(sdp);\n        }\n    };\n\n    // firefoxSetupIceCandidateCollectionTimer\n    self.setupIceCandidateCollectionTimer = function(call) {\n        if (_config.iceCandidateCollectionTimeoutInterval) {\n            if (!call.iceCandidateCollectionTimer) {\n                logger.debug('Setting ice candidate collection timeout: ' + _config.iceCandidateCollectionTimeoutInterval);\n                if (_config.relayCandidateCollectionTimeoutCycle) {\n                    call.relayCandidateCycle = 1;\n                }\n                call.iceCandidateCollectionTimer = setTimeout(function() {\n                    self.iceCandidateCollectionTimeoutHandler(call);\n                }, _config.iceCandidateCollectionTimeoutInterval);\n            } else {\n                logger.trace('Ice candidate collection timer exists.');\n            }\n        }\n    };\n\n    // firefoxOnIceCandidate\n    self.onIceCandidate = function(call, event) {\n        var sdp;\n        if (event.candidate === null) {\n            logger.debug('Null candidate received.');\n            if (call.successCallback) {\n                sdp = call.peer.localDescription.sdp;\n                self.clearIceCandidateCollectionTimer(call);\n                logger.debug('Candidates received, invoking successCallback.');\n\n                sdp = _sdpParser.deleteCurlyBracketsSDP(sdp);\n                if (!self.isH264Enabled()) {\n                    sdp = _sdpParser.removeH264Codec(sdp);\n                }\n                if (!_sdpParser.isSdpHasUfrag(sdp)) {\n                    sdp = _sdpParser.checkAndRestoreICEParams(sdp, call.stableLocalSdp);\n                    logger.debug('Absent ufrag due to inactive video direction is restored from that in stable local sdp');\n                }\n                call.successCallback(sdp);\n            }\n        } else {\n            logger.debug('ICE candidate received: sdpMLineIndex = ' + event.candidate.sdpMLineIndex +\n                ', candidate = ' + event.candidate.candidate + ' for call : ' + call.id);\n\n            // if successCallback haven't been cleared, candidates will be sent via successCallback\n            // otherwise candidates will be sent via updateIceCandidates request\n            if (!call.successCallback) {\n                if (!call.candidateArray) {\n                    call.candidateArray = [];\n                }\n                call.candidateArray.push(event.candidate);\n                self.updateCandidates(call);\n            }\n        }\n    };\n\n    // firefoxOnIceComplete\n    self.onIceComplete = function(call) {\n        var sdp;\n        logger.debug('All ICE candidates received for call : ' + call.id);\n        self.clearIceCandidateCollectionTimer(call);\n\n        if (call.successCallback) {\n            sdp = call.peer.localDescription.sdp;\n            sdp = _sdpParser.deleteCurlyBracketsSDP(sdp);\n            if (!self.isH264Enabled()) {\n                sdp = _sdpParser.removeH264Codec(sdp);\n            }\n            if (!_sdpParser.isSdpHasUfrag(sdp)) {\n                sdp = _sdpParser.checkAndRestoreICEParams(sdp, call.stableLocalSdp);\n                logger.debug('Absent ufrag due to inactive video direction is restored from that in stable local sdp');\n            }\n\n            logger.trace('onIceComplete sdp : ' + sdp);\n\n            call.successCallback(sdp);\n        }\n    };\n\n    self.createDataChannel = function(dataChannelWrapperObj, onSuccess, onFailure, options) {\n        try {\n            dataChannelWrapperObj.dataChannel = dataChannelWrapperObj.peer.createDataChannel(options);\n            onSuccess(dataChannelWrapperObj);\n        } catch (error) {\n            logger.error('Failed to create data channel, exception: ' + error.message);\n            onFailure(error);\n        }\n    };\n\n    // firefoxCreateNewPeerForCall\n    self.createNewPeerForCall = function(call, deleteVideoStream) {\n        var isNewPeerCreated = false,\n            oldPeer,\n            videoTrack;\n        if (call.peer) {\n            oldPeer = call.peer;\n            self.collectWebRtcStats(oldPeer,\n                function(stats) {\n                    logger.debug('collectWebRtcStats successfull');\n                    if (call.stats === undefined) {\n                        call.stats = [];\n                    }\n                    call.stats.push(stats);\n                    if (oldPeer.signalingState !== 'closed') {\n                        oldPeer.close();\n                    }\n                    self.setPeerCount(self.getPeerCount() - 1);\n                    call.dtmfSender = null;\n                },\n                function() {\n                    logger.debug('collectWebRtcStats failed');\n                    if (oldPeer.signalingState !== 'closed') {\n                        oldPeer.close();\n                    }\n                    self.setPeerCount(self.getPeerCount() - 1);\n                    call.dtmfSender = null;\n                });\n        }\n\n        logger.trace('Creating new peer for call: ' + call.id);\n\n        if(self.createPeer(call)){\n            logger.trace('New peer has created for call: ' + call.id);\n            if(call.localMedia && call.localMedia.stream){\n                if (deleteVideoStream) {\n                    videoTrack = call.localMedia.stream.getVideoTracks()[0];\n                    if(videoTrack) {\n                        call.localMedia.stream.removeTrack(videoTrack);\n                    } else {\n                        logger.debug('Designated to remove track after new'\n                            + ' peer creation, but no video track found.');\n                    }\n                }\n                call.peer.addStream(call.localMedia.stream);\n            }\n\n            isNewPeerCreated = true;\n        } else {\n            logger.error('New peer creation has failed!: ' + call.id);\n            if (call.stats) {\n                call.stats.pop();\n            }\n        }\n        return isNewPeerCreated;\n    };\n\n    // firefoxCreatePeer\n    self.createPeer = function(call) {\n        try {\n            var pc, constraints = {}, i, servers = [],\n                iceServerUrl, config, useIceServer;\n\n            useIceServer = !_config.ignoreIceParamsForServices || _config.ignoreIceParamsForServices.indexOf('call') !== -1;\n            logger.info('useIceServer: ' + useIceServer);\n            if (useIceServer) {\n                iceServerUrl = self.getIceServerUrl();\n            }\n\n            if (iceServerUrl instanceof Array) {\n                for (i = 0; i < iceServerUrl.length; i++) {\n                    iceServerUrl[i].urls = iceServerUrl[i].urls.replace('turns', 'turn');\n                    servers[i] = iceServerUrl[i];\n                }\n            } else if (!iceServerUrl || iceServerUrl === '') {\n                servers = [];\n            } else {\n                servers[0] = iceServerUrl;\n            }\n            config = {\n                iceServers: servers,\n                // NOTE: This is added temporarily because Chrome and Firefox have required set\n                // by default and the media broker doesn't support multiplexing. ADG-14986\n                rtcpMuxPolicy: 'negotiate'\n            };\n\n            // If present, take the call constraints provided as config.\n            if(_config.callConstraints && _config.callConstraints.firefox) {\n                // If any constraint is malformed, the RTCPeerConnection will fail to be created.\n                logger.debug('Using custom peer constraints for call.', _config.callConstraints.firefox);\n                constraints = _config.callConstraints.firefox;\n            }\n\n            constraints.optional = constraints.optional || [];\n            constraints.optional.push({\n                'DtlsSrtpKeyAgreement': self.isDtlsEnabled()\n            });\n\n            //Add iceTransportPolicy:relay in order to force TURN\n            if(_config.useRelayOnly) {\n                config.iceTransportPolicy = 'relay';\n            }\n\n            if (_config.bundlePolicy !== constants.WEBRTC.SDP.BUNDLE_POLICY.DISABLED) {\n                config.bundlePolicy = _config.bundlePolicy;\n            }\n\n            pc = self.getRtcLibrary().createRTCPeerConnection(config, constraints);\n            pc._peerId = peerId++;\n\n            if (call.peer) {\n                logger.debug(`createPeer - Peer Id: ${call.peer._peerId} - detaching old peer from call ${call.id}.`);\n\n                // Let's make sure we stop listening to any events from the old peer.\n                call.peer.onconnecting = undefined;\n                call.peer.onopen = undefined;\n                call.peer.onsignalingstatechange = undefined;\n                call.peer.onaddstream = undefined;\n                call.peer.onremovestream = undefined;\n                call.peer.onicecandidate = undefined;\n                call.peer.onicecomplete = undefined;\n                call.peer.oniceconnectionstatechange = undefined;\n                call.peer.ondatachannel = undefined;\n                call.peer.onicegatheringstatechange = undefined;\n\n                // Close the peer, it is no longer needed.\n                call.peer.close();\n            }\n\n            self.setPeerCount(self.getPeerCount() + 1);\n            call.peer = pc;\n\n            pc.onconnecting = function(event) {\n                self.onSessionConnecting(call, event);\n            };\n            pc.onopen = function(event) {\n                self.onSessionOpened(call, event);\n            };\n            pc.onsignalingstatechange = function(event) {\n                self.onSignalingStateChange(call, event);\n            };\n            pc.onaddstream = function(event) {\n                self.onRemoteStreamAdded(call, event);\n            };\n            pc.onremovestream = function(event) {\n                self.onRemoteStreamRemoved(call, event);\n            };\n            pc.onicecandidate = function(event) {\n                if (pc !== call.peer) {\n                    logger.error(`Peer Id: ${pc._peerId} - received notification from detached peer not on call (Other Peer id: ${call.peer._peerId} )`);\n                    return;\n                }\n                if (event.currentTarget.iceGatheringState === 'complete') {\n                    logger.debug(`Peer Id: ${pc._peerId} - ice gathering complete`);\n                    self.onIceComplete(call);\n                } else {\n                    self.setupIceCandidateCollectionTimer(call);\n                    self.onIceCandidate(call, event);\n                }\n            };\n            pc.onicecomplete = function() {\n                self.onIceComplete(call);\n            };\n            pc.oniceconnectionstatechange = function(event) {\n                self.oniceconnectionstatechange(call, event);\n            };\n            pc.ondatachannel = function(event) {\n                self.onDataChannel(call, event);\n            };\n\n            pc.onicegatheringstatechange = function() {\n                logger.debug(`Peer Id: ${pc._peerId} - ice gathering state change:` + pc.iceGatheringState);\n            };\n\n            logger.info(`Peer Id: ${pc._peerId} - create PeerConnection successfully.`);\n\n            // Will be commented-in after decision of necessary stats\n            // self.setupWebrtcLogCollectionTimer(call);\n\n            return true;\n        } catch (err) {\n            logger.error('Failed to create PeerConnection, exception: ' + err.message);\n        }\n        return false;\n    };\n\n    // firefoxgetCameraList\n    self.getCameraList = function() {\n        return;\n    };\n\n    // firefoxgetMicrophoneList\n    self.getMicrophoneList = function() {\n        return;\n    };\n\n    // firefoxgetSpeakerList\n    self.getSpeakerList = function() {\n        return;\n    };\n\n    self.getNativeWebRtcStats = function(call, onSuccess, onFailure) {\n        try {\n            if (call) {\n                logger.debug('getNativeWebRtcStats called mozilla');\n                call.peer.getStats(undefined, function(stats) {\n                    if (stats !== undefined && stats !== null) {\n                        _utils.callFunctionIfExist(onSuccess, stats);\n                    }\n                },\n                self.statsCallback);\n            }\n        } catch (err) {\n            logger.error('Failed to get all WebRTC Statistics: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n    };\n\n    self.statsCallback = function(error) {\n        logger.debug('Mozilla statsCallback:' + error);\n    };\n\n    self.getWebRtcStats = function(call, onSuccess, onFailure) {\n        try {\n            if (call) {\n                logger.debug('getWebRtcStats called mozilla');\n                self.collectWebRtcStats(call.peer,\n                    function(stats) {\n                        var accumulatedStats = self.getAccumulatedWebRtcStats(call.stats, stats);\n                        _utils.callFunctionIfExist(onSuccess, accumulatedStats);\n                    },\n                    onFailure);\n            }\n        } catch (err) {\n            logger.error('Failed to get WebRTC Statistics: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n        return self.getStats();\n    };\n\n    self.getAccumulatedWebRtcStats = function(statsList, currentStats) {\n        var i, accumulatedStats = {\n            audio: {\n                packetsSent: 0,\n                bytesSent: 0,\n                bytesReceived: 0,\n                peerAddress: null,\n                codec: null,\n                packetsLost: 0,\n                jitter: null,\n                rtt: null\n            },\n            video: {\n                packetsSent: 0,\n                bytesSent: 0,\n                bytesReceived: 0,\n                peerAddress: null,\n                codec: null,\n                packetsLost: 0,\n                rtt: null\n            }\n        };\n        if (statsList !== undefined) {\n            for (i = 0; i < statsList.length; i++) {\n                self.accumulateStats(accumulatedStats.audio, statsList[i].audio);\n                self.accumulateStats(accumulatedStats.video, statsList[i].video);\n            }\n        }\n\n        self.accumulateStats(accumulatedStats.audio, currentStats.audio);\n        accumulatedStats.audio.peerAddress = currentStats.audio.peerAddress;\n        accumulatedStats.audio.codec = currentStats.audio.codec;\n        accumulatedStats.audio.jitter = currentStats.audio.jitter;\n        accumulatedStats.audio.rtt = currentStats.audio.rtt;\n\n        self.accumulateStats(accumulatedStats.video, currentStats.video);\n        accumulatedStats.video.peerAddress = currentStats.video.peerAddress;\n        accumulatedStats.video.codec = currentStats.video.codec;\n        accumulatedStats.video.rtt = currentStats.video.rtt;\n\n        return accumulatedStats;\n    };\n\n    self.accumulateStats = function(accumulatedStatsObj, statsObj) {\n        accumulatedStatsObj.packetsSent += getInteger(statsObj.packetsSent);\n        accumulatedStatsObj.bytesSent += getInteger(statsObj.bytesSent);\n        accumulatedStatsObj.bytesReceived += getInteger(statsObj.bytesReceived);\n        accumulatedStatsObj.packetsLost += getInteger(statsObj.packetsLost) === -1 ? 0 : getInteger(statsObj.packetsLost);\n    };\n\n    self.collectWebRtcStats = function(peer, onSuccess, onFailure) {\n        try {\n            if (peer) {\n                logger.debug('collectWebRtcStats called mozilla');\n                peer.getStats(undefined, function(stats) {\n                    if (stats !== undefined && stats !== null) {\n                        self.setWebRtcStats(stats);\n                        _utils.callFunctionIfExist(onSuccess, self.getStats());\n                    }\n                },\n                self.statsCallback);\n            }\n        } catch (err) {\n            logger.error('Failed to collectWebRtcStats: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n        return self.getStats();\n    };\n\n    self.setWebRtcStats = function(results) {\n        var stats = {\n            audio: {\n                packetsSent: null,\n                bytesSent: null,\n                bytesReceived: null,\n                peerAddress: null,\n                codec: null,\n                packetsLost: null,\n                jitter: null,\n                rtt: null\n            },\n            video: {\n                packetsSent: null,\n                bytesSent: null,\n                bytesReceived: null,\n                peerAddress: null,\n                codec: null,\n                packetsLost: null,\n                rtt: null\n            }\n        };\n\n        results.forEach(function(result) {\n            if (result.type === 'remotecandidate') {\n\n                // The results from RTCPeerConnection.getStats need to be treated in a\n                // map-like fashion. Other usage has been deprecated.\n                // See: http://w3c.github.io/webrtc-pc/#rtcstatsreport-object\n                var currentStat = results.get(result.id);\n\n                if (currentStat.componentId !== undefined) {\n                    if (currentStat.componentId.indexOf('aLevel=0') > -1) {\n                        stats.audio.peerAddress = currentStat.ipAddress + ':' + currentStat.portNumber;\n                    } else if (currentStat.componentId.indexOf('aLevel=1') > -1) {\n                        stats.video.peerAddress = currentStat.ipAddress + ':' + currentStat.portNumber;\n                    }\n                }\n            }\n        });\n\n        if(stats.video.peerAddress === undefined || stats.video.peerAddress === null  ){\n            stats.video.peerAddress = stats.audio.peerAddress;\n        }\n\n        //audio\n        if (results.get('inbound_rtp_audio_0') !== undefined) {\n            stats.audio.bytesReceived = results.get('inbound_rtp_audio_0').bytesReceived;\n            stats.audio.packetsLost = results.get('inbound_rtp_audio_0').packetsLost;\n            stats.audio.jitter = results.get('inbound_rtp_audio_0').jitter;\n        }\n        if (results.get('outbound_rtp_audio_0') !== undefined) {\n            stats.audio.packetsSent = results.get('outbound_rtp_audio_0').packetsSent;\n            stats.audio.bytesSent = results.get('outbound_rtp_audio_0').bytesSent;\n        }\n        if (results.get('outbound_rtcp_audio_0') !== undefined) {\n            stats.audio.rtt = results.get('outbound_rtcp_audio_0').mozRtt;\n        }\n\n        if (results.get('inbound_rtp_video_1') !== undefined) {\n            stats.video.bytesReceived = results.get('inbound_rtp_video_1').bytesReceived;\n            stats.video.packetsLost = results.get('inbound_rtp_video_1').packetsLost;\n        }\n\n        if (results.get('outbound_rtp_video_1') !== undefined) {\n            stats.video.packetsSent = results.get('outbound_rtp_video_1').packetsSent;\n            stats.video.bytesSent = results.get('outbound_rtp_video_1').bytesSent;\n        }\n        if (results.get('outbound_rtcp_video_1') !== undefined) {\n            stats.video.rtt = results.get('outbound_rtcp_video_1').mozRtt;\n        }\n\n        self.setStats(stats);\n    };\n\n    logger.debug('WebRtcFirefoxAdaptor initialized');\n}\n","import {compose} from '../../utils';\nimport {mediaErrors} from '../../call/call';\n\nexport function WebRtcFirefoxEsrAdaptorImpl({\n    base: _super,\n    model: _model,\n    LogManager: _logManager,\n    Utils: _utils\n}) {\n    var self = this,\n        logger = _logManager.getLogger('WebRtcFirefoxEsrAdaptorImpl');\n    logger.debug('WebRtcFirefoxEsrAdaptor initializing');\n\n    compose(_super, self);\n    compose(_model, self);\n\n    // firefoxEsrGetUserMedia\n    self.getUserMedia = function(params) {\n        self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n            var mediaInfo, constraints = {\n                    audio: false,\n                    video: false\n                },\n                localMedia;\n            self.setMediaSources(mediaSourceInfo);\n\n            if (mediaSourceInfo) {\n                if (!mediaSourceInfo.audioSourceAvailable) {\n                    logger.debug('Failed to get access to local media.');\n                    _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_FOUND);\n                    return;\n                }\n            }\n\n            if (self.getVideoSourceAvailable()) {\n                constraints.video = params.options.videoConstraints;\n            }\n            if (self.getAudioSourceAvailable()) {\n                constraints.audio = params.options.audioConstraints;\n            }\n\n            logger.debug('getUserMedia - constraints: ', constraints);\n            self.getRtcLibrary().getUserMedia(constraints, function getUserMediaSuccessCallback(stream) {\n\n                localMedia = {\n                    audioContext: {\n                        close: function() {}\n                    },\n                    mediaStreamDestination: {\n                        disconnect: function() {}\n                    },\n                    stream: stream,\n                    originalStream: stream\n                };\n\n                self.setLocalMedia(localMedia);\n                self.getLocalStreamMap().add(localMedia.stream.id, localMedia);\n                self.setInitialized(true);\n\n                mediaInfo = {\n                    audio: constraints.audio,\n                    video: constraints.video,\n                    id: localMedia.stream.id,\n                    originalStream: stream,\n                };\n\n                logger.debug('user has granted access to local media: ', localMedia);\n                _utils.callFunctionIfExist(params.onSuccess, mediaInfo);\n            }, function getUserMediaFailureCallback(error) {\n                logger.debug('Failed to get access to local media. Error: ', error);\n                _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_ALLOWED);\n            });\n        });\n    };\n\n\n    // firefoxEsrSendDTMF\n    self.sendDTMF = function() {\n        logger.debug('DMTF IS ONLY SUPPORTED FOR  FIREFOX 40 AND NEWER VERSIONS');\n    };\n\n    logger.debug('WebRtcFirefoxEsrAdaptor initialized');\n}\n","import {compose, getInteger} from '../../utils';\nimport CONSTANTS from '../../constants';\nimport {mediaErrors} from '../../call/call';\nimport constants from '../../constants';\n\nexport function WebRtcPluginAdaptorImpl({\n    base: _super,\n    decorator: _decorator,\n    model: _model,\n    LogManager: _logManager,\n    Utils: _utils,\n    SdpParser: _sdpParser,\n    Cache: _cache,\n    Core: _fcs,\n    Config: _config,\n    SdpPipeline: _sdpPipeline\n}) {\n    var self = this,\n        logger = _logManager.getLogger('WebRtcPluginAdaptorImpl'),\n        peerId = 0;\n\n    logger.debug('WebRtcPluginAdaptor initializing');\n\n    compose(_super, self);\n    compose(_model, self);\n\n    self.setPluginEnabled(true);\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.getLocalAudioTrack = function(peer) {\n        logger.debug('getLocalAudioTrack');\n\n        if (peer.localStreams && peer.localStreams.length > 0 && peer.localStreams.item(0).audioTracks) {\n            if (peer.localStreams.item(0).audioTracks.length > 0) {\n                return peer.localStreams.item(0).audioTracks.item(0);\n            }\n        }\n\n        return null;\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.getLocalVideoTrack = function(peer) {\n        logger.debug('getLocalVideoTrack');\n\n        if (peer.localStreams && peer.localStreams.length > 0 && peer.localStreams.item(0).videoTracks) {\n            if (peer.localStreams.item(0).videoTracks.length > 0) {\n                return peer.localStreams.item(0).videoTracks.item(0);\n            }\n        }\n\n        return null;\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.getRemoteVideoTrack = function(peer) {\n        logger.debug('getRemoteVideoTrack');\n\n        if (peer.remoteStreams && peer.remoteStreams.item(0)) {\n            return peer.remoteStreams.item(0).videoTracks;\n        }\n\n        return [];\n    };\n\n    //This function is called internally when we make a new call or hold/unhold scenario\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.addLocalStream = function(internalCall) {\n        var stream, fireEvent = false,\n            isSendingLocalVideo = self.canOriginatorSendLocalVideo(internalCall);\n\n        if (internalCall.localMedia && internalCall.localMedia.stream) {\n            if (isSendingLocalVideo) {\n                stream = internalCall.localMedia.stream;\n\n                // Note: I don't think this next assignment is needed.\n                internalCall.call.localStream = stream;\n                if (self.getDefaultVideoContainer()) {\n                    fireEvent = self.useDefaultRenderer(stream, true);\n                } else if (self.getLocalVideoContainer()) {\n                    fireEvent = self.createStreamRenderer(stream, self.getLocalVideoContainer(), {\n                        muted: true\n                    });\n                } else {\n                    fireEvent = true;\n                }\n\n                logger.debug('onLocalStreamAdded: ' + stream.id);\n                if (fireEvent) {\n                    self.fireOnLocalStreamAddedEvent(internalCall, stream);\n                }\n            } else {\n                if (self.getDefaultVideoContainer()) {\n                    if (self.getDefaultVideoContainer().lastElementChild) {\n                        self.disposeStreamRenderer(self.getDefaultVideoContainer().lastElementChild);\n                    }\n                } else if (self.getLocalVideoContainer()) {\n                    self.disposeStreamRenderer(self.getLocalVideoContainer());\n                }\n            }\n        }\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.muteAudioTrack = function(call, mute, userAction) {\n        var localAudioTrack;\n\n        if (!self.isInitialized()) {\n            logger.warn('muteAudioTrack: Plugin is not installed');\n            return;\n        }\n\n        if (!call.peer) {\n            return;\n        }\n\n        localAudioTrack = self.getLocalAudioTrack(call.peer);\n        if (localAudioTrack) {\n            logger.info('mute Audio Track [' + localAudioTrack.id + '], call [' + call.id + '] mute=' + mute);\n            localAudioTrack.enabled = !mute;\n            call.audioMuted = mute;\n            if (userAction) {\n                call.fcsUserAudioMuteState = mute;\n            }\n        }\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.muteVideoTrack = function(call, mute, userAction) {\n        var localVideoTrack;\n\n        if (!self.isInitialized()) {\n            logger.warn('muteVideoTrack: Plugin is not installed');\n            return;\n        }\n\n        if (!call.peer) {\n            return;\n        }\n\n        localVideoTrack = self.getLocalVideoTrack(call.peer);\n        if (localVideoTrack) {\n            logger.info('mute Video Track [' + localVideoTrack.id + '], call [' + call.id + '] mute=' + mute);\n            localVideoTrack.enabled = !mute;\n            call.videoMuted = mute;\n            if (userAction) {\n                call.fcsUserVideoMuteState = mute;\n            }\n        }\n    };\n\n    /**\n     * Sets the mute state of the call to false or the value specified by the user.\n     * For example, if a call was unmuted before a hold, it will go back to being unmuted after the call comes off of hold.\n     * @function\n     * @param {Object} call internalCall\n     *\n     */\n    self.restoreUserMuteStateOfCall = function(call) {\n        var previousMuteStateOfAudio = false,\n            previousMuteStateOfVideo = false;\n        if (!call.peer) {\n            return;\n        }\n\n        if (call.fcsUserAudioMuteState) {\n            previousMuteStateOfAudio = call.fcsUserAudioMuteState;\n        }\n\n        if (call.fcsUserVideoMuteState) {\n            previousMuteStateOfVideo = call.fcsUserVideoMuteState;\n        }\n\n        logger.debug('previous audio mute state of call: ' + previousMuteStateOfAudio);\n        logger.debug('previous video mute state of call: ' + previousMuteStateOfVideo);\n        self.muteAudioTrack(call, previousMuteStateOfAudio);\n        self.muteVideoTrack(call, previousMuteStateOfVideo);\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * Mutes audio and video tracks (to be used during Hold)\n     *\n     * @ignore\n     * @name rtc.mute\n     * @function\n     * @param {Object} call internalCall\n     * @param {boolean} mute true to mute, false to unmute\n     */\n    self.muteOnHold = function(call, mute) {\n        self.muteAudioTrack(call, mute);\n        self.muteVideoTrack(call, mute);\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    // initEnablerMedia\n    self.initMedia = function(onSuccess, onFailure, options) {\n        var mainContainer = document.body,\n            rtcPlugin = {},\n            verifyPlugin = true,\n            onloadParam,\n            size = '1px',\n            pluginid = 'fcsPlugin',\n            applicationType = 'application/x-gcfwenabler',\n            configuredPluginVersion = self.getPluginVersion(),\n            currentPluginVersion,\n            currentPluginVersionString;\n\n        logger.debug('Configured plugin version: ' + configuredPluginVersion.major + '.' + configuredPluginVersion.minor + '.' + configuredPluginVersion.current_revision);\n\n        if (options) {\n            if (options.pluginLogLevel) {\n                self.setLogLevel(options.pluginLogLevel);\n            }\n\n            if (options.language) {\n                self.setLanguage(options.language);\n            }\n        }\n        //Callback for when the plugin is loaded\n        self.onFCSPLoaded = function() {\n\n            self.setRtcLibrary(_decorator(rtcPlugin));\n            if (self.isH264Enabled()) {\n                self.getRtcLibrary().enableH264();\n            }\n            self.getRtcLibrary().checkMediaSourceAvailability(function mediaSourceCallback(mediaSourceInfo) {\n                self.setMediaSources(mediaSourceInfo);\n            });\n            self.getRtcLibrary().setH264CodecStateChangeHandler(function onH264CodecStateChangeHandler(event) {\n                self.setH264Enabled(event.state);\n            });\n\n            currentPluginVersion = self.getRtcLibrary().getCurrentPluginVersionObject();\n            currentPluginVersionString = self.getRtcLibrary().getVersion();\n            // prevent multiple init calls\n            if (self.isInitialized()) {\n                // If the plugin is already initialized, it should call successCallback with persion\n                _utils.callFunctionIfExist(onSuccess, {\n                    'pluginVersion': rtcPlugin.version\n                });\n            }\n            if (!verifyPlugin) {\n                return;\n            }\n            verifyPlugin = false;\n            logger.debug('Plugin callback');\n\n            _fcs.setPluginVersion(currentPluginVersionString);\n            logger.debug('Installed plugin version: ' + currentPluginVersionString);\n\n            if ((currentPluginVersionString.length < 1) ||\n                (currentPluginVersion.major !== configuredPluginVersion.major ||\n                    currentPluginVersion.minor !== configuredPluginVersion.minor) ||\n                (currentPluginVersion.revision < configuredPluginVersion.min_revision) ||\n                (currentPluginVersion.revision === configuredPluginVersion.min_revision &&\n                    currentPluginVersion.build < configuredPluginVersion.min_build)) {\n\n                logger.debug('Plugin version not supported');\n                _utils.callFunctionIfExist(onFailure, mediaErrors.WRONG_VERSION);\n                _utils.callFunctionIfExist(_fcs.onPluginRequired, mediaErrors.WRONG_VERSION);\n            } else {\n                self.setInitialized(true);\n                if ((currentPluginVersion.revision < configuredPluginVersion.current_revision) ||\n                    (currentPluginVersion.revision === configuredPluginVersion.current_revision &&\n                        currentPluginVersion.build < configuredPluginVersion.current_build)) {\n\n                    logger.debug('New plugin version warning');\n                    _utils.callFunctionIfExist(onFailure, mediaErrors.NEW_VERSION_WARNING);\n                    _utils.callFunctionIfExist(_fcs.onPluginRequired, mediaErrors.NEW_VERSION_WARNING);\n                } else {\n                    _utils.callFunctionIfExist(onSuccess, {\n                        'pluginVersion': rtcPlugin.version\n                    });\n                }\n\n                self.getRtcLibrary().setLang(self.getLanguage());\n            }\n\n            self.getRtcLibrary().checkMediaSourceAvailability();\n        };\n\n        // only check if the function exists, not its type, because in IE it is \"object\" (host object)\n        if (typeof mainContainer.appendChild === 'undefined') {\n            logger.debug('Could not inject plugin in container');\n            _utils.callFunctionIfExist(onFailure, mediaErrors.OPTIONS);\n            _utils.callFunctionIfExist(_fcs.onPluginRequired, mediaErrors.OPTIONS);\n            return;\n        }\n\n        rtcPlugin = document.createElement('object');\n        onloadParam = document.createElement('param');\n        onloadParam.setAttribute('name', 'onload');\n        onloadParam.setAttribute('value', 'onFCSPLoaded');\n        rtcPlugin.appendChild(onloadParam);\n\n        rtcPlugin.id = pluginid;\n        rtcPlugin.width = rtcPlugin.height = size;\n\n        // Order matters for the following:\n        // For IE you need to append first so the dom is available when IE loads the plugin, which happens when the type is set.\n        // For FF you need to set the type and then append or the plugin won't load.\n        // Chrome seems happy either way.\n        try {\n            if (navigator.appName === 'Microsoft Internet Explorer') {\n                mainContainer.appendChild(rtcPlugin);\n                rtcPlugin.type = applicationType;\n            } else {\n                rtcPlugin.type = applicationType;\n                mainContainer.appendChild(rtcPlugin);\n            }\n        } catch (e) {\n            verifyPlugin = false;\n            _utils.callFunctionIfExist(onFailure, mediaErrors.NOT_FOUND);\n            _utils.callFunctionIfExist(_fcs.onPluginRequired, mediaErrors.NOT_FOUND);\n        }\n\n        if (verifyPlugin) {\n            if (typeof document.getElementById(pluginid).createPeerConnection !== 'undefined') {\n                self.onFCSPLoaded();\n            } else {\n                //if the plugin is not initialized within 7 sec fail\n                setTimeout(function() {\n                    // for createPeerConnection, only check if it exists. It is \"function\" in FireFox and \"object\" in Chrome and IE\n                    if (!self.isInitialized()) {\n                        if (typeof document.getElementById(pluginid).createPeerConnection === 'undefined') {\n                            _utils.callFunctionIfExist(onFailure, mediaErrors.NOT_FOUND);\n                            _utils.callFunctionIfExist(_fcs.onPluginRequired, mediaErrors.NOT_FOUND);\n                        } else {\n                            self.onFCSPLoaded();\n                        }\n                    }\n                }, 7000);\n            }\n        }\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.getUserMedia = function(params) {\n        self.getRtcLibrary().checkMediaSourceAvailability(function getUserMediaCallback(mediaSourceInfo) {\n            var mediaInfo, constraints = {\n                    audio: false,\n                    video: false\n                },\n                localMedia;\n            self.setMediaSources(mediaSourceInfo);\n\n            if (mediaSourceInfo) {\n                if (!mediaSourceInfo.audioSourceAvailable) {\n                    logger.debug('Failed to get access to local media.');\n                    _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_FOUND);\n                    return;\n                }\n            }\n\n            if (self.getVideoSourceAvailable()) {\n                constraints.video = params.options.videoConstraints;\n            }\n            if (self.getAudioSourceAvailable()) {\n                constraints.audio = params.options.audioConstraints;\n            }\n            logger.debug('Plugin version:' + self.getRtcLibrary().version);\n            logger.debug('getUserMedia - constraints: ', constraints);\n            self.getRtcLibrary().getUserMedia(constraints, function getUserMediaSuccessCallback(stream) {\n                localMedia = {\n                    audioContext: {\n                        close: function() {}\n                    },\n                    mediaStreamDestination: {\n                        disconnect: function() {}\n                    },\n                    stream: stream,\n                    originalStream: stream\n                };\n                self.setLocalMedia(localMedia);\n                self.getLocalStreamMap().add(localMedia.stream.label, localMedia);\n                self.setInitialized(true);\n\n                mediaInfo = {\n                    audio: constraints.audio,\n                    video: constraints.video,\n                    id: localMedia.stream.label,\n                    originalStream: stream,\n                };\n\n                logger.debug('user has granted access to local media: ', localMedia);\n                _utils.callFunctionIfExist(params.onSuccess, mediaInfo);\n            }, function getUserMediaFailureCallback(error) {\n                logger.debug('Failed to get access to local media. Error: ', error);\n                _utils.callFunctionIfExist(params.onFailure, mediaErrors.NOT_ALLOWED);\n            });\n        });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * createEnablerOffer to be used when the enabler plugin is enabled.\n     */\n    self.createOffer = function(call, successCallback, failureCallback, sendInitialVideo, offerToReceiveVideo) {\n        logger.debug('createOffer: sendInitialVideo= ' + sendInitialVideo + ' state= ' + call.peer.signalingState);\n        var peer = call.peer;\n\n        if(call.localMedia && call.localMedia.stream){\n            call.peer.addStream(call.localMedia.stream);\n        }\n\n        peer.createOffer(function createOfferSuccessCallback(oSdp) {\n            sendInitialVideo = sendInitialVideo && self.getVideoSourceAvailable();\n            if (sendInitialVideo) {\n                oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n            } else {\n                oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            }\n\n            oSdp.sdp = _sdpParser.deleteCryptoZeroFromSdp(oSdp.sdp);\n\n            oSdp.sdp = _sdpParser.removeG722Codec(oSdp.sdp);\n\n            oSdp.sdp = _sdpParser.deleteCryptoFromSdp(oSdp.sdp, self.isDtlsEnabled());\n            oSdp.sdp = _sdpParser.setTcpSetupAttribute(oSdp.sdp, 'actpass');\n\n            oSdp.sdp = self.updateCodecs(call, oSdp.sdp);\n            oSdp.sdp = _sdpParser.updateOpusConfig(oSdp.sdp, _config.opusConfig);\n\n            self.muteOnHold(call, false);\n\n            oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n            logger.trace('createOffer: Setting local description with (offer) SDP: ' + oSdp.sdp);\n            peer.setLocalDescription(\n                self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, oSdp.sdp),\n                function createOfferSetLocalDescriptionSuccessCallback() {\n                    // Due to stun requests, successCallback will be called by onIceCandidate()\n                },\n                function createOfferSetLocalDescriptionFailureCallback(error) {\n                    logger.error('createOffer: setLocalDescription failed : ' + error);\n                    _utils.callFunctionIfExist(failureCallback, 'createOffer: setLocalDescription failed');\n                }\n            );\n\n        }, function createOfferFailureCallback(error) {\n            logger.error('createOffer: createOffer failed!! ' + error);\n            _utils.callFunctionIfExist(failureCallback);\n        }, {\n            optional: {\n                OfferToReceiveVideo: offerToReceiveVideo\n            }\n        });\n    };\n\n    /*\n     * createEnablerAnswer to be used when the enabler plugin is enabled\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     */\n    self.createAnswer = function(call, successCallback, failureCallback, isVideoEnabled) {\n        logger.debug('createAnswer: isVideoEnabled= ' + isVideoEnabled + ' state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            newSdp;\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.deleteFingerprintOrCrypto(call.sdp, self.isDtlsEnabled());\n\n        if (!_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n            // delete ssrc only from video, keep audio ssrc to hear audio\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n        }\n\n        logger.trace('createAnswer: Setting remote description with (offer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp,\n            function createAnswerSetRemoteDescriptionSuccessCallback() {\n                if(call.localMedia && call.localMedia.stream){\n                    call.peer.addStream(call.localMedia.stream);\n                }\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n                // set answer SDP to localDescriptor for the offer\n                peer.createAnswer(peer.remoteDescription,\n                    function createAnswerSuccessCallback(oSdp) {\n                        newSdp = _sdpParser.getSdpFromObject(oSdp);\n                        oSdp = null;\n                        isVideoEnabled = isVideoEnabled && self.getVideoSourceAvailable() && _sdpParser.isSdpHasVideo(call.sdp);\n                        newSdp = _sdpParser.updateOpusConfig(newSdp, _config.opusConfig);\n\n                        if (isVideoEnabled) {\n                            if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                                newSdp = _sdpParser.updateVideoSdpDirection(newSdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                if (_sdpParser.getVideoSdpDirection(call.sdp) !== CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                    newSdp = _sdpParser.updateVideoSdpDirection(newSdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                                } else {\n                                    newSdp = _sdpParser.updateVideoSdpDirection(newSdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                                }\n                            }\n                        } else {\n                            if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                                newSdp = _sdpParser.updateVideoSdpDirection(newSdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            } else {\n                                newSdp = _sdpParser.updateVideoSdpDirection(newSdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n                        }\n\n                        logger.debug('doAnswer(plugin) - isSdpEnabled audio : ' + _sdpParser.isAudioSdpEnabled(newSdp));\n                        logger.debug('doAnswer(plugin) - isSdpEnabled video : ' + _sdpParser.isVideoSdpEnabled(newSdp));\n\n                        if (_sdpParser.isSdpHasAudio(newSdp) || _sdpParser.isSdpHasVideo(newSdp)) {\n\n                            // createAnswer generates an sdp without ice params\n                            // copy ice params to the local sdp\n                            // scenario: incoming video call from pcc in brokeronly config\n                            newSdp = _sdpParser.checkAndRestoreICEParams(newSdp, call.sdp);\n\n                            self.muteOnHold(call, false);\n\n                            newSdp = _sdpPipeline(call.id, newSdp, CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                            logger.trace('createAnswer: Setting local description with (answer) SDP: ' + newSdp);\n                            peer.setLocalDescription(\n                                self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, newSdp),\n                                function createAnswerSetLocalDescriptionSuccessCallback() {\n                                    // Due to stun requests, successCallback will be called by onIceCandidate()\n                                },\n                                function createAnswerSetLocalDescriptionFailureCallback(e) {\n                                    logger.error('createAnswer: setLocalDescription failed : ' + e);\n                                    _utils.callFunctionIfExist(failureCallback, 'createAnswer setLocalDescription failed');\n                                });\n                        } else {\n                            logger.error('createrAnswer: createAnswer failed!!');\n                            _utils.callFunctionIfExist(failureCallback, 'No codec negotiation');\n                        }\n                    },\n                    function createAnswerFailureCallback(e) {\n                        logger.error('createAnswer: failed!!' + e);\n                        _utils.callFunctionIfExist(failureCallback, 'Session cannot be created ');\n                    });\n            },\n            function createAnswerSetRemoteDescriptionFailureCallback(e) {\n                logger.error('createAnswer setRemoteDescription failed : ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'createAnswer setRemoteDescription failed');\n            });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * createEnablerUpdate to be used when the video start or stop\n     */\n    self.createUpdate = function(call, successCallback, failureCallback, isVideoStart) {\n        logger.debug('createEnablerUpdate: isVideoStart= ' + isVideoStart + ' state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            localDesc, localSdp = call.stableLocalSdp;\n\n        if (self.createNewPeerForCall({\n            call: call,\n            mustCreatePeer: call.isRemoteEndFirefox,\n        })) {\n            peer = call.peer;\n            self.setTcpSetupAttiributesOnProcessAnswer(call, call.sdp);\n        }\n        self.getRtcLibrary().updateStream(peer, call);\n\n        peer.createOffer(function createUpdateCreateOfferSuccessCallback(obj) {\n            isVideoStart = isVideoStart && self.getVideoSourceAvailable();\n            if (isVideoStart) {\n                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n            } else {\n                if (_sdpParser.isVideoSdpDirectionInactive(call.stableRemoteSdp)) {\n                    obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                } else {\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                }\n            }\n            obj.sdp = self.updateCodecs(call, obj.sdp);\n            obj.sdp = _sdpParser.updateH264Level(obj.sdp);\n            obj.sdp = _sdpParser.updateVersion(localSdp, obj.sdp);\n            obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, 'actpass');\n            obj.sdp = _sdpParser.deleteCryptoZeroFromSdp(obj.sdp);\n            obj.sdp = _sdpParser.removeG722Codec(obj.sdp);\n            obj.sdp = _sdpParser.deleteCryptoFromSdp(obj.sdp, self.isDtlsEnabled());\n            obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n\n            obj.sdp = _sdpPipeline(call.id, obj.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n            localDesc = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, obj.sdp);\n\n            logger.trace('createUpdate: Setting local description with (offer) SDP: ' + obj.sdp);\n            peer.setLocalDescription(localDesc, function createUpdateCreateOfferSetLocalDescriptionSuccessCallback() {\n                logger.debug('createUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n\n                // The above process un-mutes the client. We must ensure it continues to be muted if necessary.\n                if(call.audioMuted){\n                    logger.debug('video started while muted, re-mute the microphone');\n                    self.muteAudioTrack(call, true, false);\n                }\n\n                if (peer.iceGatheringState === 'complete') {\n                    if (call.successCallback) {\n                        logger.debug('createUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                    }\n                }\n            }, function crateUpdateCreateOfferSetLocalDescriptionFailureCallback(e) {\n                logger.debug('createUpdate: createOffer setLocalDescription failed: ' + e);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n\n        }, function createUpdateCrateOfferFailureCallback(e) {\n            logger.debug('createUpdate: createOffer failed!!: ' + e);\n            _utils.callFunctionIfExist(failureCallback);\n        });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * createEnablerHoldUpdate to be used when the enabler plugin is enabled\n     */\n    self.createHoldUpdate = function(call, hold, remote_hold_status, successCallback, failureCallback, useIceServer) {\n        logger.debug('createHoldUpdate: local hold= ' + hold + ' remote hold= ' + remote_hold_status + ' state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            localDescObj,\n            localSdp;\n\n        var operation = hold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        localSdp = call.stableLocalSdp;\n\n        if (self.createNewPeerForCall({\n            call: call,\n            mustCreatePeer: call.isRemoteEndFirefox,\n            useIceServer: useIceServer\n        })) {\n            peer = call.peer;\n        }\n\n        peer.createOffer(function createHoldUpdateCreateOfferSuccessCallback(obj) {\n\n            if (hold) {\n                if (!remote_hold_status) {\n                    obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                } else {\n                    obj.sdp = _sdpParser.updateAudioSdpDirectionToInactive(obj.sdp);\n                    obj.sdp = _sdpParser.updateVideoSdpDirectionToInactive(obj.sdp);\n                }\n            } else if (remote_hold_status) {\n                obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n            } else {\n                obj.sdp = _sdpParser.updateAudioSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                if (self.canOriginatorSendLocalVideo(call)) {\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                } else {\n                    obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                }\n            }\n            obj.sdp = self.updateCodecs(call, obj.sdp);\n            obj.sdp = _sdpParser.updateH264Level(obj.sdp);\n            obj.sdp = _sdpParser.updateVersion(localSdp, obj.sdp);\n            obj.sdp = _sdpParser.deleteCryptoZeroFromSdp(obj.sdp);\n            obj.sdp = _sdpParser.setTcpSetupAttribute(obj.sdp, 'actpass');\n            obj.sdp = _sdpParser.updateOpusConfig(obj.sdp, _config.opusConfig);\n\n            obj.sdp = _sdpPipeline(call.id, obj.sdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n            localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, obj.sdp);\n\n            logger.trace('createHoldUpdate: Setting local description with (offer) SDP: ' + obj.sdp);\n            peer.setLocalDescription(localDescObj, function createHoldUpdateSetLocalDescriptionSuccessCallback() {\n                logger.debug('createHoldUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                if (peer.iceGatheringState === 'complete') {\n                    if (call.successCallback) {\n                        logger.debug('createHoldUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                    }\n                }\n            }, function createHoldUpdateSetLocalDescriptionFailureCallback(error) {\n                logger.error('createHoldUpdate: setLocalDescription failed: ' + error.message);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n        }, function createHoldUpdateCreateOfferFailureCallback(error) {\n            logger.error('createHoldUpdate: createOffer failed: ' + error.message);\n            _utils.callFunctionIfExist(failureCallback);\n        });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * processEnabler30Update to be used when the enabler plugin is enabled. (based on processEnabler30Update)\n     */\n    self.processUpdate = function(call, successCallback, failureCallback, local_hold_status) {\n        logger.debug('processUpdate: state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            localSdp, remoteAudioState, remoteVideoState,\n            peerLocalSdp, remoteVideoDirection, callSdpWithNoSsrc, remoteDescriptionMainProcess, data;\n        peerLocalSdp = call.stableLocalSdp;\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        // Meetme workaround. This workaround is added into native function\n        call.sdp = _sdpParser.addSdpMissingCryptoLine(call.sdp);\n        call.sdp = _sdpParser.checkAndRestoreICEParams(call.sdp, peerLocalSdp);\n\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if ((remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) &&\n            (call.currentState === 'COMPLETED')) {\n            switch (call.remoteVideoState) {\n            case CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE:\n            case CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY:\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                break;\n            case CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE:\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                break;\n            }\n        }\n\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n        //this part is a work-around for webrtc bug\n        //set remote description with inactive media lines first.\n        //then set remote description with original media lines.\n\n        //keep original values of remote audio and video states\n        remoteAudioState = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if (_sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n            _sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n        }\n\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n        // delete all ssrc lines from the sdp before setting first remote description\n        // set second remote description with all ssrc lines included\n\n        // TODO: Not sure about this line. It used to store the result but the result was unused. Kept the call\n        // around for safety in case it has side effects.\n        self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.prevRemoteSdp);\n\n        data = {\n            call: call,\n            mustCreatePeer: call.isRemoteEndFirefox,\n            oldSdp: call.prevRemoteSdp,\n            newSdp: call.sdp,\n        };\n        if (self.createNewPeerForCall(data)) {\n            peer = call.peer;\n            self.setTcpSetupAttiributesOnProcessAnswer(call, call.sdp);\n        }\n\n        //This is highly required for meetme on DTLS\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        remoteDescriptionMainProcess = function() {\n            logger.trace('processUpdate: Setting remote description with (offer) SDP: ' + call.sdp);\n            self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp, function processUpdateSetRemoteDescriptionSuccessCallback() {\n                logger.debug('processUpdate: setRemoteDescription success');\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n\n                peer.createAnswer(peer.remoteDescription, function processUpdateCreateAnswerSuccessCallback(obj) {\n                    logger.debug('processUpdate: isSdpEnabled audio= ' + _sdpParser.isAudioSdpEnabled(obj.sdp));\n                    logger.debug('processUpdate: isSdpEnabled video= ' + _sdpParser.isVideoSdpEnabled(obj.sdp));\n\n                    if (_sdpParser.isAudioSdpEnabled(obj.sdp) || _sdpParser.isVideoSdpEnabled(obj.sdp)) {\n                        if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                            if (self.canOriginatorSendLocalVideo(call)) {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            }\n                        } else {\n                            if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                            } else {\n                                obj.sdp = _sdpParser.updateVideoSdpDirection(obj.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n                        }\n\n                        //TODO: Since there is no setter method for obj.sdp from the plugin side,\n                        //      we create a temporary local variable and pass obj.sdp's value into it.\n                        //      Rewrite the below part of code when the setter method is applied to the plugin side\n                        localSdp = _sdpParser.getSdpFromObject(obj);\n                        obj = null;\n                        localSdp = _sdpParser.updateVersion(peerLocalSdp, localSdp);\n\n                        localSdp = _sdpParser.checkIceParamsLengths(localSdp, call.sdp);\n                        localSdp = _sdpParser.setTcpSetupAttribute(localSdp, call.dtlsRole);\n                        localSdp = _sdpParser.updateOpusConfig(localSdp, _config.opusConfig);\n\n                        localSdp = _sdpPipeline(call.id, localSdp, CONSTANTS.WEBRTC.SDP.OPERATION.UPDATE, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                        logger.trace('processUpdate: Setting local description with (answer) SDP: ' + localSdp);\n                        peer.setLocalDescription( self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, localSdp),\n                            function processUpdateSetLocalDescriptionSuccessCallback() {\n                                logger.debug('processUpdate setLocalDescription success. iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                                if (peer.iceGatheringState === 'complete') {\n                                    if (call.successCallback) {\n                                        logger.debug('processUpdate iceGatheringState completed ' + peer.localDescription.sdp);\n                                        _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                                    }\n                                }\n                            },\n                            function processUpdateSetLocalDescriptionFailureCallback(e) {\n                                logger.debug('processUpdate: setLocalDescription failed: ' + e);\n                                _utils.callFunctionIfExist(failureCallback, 'processUpdate: setlocalDescription failed!!');\n                            });\n                    } else {\n                        logger.debug('processUpdate: createAnswer failed!!');\n                        _utils.callFunctionIfExist(failureCallback, 'No codec negotiation');\n                    }\n                }, function processUpdateCreateAnswerFailureCallback(e) {\n                    logger.debug('processUpdate: createAnswer failed!! ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                });\n            }, function processUpdateSetRemoteDescriptionSuccessCallback(e) {\n                logger.debug('processUpdate: setRemoteDescription failed: ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'processUpdate: setRemoteDescription failed!!');\n            });\n        };\n\n        if (_sdpParser.isSdpHasVideo(call.prevRemoteSdp) || _sdpParser.isIceLite(call.sdp) || local_hold_status) {\n            //set media lines with sendonly state for work-around\n            call.sdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n            call.sdp = _sdpParser.updateVideoSdpDirectionToInactive(call.sdp);\n\n            callSdpWithNoSsrc = _sdpParser.deleteSsrcFromSdp(call.sdp);\n\n            logger.trace('processUpdate: Setting remote description with (offer) SDP: ' + callSdpWithNoSsrc);\n            self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, callSdpWithNoSsrc, function processUpdateWorkaroundSetRemoteDescriptionSuccessCallback() {\n                logger.debug('processUpdate: workaround setRemoteDescription success');\n\n                //restore original values\n                call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, remoteAudioState);\n                call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, remoteVideoState);\n\n                remoteDescriptionMainProcess();\n            }, function processUpdateWorkaroundSetRemoteDescriptionFailureCallback(e) {\n                logger.debug('processUpdate: workaround setRemoteDescription failed!!' + e);\n                _utils.callFunctionIfExist(failureCallback, 'processUpdate: workaround setRemoteDescription failed!!');\n            });\n        } else {\n            remoteDescriptionMainProcess();\n        }\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * processEnabler30Answer to be used when the enabler plugin is enabled\n     */\n    self.processAnswer = function(call, onSuccess, onFail) {\n        logger.debug('processAnswer: state= ' + call.peer.signalingState);\n\n        var onSuccessAfterWorkarounds, setRemoteDescription,\n            remoteVideoDirection, localVideoDirection, peer = call.peer,\n            origSdp;\n\n        onSuccessAfterWorkarounds = function() {\n            call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n            _utils.callFunctionIfExist(onSuccess);\n        };\n\n        setRemoteDescription = function(operation, call, onSuccess, onFailure) {\n            logger.trace('processAnswer: Setting remote description with (answer) SDP: ' + call.sdp);\n            self.setRemoteDescription(operation, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n                function() {\n                    logger.debug('processAnswer: setRemoteDescription success');\n                    onSuccess();\n                },\n                function(e) {\n                    logger.error('processAnswer: setRemoteDescription failed: ' + e);\n                    onFailure();\n                });\n        };\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, _sdpParser.getSdpFromObject(call.peer.localDescription), self.isH264Enabled());\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n\n        if (peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.HAVE_REMOTE_PRANSWER) {\n\n            if (_sdpParser.isIceLite(call.prevRemoteSdp) !== _sdpParser.isIceLite(call.sdp)) {\n                logger.debug('ice - ice-lite change.');\n                onFail(CONSTANTS.WEBRTC.ERROR.ICE_ICELITE);\n                return;\n            }\n\n            origSdp = call.sdp;\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n            logger.debug('call processPrAnswer again to trigger on remote stream added with updated sdp.');\n            self.processPreAnswer(call,\n                function() {\n                    call.sdp = origSdp;\n                    logger.debug('processPrAnswer sucess callback. Restore original sdp.');\n                    setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n                },\n                function() {\n                    call.sdp = origSdp;\n                    logger.debug('processPrAnswer failure callback. Restore original sdp.');\n                    setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n                }\n            );\n            return;\n        }\n\n\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n        localVideoDirection = _sdpParser.getVideoSdpDirection(_sdpParser.getSdpFromObject(call.peer.localDescription));\n\n        // this is needed for buggy webrtc api. when term answers with video to audio only call\n        // this scenario does not work without converting to sendrecv\n        logger.debug('processAnswer: ice-lite: do remote video escalation');\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n\n        if ((localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY || localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) &&\n            (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE || remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY)) {\n\n            // Audio <--> Audio : apply workaround step 1\n\n            // delete ssrc only from video, keep audio ssrc to hear audio\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n\n            setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n\n        } else if (localVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY &&\n            (remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY || remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE)) {\n\n            // Audio  <--> Audio-Video\n\n            setRemoteDescription(null, call, function() {\n                self.performVideoStartWorkaround(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n            }, onFail);\n\n        } else {\n\n            // Audio-Video <--> Audio-Video\n            // there is remote video, no need for orig side workaround\n\n            setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, onSuccessAfterWorkarounds, onFail);\n        }\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * performEnablerVideoStartWorkaround - term side cannot see orig's video\n     */\n    self.performVideoStartWorkaround = function(operation, call, onSuccess, onFail) {\n        var peer = call.peer,\n            remoteAudioState, remoteVideoState,\n            callSdpWithNoSsrc, peerLocalSdp;\n\n        //disable the workaround by default, as it is not necessairy in current version of Chrome\n        if(!_config.performVideoStartWorkaround){\n            onSuccess();\n            return;\n        }\n\n        if (!_sdpParser.isSdpHasVideo(call.sdp)) {\n            self.setRemoteDescription(operation, call, null, null, call.sdp, onSuccess, onFail);\n            return;\n        }\n\n        logger.debug('Workaround to play video');\n\n        peerLocalSdp = call.stableLocalSdp ? call.stableLocalSdp : call.peer.localDescription.sdp;\n\n        call.sdp = _sdpParser.addSdpMissingCryptoLine(call.sdp);\n\n        remoteAudioState = _sdpParser.getSdpDirectionLogging(call.sdp, CONSTANTS.STRING.AUDIO, false);\n        remoteVideoState = _sdpParser.getSdpDirectionLogging(call.sdp, CONSTANTS.STRING.VIDEO, false);\n\n        call.sdp = _sdpParser.updateSdpDirection(call.sdp, CONSTANTS.STRING.AUDIO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n        call.sdp = _sdpParser.updateSdpDirection(call.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n\n        callSdpWithNoSsrc = _sdpParser.deleteSsrcFromSdp(call.sdp);\n\n        logger.trace('performVideoStartWorkaround: Setting remote description with (offer) SDP: ' + callSdpWithNoSsrc);\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, callSdpWithNoSsrc,\n            function() {\n                logger.debug('performVideoStartWorkaround: first setRemoteDescription success');\n\n                // restore original values\n                call.sdp = _sdpParser.updateSdpDirection(call.sdp, CONSTANTS.STRING.AUDIO, remoteAudioState);\n                call.sdp = _sdpParser.updateSdpDirection(call.sdp, CONSTANTS.STRING.VIDEO, remoteVideoState);\n\n                logger.trace('performVideoStartWorkaround: Setting remote description with (offer) SDP: ' + call.sdp);\n                self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, call.sdp,\n                    function() {\n                        logger.debug('performVideoStartWorkaround: second setRemoteDescription success');\n                        peer.createAnswer(peer.remoteDescription, function(obj) {\n                            var localSdp = _sdpParser.getSdpFromObject(obj);\n\n                            if (_sdpParser.getSdpDirectionLogging(call.sdp, CONSTANTS.STRING.AUDIO, false) === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                localSdp = _sdpParser.updateSdpDirection(localSdp, CONSTANTS.STRING.AUDIO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n\n                            if (call.remoteVideoState === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                                localSdp = _sdpParser.updateSdpDirection(localSdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            } else if (self.canOriginatorSendLocalVideo(call)) {\n                                localSdp = _sdpParser.updateSdpDirection(localSdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                localSdp = _sdpParser.updateSdpDirection(localSdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            }\n\n                            localSdp = _sdpParser.checkAndRestoreICEParams(localSdp, call.sdp);\n\n                            localSdp = _sdpParser.setTcpSetupAttribute(localSdp, call.dtlsRole);\n\n                            localSdp = _sdpParser.updateVersion(peerLocalSdp, localSdp);\n\n                            localSdp = _sdpPipeline(call.id, localSdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                            logger.trace('performVideoStartWorkaround: Setting local description with (answer) SDP: ' + localSdp);\n                            peer.setLocalDescription(\n                                self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, localSdp),\n                                function() {\n                                    logger.debug('performVideoStartWorkaround: setlocalDescription success');\n                                    _utils.callFunctionIfExist(onSuccess);\n                                },\n                                function(e) {\n                                    logger.debug('performVideoStartWorkaround: setlocalDescription failed!!' + e);\n                                    _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: setlocalDescription failed!!');\n                                });\n                        }, function(e) {\n                            logger.debug('performVideoStartWorkaround: createAnswer failed!! ' + e);\n                            _utils.callFunctionIfExist(onFail, 'Session cannot be created');\n                        });\n                    },\n                    function(e) {\n                        logger.debug('performVideoStartWorkaround: second setRemoteDescription failed!!' + e);\n                        _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: second setRemoteDescription failed!!');\n                    });\n            },\n            function(e) {\n                logger.debug('performVideoStartWorkaround: first setRemoteDescription failed!!' + e);\n                _utils.callFunctionIfExist(onFail, 'performVideoStartWorkaround: first setRemoteDescription failed!!');\n            });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * processPreAnswer to be used when the enabler plugin is enabled\n     */\n    self.processPreAnswer = function(call, onSuccess, onFailure) {\n        logger.debug('processPreAnswer: state= ' + call.peer.signalingState);\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, _sdpParser.getSdpFromObject(call.peer.localDescription), self.isH264Enabled());\n\n        logger.trace('processPreAnswer: Setting remote description with (pranswer) SDP: ' + call.sdp);\n        self.setRemoteDescription(CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.PRANSWER, call.sdp,\n            function processPreAnswerSetRemoteDescriptionSuccessCallback() {\n                self.setOriginatorReceiveRemoteVideo(call);\n                call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                onSuccess();\n                logger.debug('processPreAnswer: setRemoteDescription success');\n            },\n            function processPreAnswerSetRemoteDescriptionFailureCallback(e) {\n                logger.error('processPreAnswer: setRemoteDescription failed: ' + e);\n                onFailure(e);\n            });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * processEnablerRespond\n     */\n    self.processRespond = function(call, onSuccess, onFailure, isJoin, operation = CONSTANTS.WEBRTC.SDP.OPERATION.START_CALL) {\n        var remoteVideoDirection;\n\n        logger.debug('processRespond: state= ' + call.peer.signalingState);\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            self.setRemoteDescription(operation, call, null, null, call.sdp, onSuccess, onFailure);\n            return;\n        }\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, _sdpParser.getSdpFromObject(call.stableLocalSdp), self.isH264Enabled());\n\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if ((remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) && (call.currentState === 'COMPLETED')) {\n            switch (call.remoteVideoState) {\n            case CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE:\n            case CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY:\n                call.sdp = _sdpParser.updateSdpDirection(call.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                break;\n            }\n        }\n\n        call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n        call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.VIDEO);\n        if (isJoin) {\n            call.sdp = _sdpParser.changeDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n            self.muteOnHold(call, false);\n        }\n\n        if (_sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n            _sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n            call.sdp = _sdpParser.deleteInactiveVideoSsrc(call.sdp);\n        }\n\n        logger.trace('processRespond: Setting remote description with (answer) SDP: ' + call.sdp);\n        self.setRemoteDescription(null, call, call.peer, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, call.sdp,\n            function() {\n                logger.debug('processRespond: setRemoteDescription success');\n                var onSuccessAfterWorkaround = function() {\n                    call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                    _utils.callFunctionIfExist(onSuccess);\n                };\n                // _utils.callFunctionIfExist(onSuccessAfterWorkaround);\n                self.performVideoStartWorkaround(operation, call, onSuccessAfterWorkaround, onFailure);\n            },\n            function(e) {\n                logger.debug('processRespond: setRemoteDescription failed: ' + e);\n                _utils.callFunctionIfExist(onFailure);\n            });\n    };\n\n    /*\n     * createPluginReOffer\n     */\n    self.createReOffer = function(call, successCallback, failureCallback, usePreviousMediaDirection) {\n        var peer = call.peer,\n            localDescObj, localAudioDirection, localVideoDirection,\n            prevLocalSdp = call.stableLocalSdp,\n            deleteVideoStream = false,\n            data;\n\n        logger.debug('createReOffer:' + call.id);\n\n        if (!usePreviousMediaDirection) {\n            deleteVideoStream = !call.initialVideoState && _sdpParser.isSdpHasVideo(call.stableLocalSdp);\n        }\n\n        data = {\n            call: call,\n            mustCreatePeer: true,\n            deleteVideoStream: deleteVideoStream,\n        };\n        if (self.createNewPeerForCall(data)) {\n            peer = call.peer;\n        }\n\n        peer.createOffer(\n            function createReOfferCreateOfferSuccessCallback(oSdp) {\n                if (usePreviousMediaDirection) {\n                    localAudioDirection = _sdpParser.getAudioSdpDirection(prevLocalSdp);\n                    oSdp.sdp = _sdpParser.updateAudioSdpDirection(oSdp.sdp, localAudioDirection);\n                    localVideoDirection = _sdpParser.getVideoSdpDirection(prevLocalSdp);\n                    oSdp.sdp = _sdpParser.updateVideoSdpDirection(oSdp.sdp, localVideoDirection);\n                }\n\n                oSdp.sdp = _sdpParser.deleteCryptoZeroFromSdp(oSdp.sdp);\n                oSdp.sdp = _sdpParser.removeG722Codec(oSdp.sdp);\n                oSdp.sdp = _sdpParser.deleteCryptoFromSdp(oSdp.sdp, self.isDtlsEnabled());\n                oSdp.sdp = _sdpParser.setTcpSetupAttribute(oSdp.sdp, 'actpass');\n                oSdp.sdp = _sdpParser.updateVersion(prevLocalSdp, oSdp.sdp);\n                oSdp.sdp = self.updateCodecs(call, oSdp.sdp);\n                oSdp.sdp = _sdpParser.updateOpusConfig(oSdp.sdp, _config.opusConfig);\n\n                oSdp.sdp = _sdpPipeline(call.id, oSdp.sdp, CONSTANTS.WEBRTC.SDP.OPERATION.REOFFER, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.OFFER);\n\n                localDescObj = self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.OFFER, oSdp.sdp);\n                logger.trace('createReOffer: Setting local description with (offer) SDP: ' + oSdp.sdp);\n                peer.setLocalDescription(localDescObj, function createReOfferSetLocalDescriptionSuccessCallback() {\n                    logger.debug('createReOffer: setLocalDescription success' + call.id);\n                }, function createReOfferSetLocalDescriptionFailureCallback(e) {\n                    logger.debug('createReOffer: setLocalDescription failed!!' + e + call.id);\n                    _utils.callFunctionIfExist(failureCallback);\n                });\n            },\n            function createReOfferCreateOfferFailureCallback(e) {\n                logger.error('createReOffer: createOffer failed!! ' + e);\n                _utils.callFunctionIfExist(failureCallback);\n            });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * processEnablerHold to be used when the enabler plugin 30 is enabled.\n     */\n    self.processHold = function(call, hold, local_hold_status, successCallback, failureCallback) {\n        logger.debug('processHold: local hold= ' + local_hold_status + ' remote hold= ' + hold + ' state= ' + call.peer.signalingState);\n        var peer = call.peer,\n            audioDirection, videoDirection, inactiveRemoteSdp,\n            peerLocalSdp, localSdp, remoteSdp, data;\n        peerLocalSdp = call.stableLocalSdp;\n\n        var operation = hold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        audioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        videoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        if (!local_hold_status && !hold) {\n            self.muteOnHold(call, false);\n        }\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n        call.sdp = _sdpParser.setTcpSetupAttribute(call.sdp, 'actpass');\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, null, self.isH264Enabled());\n        call.sdp = _sdpParser.performVideoPortZeroWorkaround(call.sdp);\n        call.sdp = _sdpParser.checkAndRestoreICEParams(call.sdp, _sdpParser.getSdpFromObject(call.peer.localDescription));\n\n        // chrome38 fix\n        inactiveRemoteSdp = _sdpParser.updateAudioSdpDirectionToInactive(call.sdp);\n        inactiveRemoteSdp = _sdpParser.updateVideoSdpDirectionToInactive(inactiveRemoteSdp);\n\n        data = {\n            call: call,\n            mustCreatePeer: call.isRemoteEndFirefox,\n            oldSdp: call.prevRemoteSdp,\n            newSdp: call.sdp,\n        };\n        if (self.createNewPeerForCall(data)) {\n            peer = call.peer;\n            self.setTcpSetupAttiributesOnProcessAnswer(call, call.sdp);\n        }\n        inactiveRemoteSdp = _sdpParser.deleteSsrcFromSdp(inactiveRemoteSdp);\n\n        // 1st setRemoteDescription to make webrtc remove the audio and/or video streams\n        // 2nd setRemote will add the audio stream back so that services like MOH can work\n        // This code will also run in UnHold scenario, and it will remove & add video stream\n        logger.trace('processHold: Setting remote description with (offer) SDP: ' + inactiveRemoteSdp);\n        self.setRemoteDescription(null, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, inactiveRemoteSdp, function processHoldSetFirstRemoteDescriptionSuccessCallback() {\n            remoteSdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n\n            if (_sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n                _sdpParser.getVideoSdpDirection(call.sdp) === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY) {\n                remoteSdp = _sdpParser.deleteInactiveVideoSsrc(remoteSdp);\n            }\n            logger.trace('processHold: Setting remote description with (offer) SDP: ' + remoteSdp);\n            self.setRemoteDescription(operation, call, peer, CONSTANTS.WEBRTC.SDP.TYPE.OFFER, remoteSdp, function processHoldSetSecondRemoteDescriptionSuccessCallback() {\n                if (!hold && !local_hold_status && (videoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE)) {\n                    call.remoteVideoState = CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n                } else {\n                    call.remoteVideoState = _sdpParser.getVideoSdpDirection(call.sdp);\n                }\n                peer.createAnswer(peer.remoteDescription, function processHoldCreateAnswerSuccessCallback(obj) {\n                    localSdp = _sdpParser.getSdpFromObject(obj);\n                    logger.debug('processHold: isSdpEnabled audio= ' + _sdpParser.isAudioSdpEnabled(obj.sdp));\n                    logger.debug('processHold: isSdpEnabled video= ' + _sdpParser.isVideoSdpEnabled(obj.sdp));\n                    obj = null;\n\n                    if (hold) {\n                        logger.debug('processHold: Remote HOLD');\n                        localSdp = _sdpParser.respondToRemoteSdpDirections(localSdp, call.sdp);\n                    } else if (!local_hold_status) {\n                        logger.debug('processHold: Remote UNHOLD: direction left as it is');\n\n                        if (_sdpParser.isSdpVideoSendEnabled(call.sdp)) {\n                            if (self.canOriginatorSendLocalVideo(call)) {\n                                localSdp = _sdpParser.updateVideoSdpDirection(localSdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE);\n                            } else {\n                                localSdp = _sdpParser.updateVideoSdpDirection(localSdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n                            }\n                        } else {\n                            if (self.canOriginatorSendLocalVideo(call) && !_sdpParser.isVideoSdpDirectionInactive(call.sdp)) {\n                                localSdp = _sdpParser.updateVideoSdpDirection(localSdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                            } else {\n                                localSdp = _sdpParser.updateVideoSdpDirection(localSdp, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n                            }\n                        }\n                        //change audio's direction to sendrecv for ssl attendees in a 3wc\n                        localSdp = _sdpParser.changeDirection(localSdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE, CONSTANTS.STRING.AUDIO);\n                    } else if (local_hold_status && !hold) {\n                        logger.debug('processHold: Remote UNHOLD on local hold');\n\n                        if (audioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) {\n                            localSdp = _sdpParser.updateAudioSdpDirectionToInactive(localSdp);\n                        } else {\n                            localSdp = _sdpParser.updateAudioSdpDirection(localSdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        }\n\n                        if (self.canOriginatorSendLocalVideo(call)) {\n                            localSdp = _sdpParser.updateVideoSdpDirection(localSdp, CONSTANTS.WEBRTC.MEDIA_STATE.SEND_ONLY);\n                        } else {\n                            localSdp = _sdpParser.updateVideoSdpDirectionToInactive(localSdp);\n                        }\n                    }\n\n                    localSdp = _sdpParser.updateVersion(peerLocalSdp, localSdp);\n                    localSdp = _sdpParser.checkIceParamsLengths(localSdp, call.sdp);\n                    localSdp = _sdpParser.checkAndRestoreICEParams(localSdp, call.sdp);\n                    if (_sdpParser.isSdpHasVideoWithZeroPort(localSdp) && self.getDefaultVideoContainer()) {\n                        self.useDefaultRenderer(false, false, false);\n                    }\n\n                    localSdp = _sdpParser.setTcpSetupAttribute(localSdp, call.dtlsRole);\n\n                    localSdp = _sdpParser.updateH264Level(localSdp);\n                    localSdp = _sdpParser.updateOpusConfig(localSdp, _config.opusConfig);\n\n                    localSdp = _sdpPipeline(call.id, localSdp, operation, CONSTANTS.WEBRTC.SDP.STEP.PRE_SET_LOCAL, CONSTANTS.WEBRTC.SDP.TYPE.ANSWER);\n\n                    logger.trace('processHold: Setting local description with (answer) SDP: ' + localSdp);\n                    peer.setLocalDescription( self.getRtcLibrary().createRTCSessionDescription(CONSTANTS.WEBRTC.SDP.TYPE.ANSWER, localSdp),\n                        function processHoldSetLocalDescriptionSuccessCallback() {\n                            logger.debug('processHold: setLocalDescription success!! ' + 'iceConnectionState: ' + peer.iceConnectionState + ' iceGatheringState: ' + peer.iceGatheringState);\n                            if (peer.iceGatheringState === 'complete') {\n                                if (call.successCallback) {\n                                    logger.debug('processHold iceGatheringState completed ' + peer.localDescription.sdp);\n                                    _utils.callFunctionIfExist(successCallback, peer.localDescription.sdp);\n                                }\n                            }\n                        },\n                        function processHoldSetLocalDescriptionFailureCallback(e) {\n                            logger.error('processHold: setLocalDescription failed!! ' + e);\n                            _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                        });\n                }, function processHoldCreateAnswerFailureCallback(e) {\n                    logger.error('processHold: createAnswer failed!!: ' + e);\n                    _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n                });\n            }, function processHoldSetSecondRemoteDescriptionFailureCallback(e) {\n                logger.error('processHold: second setRemoteDescription failed!! ' + e);\n                _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n            });\n        }, function processHoldSetFirstRemoteDescriptionFailureCallback(e) {\n            logger.debug('processHold: first setRemoteDescription failed!! ' + e);\n            _utils.callFunctionIfExist(failureCallback, 'Session cannot be created');\n        });\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * processHoldRespond to be used when the enabler plugin is enabled\n     */\n    self.processHoldRespond = function(call, onSuccess, onFailure, isJoin) {\n        var remoteAudioDirection,\n            remoteVideoDirection,\n            localHoldFlag = false,\n            remoteHoldFlag = false,\n            data;\n\n        logger.debug('processHoldRespond: state= ' + call.peer.signalingState + ' call.currentState= ' + call.currentState);\n\n        data = {\n            call: call\n        };\n        if (self.createNewPeerForCall(data)) {\n            self.setTcpSetupAttiributesOnProcessAnswer(call, call.sdp);\n        }\n\n        call.sdp = self.performSdpWorkaroundsBeforeProcessingIncomingSdp(call.sdp);\n\n        _sdpParser.init(call.sdp);\n\n        remoteAudioDirection = _sdpParser.getAudioSdpDirection(call.sdp);\n        remoteVideoDirection = _sdpParser.getVideoSdpDirection(call.sdp);\n\n        var isHold = remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE ||\n            remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY;\n\n        var operation = isHold ? CONSTANTS.WEBRTC.SDP.OPERATION.HOLD : CONSTANTS.WEBRTC.SDP.OPERATION.UNHOLD;\n\n        if (call.peer.signalingState === CONSTANTS.WEBRTC.RTC_SIGNALING_STATE.STABLE) {\n            //if we are in stable state we should not change remotedescription\n            self.onRemoteStreamAdded(call);\n            self.setRemoteDescription(operation, call, null, null, call.sdp, onSuccess, onFailure);\n            return;\n        }\n\n        call.sdp = _sdpParser.checkSupportedVideoCodecs(call.sdp, _sdpParser.getSdpFromObject(call.stableLocalSdp), self.isH264Enabled());\n\n        remoteHoldFlag = _sdpParser.isRemoteHold();\n\n        localHoldFlag = (call.currentState === 'LOCAL_HOLD');\n\n        logger.debug('processHoldRespond: localHold= ' + localHoldFlag + ' remoteHold= ' + remoteHoldFlag);\n\n        /* Required for MOH - start */\n        if (remoteHoldFlag === false) {\n            if ((remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) && (call.currentState === 'REMOTE_HOLD')) {\n                call.previousState = call.currentState;\n                call.currentState = 'COMPLETED';\n            }\n        } else {\n            if (call.currentState === 'COMPLETED') {\n                call.previousState = call.currentState;\n                call.currentState = 'REMOTE_HOLD';\n            }\n        }\n\n        if (localHoldFlag || remoteHoldFlag) {\n            logger.debug('processHoldRespond: ' + call.currentState + ' : video -> inactive');\n            call.sdp = _sdpParser.updateSdpDirection(call.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE);\n        }\n\n        if ((remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.INACTIVE) && (call.currentState === 'COMPLETED')) {\n            logger.debug('processHoldRespond: video inactive -> recvonly');\n            call.sdp = _sdpParser.updateSdpDirection(call.sdp, CONSTANTS.STRING.VIDEO, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n        }\n        /* Required for MOH - end */\n\n        if (localHoldFlag && remoteAudioDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Audio');\n            call.sdp = _sdpParser.updateAudioSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n        }\n\n        if (localHoldFlag && remoteVideoDirection === CONSTANTS.WEBRTC.MEDIA_STATE.SEND_RECEIVE) {\n            logger.debug('processHoldRespond: Mute Remote Video');\n            call.sdp = _sdpParser.updateVideoSdpDirection(call.sdp, CONSTANTS.WEBRTC.MEDIA_STATE.RECEIVE_ONLY);\n        }\n\n        self.processRespond(call, onSuccess, onFailure, isJoin, operation);\n    };\n\n    // createEnablerDataChannel\n    self.createDataChannel = function(dataChannelWrapperObj, onSuccess, onFailure, options) {\n        try {\n            if (options) {\n                dataChannelWrapperObj.dataChannel = dataChannelWrapperObj.peer.createDataChannel('Label', options);\n            } else {\n                dataChannelWrapperObj.dataChannel = dataChannelWrapperObj.peer.createDataChannel('Label');\n            }\n            onSuccess(dataChannelWrapperObj);\n        } catch (error) {\n            logger.error('Failed to create data channel, exception: ' + error.message);\n            onFailure(error);\n        }\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.createPeer = function(call) {\n        try {\n            var pc, constraints = {}, i, servers = [],\n                iceServerUrl, config, useIceServer;\n\n            useIceServer = !_config.ignoreIceParamsForServices || _config.ignoreIceParamsForServices.indexOf('call') !== -1;\n\n            logger.info('useIceServer: ' + useIceServer);\n            if (useIceServer) {\n                iceServerUrl = self.getIceServerUrl();\n            }\n\n            if (iceServerUrl instanceof Array) {\n                for (i = 0; i < iceServerUrl.length; i++) {\n                    servers[i] = iceServerUrl[i];\n                }\n            } else if (!iceServerUrl || iceServerUrl === '') {\n                servers = [];\n            } else {\n                servers[0] = iceServerUrl;\n            }\n            config = {\n                iceServers: servers,\n                // NOTE: This is added temporarily because Chrome and Firefox have required set\n                // by default and the media broker doesn't support multiplexing. ADG-14986\n                rtcpMuxPolicy: 'negotiate'\n            };\n\n            // If present, take the call constraints provided as config.\n            if(_config.callConstraints && _config.callConstraints.plugin) {\n                // If any constraint is malformed, the RTCPeerConnection will fail to be created.\n                logger.debug('Using custom peer constraints for call.', _config.callConstraints.plugin);\n                constraints = _config.callConstraints.plugin;\n            }\n\n            constraints.optional = constraints.optional || [];\n            constraints.optional.push({\n                'DtlsSrtpKeyAgreement': self.isDtlsEnabled()\n            });\n\n            if (_config.bundlePolicy !== constants.WEBRTC.SDP.BUNDLE_POLICY.DISABLED) {\n                config.bundlePolicy = _config.bundlePolicy;\n            }\n\n            pc = self.getRtcLibrary().createRTCPeerConnection(config, constraints);\n            pc._peerId = peerId++;\n\n            if (call.peer) {\n                logger.debug(`createPeer - Peer Id: ${call.peer._peerId} - detaching old peer from call ${call.id}.`);\n\n                // Let's make sure we stop listening to any events from the old peer.\n                call.peer.onconnecting = undefined;\n                call.peer.onopen = undefined;\n                call.peer.onsignalingstatechange = undefined;\n                call.peer.onaddstream = undefined;\n                call.peer.onremovestream = undefined;\n                call.peer.onicecandidate = undefined;\n                call.peer.onicecomplete = undefined;\n                call.peer.oniceconnectionstatechange = undefined;\n                call.peer.ondatachannel = undefined;\n                call.peer.onicegatheringstatechange = undefined;\n\n                // Close the peer, it is no longer needed.\n                call.peer.close();\n            }\n\n            self.setPeerCount(self.getPeerCount() + 1);\n            call.peer = pc;\n\n            pc.onconnecting = function(event) {\n                self.onSessionConnecting(call, event);\n            };\n            pc.onopen = function(event) {\n                self.onSessionOpened(call, event);\n            };\n            pc.onsignalingstatechange = function(event) {\n                self.onSignalingStateChange(call, event);\n            };\n            pc.onaddstream = function(event) {\n                self.onRemoteStreamAdded(call, event);\n            };\n            pc.onremovestream = function(event) {\n                self.onRemoteStreamRemoved(call, event);\n            };\n            pc.onicecandidate = function(event) {\n                if (pc !== call.peer) {\n                    logger.error(`Peer Id: ${pc._peerId} - received notification from detached peer not on call (Other Peer id: ${call.peer._peerId} )`);\n                    return;\n                }\n\n                self.setupIceCandidateCollectionTimer(call);\n                self.onIceCandidate(call, event);\n            };\n            pc.onicecomplete = function() {\n                if (pc !== call.peer) {\n                    logger.error(`Peer Id: ${pc._peerId} - received notification from detached peer not on call (Other Peer id: ${call.peer._peerId} )`);\n                    return;\n                }\n                self.onIceComplete(call);\n            };\n            pc.oniceconnectionstatechange = function(event) {\n                self.oniceconnectionstatechange(call, event);\n            };\n            pc.ondatachannel = function(event) {\n                self.onDataChannel(call, event);\n            };\n\n            pc.onicegatheringstatechange = function() {\n                logger.debug(`Peer Id: ${pc._peerId} - ice gathering state change:` + pc.iceGatheringState);\n            };\n\n            logger.info(`Peer Id: ${pc._peerId} - create PeerConnection successfully.`);\n\n            self.setupWebrtcLogCollectionTimer(call);\n\n            return true;\n        } catch (err) {\n            logger.error('Failed to create PeerConnection, exception: ' + err.message);\n        }\n\n        return false;\n    };\n\n    self.createNewPeerForCall = function(data) {\n        var call = data.call,\n            mustCreatePeer = data.mustCreatePeer,\n            sessionIdChanged = _sdpParser.getSessionIdFromSdp(data.oldSdp) !== _sdpParser.getSessionIdFromSdp(data.newSdp),\n            isNewPeerCreated = false,\n            oldPeer,\n            useIceServer,\n            telephoneEventPayloadChanged = _sdpParser.hasCodecPayloadChanged(data.oldSdp, data.newSdp),\n            isDTLSFingerprintChanged = false;\n\n        if (_config.ignoreIceParamsForServices && _config.ignoreIceParamsForServices.indexOf('call') !== -1) {\n            useIceServer = false;\n        } else {\n            useIceServer = true;\n        }\n\n        if(data.call && data.call.sdp && data.call.prevRemoteSdp) {\n            isDTLSFingerprintChanged = _sdpParser.getFingerprintFromSdp(data.call.prevRemoteSdp) !== _sdpParser.getFingerprintFromSdp(data.call.sdp);\n        }\n\n        if (mustCreatePeer || telephoneEventPayloadChanged || isDTLSFingerprintChanged || sessionIdChanged) {\n            if (call.peer) {\n                oldPeer = call.peer;\n                self.collectWebRtcStats(call.sdp, oldPeer,\n                    function(stats) {\n                        logger.debug('Plugin collectWebRtcStats successfull');\n                        if (call.stats === undefined) {\n                            call.stats = [];\n                        }\n                        call.stats.push(stats);\n                        if (oldPeer.signalingState !== 'closed') {\n                            oldPeer.close();\n                        }\n                        self.setPeerCount(self.getPeerCount() - 1);\n                        call.dtmfSender = null;\n                    },\n                    function() {\n                        logger.debug('Plugin collectWebRtcStats failed');\n                        if (oldPeer.signalingState !== 'closed') {\n                            oldPeer.close();\n                        }\n                        self.setPeerCount(self.getPeerCount() - 1);\n                        call.dtmfSender = null;\n                    });\n            }\n\n            logger.trace('Creating new peer for call: ' + call.id);\n            self.createPeer(call, useIceServer, function createPeerSuccessCallback() {\n                logger.trace('New peer has created for call: ' + call.id);\n\n                //\n                // add commented out lines below\n                // after plugin implementation\n                //\n                //if (data.deleteVideoStream) {\n                //    videoTrack = call.localMedia.stream.getVideoTracks()[0];\n                //    call.localMedia.stream.removeTrack(videoTrack);\n                //}\n                //\n                if(call.localMedia && call.localMedia.stream){\n                    call.peer.addStream(call.localMedia.stream);\n                }\n                //clearing those since we are using a new peer\n                self.clearTcpSetupParameters(call);\n                isNewPeerCreated = true;\n            }, function createPeerFailureCallback() {\n                logger.error('New peer creation has failed!: ' + call.id);\n                if (call.stats) {\n                    call.stats.pop();\n                }\n            });\n        }\n        return isNewPeerCreated;\n    };\n\n    // pluginOnRemoteStreamAdded\n    self.onRemoteStreamAdded = function(call, event) {\n        var fireEvent,\n            remoteVideoTracks = [],\n            isVideoTrackAvailable = false;\n\n        if (self.getDefaultVideoContainer()) {\n            if (!self.isActiveCallInVideoContainer(self.getDefaultVideoContainer(), call)) {\n                logger.debug('onRemoteStreamAdded: It is not active call. Call Id: ' + call.id);\n                return;\n            }\n        } else if (self.getRemoteVideoContainer()) {\n            if (!self.isActiveCallInVideoContainer(self.getRemoteVideoContainer(), call)) {\n                logger.debug('onRemoteStreamAdded: It is not active call. Call Id: ' + call.id);\n                return;\n            }\n        }\n\n        if (event && event.stream) {\n            call.remoteStream = event.stream;\n\n            remoteVideoTracks = event.stream.getVideoTracks();\n        } else {\n            remoteVideoTracks = self.getRemoteVideoTrack(call.peer);\n        }\n\n        if (remoteVideoTracks) {\n            if (remoteVideoTracks.length > 0) {\n                isVideoTrackAvailable = true;\n            }\n        }\n\n        if (self.getDefaultVideoContainer()) {\n            fireEvent = self.useDefaultRenderer(call.remoteStream, false, isVideoTrackAvailable);\n        } else if (self.getRemoteVideoContainer()) {\n            fireEvent = self.createStreamRenderer(call.remoteStream, self.getRemoteVideoContainer());\n        } else {\n            fireEvent = true;\n        }\n\n        logger.debug('onRemoteStreamAdded: ' + call.remoteStream.id);\n        if (fireEvent) {\n            self.fireOnStreamAddedEvent(call, call.remoteStream);\n        }\n    };\n\n    self.iceCandidateCollectionTimeoutHandler = function(call) {\n        var sdp = call.peer.localDescription.sdp;\n        self.clearIceCandidateCollectionTimer(call);\n        if (_config.relayCandidateCollectionTimeoutCycle) {\n            call.relayCandidateCycle++;\n        }\n        // set timeout if there is no ice candidate available or\n        // when audio, video port assignment isn't complete\n        if (!_sdpParser.hasCandidates(sdp, call.relayCandidateCycle, _config.relayCandidateCollectionTimeoutCycle)) {\n            logger.debug('Re-setting ice candidate collection timeout: ' + _config.iceCandidateCollectionTimeoutInterval);\n            call.iceCandidateCollectionTimer = setTimeout(function() {\n                self.iceCandidateCollectionTimeoutHandler(call);\n            }, _config.iceCandidateCollectionTimeoutInterval);\n            return;\n        }\n\n        if (call.successCallback) {\n            logger.debug('Ice candidate collection interrupted after given timeout, invoking successCallback.');\n\n            sdp = _sdpParser.updateH264Level(sdp);\n\n            call.successCallback(sdp);\n        }\n    };\n\n    self.setupIceCandidateCollectionTimer = function(call) {\n        if (_config.iceCandidateCollectionTimeoutInterval) {\n            if (!call.iceCandidateCollectionTimer) {\n                logger.debug('Setting ice candidate collection timeout: ' + _config.iceCandidateCollectionTimeoutInterval);\n                if (_config.relayCandidateCollectionTimeoutCycle) {\n                    call.relayCandidateCycle = 1;\n                }\n                call.iceCandidateCollectionTimer = setTimeout(function() {\n                    self.iceCandidateCollectionTimeoutHandler(call);\n                }, _config.iceCandidateCollectionTimeoutInterval);\n            } else {\n                logger.trace('Ice candidate collection timer exists.');\n            }\n        }\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * onIceCandidate to be called when the enabler plugin is enabled\n     */\n    self.onIceCandidate = function(call, event) {\n        var sdp;\n        if (event.candidate === null) {\n            logger.debug('Null candidate received.');\n            if (call.successCallback) {\n                sdp = _sdpParser.getSdpFromObject(call.peer.localDescription);\n\n                if (_sdpParser.hasCandidates(sdp, call.relayCandidateCycle, _config.relayCandidateCollectionTimeoutCycle)) {\n                    self.clearIceCandidateCollectionTimer(call);\n                    logger.debug('Candidates received, invoking successCallback.');\n\n                    sdp = _sdpParser.updateH264Level(sdp);\n                    call.successCallback(sdp);\n                } else {\n                    logger.trace('Sdp does not have candidates.');\n                }\n\n            }\n        } else {\n            logger.debug('ICE candidate received : sdpMLineIndex = ' + event.candidate.sdpMLineIndex +\n                ', candidate = ' + event.candidate.candidate + ' for call : ' + call.id);\n        }\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     * onIceComplete to be called when the enabler plugin is enabled\n     */\n    self.onIceComplete = function(call) {\n        var sdp;\n        logger.debug('All ICE candidates received for call : ' + call.id);\n        self.clearIceCandidateCollectionTimer(call);\n\n        if (call.successCallback) {\n            sdp = call.peer.localDescription.sdp;\n            sdp = _sdpParser.updateH264Level(sdp);\n            logger.trace('onIceComplete sdp : ' + sdp);\n\n            call.successCallback(sdp);\n        }\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.useDefaultRenderer = function(stream, local, isVideoTrackAvailable) {\n        var videoContainer;\n\n        if (self.getDefaultVideoContainer() && self.getDefaultVideoContainer().children.length === 0) {\n            // Create divs for the remote and local\n            self.getDefaultVideoContainer().innerHTML = '<div style=\\'height:100%;width:100%\\'></div><div style=\\'position:absolute;bottom:10px;right:10px;height:30%; width:30%;\\'></div>';\n        }\n\n        if (local) {\n            videoContainer = self.getDefaultVideoContainer().lastElementChild;\n        } else {\n            videoContainer = self.getDefaultVideoContainer().firstElementChild;\n\n            if (!isVideoTrackAvailable) {\n                videoContainer.style.width = '0%';\n            } else {\n                videoContainer.style.width = '100%';\n            }\n        }\n        return self.createStreamRenderer(stream, videoContainer, {\n            muted: local\n        });\n    };\n\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.createStreamRenderer = function(stream, container) {\n        if (!stream || !container) {\n            return;\n        }\n\n        const streamUrl = self.getRtcLibrary().getURLFromStream(stream);\n\n        container.innerHTML = '<object width=\\'100%\\' height=\\'100%\\' type=\\'application/x-gcfwenabler-video\\'><param name=\\'autoplay\\' value=\\'true\\' /><param name=\\'videosrc\\' value=\\'' + streamUrl + '\\' /></object>';\n\n        return true;\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.sendIntraFrame = function(call) {\n        if (!call.peer) {\n            return;\n        }\n\n        if (self.canOriginatorSendLocalVideo(call)) {\n            call.peer.sendIntraFrame();\n        } else {\n            //call.peer.sendBlackFrame();\n            //sendBlackFrame is removed from plugin\n            return;\n        }\n    };\n\n    // Enabler implementation lies on webRtcPluginAdaptor.js\n    self.sendBlackFrame = function(call) {\n        if (!call.peer) {\n            return;\n        }\n        //call.peer.sendBlackFrame();\n        //TODO: This function will be completely removed since sendBlackFrame is removed from plugin\n        return;\n    };\n\n    /**\n     * Send DTMF tone\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     *\n     * @ignore\n     * @name rtc.sendDTMF\n     * @function\n     * @param {Object} call internalCall\n     * @param {String} tone DTMF tone\n     */\n    self.sendDTMF = function(call, tone) {\n        var localAudioTrack;\n\n        if (!call.dtmfSender) {\n            localAudioTrack = self.getLocalAudioTrack(call.peer);\n            if (!localAudioTrack) {\n                return;\n            }\n            call.dtmfSender = call.peer.createDTMFSender(localAudioTrack);\n            if (!call.dtmfSender) {\n                return;\n            }\n        }\n\n        if (call.dtmfSender.canInsertDTMF === true) {\n            call.dtmfSender.insertDTMF(tone, 400);\n            logger.info('sending outband DTMF tone: ' + tone);\n        } else {\n            logger.error('Failed to execute \\'insertDTMF\\' on \\'RTCDTMFSender\\': The \\'canInsertDTMF\\' attribute is false: this sender cannot send DTMF');\n        }\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     */\n    self.getCameraList = function() {\n        return;\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     */\n    self.getMicrophoneList = function() {\n        return;\n    };\n\n    /*\n     * Enabler implementation lies on webRtcPluginAdaptor.js\n     */\n    self.getSpeakerList = function() {\n        return;\n    };\n\n    self.getNativeWebRtcStats = function(call, onSuccess, onFailure) {\n        try {\n            if (call) {\n                logger.debug('getNativeWebRtcStats called');\n                call.peer.getStats(function(stats) {\n                    if (stats !== undefined && stats !== null) {\n                        var results = stats.result();\n                        _utils.callFunctionIfExist(onSuccess, results);\n                    }\n                });\n            }\n        } catch (err) {\n            logger.error('Failed to get all WebRTC Statistics: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n    };\n\n    self.getWebRtcStats = function(call, onSuccess, onFailure) {\n        try {\n            if (call) {\n                logger.debug('getWebRtcStats called');\n                self.collectWebRtcStats(call.sdp, call.peer,\n                    function(stats) {\n                        var accumulatedStats = self.getAccumulatedWebRtcStats(call.stats, stats, call.cache);\n                        _utils.callFunctionIfExist(onSuccess, accumulatedStats);\n                    },\n                    onFailure);\n            } else {\n                var cacheWebRtcStats = JSON.parse(_cache.getItem(_fcs.getUser() + '_stats'));\n                _utils.callFunctionIfExist(onSuccess, cacheWebRtcStats);\n            }\n        } catch (err) {\n            logger.error('Failed to get WebRTC Statistics: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n        return self.getStats();\n    };\n\n    self.getAccumulatedWebRtcStats = function(statsList, currentStats, callCache) {\n        var i, accumulatedStats = {\n            audio: {\n                packetsSent: 0,\n                bytesSent: 0,\n                bytesReceived: 0,\n                peerAddress: null,\n                codec: null,\n                packetsLost: 0,\n                jitter: null,\n                rtt: null\n            },\n            video: {\n                packetsSent: 0,\n                bytesSent: 0,\n                bytesReceived: 0,\n                peerAddress: null,\n                codec: null,\n                packetsLost: 0,\n                rtt: null\n            }\n        };\n        if (statsList !== undefined) {\n            for (i = 0; i < statsList.length; i++) {\n                self.accumulateStats(accumulatedStats.audio, statsList[i].audio);\n                self.accumulateStats(accumulatedStats.video, statsList[i].video);\n            }\n        }\n\n        self.accumulateStats(accumulatedStats.audio, currentStats.audio);\n        accumulatedStats.audio.peerAddress = currentStats.audio.peerAddress;\n        accumulatedStats.audio.codec = currentStats.audio.codec;\n        accumulatedStats.audio.jitter = currentStats.audio.jitter;\n        accumulatedStats.audio.rtt = currentStats.audio.rtt;\n\n        self.accumulateStats(accumulatedStats.video, currentStats.video);\n        accumulatedStats.video.peerAddress = currentStats.video.peerAddress;\n        accumulatedStats.video.codec = currentStats.video.codec;\n        accumulatedStats.video.rtt = currentStats.video.rtt;\n\n        if (callCache) {\n            _cache.setItem(_fcs.getUser() + '_stats', JSON.stringify(accumulatedStats));\n        }\n        return accumulatedStats;\n    };\n\n    self.accumulateStats = function(accumulatedStatsObj, statsObj) {\n        accumulatedStatsObj.packetsSent += getInteger(statsObj.packetsSent);\n        accumulatedStatsObj.bytesSent += getInteger(statsObj.bytesSent);\n        accumulatedStatsObj.bytesReceived += getInteger(statsObj.bytesReceived);\n        accumulatedStatsObj.packetsLost += getInteger(statsObj.packetsLost) === -1 ? 0 : getInteger(statsObj.packetsLost);\n    };\n\n    self.collectWebRtcStats = function(statsSdp, peer, onSuccess, onFailure) {\n        try {\n            if (peer) {\n                logger.debug('collectWebRtcStats called');\n                peer.getStats(function(stats) {\n                    if (stats !== undefined && stats !== null) {\n                        var results = stats.result();\n                        self.setWebRtcStats(results, statsSdp);\n\n                        _utils.callFunctionIfExist(onSuccess, self.getStats());\n                    }\n                });\n            }\n        } catch (err) {\n            logger.error('Failed to collectWebRtcStats: ' + err.message);\n            _utils.callFunctionIfExist(onFailure, err);\n        }\n\n        return self.getStats();\n    };\n\n    self.setWebRtcStats = function(results, statsSdp) {\n\n        var i, j, res, names, mediaDescriptions, sdpAudioPort, sdpVideoPort,\n            transportId, googChannelId, googCodecName, alwaysMediaOnBroker,\n            stats = {\n                audio: {\n                    packetsSent: null,\n                    bytesSent: null,\n                    bytesReceived: null,\n                    peerAddress: '',\n                    codec: null,\n                    packetsLost: null,\n                    jitter: null,\n                    rtt: null\n                },\n                video: {\n                    packetsSent: null,\n                    bytesSent: null,\n                    bytesReceived: null,\n                    peerAddress: null,\n                    codec: null,\n                    packetsLost: null,\n                    rtt: null\n                }\n            };\n\n        if (_sdpParser.isIceLite(statsSdp)) {\n            alwaysMediaOnBroker = true;\n        } else {\n            alwaysMediaOnBroker = false;\n        }\n\n        if (statsSdp !== undefined && statsSdp !== null && results !== undefined && results !== null) {\n            _sdpParser.init(statsSdp);\n            _sdpParser.parseSDP(statsSdp);\n            mediaDescriptions = _sdpParser.getMediaDescriptions();\n\n            if (mediaDescriptions !== undefined) {\n                if (mediaDescriptions[0] !== undefined) {\n                    sdpAudioPort = mediaDescriptions[0].port;\n                }\n\n                if (mediaDescriptions[1] !== undefined) {\n                    sdpVideoPort = mediaDescriptions[1].port;\n                }\n            }\n\n            for (i = 0; i < results.length; i++) {\n                res = results[i];\n                names = res.names();\n                if (names !== undefined) {\n                    for (j = 0; j < names.length; j++) {\n                        googChannelId = res.stat('googChannelId');\n                        transportId = res.stat('transportId');\n                        googCodecName = res.stat('googCodecName');\n                        if ((transportId !== undefined && transportId.indexOf('audio') > -1) ||\n                            (googChannelId !== undefined && googChannelId.indexOf('audio') > -1)) {\n\n                            if (googCodecName === 'VP8' || googCodecName === 'H264') {\n                                self.fillStats(stats.video, res, names, j, sdpVideoPort, alwaysMediaOnBroker);\n                            } else {\n                                self.fillStats(stats.audio, res, names, j, sdpAudioPort, alwaysMediaOnBroker);\n                            }\n                        } else if ((transportId !== undefined && transportId.indexOf('video') > -1) ||\n                            (googChannelId !== undefined && googChannelId.indexOf('video') > -1)) {\n                            self.fillStats(stats.video, res, names, j, sdpVideoPort, alwaysMediaOnBroker);\n                        }\n\n                    }\n                    if (!alwaysMediaOnBroker && sdpVideoPort !== undefined) {\n                        stats.video.peerAddress = stats.audio.peerAddress.split(':')[0];\n                    }\n                    self.setStats(stats);\n                }\n            }\n        }\n\n    };\n\n    self.fillStats = function(statsObj, res, names, index, sdpRemotePort, alwaysMediaOnBroker) {\n        var remotePort, remoteAddress;\n\n        if ((res.stat('googActiveConnection') === 'true') && alwaysMediaOnBroker) {\n            remoteAddress = res.stat('googRemoteAddress');\n\n            if (remoteAddress !== undefined) {\n                if (remoteAddress.split(':') !== undefined && remoteAddress.split(':')[1] !== undefined) {\n                    remotePort = remoteAddress.split(':')[1];\n                }\n\n                if (remotePort === sdpRemotePort) {\n\n                    statsObj.peerAddress = remoteAddress;\n\n                    if (names[index] === 'bytesReceived') {\n                        statsObj.bytesReceived = res.stat(names[index]);\n                    }\n\n                    if (names[index] === 'packetsSent') {\n                        statsObj.packetsSent = res.stat(names[index]);\n                    }\n\n                    if (names[index] === 'bytesSent') {\n                        statsObj.bytesSent = res.stat(names[index]);\n                    }\n                }\n            }\n        }\n\n        if ((res.stat('googActiveConnection') === 'true') && !alwaysMediaOnBroker) {\n            remoteAddress = res.stat('googRemoteAddress');\n            statsObj.peerAddress = remoteAddress;\n        }\n\n        if (res.type === 'ssrc' || res.id.indexOf('ssrc') > -1) {\n            if (names[index] === 'packetsLost') {\n                statsObj.packetsLost = res.stat(names[index]);\n            }\n\n            if (names[index] === 'googCodecName') {\n                statsObj.codec = res.stat(names[index]);\n            }\n\n            if (names[index] === 'googJitterReceived') {\n                statsObj.jitter = res.stat(names[index]);\n            }\n\n            if (names[index] === 'googRtt') {\n                statsObj.rtt = res.stat(names[index]);\n            }\n\n            if (!alwaysMediaOnBroker) {\n                if (names[index] === 'bytesReceived') {\n                    statsObj.bytesReceived = res.stat(names[index]);\n                }\n                if (names[index] === 'packetsSent') {\n                    statsObj.packetsSent = res.stat(names[index]);\n                }\n                if (names[index] === 'bytesSent') {\n                    statsObj.bytesSent = res.stat(names[index]);\n                }\n            }\n        }\n    };\n\n    self.addRemoteCandidates = function() {\n        logger.warn('addIceCandidates does not work on plugin');\n        return;\n    };\n\n    //Plugin does not support merging audio streams\n    self.mergeAudioStream = false;\n\n    logger.debug('WebRtcPluginAdaptor initialized');\n}\n","import {compose} from '../../utils';\n\nexport function WebRtcPluginv22AdaptorImpl({\n    base: _super,\n    model: _model,\n    LogManager: _logManager\n}) {\n    var self = this,\n        webRtcPlugin22Version = {\n            major: 2,\n            minor: 2,\n\n            min_revision: 477,\n            min_build: 0,\n\n            current_revision: 477,\n            current_build: 0\n        },\n        logger = _logManager.getLogger('WebRtcPluginv22AdaptorImpl');\n\n    logger.debug('WebRtcPluginv22Adaptor initializing');\n\n    compose(_super, self);\n    compose(_model, self);\n\n    self.setPluginVersion(webRtcPlugin22Version);\n    logger.debug('WebRtcPluginv22Adaptor initialized');\n}\n","import {compose} from '../../utils';\n\nexport function WebRtcPluginv31AdaptorImpl({\n    base: _super,\n    model: _model,\n    LogManager: _logManager,\n    SdpParser: _sdpParser\n}) {\n    var self = this,\n        webRtcPlugin31Version = {\n            major: 3,\n            minor: 1,\n\n            min_revision: 520,\n            min_build: 0,\n\n            current_revision: 524,\n            current_build: 0\n        },\n        logger = _logManager.getLogger('WebRtcPluginv31AdaptorImpl');\n    logger.debug('WebRtcPluginv31Adaptor initializing');\n\n    compose(_super, self);\n    compose(_model, self);\n\n    self.setPluginVersion(webRtcPlugin31Version);\n\n    /**\n     * Send DTMF tone\n     * Enabler implementation lies on webRtcPluginv31Adaptor.js\n     *\n     * @ignore\n     * @name rtc.sendDTMF\n     * @function\n     * @param {Object} call internalCall\n     * @param {String} tone DTMF tone\n     */\n    self.sendDTMF = function(call, tone) {\n        var localAudioTrack;\n\n        if (!call.dtmfSender) {\n            localAudioTrack = self.getLocalAudioTrack(call.peer);\n            if (!localAudioTrack) {\n                return;\n            }\n            call.dtmfSender = call.peer.createDTMFSender(localAudioTrack);\n            if (!call.dtmfSender) {\n                return;\n            }\n        }\n\n        if (!_sdpParser.isSdpHasTelephoneEvent(call.peer.remoteDescription.sdp)) {\n            call.dtmfSender.insertDTMF(tone, 400, 100, true);\n            logger.info('sending inband DTMF tone: ' + tone);\n        } else {\n            if (call.dtmfSender.canInsertDTMF === true) {\n                call.dtmfSender.insertDTMF(tone, 400);\n                logger.info('sending outband DTMF tone: ' + tone);\n            } else {\n                logger.error('Failed to execute \\'insertDTMF\\' on \\'RTCDTMFSender\\': The \\'canInsertDTMF\\' attribute is false: this sender cannot send DTMF');\n            }\n        }\n    };\n\n    logger.debug('WebRtcPluginv31Adaptor initialized');\n}\n","import {webRtcLibraryDecoratorImpl} from './webRtcLibraryDecorator';\nimport {webRtcLibraryChromeDecoratorImpl} from './webRtcLibraryChromeDecorator';\nimport {webRtcLibraryFirefoxDecoratorImpl} from './webRtcLibraryFirefoxDecorator';\n\nexport default {\n    WebRtcDecoratorFactory: container =>\n        target => webRtcLibraryDecoratorImpl(target, container.Utils),\n    WebRtcChromeDecoratorFactory: container =>\n        target => webRtcLibraryChromeDecoratorImpl(target, container.Global, container.Navigator, container.Utils, container.LogManager),\n    WebRtcFirefoxDecoratorFactory: container =>\n        target => webRtcLibraryFirefoxDecoratorImpl(target, container.WebRtcChromeDecoratorFactory, container.Global, container.Navigator)\n};\n","export function webRtcLibraryDecoratorImpl(target, _utils) {\n    var libraryObjWrapper = {};\n\n    libraryObjWrapper.getUserMedia = target.getUserMedia;\n    libraryObjWrapper.showSettingsWindow = target.showSettingsWindow;\n    libraryObjWrapper.getURLFromStream = target.getURLFromStream;\n    libraryObjWrapper.enableH264 = target.enableH264;\n\n    libraryObjWrapper.createRTCSessionDescription = function(type, sdp) {\n        return target.createSessionDescription(type, sdp);\n    };\n\n    libraryObjWrapper.createRTCIceCandidate = function(candidate, type, number) {\n        return target.createIceCandidate(candidate, type, number);\n    };\n\n    libraryObjWrapper.createRTCPeerConnection = function(config, constraints) {\n        return target.createPeerConnection(config, constraints);\n    };\n\n    libraryObjWrapper.setLang = function(lang) {\n        target.setLanguage(lang || 'en');\n    };\n\n    libraryObjWrapper.checkMediaSourceAvailability = function(callback) {\n        _utils.callFunctionIfExist(callback, {\n            videoSourceAvailable: (target.getVideoDeviceNames().length > 0) ? true : false,\n            audioSourceAvailable: (target.getAudioInDeviceNames().length > 0) ? true : false,\n            sourceList: [],\n            screenSourceAvailable: false\n        });\n    };\n\n    libraryObjWrapper.get_audioInDeviceCount = function() {\n        return target.getAudioInDeviceNames().length;\n    };\n\n    libraryObjWrapper.get_audioOutDeviceCount = function() {\n        return target.getAudioOutDeviceNames().length;\n    };\n\n    libraryObjWrapper.get_videoDeviceCount = function() {\n        return target.getVideoDeviceNames().length;\n    };\n\n    libraryObjWrapper.set_logSeverityLevel = function(level) {\n        target.logSeverityLevel = level;\n        return true;\n    };\n\n    libraryObjWrapper.get_logSeverityLevel = function() {\n        return target.logSeverityLevel;\n    };\n\n    libraryObjWrapper.enable_logCallback = function(handler) {\n        target.logCallback = handler;\n        return true;\n    };\n\n    libraryObjWrapper.disable_logCallback = function() {\n        target.logCallback = null;\n    };\n\n    libraryObjWrapper.setType = function(applicationType) {\n        target.type = applicationType;\n    };\n\n    libraryObjWrapper.getType = function() {\n        return target.type;\n    };\n\n    libraryObjWrapper.getVersion = function() {\n        return target.version;\n    };\n\n    libraryObjWrapper.setH264CodecStateChangeHandler = function(handler) {\n        target.onh264codecstatechange = handler;\n    };\n\n    libraryObjWrapper.getCurrentPluginVersionObject = function() {\n        var splittedPluginVersion = target.version.split('.'),\n            currentPluginVersion;\n\n        currentPluginVersion = {\n            major: parseInt(splittedPluginVersion[0], 10),\n            minor: parseInt(splittedPluginVersion[1], 10),\n            revision: parseInt(splittedPluginVersion[2], 10),\n            build: parseInt(splittedPluginVersion[3], 10)\n        };\n        return currentPluginVersion;\n    };\n\n    libraryObjWrapper.detachWebAudioContextFromLocalMedia = function(localMedia) {\n        localMedia.audioContext.close();\n        localMedia.mediaStreamDestination.disconnect();\n    };\n\n    libraryObjWrapper.stopLocalMedia = function(localMedia) {\n        if (localMedia) {\n            libraryObjWrapper.stopStream(localMedia.stream);\n            libraryObjWrapper.stopStream(localMedia.originalStream);\n        }\n    };\n\n    libraryObjWrapper.stopStream = function(stream) {\n        if (stream && stream.stop) {\n            stream.stop();\n        }\n    };\n\n    libraryObjWrapper.updateStream = function(peer, call) {\n        var localStreams = peer.localStreams;\n        if(localStreams && localStreams.length > 0) {\n            peer.removeStream(localStreams.item(0));\n        }\n\n        peer.addStream(call.localMedia.stream);\n    };\n\n    return libraryObjWrapper;\n}\n","import {mediaErrors} from '../../call/call.js';\n\nexport function webRtcLibraryChromeDecoratorImpl(target, _window, _navigator, _utils, _logManager) {\n    var logger = _logManager.getLogger('webRtcLibraryChromeDecoratorImpl'),\n        screenShareExtensionLoaded = false,\n        screenShareExtensionId;\n\n    target.getUserMedia = function(constraints, successCallback, failureCallback) {\n        function getSourceMedia(mediaSourceId) {\n            if (!constraints.video.mandatory) {\n                constraints.video.mandatory = {};\n            }\n            if(mediaSourceId) {\n                constraints.video.mandatory.chromeMediaSourceId = mediaSourceId;\n            }\n            constraints.video.mandatory.chromeMediaSource = 'desktop';\n            _navigator.webkitGetUserMedia(constraints, successCallback, failureCallback);\n        }\n\n        var isScreensharing = constraints.video && constraints.video.mediaSource === 'screen';\n        if(isScreensharing) {\n            // This isn't a real constraint; remove it before using the constraints.\n            delete constraints.video['mediaSource'];\n\n            if(constraints.video.mandatory.chromeMediaSourceId) {\n                /*\n                 * Screenshare Scenario #1:\n                 *      A mediaSourceId was provided as an option when starting screenshare.\n                 */\n                getSourceMedia();\n\n            } else if (screenShareExtensionLoaded) {\n                /*\n                 *  Screenshare Scenario #2:\n                 *      The app provided an extension Id on setup, so we need to talk with\n                 *      that extension to retrieve a mediaSourceId.\n                 */\n                _window.chrome.runtime.sendMessage(screenShareExtensionId, {\n                    message: 'chooseDesktopMedia'\n                },\n                // sendMessage success callback.\n                function(response) {\n                    if(response && response.mediaSourceId) {\n                        getSourceMedia(response.mediaSourceId);\n                    } else {\n                        _utils.callFunctionIfExist(failureCallback);\n                    }\n                });\n\n            } else {\n                // Neither screensharing method worked.\n                logger.debug('No extension ID or media source ID provided.');\n                _utils.callFunctionIfExist(failureCallback);\n            }\n        } else {\n            // Regular getUserMedia.\n            _navigator.webkitGetUserMedia(constraints, successCallback, failureCallback);\n        }\n    };\n\n    target.initScreenSharing = function(onSuccess, onFailure, options) {\n        var screenSharingOpts = options.screenSharing;\n\n        if (screenSharingOpts && screenSharingOpts.chromeExtensionId) {\n            screenShareExtensionId = screenSharingOpts.chromeExtensionId;\n            try {\n                _window.chrome.runtime.sendMessage(screenShareExtensionId, {\n                    message: 'version'\n                }, function(response) {\n                    if (response && response.version) {\n                        screenShareExtensionLoaded = true;\n                        _utils.callFunctionIfExist(onSuccess);\n                    } else {\n                        _utils.callFunctionIfExist(onFailure, mediaErrors.NO_SCREENSHARING_WARNING);\n                    }\n                });\n            } catch (error) {\n                _utils.callFunctionIfExist(onFailure, mediaErrors.NO_SCREENSHARING_WARNING);\n            }\n        } else {\n            // If there is no screensharing extension, screensharing can still work if the application\n            // provides the media source id on it's own. Consider this else case a success, since\n            // we don't want to say screensharing is not available.\n            _utils.callFunctionIfExist(onSuccess);\n        }\n    };\n\n    target.showSettingsWindow = function() {\n        return;\n    };\n\n    target.createRTCSessionDescription = function(type, sdp) {\n        return new _window.RTCSessionDescription({\n            'type': type,\n            'sdp': sdp\n        });\n    };\n\n    target.createRTCIceCandidate = function(candidate) {\n        return new _window.RTCIceCandidate(candidate);\n    };\n\n    target.createRTCPeerConnection = function(config, constraints) {\n        if(_window.RTCPeerConnection) {\n            // Non-prefixed API is available in Chrome 56+.\n            return new _window.RTCPeerConnection(config, constraints);\n        } else {\n            return new _window.webkitRTCPeerConnection(config, constraints);\n        }\n    };\n\n    target.checkMediaSourceAvailability = function(callback) {\n        var i, videoSourceAvailable, audioSourceAvailable, sources = [];\n\n        function executeCallback(videoSourceAvailable, audioSourceAvailable) {\n            _utils.callFunctionIfExist(callback, {\n                videoSourceAvailable: videoSourceAvailable,\n                audioSourceAvailable: audioSourceAvailable,\n                sourceList: sources,\n                // Hardcode screensharing to be available, since there is\n                // no initialization needed for screensharing to be available.\n                screenSourceAvailable: true\n            });\n        }\n\n        function processMediaDevices(mediaSources) {\n            for (i = 0; i < mediaSources.length; i++) {\n                if (mediaSources[i].kind === 'videoinput' || mediaSources[i].kind === 'video') {\n                    // Video source is available such as webcam\n                    videoSourceAvailable = true;\n                } else if (mediaSources[i].kind === 'audioinput' || mediaSources[i].kind === 'audio') {\n                    // audio source is available such as mic\n                    audioSourceAvailable = true;\n                }\n                sources.push({\n                    id: mediaSources[i].deviceId || mediaSources[i].id,\n                    kind: mediaSources[i].kind,\n                    label: mediaSources[i].label,\n                    groupId: mediaSources[i].groupId\n                });\n            }\n            executeCallback(videoSourceAvailable, audioSourceAvailable);\n        }\n\n        if (_navigator.mediaDevices && _navigator.mediaDevices.enumerateDevices) {\n            _navigator.mediaDevices.enumerateDevices().then(processMediaDevices).catch(function(error) {\n                logger.error('Failed to enumerate devices. Error name: ' + error.name + 'Error message: ' + error.message);\n                executeCallback(false, false);\n            });\n        } else {\n            _window.MediaStreamTrack.getSources(processMediaDevices);\n        }\n    };\n\n    target.detachWebAudioContextFromLocalMedia = function(localMedia) {\n        localMedia.audioContext.close();\n        if (localMedia && localMedia.mediaStreamDestination && localMedia.mediaStreamDestination.numberOfOutputs > 0) {\n            localMedia.mediaStreamDestination.disconnect();\n        }\n    };\n\n    target.stopLocalMedia = function(localMedia) {\n        if (localMedia) {\n            if(localMedia.stream) {\n                target.stopStream(localMedia.stream);\n            }\n            if(localMedia.originalStream) {\n                target.stopStream(localMedia.originalStream);\n            }\n        }\n    };\n\n    target.stopStream = function(stream) {\n        var i, tracks = [];\n        if (stream && stream.getTracks) {\n            tracks = stream.getTracks();\n        }\n        for (i in tracks) {\n            if (tracks.hasOwnProperty(i)) {\n                tracks[i].stop();\n            }\n        }\n    };\n\n    target.get_audioInDeviceCount = function() {\n        // Not Applicable for Chrome Native\n        return 1;\n    };\n\n    target.get_audioOutDeviceCount = function() {\n        // Not Applicable for Chrome Native\n        return 1;\n    };\n\n    target.get_videoDeviceCount = function() {\n        // Not Applicable for Chrome Native\n        return 1;\n    };\n\n    target.set_logSeverityLevel = function() {\n        // Not Applicable for Chrome Native\n        return false;\n    };\n\n    target.get_logSeverityLevel = function() {\n        // Not Applicable for Chrome Native\n        return;\n    };\n\n    target.enable_logCallback = function() {\n        // Not Applicable for Chrome Native\n        return;\n    };\n\n    target.disable_logCallback = function() {\n        // Not Applicable for Chrome Native\n        return;\n    };\n\n    target.updateStream = function(peer, call) {\n        var localStreams = peer.getLocalStreams();\n        if(localStreams && localStreams.length > 0) {\n            peer.removeStream(peer.getLocalStreams()[0]);\n        }\n\n        peer.addStream(call.localMedia.stream);\n    };\n}\n","export function webRtcLibraryFirefoxDecoratorImpl(target, _super, _window, _navigator) {\n    _super(target);\n\n    target.getUserMedia = function(constraints, successCallback, failureCallback) {\n        if (_navigator.mediaDevices && _navigator.mediaDevices.getUserMedia) {\n            _navigator.mediaDevices.getUserMedia(constraints)\n                .then(successCallback)\n                .catch(failureCallback);\n        } else {\n            _navigator.mozGetUserMedia(constraints, successCallback, failureCallback);\n        }\n    };\n\n    target.createRTCSessionDescription = function(type, sdp) {\n        if (_window.RTCSessionDescription) {\n            return new _window.RTCSessionDescription({\n                'type': type,\n                'sdp': sdp\n            });\n        } else {\n            return new _window.mozRTCSessionDescription({\n                'type': type,\n                'sdp': sdp\n            });\n        }\n    };\n\n    target.createRTCIceCandidate = function(candidate) {\n        if (_window.RTCIceCandidate) {\n            return new _window.RTCIceCandidate(candidate);\n        } else {\n            return new _window.mozRTCIceCandidate(candidate);\n        }\n    };\n\n    target.createRTCPeerConnection = function(config, constraints) {\n        if (_window.RTCPeerConnection) {\n            return new _window.RTCPeerConnection(config, constraints);\n        } else {\n            return new _window.mozRTCPeerConnection(config, constraints);\n        }\n    };\n\n    target.stopLocalMedia = function(localMedia) {\n        if (localMedia) {\n            target.stopStream(localMedia.stream);\n            target.stopStream(localMedia.originalStream);\n        }\n    };\n\n    target.stopStream = function(stream) {\n        var i, tracks = [];\n        if (stream && stream.getTracks) {\n            tracks = stream.getTracks();\n        }\n        for (i in tracks) {\n            if (tracks.hasOwnProperty(i)) {\n                tracks[i].stop();\n            }\n        }\n    };\n\n    target.updateStream = function() {\n        return;\n        //        peer.removeTrack(peer.getSenders()[0]);\n        //        peer.addStream(call.localMedia.stream);\n    };\n}\n","import {WebRtcAdaptorModel} from './webRtcAdaptorModel';\nimport {WebRtcChromeAdaptorModel} from './webRtcChromeAdaptorModel';\nimport {WebRtcFirefoxAdaptorModel} from './webRtcFirefoxAdaptorModel';\nimport {WebRtcPluginAdaptorModel} from './webRtcPluginAdaptorModel';\n\nexport default {\n    WebRtcAdaptorModelFactory:        () => WebRtcAdaptorModel,\n    WebRtcChromeAdaptorModelFactory:  () => WebRtcChromeAdaptorModel,\n    WebRtcFirefoxAdaptorModelFactory: () => WebRtcFirefoxAdaptorModel,\n    WebRtcPluginAdaptorModelFactory:  () => WebRtcPluginAdaptorModel\n};\n","export default function Map() {\n    var items = {},\n        length = 0;\n\n    this.size = function() {\n        return length;\n    };\n\n    this.add = function(key, value) {\n        length++;\n        items[key] = value;\n        return this;\n    };\n\n    this.get = function(key) {\n        return items[key];\n    };\n\n    this.remove = function(key) {\n        length--;\n        return delete items[key];\n    };\n\n    this.clear = function() {\n        var variableKey;\n        for (variableKey in items) {\n            if (items.hasOwnProperty(variableKey)) {\n                if (delete items[variableKey]) {\n                    length--;\n                }\n            }\n        }\n    };\n\n    this.entries = function() {\n        return items;\n    };\n}\n","import {WebRtcAdaptorModel} from './webRtcAdaptorModel';\n\nexport function WebRtcChromeAdaptorModel() {\n    var self = {},\n        mediaSourceId;\n\n    var base = WebRtcAdaptorModel();\n    Object.assign(self, base);\n\n    self.getMediaSourceId = function() {\n        return mediaSourceId;\n    };\n\n    self.setMediaSourceId = function(sourceId) {\n        mediaSourceId = sourceId;\n    };\n\n    return self;\n}\n","import {WebRtcAdaptorModel} from './webRtcAdaptorModel';\n\nexport function WebRtcFirefoxAdaptorModel() {\n    var self = {},\n        // Since Firefox supports H264 by default, this attribute set as true\n        h264Enabled = true,\n        mediaSourceId;\n\n    var base = WebRtcAdaptorModel();\n    Object.assign(self, base);\n\n    self.isH264Enabled = function() {\n        return h264Enabled;\n    };\n\n    self.setH264Enabled = function(enabled) {\n        h264Enabled = enabled === true ? true : false;\n    };\n\n    self.getMediaSourceId = function() {\n        return mediaSourceId;\n    };\n\n    self.setMediaSourceId = function(sourceId) {\n        mediaSourceId = sourceId;\n    };\n\n    return self;\n}\n","import {WebRtcAdaptorModel} from './webRtcAdaptorModel';\n\nexport function WebRtcPluginAdaptorModel() {\n    var self = {},\n        //this variable will be always set by a plugin adaptor.\n        pluginVersion = {\n            major: 0,\n            minor: 0,\n\n            min_revision: 0,\n            min_build: 0,\n\n            current_revision: 0,\n            current_build: 0\n        };\n\n    var base = WebRtcAdaptorModel();\n    Object.assign(self, base);\n\n    self.getPluginVersion = function() {\n        return pluginVersion;\n    };\n\n    self.setPluginVersion = function(version) {\n        pluginVersion = version;\n    };\n\n    self.getUserMediaContraints = function() {\n        return {\n            audio: true,\n            video: true\n        };\n    };\n\n    return self;\n}\n","import constants from '../constants';\nimport {mediaErrors} from '../call/call';\n\nexport function WebRtcManager({\n    WebRtcAdaptorFactory: _webRtcAdaptorFactory,\n    LogManager: _logManager,\n    TurnCredentialsManager: _turnCredentialsManager,\n    Navigator: _navigator,\n    Utils: _utils,\n    GlobalBroadcaster: _globalBroadcaster\n}) {\n    var self = this,\n        rtcAdaptor,\n        logger = _logManager.getLogger('WebRtcManager');\n\n    function setSuccessCallbacktoCall(call, successCallback) {\n        logger.debug('Setting the call\\'s successCallback.');\n        call.successCallback = successCallback;\n    }\n\n    function clearSuccessParametersFromCall(call) {\n        logger.debug('Clearing the call\\'s successCallback.');\n        call.successCallback = null;\n    }\n\n    self.onCredentialsReceived = function() {\n        if (rtcAdaptor) {\n            rtcAdaptor.setIceServerUrl(self.addTurnCredentialsToUrl());\n        }\n    };\n\n    _turnCredentialsManager.onCredentialsReceived = self.onCredentialsReceived;\n\n    self.addTurnCredentialsToUrl = function() {\n        var i, serverType,\n            iceServerUrl = rtcAdaptor.getIceServerUrl(),\n            turnCredentials = _turnCredentialsManager.get();\n        if (turnCredentials) {\n            logger.info('Turn credentials are avaliable.');\n            if (iceServerUrl instanceof Array) {\n                for (i = 0; i < iceServerUrl.length; i++) {\n                    serverType = iceServerUrl[i].urls.substring(0, iceServerUrl[i].urls.indexOf(':'));\n                    if (serverType === 'turn' || serverType === 'turns') {\n                        iceServerUrl[i].credential = turnCredentials.credential;\n                        iceServerUrl[i].username = turnCredentials.username;\n                    }\n                }\n            }\n        }\n        return iceServerUrl;\n    };\n\n    self.canOriginatorSendLocalVideo = function(call) {\n        return rtcAdaptor.canOriginatorSendLocalVideo(call);\n    };\n\n    self.canOriginatorReceiveRemoteVideo = function(call) {\n        return rtcAdaptor.canOriginatorReceiveRemoteVideo(call);\n    };\n\n    self.onFcsSetupCompleted = function(fcsConfig) {\n        logger.debug('FCS Config updated: ' + JSON.stringify(fcsConfig));\n        self.initMedia(null, null, fcsConfig);\n    };\n\n    self.initMedia = function(onSuccess, onFailure, options) {\n        logger.info('Initializing media for call');\n\n        if (!rtcAdaptor) {\n            rtcAdaptor = _webRtcAdaptorFactory.getWebRtcAdaptor(options);\n        }\n\n        if (options) {\n            if (options.iceserver) {\n\n                // RTCIceServer.url is deprecated; should use .urls instead.\n                // Update the passed-in options for backwards compatibility.\n                for (var i = 0; i < options.iceserver.length; i++) {\n                    if(options.iceserver[i].url) {\n                        options.iceserver[i].urls = options.iceserver[i].url;\n                        delete options.iceserver[i].url;\n                    }\n                }\n\n                // Adding raw iceserver config to adaptor\n                // to make addTurnCredentialsToUrl method work properly\n                rtcAdaptor.setIceServerUrl(options.iceserver);\n                rtcAdaptor.setIceServerUrl(self.addTurnCredentialsToUrl(options.iceserver));\n            }\n            if (options.webrtcdtls !== undefined) {\n                rtcAdaptor.setDtlsEnabled(options.webrtcdtls);\n            }\n            if (options.dscpEnabled !== undefined) {\n                rtcAdaptor.setDscpEnabled(options.dscpEnabled);\n            }\n\n            if (options.localVideoContainer) {\n                rtcAdaptor.setLocalVideoContainer(options.localVideoContainer);\n            }\n\n            if (options.remoteVideoContainer) {\n                rtcAdaptor.setRemoteVideoContainer(options.remoteVideoContainer);\n            }\n\n            if (options.videoContainer) {\n                rtcAdaptor.setDefaultVideoContainer(options.videoContainer);\n            }\n        }\n\n        if (rtcAdaptor.isInitialized()) {\n            _utils.callFunctionIfExist(onSuccess);\n        } else {\n            rtcAdaptor.initMedia(onSuccess, onFailure, options);\n        }\n    };\n\n    self.privateGetUserMedia = function(onSuccess, onFailure, data) {\n        var audioConstraints = rtcAdaptor.prepareAudioConstraints(),\n            videoConstraints = rtcAdaptor.prepareVideoConstraints({\n                isVideoEnabled: true\n            }),\n            returnParams = {\n                onSuccess: onSuccess,\n                onFailure: onFailure\n            };\n\n        if (data.options) {\n            if (data.options.audio !== undefined) {\n                audioConstraints = data.options.audio;\n            }\n            if (data.options.video !== undefined) {\n                videoConstraints = data.options.video;\n            }\n        }\n\n        if (!audioConstraints && !videoConstraints) {\n            _utils.callFunctionIfExist(onFailure, mediaErrors.INVALID_PARAMETER);\n            return;\n        }\n\n        returnParams.options = {\n            audioConstraints: audioConstraints,\n            videoConstraints: videoConstraints,\n            privateStream: data.privateStream\n        };\n\n        rtcAdaptor.privateGetUserMedia(returnParams);\n    };\n\n    self.getWebRtcStats = function(call, onSuccess, onFailure) {\n        rtcAdaptor.getWebRtcStats(call, onSuccess, onFailure);\n    };\n\n    self.getNativeWebRtcStats = function(call, onSuccess, onFailure) {\n        rtcAdaptor.getNativeWebRtcStats(call, onSuccess, onFailure);\n    };\n\n    self.startWebRtcStatsTimer = function(call, interval, onSuccess, onFailure) {\n        self.stopWebRtcStatsTimer(call);\n\n        call.statsTimer = setInterval(function() {\n            rtcAdaptor.getWebRtcStats(call, onSuccess, onFailure);\n        }, interval);\n    };\n\n    self.stopWebRtcStatsTimer = function(call) {\n        if (call.statsTimer) {\n            clearInterval(call.statsTimer);\n            call.statsTimer = undefined;\n        }\n    };\n\n    self.canMergeAudio = function() {\n        if(rtcAdaptor) {\n            return rtcAdaptor.mergeAudioStream;\n        } else {\n            logger.debug('Media not initiliazed yet.');\n            return false;\n        }\n    };\n\n    self.mergeAudioStream = function(call1, call2){\n        rtcAdaptor.mergeAudioStream(call1, call2);\n    };\n\n    self.unMergeAudioStream = function(call1, call2){\n        rtcAdaptor.unMergeAudioStream(call1, call2);\n    };\n\n    self.getUserMedia = function(onSuccess, onFailure, options) {\n        var audioConstraints = rtcAdaptor.prepareAudioConstraints(options),\n            videoConstraints = rtcAdaptor.prepareVideoConstraints(options),\n            returnParams = {\n                onSuccess: onSuccess,\n                onFailure: onFailure\n            };\n\n        if (!audioConstraints && !videoConstraints) {\n            //no need to reach the adaptor if we are not asking for audio or video\n            onSuccess({video:false, audio:false});\n            return;\n        }\n\n        returnParams.options = {\n            audioConstraints: audioConstraints,\n            videoConstraints: videoConstraints\n        };\n\n        logger.info('getting user media - userAgent: ' + _navigator.userAgent +\n            ' constraints: ' + JSON.stringify({\n            audio: audioConstraints,\n            video: videoConstraints\n        }));\n\n        rtcAdaptor.getUserMedia(returnParams);\n    };\n\n    /*\n     * Forward the function call to the rtcAdaptor.\n     */\n    self.changeSpeaker = function(speakerId, onSuccess, onFailure) {\n        // If media has not been initialized yet, rtcAdaptor will be undefined.\n        if(rtcAdaptor) {\n            rtcAdaptor.setContainerSinkId(speakerId, onSuccess, onFailure);\n        } else {\n            _utils.callFunctionIfExist(onFailure, 'Media not initialized.');\n        }\n    };\n\n    self.startScreenMedia = function(onSuccess, onFailure, options, onEnded) {\n        logger.info('getting screen media for call: started - userAgent: ' + _navigator.userAgent);\n\n        if (options) {\n            if (options.width) {\n                rtcAdaptor.setScreenWidth(options.width);\n            }\n\n            if (options.height) {\n                rtcAdaptor.setScreenHeight(options.height);\n            }\n\n            if (options.frameRate) {\n                rtcAdaptor.setScreenFrameRate(options.frameRate);\n            }\n\n            if(options.mediaSourceId) {\n                rtcAdaptor.setMediaSourceId(options.mediaSourceId);\n            }\n        }\n\n        rtcAdaptor.startScreenMedia(onSuccess, onFailure, onEnded);\n    };\n\n    self.stopScreenMedia = function() {\n\n        // If media source id was set via options, unset it.\n        if(rtcAdaptor.getMediaSourceId()) {\n            rtcAdaptor.setMediaSourceId('');\n        }\n\n        rtcAdaptor.stopScreenMedia();\n    };\n\n    self.createDataChannelOffer = function(dataChannelWrapperObj, successCallback, failureCallback) {\n        var successCallbackWrapper = function(sdp) {\n            clearSuccessParametersFromCall(dataChannelWrapperObj);\n            _utils.callFunctionIfExist(successCallback, sdp);\n        };\n\n        setSuccessCallbacktoCall(dataChannelWrapperObj, successCallbackWrapper);\n\n        if(rtcAdaptor.createPeer(dataChannelWrapperObj)){\n            rtcAdaptor.createDataChannel(\n                dataChannelWrapperObj,\n                function createDataChannelSuccessCallback() {\n                    rtcAdaptor.createDataChannelOffer(\n                        dataChannelWrapperObj,\n                        successCallbackWrapper,\n                        function createOfferFailureCallback(error) {\n                            clearSuccessParametersFromCall(dataChannelWrapperObj);\n                            _utils.callFunctionIfExist(failureCallback, error);\n                        });\n                },\n                function createDataChannelFailureCallback(error) {\n                    _utils.callFunctionIfExist(failureCallback, error);\n                }\n            );\n        } else {\n            _utils.callFunctionIfExist(failureCallback);\n        }\n    };\n\n    self.createDataChannelAnswer = function(dataChannelWrapperObj, successCallback, failureCallback) {\n        var successCallbackWrapper = function(sdp) {\n            clearSuccessParametersFromCall(dataChannelWrapperObj);\n            _utils.callFunctionIfExist(successCallback, sdp);\n        };\n\n        setSuccessCallbacktoCall(dataChannelWrapperObj, successCallbackWrapper);\n\n        if(rtcAdaptor.createPeer(dataChannelWrapperObj)){\n            rtcAdaptor.createDataChannelAnswer(\n                dataChannelWrapperObj,\n                successCallbackWrapper,\n                function createDataChannelAnswerFailureCallback(error) {\n                    clearSuccessParametersFromCall(dataChannelWrapperObj);\n                    _utils.callFunctionIfExist(failureCallback, error);\n                });\n        } else {\n            _utils.callFunctionIfExist(failureCallback);\n        }\n    };\n\n    self.createOffer = function(call, successCallback, failureCallback, sendInitialVideo, offerToReceiveVideo, isAnswer) {\n        logger.info('create offer SDP: sendInitialVideo= ' + sendInitialVideo);\n\n        var successCallbackWrapper = function(sdp) {\n            clearSuccessParametersFromCall(call);\n            call.initialVideoState = sendInitialVideo;\n\n            rtcAdaptor.setDTLSRole(call,'actpass');\n\n            call.lastLocalSdp = sdp;\n            rtcAdaptor.restoreUserMuteStateOfCall(call);\n            rtcAdaptor.setOriginatorSendLocalVideo(call, sdp, sendInitialVideo);\n            if (typeof(successCallback) === 'function') {\n                successCallback(sdp);\n            }\n        };\n\n        setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n        if (!call.peer) {\n            if(rtcAdaptor.createPeer(call)){\n                rtcAdaptor.createOffer(call, successCallbackWrapper, function(err) {\n                    clearSuccessParametersFromCall(call);\n                    if (typeof(failureCallback) === 'function') {\n                        failureCallback(err);\n                    }\n                }, sendInitialVideo, offerToReceiveVideo, isAnswer);\n            } else {\n                _utils.callFunctionIfExist(failureCallback, 2);\n            }\n        }\n    };\n\n    self.createAnswer = function(call, successCallback, failureCallback, sendInitialVideo) {\n        logger.info('creating answer SDP: callid= ' + call.id);\n        logger.info('creating answer SDP: sendInitialVideo= ' + sendInitialVideo);\n\n        var successCallbackWrapper = function(sdp) {\n            clearSuccessParametersFromCall(call);\n            call.initialVideoState = sendInitialVideo;\n            call.stableLocalSdp = sdp;\n            rtcAdaptor.setOriginatorSendLocalVideo(call, sdp, sendInitialVideo);\n            rtcAdaptor.setOriginatorReceiveRemoteVideo(call);\n            rtcAdaptor.setDTLSRoleFromStableLocalSDP(call);\n            if (typeof(successCallback) === 'function') {\n                successCallback(sdp);\n            }\n        };\n\n        setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n        rtcAdaptor.addCallIdInPluginContainer(call);\n\n        if (!call.peer) {\n            if(rtcAdaptor.createPeer(call)){\n                rtcAdaptor.createAnswer(call, successCallbackWrapper, function(err) {\n                    clearSuccessParametersFromCall(call);\n                    if (typeof(failureCallback) === 'function') {\n                        failureCallback(err);\n                    }\n                }, sendInitialVideo);\n            } else {\n                _utils.callFunctionIfExist(failureCallback, 2);\n            }\n        }\n    };\n\n    self.processDataChannelAnswer = function(call, successCallback, failureCallback) {\n        if (call.peer) {\n\n            var successCallbackWrapper = function() {\n                clearSuccessParametersFromCall(call);\n                if (typeof(successCallback) === 'function') {\n                    successCallback();\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.processDataChannelAnswer(call, successCallbackWrapper, function(err) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            });\n        }\n    };\n\n    self.processAnswer = function(call, successCallback, failureCallback, isAnswer) {\n        if (call.peer) {\n\n            var successCallbackWrapper = function() {\n                clearSuccessParametersFromCall(call);\n                call.stableLocalSdp = call.lastLocalSdp;\n                rtcAdaptor.restoreUserMuteStateOfCall(call);\n                rtcAdaptor.setOriginatorReceiveRemoteVideo(call);\n                if (typeof(successCallback) === 'function') {\n                    successCallback();\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.handleDTLSRoleFromRemoteSDP(call);\n\n            rtcAdaptor.addCallIdInPluginContainer(call);\n\n            rtcAdaptor.processAnswer(call, successCallbackWrapper, function(err) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            }, isAnswer);\n        }\n    };\n\n    self.processRespond = function(call, successCallback, failureCallback, isJoin) {\n        if (call.peer) {\n\n            var successCallbackWrapper = function() {\n                clearSuccessParametersFromCall(call);\n                call.stableLocalSdp = call.lastLocalSdp;\n                rtcAdaptor.setOriginatorReceiveRemoteVideo(call);\n                if (typeof(successCallback) === 'function') {\n                    successCallback();\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.handleDTLSRoleFromRemoteSDP(call);\n            rtcAdaptor.addCallIdInPluginContainer(call);\n\n            rtcAdaptor.processRespond(call, successCallbackWrapper, function(err) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            }, isJoin);\n        }\n    };\n\n    self.createUpdate = function(call, successCallback, failureCallback, isVideoStart) {\n        logger.info('createUpdate: isVideoStart= ' + isVideoStart);\n\n        if (call.peer) {\n\n            var successCallbackWrapper = function(sdp) {\n                clearSuccessParametersFromCall(call);\n                call.lastLocalSdp = sdp;\n                rtcAdaptor.muteVideoTrack(call, !isVideoStart, true);\n                rtcAdaptor.setOriginatorSendLocalVideo(call, sdp, isVideoStart);\n                if (typeof(successCallback) === 'function') {\n                    successCallback(sdp);\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.createUpdate(call, successCallbackWrapper, failureCallback, isVideoStart);\n        }\n    };\n\n    self.processUpdate = function(call, successCallback, failureCallback, local_hold_status) {\n        logger.info('processUpdate: local_hold_status:' + local_hold_status);\n\n        if (call.peer) {\n\n            var successCallbackWrapper = function(sdp) {\n                clearSuccessParametersFromCall(call);\n                call.stableLocalSdp = sdp;\n                rtcAdaptor.restoreUserMuteStateOfCall(call);\n                rtcAdaptor.setOriginatorReceiveRemoteVideo(call);\n                if (typeof(successCallback) === 'function') {\n                    successCallback(sdp);\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.addCallIdInPluginContainer(call);\n\n            rtcAdaptor.processUpdate(call, successCallbackWrapper, function(err) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            }, local_hold_status);\n        }\n    };\n\n    self.createReOffer = function(call, successCallback, failureCallback, usePreviousMediaDirection) {\n        if (call.peer) {\n\n            var successCallbackWrapper = function(sdp) {\n                clearSuccessParametersFromCall(call);\n                call.lastLocalSdp = sdp;\n                rtcAdaptor.restoreUserMuteStateOfCall(call);\n                rtcAdaptor.setDTLSRole(call, 'actpass');\n                if (typeof(successCallback) === 'function') {\n                    successCallback(sdp);\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.createReOffer(call, successCallbackWrapper, function(err) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            }, usePreviousMediaDirection);\n        }\n    };\n\n    self.createHoldUpdate = function(call, hold, remote_hold_status, successCallback, failureCallback) {\n        logger.info('create hold update local hold= ' + hold + ' remote hold= ' + remote_hold_status);\n\n        if (call.peer) {\n\n            var successCallbackWrapper = function(sdp) {\n                clearSuccessParametersFromCall(call);\n                call.lastLocalSdp = sdp;\n                if (hold || remote_hold_status) {\n                    rtcAdaptor.muteOnHold(call, true);\n                } else {\n                    rtcAdaptor.restoreUserMuteStateOfCall(call);\n                }\n                if (typeof(successCallback) === 'function') {\n                    successCallback(sdp);\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.createHoldUpdate(call, hold, remote_hold_status, successCallbackWrapper,\n                function(err) {\n                    clearSuccessParametersFromCall(call);\n                    if (typeof(failureCallback) === 'function') {\n                        failureCallback(err);\n                    }\n                });\n        }\n    };\n\n    self.processRemoteOfferOnLocalHold = function(call, successCallback, failureCallback) {\n        if (call.peer) {\n\n            var successCallbackWrapper = function(sdp) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(successCallback) === 'function') {\n                    successCallback(sdp);\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.processRemoteOfferOnLocalHold(call, successCallbackWrapper,\n                function(err) {\n                    clearSuccessParametersFromCall(call);\n                    if (typeof(failureCallback) === 'function') {\n                        failureCallback(err);\n                    }\n                });\n        }\n    };\n\n    self.processEnd = function(call) {\n        if (call.peer) {\n            rtcAdaptor.processEnd(call);\n        }\n    };\n\n    self.processHold = function(call, hold, local_hold_status, successCallback, failureCallback) {\n        logger.info('processHold: local hold= ' + local_hold_status + ' remote hold= ' + hold);\n\n        if (call.peer) {\n\n            var successCallbackWrapper = function(sdp) {\n                clearSuccessParametersFromCall(call);\n                call.stableLocalSdp = sdp;\n                if (!local_hold_status && !hold) {\n                    rtcAdaptor.restoreUserMuteStateOfCall(call);\n                    rtcAdaptor.setOriginatorSendLocalVideo(call, sdp, true);\n                }\n                if (!call.call.isVideoNegotiationAvailable()) {\n                    rtcAdaptor.muteVideoTrack(call, true, true);\n                    rtcAdaptor.setOriginatorSendLocalVideo(call, sdp, false);\n                }\n                rtcAdaptor.setOriginatorReceiveRemoteVideo(call);\n                if (typeof(successCallback) === 'function') {\n                    successCallback(sdp);\n                }\n            };\n\n            rtcAdaptor.handleDTLSRoleFromRemoteSDP(call);\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.addCallIdInPluginContainer(call);\n\n            rtcAdaptor.processHold(call, hold, local_hold_status, successCallbackWrapper, function(err) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            });\n        }\n    };\n\n    self.processHoldRespond = function(call, successCallback, failureCallback, isJoin) {\n        logger.info('Processing response to hold offer sent');\n\n        if (call.peer) {\n\n            var successCallbackWrapper = function() {\n                clearSuccessParametersFromCall(call);\n                call.stableLocalSdp = call.lastLocalSdp;\n                rtcAdaptor.setOriginatorReceiveRemoteVideo(call);\n                if (typeof(successCallback) === 'function') {\n                    successCallback();\n                }\n            };\n\n            setSuccessCallbacktoCall(call, successCallbackWrapper);\n\n            rtcAdaptor.handleDTLSRoleFromRemoteSDP(call);\n            rtcAdaptor.addCallIdInPluginContainer(call);\n\n            rtcAdaptor.processHoldRespond(call, successCallbackWrapper, function(err) {\n                clearSuccessParametersFromCall(call);\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            }, isJoin);\n        }\n    };\n\n    self.processPreAnswer = function(call, successCallback, failureCallback) {\n        logger.info('processing preanswer from the offer we sent');\n\n        if (call.peer) {\n            rtcAdaptor.processPreAnswer(call, function() {\n                if (typeof(successCallback) === 'function') {\n                    successCallback();\n                }\n            }, function(err) {\n                if (typeof(failureCallback) === 'function') {\n                    failureCallback(err);\n                }\n            });\n\n        }\n\n    };\n\n    self.isDtlsEnabled = function() {\n        return rtcAdaptor.isDtlsEnabled();\n    };\n\n    self.revertRtcState = function(call, successCallback, failureCallback) {\n        // The adapter doesn't pass the call along whenever calling the callback. We bind to it\n        // here to ensure we get the proper callback parameter.\n        var successCallbackWrapper = successCallback && successCallback.bind(undefined, call);\n\n        clearSuccessParametersFromCall(call);\n        rtcAdaptor.revertRtcState(call, successCallbackWrapper, failureCallback);\n    };\n\n    self.getRemoteVideoResolutions = function() {\n        return rtcAdaptor.getRemoteVideoResolutions();\n    };\n\n    self.getLocalVideoResolutions = function() {\n        return rtcAdaptor.getLocalVideoResolutions();\n    };\n\n    self.isAudioSourceAvailable = function() {\n        return rtcAdaptor.getAudioSourceAvailable();\n    };\n\n    self.isVideoSourceAvailable = function() {\n        return rtcAdaptor.getVideoSourceAvailable();\n    };\n\n    self.refreshVideoRenderer = function() {\n        rtcAdaptor.refreshVideoRenderer();\n    };\n\n    self.sendIntraFrame = function(internalCall) {\n        rtcAdaptor.sendIntraFrame(internalCall);\n    };\n\n    self.sendBlackFrame = function(internalCall) {\n        rtcAdaptor.sendBlackFrame(internalCall);\n    };\n\n    self.muteAudioTrack = function(call, mute) {\n        return rtcAdaptor.muteAudioTrack(call, mute, true);\n    };\n\n    self.updateSilenceStatus = function(call) {\n        rtcAdaptor.updateSilenceStatus(call);\n    };\n\n    self.isAudioMuted = function(call) {\n        return rtcAdaptor.isAudioMuted(call);\n    };\n\n    self.addLocalStream = function(call) {\n        rtcAdaptor.addLocalStream(call);\n    };\n\n    self.isPluginEnabled = function() {\n        return rtcAdaptor.isPluginEnabled();\n    };\n\n    self.sendDTMF = function(call, tone) {\n        rtcAdaptor.sendDTMF(call, tone);\n    };\n\n    self.showSettingsWindow = function() {\n        rtcAdaptor.showSettingsWindow();\n    };\n\n    self.createStreamRenderer = function(stream, container, options) {\n        return rtcAdaptor.createStreamRenderer(stream, container, options);\n    };\n\n    self.disposeStreamRenderer = function(container) {\n        rtcAdaptor.disposeStreamRenderer(container);\n    };\n\n    self.set_logSeverityLevel = function(level) {\n        rtcAdaptor.set_logSeverityLevel(level);\n    };\n\n    self.enable_logCallback = function() {\n        rtcAdaptor.enable_logCallback();\n    };\n\n    self.disable_logCallback = function() {\n        rtcAdaptor.disable_logCallback();\n    };\n\n    self.get_audioInDeviceCount = function() {\n        return rtcAdaptor.get_audioInDeviceCount();\n    };\n\n    self.get_audioOutDeviceCount = function() {\n        return rtcAdaptor.get_audioOutDeviceCount();\n    };\n\n    self.get_videoDeviceCount = function() {\n        return rtcAdaptor.get_videoDeviceCount();\n    };\n\n    self.storeLocalStreamToCall = function(call, localStreamId) {\n        rtcAdaptor.storeLocalStreamToCall(call, localStreamId);\n    };\n\n    self.updateLocalStreamToCall = function(call, localStreamId) {\n        rtcAdaptor.updateLocalStreamToCall(call, localStreamId);\n    };\n\n    self.deleteLocalStream = function(call) {\n        rtcAdaptor.endLocalMedia(call.localMedia);\n    };\n\n    self.getStreamById = function(id) {\n        return rtcAdaptor.getStreamById(id);\n    };\n\n    self.removeStreamById = function(id) {\n        rtcAdaptor.removeStreamById(id);\n    };\n\n    self.setSelectedMicrophoneId = function(_selectedMicrophoneId) {\n        rtcAdaptor.setSelectedMicrophoneId(_selectedMicrophoneId);\n    };\n\n    self.setSelectedSpeakerId = function(_selectedSpeakerId, onSuccess, onFailure) {\n        // If media has not been initialized yet, rtcAdaptor will be undefined.\n        if(rtcAdaptor) {\n            rtcAdaptor.setSelectedSpeakerId(_selectedSpeakerId);\n            _utils.callFunctionIfExist(onSuccess);\n        } else {\n            _utils.callFunctionIfExist(onFailure, 'Media not initialized.');\n        }\n    };\n\n    self.setSelectedCameraId = function(_selectedCameraId) {\n        rtcAdaptor.setSelectedCameraId(_selectedCameraId);\n    };\n\n    self.getCameraList = function(onSuccess) {\n        rtcAdaptor.getCameraList(function(cameraList) {\n            _utils.callFunctionIfExist(onSuccess, cameraList);\n        });\n    };\n\n    self.getMicrophoneList = function(onSuccess) {\n        rtcAdaptor.getMicrophoneList(function(microphoneList) {\n            _utils.callFunctionIfExist(onSuccess, microphoneList);\n        });\n    };\n\n    self.getSpeakerList = function(onSuccess) {\n        rtcAdaptor.getSpeakerList(function(speakerList) {\n            _utils.callFunctionIfExist(onSuccess, speakerList);\n        });\n    };\n\n    self.addRemoteCandidates = function(call, candidateArray) {\n        rtcAdaptor.addRemoteCandidates(call, candidateArray);\n    };\n\n    _globalBroadcaster.subscribe(constants.EVENT.FCS_SETUP_COMPLETED, self.onFcsSetupCompleted);\n\n    //@{test-methods}\n    self.setRtcLibrary = function(_rtcLibrary) {\n        rtcAdaptor = _rtcLibrary;\n    };\n    //@{test-methods}\n}\n","\nexport function WebRtcAdaptorFactory({\n    Navigator: _navigator,\n    LogManager: _logManager,\n    Config: _config,\n\n    WebRtcChromeAdaptorFactory: _WebRtcChromeAdaptor,\n    WebRtcContainerAdaptorFactory: _WebRtcContainerAdaptor,\n    WebRtcFirefoxAdaptorFactory: _WebRtcFirefoxAdaptor,\n    WebRtcFirefoxEsrAdaptorFactory: _WebRtcFirefoxEsrAdaptor,\n    WebRtcPluginv22AdaptorFactory: _WebRtcPluginv22Adaptor,\n    WebRtcPluginv31AdaptorFactory: _WebRtcPluginv31Adaptor\n}) {\n    var logger = _logManager.getLogger('WebRtcAdaptorFactory'),\n        NAVIGATOR_TYPES = {\n            CHROME: 'chrome',\n            FIREFOX: 'firefox',\n            'PLUGIN': 'plugin',\n            CONTAINER: 'container'\n        },\n        PLUGIN_MODES = {\n            // 3.0 Enabler Plugin\n            WEBRTCH264: 'webrtch264',\n            // 2.2 Enabler Plugin\n            WEBRTC22: 'webrtc22',\n            // Default Enabler Plugin\n            WEBRTC: 'webrtc',\n            // Native For Chrome Browser and Default Enabler Plugin for other Browsers\n            AUTO: 'auto',\n            // Native For Chrome Browser and Default Enabler Plugin for other Browsers\n            AUTO22: 'auto22',\n            // Native For Chrome Browser and 3.0 Enabler Plugin for other Browsers\n            AUTOH264: 'autoh264',\n            // Native For Chrome AND Firefox Browser and Enabler Plugin for other Browsers\n            AUTOFIREFOX: 'autofirefox'\n        },\n        DEFAULT_RTC_PLUGIN_MODE = PLUGIN_MODES.WEBRTCH264,\n        DEFAULT_RTC_ADAPTOR = _WebRtcPluginv31Adaptor,\n        PLUGIN_MODE_LOOKUP_TABLE = {\n            chrome: {\n                webrtc: DEFAULT_RTC_PLUGIN_MODE,\n                autofirefox: PLUGIN_MODES.AUTO,\n                autoh264: PLUGIN_MODES.AUTO,\n                webrtch264: PLUGIN_MODES.WEBRTCH264\n            },\n            firefox: {\n                webrtc: DEFAULT_RTC_PLUGIN_MODE,\n                auto: DEFAULT_RTC_PLUGIN_MODE,\n                auto22: PLUGIN_MODES.WEBRTC22,\n                autoh264: PLUGIN_MODES.WEBRTCH264,\n                autofirefox: PLUGIN_MODES.AUTO\n            },\n            plugin: {\n                auto: DEFAULT_RTC_PLUGIN_MODE,\n                auto22: PLUGIN_MODES.WEBRTC22,\n                autoh264: PLUGIN_MODES.WEBRTCH264,\n                autofirefox: DEFAULT_RTC_PLUGIN_MODE,\n                webrtc: DEFAULT_RTC_PLUGIN_MODE\n            }\n        },\n        ADAPTOR_LOOKUP_TABLE = {\n            chrome: {\n                auto: _WebRtcChromeAdaptor,\n                autoh264: _WebRtcChromeAdaptor,\n                webrtc22: _WebRtcPluginv22Adaptor,\n                webrtch264: _WebRtcPluginv31Adaptor\n            },\n            firefox: {\n                auto: _WebRtcFirefoxAdaptor,\n                autoesr: _WebRtcFirefoxEsrAdaptor,\n                webrtc22: _WebRtcPluginv22Adaptor,\n                webrtch264: _WebRtcPluginv31Adaptor\n            },\n            plugin: {\n                webrtc22: _WebRtcPluginv22Adaptor,\n                webrtch264: _WebRtcPluginv31Adaptor\n            },\n            container: {\n                auto: _WebRtcContainerAdaptor,\n                autoh264: _WebRtcContainerAdaptor,\n                webrtc22: _WebRtcContainerAdaptor,\n                webrtch264: _WebRtcContainerAdaptor\n            }\n        },\n        COMPOSIT_PLUGIN_MODES = {\n            // Default Enabler Plugin\n            WEBRTC: 'webrtc',\n            // Native For Chrome And Firefox Browser and Default Enabler Plugin for other Browsers\n            AUTO: 'auto'\n        },\n        COMPOSIT_ADAPTOR_LOOKUP_TABLE = {\n            chrome: {\n                auto: _WebRtcChromeAdaptor,\n                webrtc: DEFAULT_RTC_ADAPTOR\n            },\n            firefox: {\n                auto: _WebRtcFirefoxAdaptor,\n                autoesr: _WebRtcFirefoxEsrAdaptor,\n                webrtc: DEFAULT_RTC_ADAPTOR\n            },\n            plugin: {\n                auto: DEFAULT_RTC_ADAPTOR,\n                webrtc: DEFAULT_RTC_ADAPTOR\n            },\n            container: {\n                auto: _WebRtcContainerAdaptor,\n                webrtc: _WebRtcContainerAdaptor\n            }\n        },\n        pluginMode;\n\n    function getNavigatorType() {\n        var type, version, regex;\n        if (_navigator.userAgent && _navigator.userAgent.indexOf('GENBANDOmni') !== -1 && _navigator.userAgent.indexOf('Chrome') === -1) {\n\n            /*\n                Special case: Handle the OmniContainer used by SO explicitly.\n                Use the userAgent of the client to determine which adaptor to use.\n                    - Desktop:\n                        - 1.1 requires the Container adaptor.\n                        - 1.2+ should use the Chrome adaptor.\n                    - Android: Is not handled by this if case (doesn't enter it).\n                    - iOS: Uses to the Container adaptor for now.\n                TODO: Remove this special case once they've set their versions.\n             */\n\n            // Check the version of the OmniContainer being used.\n            // Mobile clients don't specify version, so default to undefined value if not found.\n            var omniRegex = new RegExp(/GENBANDOmni\\.(\\d\\.\\d)/);\n            var omniVersion = (_navigator.userAgent.match(omniRegex) || []).pop();\n\n            // Version 1.1 and iOS require the Container Adaptor.\n            if(omniVersion === '1.1' || typeof omniVersion === 'undefined') {\n                type = NAVIGATOR_TYPES.CONTAINER;\n            } else {\n                // Other desktop versions should use the Chrome adaptor.\n                type = NAVIGATOR_TYPES.CHROME;\n            }\n\n        } else if (_navigator.webkitGetUserMedia) {\n            type = NAVIGATOR_TYPES.CHROME;\n            regex = new RegExp(/\\Chrome\\/(\\d*)/);\n        } else if (_navigator.mozGetUserMedia) {\n            type = NAVIGATOR_TYPES.FIREFOX;\n            regex = new RegExp(/\\Firefox\\/(\\d*)/);\n        } else {\n            type = NAVIGATOR_TYPES.PLUGIN;\n        }\n        if (regex && _navigator.userAgent) {\n            version = parseInt(_navigator.userAgent.match(regex).pop(), 10);\n        }\n\n        logger.debug('Navigator type determined to be ' + type);\n\n        return {\n            type: type,\n            version: version\n        };\n    }\n\n    function identifyPluginMode(options) {\n        var i;\n\n        if (!options || !options.pluginMode) {\n            return PLUGIN_MODES.AUTO;\n        }\n\n        for (i in PLUGIN_MODES) {\n            if (PLUGIN_MODES[i] === options.pluginMode) {\n                return PLUGIN_MODES[i];\n            }\n        }\n\n        return PLUGIN_MODES.AUTO;\n    }\n\n    function getPluginModeForComposition(navigatorType) {\n        var pluginMode = PLUGIN_MODES.AUTO,\n            validPluginMode = false,\n            h264Enabled,\n            pluginModeBrowser = _config.pluginMode[navigatorType.type],\n            pluginModeBrowserVersion,\n            browserVersion, i, regex;\n\n        if (pluginModeBrowser) {\n            regex = new RegExp(/^\\d+\\+$/);\n            if (pluginModeBrowser.version && regex.test(pluginModeBrowser.version)) {\n                pluginModeBrowserVersion = parseInt(pluginModeBrowser.version.replace(/\\+/, ''), 10);\n            }\n            browserVersion = navigatorType.version;\n            if (pluginModeBrowser.mode && (!pluginModeBrowserVersion || browserVersion >= pluginModeBrowserVersion)) {\n                pluginMode = pluginModeBrowser.mode;\n            } else if (_config.pluginMode.mode) {\n                pluginMode = _config.pluginMode.mode;\n            }\n\n            if (typeof pluginModeBrowser.h264 !== 'undefined' && (!pluginModeBrowserVersion || browserVersion >= pluginModeBrowserVersion)) {\n                h264Enabled = pluginModeBrowser.h264;\n            } else {\n                h264Enabled = _config.pluginMode.h264;\n            }\n        } else {\n            pluginMode = _config.pluginMode.mode;\n            h264Enabled = _config.pluginMode.h264;\n        }\n\n        // plugin mode validity check\n        for (i in COMPOSIT_PLUGIN_MODES) {\n            if (COMPOSIT_PLUGIN_MODES[i] === pluginMode) {\n                validPluginMode = true;\n            }\n        }\n        if (!validPluginMode) {\n            pluginMode = PLUGIN_MODES.AUTO;\n        }\n\n        // h264 validity check\n        if (h264Enabled !== true && h264Enabled !== false) {\n            h264Enabled = undefined;\n        }\n\n        return {\n            pluginMode: pluginMode,\n            h264Enabled: h264Enabled\n        };\n    }\n\n    function getPluginMode(options, navigatorType) {\n        var pluginMode = identifyPluginMode(options);\n\n        return PLUGIN_MODE_LOOKUP_TABLE[navigatorType.type][pluginMode] || pluginMode;\n    }\n\n    this.getWebRtcAdaptor = function(options) {\n        var adaptorFactory, navigatorType = getNavigatorType(),\n            adaptor, pluginModeAndH264Bundle, h264Enabled;\n\n        if (_config.pluginMode) {\n            pluginModeAndH264Bundle = getPluginModeForComposition(navigatorType);\n            pluginMode = pluginModeAndH264Bundle.pluginMode;\n            h264Enabled = pluginModeAndH264Bundle.h264Enabled;\n            if (pluginMode === 'auto' && navigatorType.type === 'firefox' && navigatorType.version < 40) {\n                pluginMode = 'autoesr';\n            }\n            adaptorFactory = COMPOSIT_ADAPTOR_LOOKUP_TABLE[navigatorType.type][pluginMode];\n        } else {\n            pluginMode = getPluginMode(options, navigatorType);\n            if (pluginMode === 'auto' && navigatorType.type === 'firefox' && navigatorType.version < 40) {\n                pluginMode = 'autoesr';\n            }\n            adaptorFactory = ADAPTOR_LOOKUP_TABLE[navigatorType.type][pluginMode];\n        }\n\n        if (!adaptorFactory) {\n            // This seems unnecessary, still keeping it just in case of a weird\n            // condition\n            logger.debug('Invalid Plugin Mode Detected, Treated as WEBRTC');\n            pluginMode = DEFAULT_RTC_PLUGIN_MODE;\n            adaptorFactory = DEFAULT_RTC_ADAPTOR;\n        }\n\n        if(navigatorType.type === 'firefox' && (pluginMode === PLUGIN_MODES.WEBRTCH264 ||\n                                                pluginMode === PLUGIN_MODES.WEBRTC22 ||\n                                                pluginMode === PLUGIN_MODES.WEBRTC) ) {\n            logger.error('Plugins for firefox are no longer supported.');\n        }\n\n        logger.debug('Adaptor initializing from ' + navigatorType + ' browser and ' + pluginMode + ' plugIn mode');\n        adaptor = adaptorFactory();\n        //TODO: set h264Enabled for adaptor\n        if (typeof h264Enabled !== 'undefined') {\n            adaptor.setH264Enabled(h264Enabled);\n        }\n        return adaptor;\n    };\n\n    // Used for tests.\n    this.getLastPluginMode = function() {\n        return pluginMode;\n    };\n\n    this.getPluginModes = function() {\n        return PLUGIN_MODES;\n    };\n\n    this.getDefaultRtcPluginMode = function() {\n        return DEFAULT_RTC_PLUGIN_MODE;\n    };\n\n    this.getDefaultRtcAdaptor = function() {\n        return DEFAULT_RTC_ADAPTOR;\n    };\n\n    //@{test-methods}\n    this.getNavigatorType = getNavigatorType;\n    //@{test-methods}\n}\n","import { eventChannel } from 'redux-saga'\nimport { call, put, take, takeEvery } from 'redux-saga/effects'\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\n\nimport { devicesActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport { convertDevices } from '../utils/mediaDevices'\n\n// Get the logger\nconst log = logManager.getLogger('CALL')\n\n/**\n * Naively checks whether navigator.mediaDevices is supported in this environment.\n * @method isSupported\n * @return {boolean}\n */\nfunction isSupported () {\n  return typeof navigator !== 'undefined' && typeof navigator.mediaDevices !== 'undefined'\n}\n\n// TODO: Somewhere else should \"initialize\" this.\nif (!isSupported()) {\n  log.warn('MediaDevices not supported; will not watch for media device changes.')\n}\n\n/**\n * Saga watcher.\n * Forwards actions to checkMediaDevices saga.\n * @method watchCheckMediaDevices\n */\nexport function * watchCheckMediaDevices () {\n  yield takeEvery(actionTypes.CHECK_DEVICES, checkMediaDevices)\n}\n\n/**\n * Retrieves media devices when requested.\n * @method checkMediaDevices\n */\nexport function * checkMediaDevices () {\n  if (!isSupported()) {\n    yield put(\n      devicesActions.checkDevicesFinish({\n        error: new BasicError({\n          code: callCodes.NOT_SUPPORTED,\n          message: 'MediaDevices APIs are not supported in this environment.'\n        })\n      })\n    )\n    return\n  }\n\n  // Redux-saga doesn't like calling this directly.\n  // TODO: Find out why / find a better way to do this.\n  function getDevices () {\n    return navigator.mediaDevices.enumerateDevices()\n  }\n\n  let devices\n  try {\n    devices = yield call(getDevices)\n  } catch (error) {\n    log.debug('Failed to retrieve media devices.', error)\n    yield put(devicesActions.checkDevicesFinish({ error }))\n    return\n  }\n\n  log.debug('Retrieved latest media devices.', devices)\n  // Format the device list into a user-friendly object.\n  devices = convertDevices(devices)\n  yield put(devicesActions.checkDevicesFinish({ devices }))\n}\n\n/**\n * Listens for device changes.\n * Groups changes within a short time period into a single emitted event.\n * @method onDeviceChange\n */\nexport function * onDeviceChange () {\n  if (!isSupported()) {\n    return\n  }\n\n  const deviceChangeChannel = eventChannel(emit => {\n    let recentDeviceChange = false\n\n    navigator.mediaDevices.ondevicechange = () => {\n      log.info('Media device change detected.')\n      // A physical device change results in one event per\n      // device \"kind\". Group the events together.\n      if (!recentDeviceChange) {\n        recentDeviceChange = true\n        setTimeout(function () {\n          recentDeviceChange = false\n          emit(devicesActions.checkDevices())\n        }, 50)\n      }\n    }\n\n    // Return unsubscribe function.\n    return () => {\n      navigator.mediaDevices.ondevicechange = null\n    }\n  })\n  while (true) {\n    const action = yield take(deviceChangeChannel)\n    yield put(action)\n  }\n}\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Represents that local video should be displayed in the container.\n * @method startLocalVideo\n * @param  {HTMLElement} videoContainer The container to use for local video.\n * @returns {Object} A flux standard action.\n */\nexport function startLocalVideo (videoContainer) {\n  return {\n    type: actionTypes.START_LOCAL_VIDEO,\n    payload: videoContainer\n  }\n}\n\n/**\n * Represents that a request for local video has finished.\n * @method startLocalVideoFinish\n * @param  {HTMLElement} videoContainer The container that local video is being displayed in.\n * @param  {BasicError} error A Basic error object, if an error occurred.\n * @returns {Object} A flux standard action.\n */\nexport function startLocalVideoFinish (videoContainer, error) {\n  return {\n    type: actionTypes.START_LOCAL_VIDEO_FINISH,\n    payload: error || videoContainer,\n    error: !!error\n  }\n}\n\n/**\n * Represents that local video should stop being displayed.\n * @method stopLocalVideo\n * @returns {Object} A flux standard action.\n */\nexport function stopLocalVideo () {\n  return {\n    type: actionTypes.STOP_LOCAL_VIDEO\n  }\n}\n\n/**\n * Represents that an action to stop local video has finished.\n * @method stopLocalVideoFinish\n * @param  {BasicError} error A Basic error object, if an error occurred.\n * @returns {Object} A flux standard action.\n */\nexport function stopLocalVideoFinish (error) {\n  return {\n    type: actionTypes.STOP_LOCAL_VIDEO_FINISH,\n    payload: error || undefined,\n    error: !!error\n  }\n}\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Represents that media should be initialized.\n * @method initMedia\n * @param {Object} [options]\n * @param {string} [options.chromeExtensionId] ID of the Chrome Screenshare extension to be used.\n * @returns {Object} A flux standard action.\n */\nexport function initMedia (options = {}) {\n  return {\n    type: actionTypes.INIT_MEDIA,\n    payload: options\n  }\n}\n\n/**\n * Represents that media has been / tried to be initialized.\n * @method initMediaFinish\n * @param  {Object} result Information about media support.\n * @param  {boolean} result.error Whether the initialization was successful or not.\n * @param  {number} result.code A unique code describing the result scenario.\n * @param  {string} result.message Human readable message of the result.\n * @returns {Object} A flux standard action.\n */\nexport function initMediaFinish (result) {\n  return {\n    type: actionTypes.INIT_MEDIA_FINISH,\n    payload: result\n  }\n}\n\n/**\n * Represents an action to prompt user for permission to use speakers or camera.\n * @method promptUserMedia\n * @param {Object} [params]\n * @param {boolean} [params.video]\n * @param {boolean} [params.audio]\n * @returns {Object} A flux standard action.\n */\nexport function promptUserMedia (options) {\n  return {\n    type: actionTypes.PROMPT_USER_MEDIA,\n    payload: options\n  }\n}\n\n/**\n * Represents the finish of an action to prompt user for permission to use speakers or camera.\n * @method promptUserMediaFinish\n * @param  {Object} [error] The error object, in the case of an error.\n * @param {Object} [params]\n * @param {boolean} [params.video]\n * @param {boolean} [params.audio]\n * @returns {Object} A flux standard action.\n */\nexport function promptUserMediaFinish (options, error) {\n  if (typeof error !== 'undefined') {\n    return {\n      type: actionTypes.PROMPT_USER_MEDIA_FINISH,\n      payload: { options: options, error: error },\n      error: !!error\n    }\n  } else {\n    return {\n      type: actionTypes.PROMPT_USER_MEDIA_FINISH,\n      payload: options\n    }\n  }\n}\n","import * as actionTypes from '../actionTypes'\nimport { callActionHelper } from './calls'\n\n/**\n * Represents a request to check media devices.\n * @method checkDevices\n * @returns {Object} A flux standard action.\n */\nexport function checkDevices () {\n  return {\n    type: actionTypes.CHECK_DEVICES\n  }\n}\n\n/**\n * Represents that media devices have been checked.\n * @method checkDevicesFinish\n * @param  {Object} $0\n * @param  {Object} $0.devices\n * @param  {Error} $0.error\n * @returns {Object} A flux standard action.\n */\nexport function checkDevicesFinish ({ devices, error }) {\n  var action = {\n    type: actionTypes.CHECK_DEVICES_FINISH\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = devices\n  }\n  return action\n}\n\n/**\n * Represents a request to set default devices for calls.\n * @method setDefaultDevices\n * @param  {Object} devices\n * @param  {string} [devices.camera] The ID of the camera to set as default.\n * @param  {string} [devices.microphone] The ID of the microphone to set as default.\n * @param  {string} [devices.speaker] The ID of the speaker to set as default.\n * @return {Object} A flux standard action.\n */\nexport function setDefaultDevices (devices) {\n  return {\n    type: actionTypes.SET_DEFAULT_DEVICES,\n    payload: {\n      ...devices\n    }\n  }\n}\n\n/**\n * Represents that the default devices was attempted to be set.\n * @method setDefaultDevicesFinish\n * @param  {Object} $0\n * @param  {Object} $0.devices The devices that were set as defaults.\n * @param  {Object} $0.error Error object, in the case of an issue.\n * @return {Object} A flux standard action.\n */\nexport function setDefaultDevicesFinish ({ devices, error }) {\n  return {\n    type: actionTypes.SET_DEFAULT_DEVICES_FINISH,\n    payload: error || devices,\n    error: !!error\n  }\n}\n\n/**\n * Represents a request to change the current speaker in use for a call.\n * @method changeSpeaker\n * @param  {string} speakerId Id of the speaker.\n * @return {Object} A flux standard action.\n */\nexport function changeSpeaker (speakerId) {\n  return {\n    type: actionTypes.CHANGE_SPEAKER,\n    payload: speakerId\n  }\n}\n\n/**\n * Represents that the current speaker was attempted to be changed.\n * @method changeSpeakerFinish\n * @param  {Object} error Error object, in the case of an issue.\n * @return {Object} A flux standard action.\n */\nexport function changeSpeakerFinish ({ speakerId, error }) {\n  return {\n    type: actionTypes.CHANGE_SPEAKER_FINISH,\n    payload: error || speakerId,\n    error: !!error\n  }\n}\n\n/**\n * Represents a request to change the camera/microphone for a call.\n * @method changeInputDevices\n * @param  {string} callId The ID of the call to act upon.\n * @return {Object} A flux standard action.\n */\nexport function changeInputDevices (callId) {\n  return callActionHelper(actionTypes.CHANGE_INPUT_DEVICES, callId)\n}\n\n/**\n * Represents that input devices was (attempted) changed for a call.\n * @method changeInputDevicesFinish\n * @param  {Object} $0\n * @param  {string} $0.callId   Id of the call that changed.\n * @param  {Object} $0.error Error object, in the case of an issue.\n * @return {Object} A flux standard action.\n */\nexport function changeInputDevicesFinish ({ callId, error }) {\n  return callActionHelper(actionTypes.CHANGE_INPUT_DEVICES_FINISH, callId, {\n    error\n  })\n}\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Represents an API request to create an audio bridge.\n * @method createAudioBridge\n * @param  {string} bridgeId UUID to identify the audio bridge.\n * @returns {Object} A flux standard action.\n */\nexport function createAudioBridge (bridgeId) {\n  return {\n    type: actionTypes.CREATE_AUDIO_BRIDGE,\n    payload: {\n      bridgeId\n    }\n  }\n}\n\n/**\n * Represents the result of creating an audio bridge.\n * @method createAudioBridgeFinish\n * @param  {string} bridgeId UUID to identify the audio bridge.\n * @param  {Boolean} [error=false]\n * @returns {Object} A flux standard action.\n */\nexport function createAudioBridgeFinish (bridgeId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.CREATE_AUDIO_BRIDGE_FINISH,\n    payload: error || { bridgeId }\n  }\n}\n\nexport function closeAudioBridge (bridgeId) {\n  return {\n    type: actionTypes.CLOSE_AUDIO_BRIDGE,\n    payload: { bridgeId }\n  }\n}\n\nexport function closeAudioBridgeFinish (bridgeId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.CLOSE_AUDIO_BRIDGE_FINISH,\n    payload: error || { bridgeId }\n  }\n}\n\nexport function addCallToBridge (bridgeId, callId) {\n  return {\n    type: actionTypes.BRIDGE_ADD_CALL,\n    payload: { bridgeId, callId }\n  }\n}\n\nexport function updateAudioBridgeCalls (bridgeId, calls) {\n  return {\n    type: actionTypes.UPDATE_AUDIO_BRIDGE_CALLS,\n    payload: { bridgeId, calls }\n  }\n}\n\nexport function addCallToBridgeFinish (bridgeId, callId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.BRIDGE_ADD_CALL_FINISH,\n    payload: error || { bridgeId, callId }\n  }\n}\n\nexport function removeCallFromBridge (bridgeId, callId) {\n  return {\n    type: actionTypes.BRIDGE_REMOVE_CALL,\n    payload: { bridgeId, callId }\n  }\n}\n\nexport function removeCallFromBridgeFinish (bridgeId, callId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.BRIDGE_REMOVE_CALL_FINISH,\n    payload: error || { bridgeId, callId }\n  }\n}\n\nexport function muteAudioBridge (bridgeId) {\n  return {\n    type: actionTypes.MUTE_AUDIO_BRIDGE,\n    payload: { bridgeId }\n  }\n}\n\nexport function muteAudioBridgeFinish (bridgeId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.MUTE_AUDIO_BRIDGE_FINISH,\n    payload: error || { bridgeId }\n  }\n}\n\nexport function unmuteAudioBridge (bridgeId) {\n  return {\n    type: actionTypes.UNMUTE_AUDIO_BRIDGE,\n    payload: { bridgeId }\n  }\n}\n\nexport function unmuteAudioBridgeFinish (bridgeId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.UNMUTE_AUDIO_BRIDGE_FINISH,\n    payload: error || { bridgeId }\n  }\n}\n\nexport function silenceAudioBridge (bridgeId) {\n  return {\n    type: actionTypes.SILENCE_AUDIO_BRIDGE,\n    payload: { bridgeId }\n  }\n}\n\nexport function silenceAudioBridgeFinish (bridgeId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.SILENCE_AUDIO_BRIDGE_FINISH,\n    payload: error || { bridgeId }\n  }\n}\n\nexport function unsilenceAudioBridge (bridgeId) {\n  return {\n    type: actionTypes.UNSILENCE_AUDIO_BRIDGE,\n    payload: { bridgeId }\n  }\n}\n\nexport function unsilenceAudioBridgeFinish (bridgeId, error = false) {\n  return {\n    error: !!error,\n    type: actionTypes.UNSILENCE_AUDIO_BRIDGE_FINISH,\n    payload: error || { bridgeId }\n  }\n}\n","import { WEBRTC_DEVICE_KINDS } from '../constants'\n\n/**\n * Converts an array of MediaDevices into an object keyed on device type.\n * @method parseDevices\n * @param  {Array} [devices=[]] Media devices, in the form of MediaDeviceInfo objects.\n * @return {Object} Media device object.\n */\nexport function convertDevices (devices = []) {\n  const convertedDevices = {\n    microphone: [],\n    camera: [],\n    speaker: []\n  }\n\n  devices.forEach(function (device) {\n    convertedDevices[WEBRTC_DEVICE_KINDS[device.kind]].push(device)\n  })\n\n  return convertedDevices\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a call plugin.\n * @type {string}\n */\nconst name = 'call'\n\n// Export the interface as a single object.\nexport default {\n  name,\n  api,\n  reducer\n}\n","/**\n * The Calls feature is used to make audio and video calls to and from\n * SIP users and PSTN phones.\n *\n * Call functions are all part of the 'call' namespace.\n *\n * Whenever 'user' is mentioned as input parameter within this API, it needs to be provided in the user@domain format.\n *\n * @public\n * @namespace Calls\n */\n\n/**\n * The SDK's media features are used to control WebRTC Media Devices.\n *\n * Media functions are all part of the 'media' namespace.\n *\n * @public\n * @module Media\n */\n\n/**\n * The audio bridge feature allows multiple audio calls to be bridged together\n * for a local three-way call.\n *\n * Audio bridge functions are all part of the 'audioBridge' namespace.\n * @public\n * @module AudioBridge\n * @requires call\n */\n\nimport {\n  getCalls,\n  getCallById,\n  getCustomParametersById,\n  getMediaInfo,\n  getAudioBridges,\n  getBridgeCalls\n} from './selectors'\nimport { getDomain } from '../../auth/interface/selectors'\nimport { getConfiguration } from '../../config/interface/selectors'\nimport { localVideoActions, devicesActions, callsActions, mediaActions, audioBridgeActions } from './actions'\nimport { normalizeSipUri } from '../utils/normalization'\nimport { CALL_STATES_FCS, ICE_MEDIA_STATES } from '../constants'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport { pick, defaults } from 'lodash/fp'\nimport { logManager, API_LOG_TAG } from '../../logs'\n\n// Get the logger\nconst log = logManager.getLogger('CALL')\n\n/**\n * Call API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The call API object.\n */\nexport default function api ({ dispatch, getState }) {\n  const mediaApi = {\n    /**\n     * Sets the selected devices as the default devices.\n     * They will be used for audio output for future calls.\n     * Changing speaker is supported on browser's that support HTMLMediaElement.setSinkId().\n     * @memberof media\n     * @public\n     * @requires call\n     * @requires callMe\n     * @method setDefaultDevices\n     * @param  {Object} devices\n     * @param  {string} [devices.camera] The ID of the camera to set as default.\n     * @param  {string} [devices.microphone] The ID of the microphone to set as default.\n     * @param  {string} [devices.speaker] The ID of the speaker to set as default.\n     * @example\n     * // Set only the default microphone and camera.\n     * client.media.setDefaultDevices({\n     *     camera: 'abc123...',\n     *     microphone: 'def456...'\n     * });\n     */\n    setDefaultDevices (devices) {\n      log.debug(API_LOG_TAG + 'media.setDefaultDevices: ', devices)\n      dispatch(devicesActions.setDefaultDevices(devices))\n    },\n\n    /** Retrieves the available media devices for use.\n     * @memberof media\n     * @public\n     * @requires call\n     * @requires callMe\n     * @method getDevices\n     */\n    getDevices () {\n      log.debug(API_LOG_TAG + 'media.getDevices')\n      dispatch(devicesActions.checkDevices())\n    },\n\n    /**\n     * Starts the local video stream and displays it to the user.\n     * @memberof media\n     * @public\n     * @requires call\n     * @method startPreviewVideo\n     * @param  {HTMLElement} [videoContainer] The container to use for local video.\n     * @example\n     * ``` javascript\n     *  var container = document.getElementById('local-video');\n     *  client.media.startPreviewVideo(container);\n     * ```\n     */\n    startPreviewVideo (videoContainer) {\n      log.debug(API_LOG_TAG + 'media.startPreviewVideo: ', videoContainer)\n      dispatch(localVideoActions.startLocalVideo(videoContainer))\n    },\n\n    /**\n     * Stops the local video stream created in `startPreviewVideo`.\n     * @memberof media\n     * @public\n     * @requires call\n     * @method stopPreviewVideo\n     */\n    stopPreviewVideo () {\n      log.debug(API_LOG_TAG + 'media.stopPreviewVideo')\n      dispatch(localVideoActions.stopLocalVideo())\n    },\n\n    /**\n     * Initialize media to ensure webRTC support\n     * If you are calling this manually, you NEED to pass the call configs\n     *      to this API. Otherwise it will not properly check for screensharing\n     *      support.\n     * @memberof media\n     * @requires call\n     * @requires callMe\n     * @method init\n     * @param {Object} [options]\n     * @param {string} [options.chromeExtensionId] The ID of the Chrome Screenshare extension if your application will be using screenshare on Chrome.\n     */\n    init (options) {\n      log.debug(API_LOG_TAG + 'media.init: ', options)\n      dispatch(mediaActions.initMedia(options))\n    },\n\n    /**\n     * Prompt the user for permission to use their audio and/or video devices.\n     *\n     * @memberof media\n     * @public\n     * @requires call\n     * @method promptUserMedia\n     * @param {Object} [options]\n     * @param {boolean} [options.video] Whether to get permission for video.\n     * @param {boolean} [options.audio] Whether to get permission for audio.\n     */\n    promptUserMedia (options = {}) {\n      log.debug(API_LOG_TAG + 'media.promptUserMedia: ', options)\n      dispatch(mediaActions.promptUserMedia(options))\n    }\n  }\n\n  const callApi = {\n    /**\n     * Retrieves the state of calls made during the current session.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method getAll\n     * @return {Array} Call objects.\n     * @example\n     * let calls = client.call.getAll();\n     * let currentCalls = calls.filter(call => {\n     *     return call.state === client.call.states.IN_CALL;\n     * });\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'call.getAll')\n      return getCalls(getState())\n    },\n\n    /**\n     * Retrieves a call from state with a specific call ID.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method getById\n     * @param  {string} callId The ID of the call to retrieve.\n     * @return {Object} A call object.\n     */\n    getById (callId) {\n      log.debug(API_LOG_TAG + 'call.getById: ', callId)\n      return getCallById(getState(), callId)\n    },\n\n    /**\n     * Retrieves media support information. Requires `initMedia` to have\n     *      been called beforehand.\n     * @requires call\n     * @requires callMe\n     * @method getMediaInfo\n     * @param  {Object} state Redux state.\n     * @return {Object}\n     */\n    getMediaInfo () {\n      log.debug(API_LOG_TAG + 'call.getMediaInfo')\n      return getMediaInfo(getState())\n    },\n\n    /**\n     * Changes camera and microphone for the specified call.\n     * The call will use the current selected default devices.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method changeInputDevices\n     * @param {string} callId The ID of the call to act upon.\n     */\n    changeInputDevices (callId) {\n      log.debug(API_LOG_TAG + 'call.changeInputDevices: ', callId)\n      dispatch(devicesActions.changeInputDevices(callId))\n    },\n\n    /**\n     * Changes speaker used for call audio output.\n     * Supported on browser's that support HTMLMediaElement.setSinkId().\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method changeSpeaker\n     * @param  {string} speakerId ID of the speaker to use for call audio.\n     */\n    changeSpeaker (speakerId) {\n      log.debug(API_LOG_TAG + 'call.changeSpeaker: ', speakerId)\n      dispatch(devicesActions.changeSpeaker(speakerId))\n    },\n\n    /**\n     * States of a call.\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @property {string} IN_CALL The call is on-going.\n     * @property {string} RINGING The call has been established and is waiting for a user response.\n     * @property {string} ENDED The call has been terminated.\n     * @property {string} ON_HOLD The call has been put on hold locally.\n     * @property {string} ON_REMOTE_HOLD The call has been put on hold remotely.\n     * @example\n     * client.on('call:stateChange', function(callInfo) {\n     *      if(callInfo.state === client.call.states.ENDED) {\n     *          // Call has ended.\n     *      }\n     * });\n     */\n    states: CALL_STATES_FCS,\n\n    /**\n     * State of the media connection within a call.\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @property {string} NEW A new media connection process has started.\n     * @property {string} CHECKING Media is searching for a connection.\n     * @property {string} CONNECTED Media has found a connection, but may still be searching for a better connection to use.\n     * @property {string} COMPLETED Media has finished searching and been established. Audio/video should now be flowing on the call.\n     * @property {string} FAILED Media was not able to find a connection. Audio/video will not flow.\n     * @property {string} DISCONNECTED The media connection has lost its connection and is trying to recover.\n     * @property {string} CLOSED The media connection has shut down.\n     *\n     */\n    mediaStates: ICE_MEDIA_STATES,\n\n    /**\n     * Start an outgoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method make\n     * @param {string} callee Full user ID of the call recipient.\n     * @param {Object} [options] Call options.\n     * @param {string} [options.from] Sets the display name of the caller to be sent alongside the username of the user.\n     * @param {boolean} [options.isVideoEnabled=true] Whether to enable video during the call. If false, you cannot start video mid-call.\n     * @param {Object} [options.contact] Object containing firstName and lastName of caller.\n     * @param {boolean} [options.sendInitialVideo=false]  Whether to start the call sending the local video stream.\n     * @param {boolean} [options.isAudioEnabled=true] Whether to enable audio during the call. Setting this to false will disable audio for the call.\n     * @param {boolean} [options.webrtcdtls=true] Whether to enable DTLS for WebRTC calls.\n     * @param {Object} [options.videoResolution] The object to configure the local video resolution.\n     * @param {number} [options.videoResolution.height] The height in pixels of the local video.\n     * @param {number} [options.videoResolution.width] The width in pixels of the local video.\n     * @param {Array.<{name: string, value:string}>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n     * @param {HTMLElement} [options.remoteVideoContainer] The HTML element to use as a container for the remote video.\n     * @param {HTMLElement} [options.localVideoContainer] The HTML element to use as a container for the local video.\n     * @param {boolean} [options.normalizeAddress=false] Whether to enable normalization of callee address.\n     * @return {string} Id of the outgoing call.\n     * @example\n     * let remoteContainer = document.getElementById('remote-container');\n     * // Start a video call that only shows the remote media (not local).\n     * let callId = client.call.make('sampleUser@example.com', {\n     *     isVideoEnabled: true,\n     *     sendInitialVideo: true,\n     *     remoteVideoContainer: remoteContainer,\n     *     customParameters: [\n     *       {\n     *         \"name\": \"X-GPS\",\n     *         \"value\": \"42.686032,23.344565\"\n     *       }\n     *     ]\n     * });\n     */\n    make (callee, options = {}) {\n      log.debug(API_LOG_TAG + 'call.make: ', callee, options)\n      const callOptions = [\n        'from',\n        'contact',\n        'isAudioEnabled',\n        'isVideoEnabled',\n        'sendInitialVideo',\n        'webrtcdtls',\n        'remoteVideoContainer',\n        'localVideoContainer',\n        'normalizeAddress',\n        'videoResolution',\n        'customParameters',\n        // Internal options.\n        'sendScreenShare',\n        'mediaSourceId'\n      ]\n      // Pick out the valid call options.\n      options = pick(callOptions, options)\n\n      options.contact = defaults(\n        {\n          firstName: '',\n          lastName: ''\n        },\n        options.contact\n      )\n\n      const config = getConfiguration(getState())\n      if (options.normalizeAddress || config.call.normalizeDestination) {\n        // Normalize callee addresses\n        callee = normalizeSipUri(callee, getDomain(getState()))\n        log.info('Address normalized to: ', callee)\n      }\n\n      // Create our own call ID for storing in state.\n      const callId = uuidV4()\n      dispatch(callsActions.makeCall(callee, callId, options))\n      return callId\n    },\n\n    /**\n     * Answer an incoming call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method answer\n     * @param {string} callId The ID of the call to answer.\n     * @param {Object} [options] Call options.\n     * @param {boolean} [options.isVideoEnabled] Whether to enable video during the call. If false, you cannot start video mid-call.\n     * @param {boolean} [options.sendInitialVideo] Whether to start the call sending the local video stream.\n     * @param {boolean} [options.isAudioEnabled=true] Whether to enable audio during the call. Setting this to false will disable audio for the call.\n     * @param {Object} [options.videoResolution] The object to configure the local video resolution.\n     * @param {number} [options.videoResolution.height] The height in pixels of the local video.\n     * @param {number} [options.videoResolution.width] The width in pixels of the local video.\n     * @param {HTMLElement} [options.localVideoContainer] The HTML element to use as a container for the local video.\n     * @param {HTMLElement} [options.remoteVideoContainer] The HTML element to use as a container for the remote video.\n     */\n    answer (callId, options) {\n      log.debug(API_LOG_TAG + 'call.answer: ', callId, options)\n      dispatch(callsActions.answerCall(callId, options))\n    },\n\n    /**\n     * Ignore an incoming call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method ignore\n     * @param {string} callId The ID of the call to ignore.\n     */\n    ignore (callId) {\n      log.debug(API_LOG_TAG + 'call.ignore: ', callId)\n      dispatch(callsActions.ignoreCall(callId))\n    },\n\n    /**\n     * Reject an incoming call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method reject\n     * @param {string} callId The ID of the call to reject.\n     */\n    reject (callId) {\n      log.debug(API_LOG_TAG + 'call.reject: ', callId)\n      dispatch(callsActions.rejectCall(callId))\n    },\n\n    /**\n     * End an on-going call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method end\n     * @param {string} callId Id of the call to end.\n     */\n    end (callId) {\n      log.debug(API_LOG_TAG + 'call.end: ', callId)\n      dispatch(callsActions.endCall(callId))\n    },\n\n    /*\n     *  Mid-Call operations.\n     */\n\n    /**\n     * Mute the local audio stream on an ongoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method mute\n     * @param {string} callId The ID of the call being acted on.\n     */\n    mute (callId) {\n      log.debug(API_LOG_TAG + 'call.mute: ', callId)\n      dispatch(callsActions.muteCall(callId))\n    },\n\n    /**\n     * Unmute the local audio stream on an ongoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method unmute\n     * @param {string} callId The ID of the call being acted on.\n     */\n    unmute (callId) {\n      log.debug(API_LOG_TAG + 'call.unmute: ', callId)\n      dispatch(callsActions.unMuteCall(callId))\n    },\n\n    /**\n     * Silence the remote audio on an ongoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method silence\n     * @param {string} callId The ID of the call being acted on.\n     */\n    silence (callId) {\n      log.debug(API_LOG_TAG + 'call.silence: ', callId)\n      dispatch(callsActions.silenceCall(callId))\n    },\n\n    /**\n     * Un-silence the remote audio on an ongoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method unsilence\n     * @param {string} callId The ID of the call being acted on.\n     */\n    unsilence (callId) {\n      log.debug(API_LOG_TAG + 'call.unsilence: ', callId)\n      dispatch(callsActions.unSilenceCall(callId))\n    },\n\n    /**\n     * Retrieves a call's customParameters.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method getCustomParameters\n     * @param  {string}    callId The ID of the call to retrieve custom parameters.\n     * @return {Array.<{name: string, value:string}>} Custom parameters of the call.\n     */\n    getCustomParameters (callId) {\n      log.debug(API_LOG_TAG + 'call.getCustomParameters: ', callId)\n      return getCustomParametersById(getState(), callId)\n    },\n\n    /**\n     * Set custom parameters on an ongoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method setCustomParameters\n     * @param {string} callId The ID of the call being acted on.\n     * @param {Array.<{name: string, value:string}>} customParameters Custom parameters for the call.\n     * @example\n     * // Set custom parameters for call.\n     * client.call.setCustomParameters(\n     *    callId,\n     *    [\n     *      { \"name\": \"X-GPS\",\n     *        \"value\": \"42.686032,23.344565\"\n     *      }\n     *    ]\n     * });\n     */\n    setCustomParameters (callId, params = {}) {\n      log.debug(API_LOG_TAG + 'call.setCustomParameters: ', callId, params)\n      dispatch(callsActions.setCustomParameters(callId, params))\n    },\n\n    /**\n     * Start local video stream for an ongoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method startVideo\n     * @param {string} callId Id of the call being acted on.\n     * @param {Object} [options] Options for the video stream.\n     * @param {Object} [options.videoResolution] The video resolution configuration object.\n     * @param {number} [options.videoResolution.height] The height of the outgoing video in pixels.\n     * @param {number} [options.videoResolution.width] The width of the outgoing video in pixels.\n     */\n    startVideo (callId, options = {}) {\n      log.debug(API_LOG_TAG + 'call.startVideo: ', callId, options)\n      dispatch(callsActions.startVideo(callId, options))\n    },\n\n    /**\n     * Stop local video for an ongoing call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method stopVideo\n     * @param {string} callId Id of the call being acted on.\n     */\n    stopVideo (callId) {\n      log.debug(API_LOG_TAG + 'call.stopVideo: ', callId)\n      dispatch(callsActions.stopVideo(callId))\n    },\n\n    /**\n     * Put an ongoing call on hold.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method hold\n     * @param {string} callId Id of the call being acted on.\n     */\n    hold (callId) {\n      log.debug(API_LOG_TAG + 'call.hold: ', callId)\n      dispatch(callsActions.holdCall(callId))\n    },\n\n    /**\n     * Return a held call to ongoing.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method unhold\n     * @param {string} callId Id of the call being acted on.\n     */\n    unhold (callId) {\n      log.debug(API_LOG_TAG + 'call.unhold: ', callId)\n      dispatch(callsActions.unHoldCall(callId))\n    },\n\n    /**\n     * Starts sharing a screen over a call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method startScreenshare\n     * @param {string} callId Id of the call being acted on.\n     * @param  {Object} options\n     * @param  {string} options.mediaSourceId Id of the media screen to share.\n     * @param  {Number} [options.height=768] The height of the video stream to send.\n     * @param  {Number} [options.width=1024] The width of the video stream to send.\n     * @param  {Number} [options.frameRate=15] The number of frames per second to request.\n     */\n    startScreenshare (callId, options = {}) {\n      log.debug(API_LOG_TAG + 'call.startScreenshare: ', callId, options)\n      dispatch(callsActions.startScreenshare(callId, options))\n    },\n\n    /**\n     * Stops sharing a screen over a call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method stopScreenshare\n     * @param {string} callId Id of the call being acted on.\n     */\n    stopScreenshare (callId) {\n      log.debug(API_LOG_TAG + 'call.stopScreenshare: ', callId)\n      dispatch(callsActions.stopScreenshare(callId))\n    },\n\n    /**\n     * Send a DTMF tone over a call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method sendDTMF\n     * @param {string} callId Id of the call being acted on.\n     * @param {number} tone DTMF tone to send. Valid values are [0,1,2,3,4,5,6,7,8,9,#].\n     *\n     */\n    sendDTMF (callId, tone) {\n      log.debug(API_LOG_TAG + 'call.sendDTMF: ', callId, tone)\n      dispatch(callsActions.sendDTMF(callId, tone))\n    },\n\n    /**\n     * Explicitly send the current custom parameters for a call.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method sendCustomParameters\n     * @param {string} callId Id of the call being acted on.\n     */\n    sendCustomParameters (callId) {\n      log.debug(API_LOG_TAG + 'call.sendCustomParameters: ', callId)\n      dispatch(callsActions.sendCustomParameters(callId))\n    },\n\n    /**\n     * Forward an incoming call to another user.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method forwardCall\n     * @param {string} callId Id of the call being acted on.\n     * @param {string} destination The user to forward the call to.\n     */\n    forwardCall (callId, destination) {\n      log.debug(API_LOG_TAG + 'call.forwardCall: ', callId, destination)\n      dispatch(callsActions.forwardCall(callId, destination))\n    },\n\n    /**\n     * Transfer a call to another user.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method directTransfer\n     * @param {string} callId Id of the call being acted on.\n     * @param {string} destination The user to transfer the call to.\n     */\n    directTransfer (callId, destination) {\n      log.debug(API_LOG_TAG + 'call.directTransfer: ', callId, destination)\n      dispatch(callsActions.directTransfer(callId, destination))\n    },\n\n    /**\n     * Transfer a call to another user.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method consultativeTransfer\n     * @param {string} callId Id of the call being acted on.\n     * @param {string} destinationCallId The callId to transfer the call to.\n     */\n    consultativeTransfer (callId, destinationCallId) {\n      log.debug(API_LOG_TAG + 'call.consultativeTransfer: ', callId, destinationCallId)\n      dispatch(callsActions.consultativeTransfer(callId, destinationCallId))\n    },\n\n    /**\n     * Join two calls (both must be on hold and audio only). The joined call can be referenced via callId.\n     *\n     * @public\n     * @memberof Calls\n     * @requires call\n     * @method join\n     * @param {string} callId Id of the call being acted on.\n     * @param {string} destinationCallId The callId to join the call with.\n     */\n    join (callId, destinationCallId) {\n      log.debug(API_LOG_TAG + 'call.join: ', callId, destinationCallId)\n      dispatch(callsActions.joinCall(callId, destinationCallId))\n    },\n\n    /**\n     * Retrieves the resolution of the remote video of a call.\n     * @memberof Calls\n     * @requires call\n     * @requires callMe\n     * @method getRemoteVideoResolutions\n     * @param  {string} callId Id of the call being acted on.\n     * @return {Object} Height and width properties of the remote video.\n     */\n    getRemoteVideoResolutions (callId) {\n      log.debug(API_LOG_TAG + 'call.getRemoteVideoResolutions: ', callId)\n      /* Implement this in the API temporarily, since this should be done\n       *   automatically on a state change, but we can't due to FCS timing\n       *   issues. See KAA-424.\n       */\n      const call = getCallById(getState(), callId)\n      // If the remote side is sending video and we're rendering it..\n      if (call && call.remoteVideoState.indexOf('send') > -1 && call.remoteVideoContainer) {\n        let videoTag\n        // Find the video tag.\n        // Turn the nodeList into a real array so IE11 can us forEach\n        var childNodes = Array.prototype.slice.call(call.remoteVideoContainer.childNodes)\n        childNodes.forEach(function (node) {\n          if (node.tagName === 'VIDEO') {\n            videoTag = node\n          }\n        })\n\n        if (videoTag) {\n          return {\n            height: videoTag.videoHeight,\n            width: videoTag.videoWidth\n          }\n        }\n      }\n    }\n  }\n\n  const audioBridgeApi = {\n    /**\n     * Creates a local bridge that can be used to join audio calls.\n     * @public\n     * @memberof AudioBridge\n     * @method create\n     * @return {string} ID used to identify the bridge.\n     */\n    create () {\n      log.debug(API_LOG_TAG + 'audioBridge.create')\n      // Create our own ID for storing in state.\n      const bridgeId = uuidV4()\n      dispatch(audioBridgeActions.createAudioBridge(bridgeId))\n      return bridgeId\n    },\n\n    /**\n     * Closes an existing audio bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method close\n     * @param  {string} bridgeId Identifier for the bridge to act on.\n     */\n    close (bridgeId) {\n      log.debug(API_LOG_TAG + 'audioBridge.close: ', bridgeId)\n      dispatch(audioBridgeActions.closeAudioBridge(bridgeId))\n    },\n\n    /**\n     * Adds a call to the specified local audio bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method addCall\n     * @param  {string} bridgeId Identifier for the bridge to act on.\n     * @param  {string} callId Identifier for the call to add.\n     */\n    addCall (bridgeId, callId) {\n      log.debug(API_LOG_TAG + 'audioBridge.addCall: ', bridgeId, callId)\n      dispatch(audioBridgeActions.addCallToBridge(bridgeId, callId))\n    },\n\n    /**\n     * Remove a specified call from the local audio bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method removeCall\n     * @param  {string} bridgeId Identifier for the bridge to act on.\n     * @param  {string} callId Identifier for the call to remove.\n     */\n    removeCall (bridgeId, callId) {\n      log.debug(API_LOG_TAG + 'audioBridge.removeCall: ', bridgeId, callId)\n      dispatch(audioBridgeActions.removeCallFromBridge(bridgeId, callId))\n    },\n\n    /**\n     * Mute the local audio for all of the calls on the bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method mute\n     * @param  {string} bridgeId Identifier for the bridge to act on.\n     */\n    mute (bridgeId) {\n      log.debug(API_LOG_TAG + 'audioBridge.mute: ', bridgeId)\n      dispatch(audioBridgeActions.muteAudioBridge(bridgeId))\n    },\n\n    /**\n     * Unmute the local audio for all of the calls on the bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method unmute\n     * @param  {string} bridgeId Identifier for the bridge to act on.\n     */\n    unmute (bridgeId) {\n      log.debug(API_LOG_TAG + 'audioBridge.unmute: ', bridgeId)\n      dispatch(audioBridgeActions.unmuteAudioBridge(bridgeId))\n    },\n\n    /**\n     * Silence the remote audio for all of the calls on the bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method silence\n     * @param  {string} bridgeId Identifier for the bridge to act on.\n     */\n    silence (bridgeId) {\n      log.debug(API_LOG_TAG + 'audioBridge.silence: ', bridgeId)\n      dispatch(audioBridgeActions.silenceAudioBridge(bridgeId))\n    },\n\n    /**\n     * Un-silence the remote audio for all of the calls on the bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method unsilence\n     * @param  {string} bridgeId Identifier for the bridge to act on.\n     */\n    unsilence (bridgeId) {\n      log.debug(API_LOG_TAG + 'audioBridge.unsilence: ', bridgeId)\n      dispatch(audioBridgeActions.unsilenceAudioBridge(bridgeId))\n    },\n\n    /**\n     * Retrieve information about audio bridges.\n     * @public\n     * @memberof AudioBridge\n     * @method getAll\n     * @return {Array} List of active audio bridges.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'audioBridge.getAll')\n      return getAudioBridges(getState())\n    },\n\n    /**\n     * Retrieve all calls currently part of an audio bridge.\n     * @public\n     * @memberof AudioBridge\n     * @method getBridgeCalls\n     * @param {string} bridgeId The ID of the bridge whose calls we wish to retrieve\n     * @return {Array} List of calls currently part of the specified audio bridge.\n     */\n    getBridgeCalls (bridgeId) {\n      log.debug(API_LOG_TAG + 'audioBridge.getBridgeCalls: ', bridgeId)\n      return getBridgeCalls(getState(), bridgeId)\n    }\n  }\n\n  // TODO: Split up this file. It's getting too large.\n  return {\n    call: callApi,\n    media: mediaApi,\n    audioBridge: audioBridgeApi\n  }\n}\n","/**\n * Extracts the domain from an address if an @ symbol exists and isn't at the start or end of the address.\n * @param {string} addressString The address string to extract the domain from (if it exists).\n * @returns {string} The extracted domain. Empty string of none found.\n */\nfunction extractDomainFromAddress (addressString) {\n  const indexOfAtSymbol = addressString.lastIndexOf('@')\n  if (indexOfAtSymbol !== 0 && indexOfAtSymbol !== addressString.length - 1) {\n    // If '@' symbol found in middle of addressString, split it.\n    if (indexOfAtSymbol !== -1) {\n      return addressString.substr(indexOfAtSymbol + 1)\n    }\n  }\n  return ''\n}\n\n/**\n * Determines which address and domain to use depending on whether the address string contains a domain or not.\n * @param {string} addressString The address string to examine and extract a domain from (if any).\n * @param {string} defaultDomainString The domain to use if the address string does not contain a domain in it.\n * @returns {Object} An object containing the correct address and domain to use.\n */\nfunction separateAddressAndDomain (addressString, defaultDomainString) {\n  const extractedDomain = extractDomainFromAddress(addressString)\n  // If a domain was extracted from the address, use that as the domain and strip it from the address.\n  if (extractedDomain) {\n    return {\n      address: addressString.substr(0, addressString.length - extractedDomain.length - 1),\n      domain: extractedDomain\n    }\n  } else {\n    return {\n      address: addressString,\n      domain: defaultDomainString\n    }\n  }\n}\n\n/**\n * Extracts any pre-pended data before a \":\" (if it exists) from the beginning of a string.\n * @param {string} inputString The string to remove pre-pended data from.\n * @returns {string} The pre-pended data string.\n */\nfunction extractPrependedData (inputString) {\n  const prependedDataMatches = inputString.match(/^.*:/g)\n  if (prependedDataMatches && prependedDataMatches[0]) {\n    return prependedDataMatches[0]\n  } else {\n    return ''\n  }\n}\n\n/**\n * Finds the leading special characters (\"#\", \"+\", \"*\") of an address if it is a phone number.\n * If the address contains letters or any non-visual-separator characters,\n *  it is not a phone number and no leading special characters will be found.\n * @param {string} addressString The address string to find the leading characters of (if any).\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain a domain.\n * @returns {string} The leading special characters as one string. Empty string if none found.\n */\nfunction extractLeadingSpecialCharacters (addressString) {\n  // A single or group of contiguous characters are considered leading character/s if it is  the following:\n  // - starts at the beginning of the string - ^\n  // - is any of the following characters - [#+*]+\n  // - is followed by a digit or \"(\" - [\\d|(]\n  // - is followed by any number of only digits and visual separators - [\\d \\-.()+]*$\n  const potentialLeadingChars = addressString.match(/^[#+*]+[\\d|(][\\d \\-.()+]*$/g)\n  if (potentialLeadingChars && potentialLeadingChars[0]) {\n    // Guaranteed to have a match for regex [#+*]+ since we have potentialLeadingChars\n    // which was a match for a similar regex and we are simply extracting the leading characters part.\n    const actualLeadingChars = potentialLeadingChars[0].match(/[#+*]+/g)\n    return actualLeadingChars[0]\n  }\n  return ''\n}\n\n/**\n * Outputs a new string without its phone number visual separators (\"-\", \".\", \"(\", \")\", \"+\").\n * @param {string} inputString The string to remove visual separators from.\n * @returns {string} A new string without visual separators.\n */\nfunction withoutVisualSeparators (inputString) {\n  return inputString.replace(/[ \\-.()+]/g, '')\n}\n\n/**\n * Determines whether a string should be considered a phone number or not.\n * @param {string} addressString The address string to check.\n *  The addressString must not contain any pre-pended data such as \"sip:\"\n *  The addressString must not contain any leading special characters.\n *  The addressString must not contain a domain.\n * @returns {boolean} True if the input string is a phone number. False if it is not.\n */\nfunction isPhoneNumber (addressString) {\n  const cleanNumber = withoutVisualSeparators(addressString)\n  const phoneNumberMatch = cleanNumber.match(/^\\d+$/g)\n  return phoneNumberMatch && phoneNumberMatch.length === 1\n}\n\n/**\n * Processes the address string and returns the correct output.\n * If the address is a phone number, visual separators are removed.\n * Otherwise, it will just return the address as-is.\n * @param {string} addressString The address string to process.\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain any leading special characters (if it is a phone number).\n *  The addressString must not contain a domain.\n * @returns {string} A phone number without visual-separators or the addressString as-is.\n */\nfunction processAddress (addressString) {\n  return isPhoneNumber(addressString) ? withoutVisualSeparators(addressString) : addressString\n}\n\n/**\n * Processes the domain string and returns the correct output.\n * Adds an \"@\" symbol if it isn't present at the beginning of the domain.\n * @param {string} domainString The domain string to process.\n * @returns {string} The domain with \"@\" symbol at the beginning if it doesn't exist.\n */\nfunction processDomain (domainString) {\n  if (domainString === '' || domainString === undefined) {\n    return ''\n  } else if (domainString.indexOf('@') === 0) {\n    return domainString\n  } else {\n    return '@' + domainString\n  }\n}\n\n/**\n *The function takes in the input dial string and domain address of the user, performs a normalization process based on the phone number handling normalization rules\n * @function normalizeSipUri\n * @param {string} address   It contains the input dial string the user dials in or the callee address\n * @param {string} domain    It contains the user's domain address\n * @returns {string} output  The output which is the normalized callee address/phone number\n */\nexport function normalizeSipUri (address, domain) {\n  // Remove leading and trailing white spaces.\n  address = address.trim()\n\n  // Extract domain.\n  const resultingAddressAndDomain = separateAddressAndDomain(address, domain)\n  domain = resultingAddressAndDomain.domain\n  address = resultingAddressAndDomain.address\n\n  // Extract pre-pended \"sip:\".\n  const prepend = extractPrependedData(address)\n  address = address.substr(prepend.length)\n\n  // Extract leading characters.\n  const leadingChars = extractLeadingSpecialCharacters(address)\n  address = address.substr(leadingChars.length)\n\n  // Process and build parts into final output in the form of `<prepend>:<leadingChars><address>@<domain>`.\n  return 'sip:' + leadingChars + processAddress(address) + processDomain(domain)\n}\n","import calls from './calls'\nimport devices from './devices'\nimport localVideo from './localVideo'\nimport media from './media'\nimport audioBridges from './audioBridges'\n\n/**\n * Combine subreducers into a single call reducer.\n */\nexport default function (state = {}, action) {\n  return {\n    calls: calls(state.calls, action),\n    devices: devices(state.devices, action),\n    media: media(state.media, action),\n    localVideo: localVideo(state.localVideo, action),\n    audioBridges: audioBridges(state.audioBridges, action)\n  }\n}\n","import * as actionTypes from '../actionTypes'\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat } from 'lodash/fp'\n\n// Top-tier reducers: Handles the whole call state.\nconst reducers = {}\n// Call-tier reducers: Handles only a specific call's state.\nconst callReducers = {}\n\n/*\n * Top-tier reducers.\n * Receives the entire call substate as state.\n */\n\n/*\n * Reducer to handle MAKE_CALL action.\n * Create a new call object and add it to state.\n */\nreducers[actionTypes.MAKE_CALL] = {\n  next (state, action) {\n    const newCall = {\n      ...action.payload.callInfo,\n      state: 'INITIATING',\n      muted: false,\n      silenced: false,\n      direction: 'outgoing',\n      isScreensharing: action.payload.callInfo.sendScreenShare || false,\n      originalRemoteParticipant: {\n        displayNumber: action.payload.callInfo.to\n      },\n      id: action.payload.callId\n    }\n    return concat(state, newCall)\n  }\n}\n\n/*\n * Reducer to handle CALL_INCOMING actions.\n * Cannot have an error 'incoming call'. Add the\n *      incoming call to state.\n */\nreducers[actionTypes.CALL_INCOMING] = {\n  next (state, action) {\n    const newCall = {\n      state: 'RINGING',\n      muted: false,\n      silenced: false,\n      direction: 'incoming',\n      isScreensharing: false,\n      id: action.payload.callId,\n      wrtcsSessionId: action.payload.callInfo.wrtcsSessionId,\n      ...action.payload.callInfo\n    }\n    return concat(state, newCall)\n  }\n}\n\nreducers[actionTypes.JOIN_CALL_FINISH] = {\n  next (state, action) {\n    const newCall = {\n      ...action.payload.callInfo,\n      direction: 'outgoing',\n      id: action.payload.callId\n    }\n    return concat(state, newCall)\n  }\n}\n\n/*\n * Call-tier reducers.\n * Receive a single call's state as state.\n */\n\n/*\n * Reducer to handle SET_CUSTOM_PARAMETERS actions.\n */\ncallReducers[actionTypes.SET_CUSTOM_PARAMETERS] = {\n  next (state, action) {\n    return {\n      ...state,\n      customParameters: action.payload.customParameters\n    }\n  }\n}\n\n/*\n * Reducer to handle MAKE_CALL_FINISH actions.\n * In both cases, update the existing call in state with\n *      the new call state.\n */\ncallReducers[actionTypes.MAKE_CALL_FINISH] = {\n  next (state, action) {\n    const callInfo = action.payload.callInfo\n    return {\n      ...state,\n      ...callInfo,\n      state: 'INITIATED',\n      sendingVideo: callInfo.sendInitialVideo || false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      ...action.payload.callInfo,\n      state: 'ENDED',\n      error: action.payload\n    }\n  }\n}\n\n/*\n * Reducer to handle ANSWER_CALL_FINISH actions.\n * Only intended to set call info, not current state.\n */\ncallReducers[actionTypes.ANSWER_CALL_FINISH] = {\n  next (state, action) {\n    const callInfo = action.payload.callInfo\n    return {\n      ...state,\n      ...callInfo,\n      sendingVideo: callInfo.sendInitialVideo || false\n      // State change action sets the call's current state.\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      ...action.payload.callInfo,\n      error: action.payload\n      // State change action sets the call's current state.\n    }\n  }\n}\n\n/*\n * Reducer to handle ANSWER_CALL actions.\n * Only intended to set call info, not current state.\n */\ncallReducers[actionTypes.ANSWER_CALL] = {\n  next (state, action) {\n    const callInfo = action.payload.callInfo\n    return {\n      ...state,\n      ...callInfo,\n      sendingVideo: callInfo.sendInitialVideo || false\n      // State change action sets the call's current state.\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      ...action.payload.callInfo,\n      error: action.payload\n      // State change action sets the call's current state.\n    }\n  }\n}\n\n/*\n * Reducer to handle CALL_STATE_CHANGE actions.\n * Change the specified call's state.\n */\ncallReducers[actionTypes.CALL_STATE_CHANGE] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload.callInfo,\n      state: action.payload.state,\n      transition: action.payload.transition\n    }\n  }\n}\n\n/*\n * Reducer to handle media state change actions.\n * Change the specified call's media state.\n */\ncallReducers[actionTypes.CALL_MEDIA_STATE_CHANGE] = {\n  next (state, action) {\n    return {\n      ...state,\n      mediaState: action.payload.mediaState\n    }\n  }\n}\n\n/*\n * Reducer to handle MUTE_CALL_FINISH actions.\n * Change the specified call's state to muted.\n */\ncallReducers[actionTypes.MUTE_CALL_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      muted: true\n    }\n  }\n}\n\n/*\n * Reducer to handle UNMUTE_CALL_FINISH actions.\n * Change the specified call's state to not muted.\n */\ncallReducers[actionTypes.UNMUTE_CALL_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      muted: false\n    }\n  }\n}\n\n/*\n * Reducer to handle SILENCE_CALL_FINISH actions.\n * Change the specified call's state to silenced.\n */\ncallReducers[actionTypes.SILENCE_CALL_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      silenced: true\n    }\n  }\n}\n\n/*\n * Reducer to handle UNSILENCE_CALL_FINISH actions.\n * Change the specified call's state to not silenced.\n */\ncallReducers[actionTypes.UNSILENCE_CALL_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      silenced: false\n    }\n  }\n}\n\n/*\n * Handles changing the call's screensharing state.\n */\ncallReducers[actionTypes.START_SCREENSHARE_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      isScreensharing: true\n    }\n  }\n}\n\n/*\n * Handles changing the call's screensharing state.\n */\ncallReducers[actionTypes.STOP_SCREENSHARE_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      isScreensharing: false\n    }\n  }\n}\n\n/*\n * Handles changing the call's video state.\n */\ncallReducers[actionTypes.START_VIDEO_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      sendingVideo: true\n    }\n  }\n}\n\n/*\n * Handles changing the call's video state.\n */\ncallReducers[actionTypes.STOP_VIDEO_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      sendingVideo: false\n    }\n  }\n}\n\n/*\n * Combine all of the call-tier reducers into a single reducer,\n *      each with a default state of empty object.\n */\nconst callReducer = handleActions(callReducers, {})\n\n// Actions routed to call-tier reducers.\nconst specificCallActions = combineActions(\n  actionTypes.MAKE_CALL_FINISH,\n  actionTypes.ANSWER_CALL,\n  actionTypes.ANSWER_CALL_FINISH,\n  actionTypes.CALL_STATE_CHANGE,\n  actionTypes.CALL_MEDIA_STATE_CHANGE,\n  actionTypes.MUTE_CALL_FINISH,\n  actionTypes.UNMUTE_CALL_FINISH,\n  actionTypes.SILENCE_CALL_FINISH,\n  actionTypes.UNSILENCE_CALL_FINISH,\n  actionTypes.START_SCREENSHARE_FINISH,\n  actionTypes.STOP_SCREENSHARE_FINISH,\n  actionTypes.START_VIDEO_FINISH,\n  actionTypes.STOP_VIDEO_FINISH,\n  actionTypes.SET_CUSTOM_PARAMETERS\n)\n\n/*\n * Reducer to handle specific call actions.\n * Routes the actions to the call-tier reducers.\n */\nreducers[specificCallActions] = (state, action) => {\n  return state.map(function (call) {\n    // Only update the call related to the action.\n    if (call.id === action.payload.callId) {\n      return callReducer(call, action)\n    } else {\n      return call\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","import * as actionTypes from '../actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\n// Replace old devices with newly checked devices.\nreducers[actionTypes.CHECK_DEVICES_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\nreducers[actionTypes.SET_DEFAULT_DEVICES_FINISH] = {\n  next (state, action) {\n    // Replace the default devices with the newly set defaults.\n    return {\n      ...state,\n      defaults: {\n        ...state.defaults,\n        ...action.payload\n      }\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import * as actionTypes from '../actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst defaultState = {\n  displaying: false\n}\n\nconst reducers = {}\n\n// Store information about the local video being displayed.\nreducers[actionTypes.START_LOCAL_VIDEO_FINISH] = {\n  next (state, action) {\n    return {\n      displaying: true,\n      container: action.payload\n    }\n  }\n}\n\n// Remove info / Return to default state.\nreducers[actionTypes.STOP_LOCAL_VIDEO_FINISH] = {\n  next () {\n    return defaultState\n  }\n}\n\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","import * as actionTypes from '../actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\n// Replace old media info with new info.\nreducers[actionTypes.INIT_MEDIA_FINISH] = {\n  next (state, action) {\n    // If media state has been set, don't reset it. results from second+\n    //      initMedia attempt may not be accurate.\n    if (!state) {\n      return action.payload\n    } else {\n      return state\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, '')\nexport default reducer\n","import * as actionTypes from '../actionTypes'\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat } from 'lodash/fp'\n\n// Top-tier reducers: Handles the whole audioBridge state.\nconst reducers = {}\n// Bridge-tier reducers: Handles only a specific bridge's state.\nconst bridgeReducers = {}\n\nreducers[actionTypes.CREATE_AUDIO_BRIDGE_FINISH] = {\n  next (state, action) {\n    const newBridge = {\n      id: action.payload.bridgeId,\n      options: action.payload.options,\n      muted: false,\n      silenced: false,\n      calls: [],\n      status: 'OPEN'\n    }\n\n    return concat(state, newBridge)\n  }\n}\n\n/*\n * Bridge-tier reducers.\n * Receive a single bridge's state as state.\n */\n\nbridgeReducers[actionTypes.CLOSE_AUDIO_BRIDGE_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      status: 'CLOSED'\n    }\n  }\n}\n\nbridgeReducers[actionTypes.MUTE_AUDIO_BRIDGE_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      muted: true\n    }\n  }\n}\n\nbridgeReducers[actionTypes.UNMUTE_AUDIO_BRIDGE_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      muted: false\n    }\n  }\n}\n\nbridgeReducers[actionTypes.SILENCE_AUDIO_BRIDGE_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      silenced: true\n    }\n  }\n}\n\nbridgeReducers[actionTypes.UNSILENCE_AUDIO_BRIDGE_FINISH] = {\n  next (state) {\n    return {\n      ...state,\n      silenced: false\n    }\n  }\n}\n\nbridgeReducers[actionTypes.UPDATE_AUDIO_BRIDGE_CALLS] = {\n  next (state, action) {\n    return {\n      ...state,\n      calls: action.payload.calls\n    }\n  }\n}\n\n/*\n * Combine all of the bridge-tier reducers into a single reducer,\n *      each with a default state of empty object.\n */\nconst bridgeReducer = handleActions(bridgeReducers, {})\n\n// Actions routed to bridge-tier reducers.\nconst specificBridgeActions = combineActions(\n  actionTypes.CLOSE_AUDIO_BRIDGE_FINISH,\n  actionTypes.MUTE_AUDIO_BRIDGE_FINISH,\n  actionTypes.UNMUTE_AUDIO_BRIDGE_FINISH,\n  actionTypes.SILENCE_AUDIO_BRIDGE_FINISH,\n  actionTypes.UNSILENCE_AUDIO_BRIDGE_FINISH,\n  actionTypes.UPDATE_AUDIO_BRIDGE_CALLS\n)\n\n/*\n * Reducer to handle specific bridge actions.\n * Routes the actions to the bridge-tier reducers.\n */\nreducers[specificBridgeActions] = (state, action) => {\n  return state.map(function (bridge) {\n    if (bridge.id === action.payload.bridgeId) {\n      return bridgeReducer(bridge, action)\n    } else {\n      return bridge\n    }\n  })\n}\n\n/*\n * Combine all of the top-tier reducers into a single reducer,\n *      each with a default state of an empty object.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\n/**\n * Helper function for call error events.\n * @method callErrorEvent\n * @param  {Object} action\n * @return {Object}\n */\nfunction callErrorEvent (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.CALL_ERROR,\n      args: { callId: action.payload.callId, error: action.payload }\n    }\n  }\n}\n\nvar events = {}\n\n// Actions that only emit an event on an error action.\n// For most, callStateChange emits the success event.\nevents[actionTypes.IGNORE_CALL_FINISH] = callErrorEvent\nevents[actionTypes.REJECT_CALL_FINISH] = callErrorEvent\nevents[actionTypes.END_CALL_FINISH] = callErrorEvent\nevents[actionTypes.START_VIDEO_FINISH] = callErrorEvent\nevents[actionTypes.STOP_VIDEO_FINISH] = callErrorEvent\nevents[actionTypes.HOLD_CALL_FINISH] = callErrorEvent\nevents[actionTypes.UNHOLD_CALL_FINISH] = callErrorEvent\nevents[actionTypes.SEND_DTMF_FINISH] = callErrorEvent\nevents[actionTypes.SEND_CUSTOM_PARAMETERS_FINISH] = callErrorEvent\n\nevents[actionTypes.MAKE_CALL_FINISH] = function (action) {\n  if (action.error) {\n    // Call start error event.\n    return callErrorEvent(action)\n  } else {\n    // Call start event.\n    return {\n      type: eventTypes.CALL_STARTED,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\nevents[actionTypes.CALL_INCOMING] = function (action) {\n  return {\n    type: eventTypes.CALL_INCOMING,\n    args: { callId: action.payload.callId }\n  }\n}\n\nevents[actionTypes.FORWARD_CALL_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_FORWARDED,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\nevents[actionTypes.CALL_STATE_CHANGE] = function (action) {\n  return {\n    type: eventTypes.CALL_STATE_CHANGE,\n    args: {\n      callId: action.payload.callId,\n      state: action.payload.state,\n      transition: action.payload.transition\n    }\n  }\n}\n\nevents[actionTypes.CALL_MEDIA_STATE_CHANGE] = function (action) {\n  return {\n    type: eventTypes.CALL_MEDIA_STATE_CHANGE,\n    args: {\n      callId: action.payload.callId,\n      mediaState: action.payload.mediaState\n    }\n  }\n}\n\nevents[actionTypes.ANSWER_CALL_FINISH] = function (action) {\n  // For a successful answer call, an event is emitted\n  //      as a stateChanged event.\n  if (action.error) {\n    // Call start error event.\n    return callErrorEvent(action)\n  }\n}\n\nevents[actionTypes.JOIN_CALL_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_JOIN,\n      args: {\n        callId: action.payload.callId,\n        joinedCalls: action.payload.params.joinedCalls\n      }\n    }\n  }\n}\n\nevents[actionTypes.MUTE_CALL_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_STATE_CHANGE,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\nevents[actionTypes.UNMUTE_CALL_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_STATE_CHANGE,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\nevents[actionTypes.SILENCE_CALL_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_STATE_CHANGE,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\nevents[actionTypes.UNSILENCE_CALL_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_STATE_CHANGE,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\nevents[actionTypes.START_SCREENSHARE_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_SCREENSHARE_CHANGE,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\nevents[actionTypes.STOP_SCREENSHARE_FINISH] = function (action) {\n  if (action.error) {\n    return callErrorEvent(action)\n  } else {\n    return {\n      type: eventTypes.CALL_SCREENSHARE_CHANGE,\n      args: { callId: action.payload.callId }\n    }\n  }\n}\n\n// TODO: Store devices in state on device change\n// Notify an application when media devices change.\nevents[actionTypes.CHECK_DEVICES_FINISH] = function (action) {\n  if (!action.error) {\n    return {\n      type: eventTypes.DEVICE_CHANGE,\n      args: { devices: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.DEVICE_ERROR,\n      args: {\n        devices: {},\n        error: action.payload\n      }\n    }\n  }\n}\n\nevents[actionTypes.SET_DEFAULT_DEVICES_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.DEVICE_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.DEVICE_DEFAULT_CHANGE,\n      args: { devices: action.payload }\n    }\n  }\n}\n\nevents[actionTypes.PROMPT_USER_MEDIA_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MEDIA_PERMISSIONS,\n      args: {\n        granted: false,\n        devices: action.payload.options,\n        error: action.payload.error\n      }\n    }\n  } else {\n    return {\n      type: eventTypes.MEDIA_PERMISSIONS,\n      args: {\n        granted: true,\n        devices: action.payload\n      }\n    }\n  }\n}\n\n// TODO: Store devices in state on device change\nevents[actionTypes.CHANGE_SPEAKER_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.DEVICE_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.DEVICE_CHANGE,\n      args: {\n        type: 'speaker',\n        deviceId: action.payload\n      }\n    }\n  }\n}\n\nevents[actionTypes.INIT_MEDIA_FINISH] = function (action) {\n  return {\n    type: eventTypes.MEDIA_INITIALIZED,\n    args: { result: action.payload }\n  }\n}\n\nevents[actionTypes.START_LOCAL_VIDEO_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.LOCAL_VIDEO_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.LOCAL_VIDEO_CHANGE,\n      args: { displaying: true }\n    }\n  }\n}\n\nevents[actionTypes.STOP_LOCAL_VIDEO_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.LOCAL_VIDEO_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.LOCAL_VIDEO_CHANGE,\n      args: { displaying: false }\n    }\n  }\n}\n\nfunction audioBridgeEvents (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.BRIDGE_ERROR,\n      args: {\n        error: action.payload\n      }\n    }\n  } else {\n    return {\n      type: eventTypes.BRIDGE_CHANGE,\n      args: {\n        bridgeId: action.payload.bridgeId\n      }\n    }\n  }\n}\n\nevents[actionTypes.CREATE_AUDIO_BRIDGE_FINISH] = audioBridgeEvents\nevents[actionTypes.CLOSE_AUDIO_BRIDGE_FINISH] = audioBridgeEvents\nevents[actionTypes.UPDATE_AUDIO_BRIDGE_CALLS] = audioBridgeEvents\nevents[actionTypes.MUTE_AUDIO_BRIDGE_FINISH] = audioBridgeEvents\nevents[actionTypes.UNMUTE_AUDIO_BRIDGE_FINISH] = audioBridgeEvents\nevents[actionTypes.SILENCE_AUDIO_BRIDGE_FINISH] = audioBridgeEvents\nevents[actionTypes.UNSILENCE_AUDIO_BRIDGE_FINISH] = audioBridgeEvents\n\nexport default events\n","/**\n * An outgoing call has successfully started.\n *\n * @public\n * @memberof call\n * @requires call\n * @requires callMe\n * @event call:start\n * @param {Object} params\n * @param {string} params.callId The Id of the call.\n */\nexport const CALL_STARTED = 'call:start'\n\n/**\n * A new incoming call has been received.\n *\n * @public\n * @memberof call\n * @requires call\n * @event call:receive\n * @param {Object} params\n * @param {string} params.callId The Id of the call.\n * @example\n * client.on('call:receive', function(callId) {\n *     // We have received a call, prompt the user to respond.\n *     promptUser(client.call.getById(callId));\n * });\n */\nexport const CALL_INCOMING = 'call:receive'\n\n/**\n * Calls have been successfully joined.\n * @public\n * @requires call\n * @memberof call\n * @event call:join\n * @param {Object} params\n * @param {string} params.callId The ID of the new, joined call.\n * @param {Array}  params.joinedCalls The two calls that were joined together.\n */\nexport const CALL_JOIN = 'call:join'\n\n/**\n * A call has successfully been forwarded.\n *\n * @public\n * @memberof call\n * @requires call\n * @event call:forward\n * @param {Object} params\n * @param {string} params.callId The Id of the call.\n */\nexport const CALL_FORWARDED = 'call:forward'\n\n/**\n * A call's state has changed.\n *\n * @public\n * @memberof call\n * @requires call\n * @requires callMe\n * @event call:stateChange\n * @param {Object} params\n * @param {string} params.callId The Id of the call.\n * @param {string} params.state New state of the call.\n * @param {Object} params.transition Information about the state change.\n * @param {number} params.transition.code Code representing the reason for the state change.\n * @param {string} params.transition.reasonText Explanation of the status code.\n * @param {string} params.transition.oldState The previous state of the call.\n * @example\n * client.on('call:stateChange', function(params) {\n *     // We are now in call with another user, so update our app to show it.\n *     if(params.state === client.call.states.IN_CALL) {\n *         renderCall(client.call.getById(params.callId));\n *     }\n * });\n */\nexport const CALL_STATE_CHANGE = 'call:stateChange'\n\n/**\n * A call's media state has changed.\n * @public\n * @memberof call\n * @requires call\n * @requires callMe\n * @event call:mediaStateChange\n * @param {Object} params\n * @param {string} params.callId The Id of the call.\n * @param {string} params.mediaState New media state of the call.\n */\nexport const CALL_MEDIA_STATE_CHANGE = 'call:mediaStateChange'\n\n/**\n * Screensharing has been started turned on or off.\n *\n * @public\n * @memberof call\n * @requires call\n * @requires callMe\n * @event call:screenshareChange\n * @param {Object} params\n * @param {string} params.callId The Id of the call.\n */\nexport const CALL_SCREENSHARE_CHANGE = 'call:screenshareChange'\n\n/**\n * An error has occurred with a call.\n *\n * @public\n * @memberof call\n * @requires call\n * @requires callMe\n * @event call:error\n * @param {Object} params\n * @param {string} params.callId The id of the call.\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const CALL_ERROR = 'call:error'\n\n/**\n * The status of previewing local video has changed.\n * @public\n * @memberof media\n * @requires call\n * @event videoPreview:change\n * @param {Object} params\n * @param {boolean} params.displaying Whether the local video preview is being displayed or not.\n */\nexport const LOCAL_VIDEO_CHANGE = 'videoPreview:change'\n\n/**\n * An error has occurred when changing local video preview status.\n * @public\n * @memberof media\n * @requires call\n * @event videoPreview:error\n * @param {Object} params\n * @param {api.BasicError} params.error Information about the error.\n */\nexport const LOCAL_VIDEO_ERROR = 'videoPreview:error'\n\n// Media devices.\n\n/**\n * A change has been made to default devices used for calls.\n * @public\n * @memberof media\n * @requires call\n * @requires callMe\n * @event devices:defaultsChange\n * @param {Object} params\n * @param {Object} params.devices The devices now set as default.\n */\nexport const DEVICE_DEFAULT_CHANGE = 'devices:defaultsChange'\n\n/**\n * Available media devices have been changed.\n * @public\n * @memberof media\n * @requires call\n * @requires callMe\n * @event devices:change\n * @param {Object} params\n * @param {Object} params.devices The devices, separated by device type.\n */\nexport const DEVICE_CHANGE = 'devices:change'\n\n/**\n * Media device permissions have been granted by the user.\n * @memberof media\n * @requires call\n * @event media:permissions\n * @param {Object} params\n * @param {Object} params.devices The devices to request permission for.\n * @param {api.BasicError} params.error The Basic error object.\n * @param {boolean} params.granted Whether permission was granted?\n */\nexport const MEDIA_PERMISSIONS = 'media:permissions'\n\n/**\n * An error occurred while performing a device operation.\n * @public\n * @memberof media\n * @requires call\n * @requires callMe\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const DEVICE_ERROR = 'devices:error'\n\n/**\n * Media support has been checked.\n * @public\n * @memberof media\n * @requires call\n * @requires callMe\n * @event media:initialize\n * @param {Object} params\n * @param {Object} params.result Results of initializing media.\n * @param {boolean} params.result.error Whether the initialization was successful or not.\n * @param {number} params.result.code A unique code describing the result scenario.\n * @param {string} params.result.message Human readable message of the result.\n */\nexport const MEDIA_INITIALIZED = 'media:initialize'\n\n/**\n * A change has occurred in an audio bridge.\n * @public\n * @memberof AudioBridge\n * @event audioBridge:change\n * @param {Object} params\n * @param {string} bridgeId The bridge that the change occurred on.\n */\nexport const BRIDGE_CHANGE = 'audioBridge:change'\n\n/**\n * An error occurred while performing an audio bridge operation.\n * @public\n * @memberof AudioBridge\n * @event audioBridge:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const BRIDGE_ERROR = 'audioBridge:error'\n","// Call History plugin.\nimport { api, name, reducer } from './interface'\nimport * as sagas from './sagas'\nimport events from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\n\n// Libraries.\nimport { values } from 'lodash/fp'\nimport { put } from 'redux-saga/effects'\n\n/**\n * Call History plugin factory.\n * @method callHistory\n * @return {Object} plugin - An sdk plugin.\n */\nexport default function callHistory () {\n  function * init () {\n    yield put(mapEvents(events))\n  }\n\n  return {\n    name,\n    capabilities: ['callHistory'],\n    init,\n    api,\n    reducer,\n    sagas: values(sagas)\n  }\n}\n","import api from './api'\nimport reducer from './reducers'\n\nconst name = 'callHistory'\n\nexport { name, api, reducer }\n","/**\n * The 'call.history' namespace is used to retrieve and inspect the authenticated\n * users call logs.\n *\n * Functions below are all part of this namespace.\n *\n * @public\n * @namespace callHistory\n */\n\n// Call History interface.\nimport * as actions from './actions'\nimport { getCallHistory, getCachedHistory } from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CALLHISTORY')\n\n/**\n * Call History API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch The redux store's dispatch function.\n * @param {Function} $0.getState - The redux store's getState function.\n * @return {Object} API.\n */\nexport default function api ({ dispatch, getState }) {\n  const callHistoryApi = {\n    /**\n     * Fetches the list of call logs and stores them locally. The API\n     * {@link #callhistoryget CallHistory.get} can then be used to get\n     * the logs from local state after it has been updated.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method fetch\n     * @param  {number} [amount=50] The number of records to retrieve.\n     * @param  {number} [offset=0] Starting offset for records to retrieve.\n     */\n    fetch (amount = 50, offset = 0) {\n      log.debug(`${API_LOG_TAG}call.history.fetch, amount: ${amount}, offset: ${offset}`)\n      dispatch(actions.retrieveCallLogs(amount, offset))\n    },\n\n    /**\n     * Deletes the specified call log.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method remove\n     * @param  {number} recordId The ID of the call log to be removed.\n     */\n    remove (recordId) {\n      log.debug(`${API_LOG_TAG}call.history.remove, recordId: ${recordId}`)\n      dispatch(actions.removeCallLogs(recordId))\n    },\n\n    /**\n     * Deletes all call logs.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method clear\n     */\n    clear () {\n      log.debug(`${API_LOG_TAG}call.history.clear`)\n      dispatch(actions.removeCallLogs('all'))\n    },\n\n    /**\n     * Gets the list of call logs cached locally. The event\n     * `callHistory:changed` is used to indicate the local state of logs\n     * has been updated.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method get\n     * @example\n     * client.on('callHistory:change', function() {\n     *     // Get all call logs when they've been updated.\n     *     let callLogs = client.call.history.get();\n     * });\n     * @returns {Array} A list of call log records, ordered by latest first.\n     */\n    get () {\n      log.debug(`${API_LOG_TAG}call.history.get`)\n      return getCallHistory(getState())\n    },\n\n    /**\n     * Gets the cached call history data and returns stringified data.\n     *\n     * The data is provided in a format that can be used directly with the\n     *    {@link callHistory.setCache call.history.setCache} API. This allows an\n     *    application to persist the information across SDK instances when the\n     *    backend environment does not support the CallHistory feature.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method getCache\n     * @returns {string} A stringified list of call log records from the cache, ordered by latest first.\n     */\n    getCache () {\n      log.debug(`${API_LOG_TAG}call.history.getCache`)\n      return JSON.stringify(getCachedHistory(getState()))\n    },\n\n    /**\n     * Sets the cached call history data, expects stringified data as it will be parsed.\n     *\n     * The data can be retrieved from the {@link callHistory.getCache\n     *    call.history.getCache} API. This allows an\n     *    application to persist the information across SDK instances when the\n     *    backend environment does not support the CallHistory feature.\n     * @public\n     * @memberof callHistory\n     * @requires callHistory\n     * @method setCache\n     * @param {string} data The stringified call history data to store in the cache.\n     */\n    setCache (data) {\n      log.debug(`${API_LOG_TAG}call.history.setCache, data: ${data}`)\n      dispatch(actions.setCache(JSON.parse(data)))\n    }\n  }\n\n  return { call: { history: callHistoryApi } }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves call history stored in state.\n * @method getCallHistory\n * @param  {Object} state Redux state.\n * @return {Array}\n */\nexport function getCallHistory (state) {\n  return cloneDeep(state.callHistory)\n}\n\n/**\n * Retrieves call history stored in state\n * @method getCachedHistory\n * @param  {Object} state Redux state.\n * @return {Array}\n */\nexport function getCachedHistory (state) {\n  return cloneDeep(state.callHistory)\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { reverse, sortBy, unionBy, concat } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.FETCH_CALL_HISTORY_FINISH] = {\n  next (state, action) {\n    // Note: If a conflict occurs in the below unionBy, the newer log is\n    //      preferred over the older log. This is because SPiDR only keeps\n    //      50 records at a time, and it re-uses old recordIds when it\n    //      creates new record logs. It's stupid.\n\n    // Get local Logs. Local logs are identified by having a recordID of 16 characters\n    const localLogs = state.filter(function (log) {\n      return log.recordId.length === 36 && log.duration !== '0'\n    })\n\n    // Remove the local logs\n    const localLogsRemoved = state.filter(function (log) {\n      return log.resourceLocation !== ''\n    })\n\n    // Generate a list of unique logs (ie; not found in server logs)\n    const uniqueLogs = localLogs.filter(function (log) {\n      var result = action.payload.some(isSimilar, log)\n      return !result\n    })\n\n    // Combine server logs and new logs.\n    const newLogs = concat(unionBy('recordId', action.payload, localLogsRemoved), uniqueLogs)\n\n    // Sort start time, in descending order.\n    return reverse(sortBy('startTime', newLogs))\n  }\n}\n\nreducers[actionTypes.DELETE_CALL_HISTORY_FINISH] = {\n  next (state, action) {\n    if (action.payload === 'all') {\n      return []\n    } else {\n      return state.filter(function (log) {\n        return log.recordId !== action.payload\n      })\n    }\n  }\n}\n\nreducers[actionTypes.ADD_CALL_HISTORY_ENTRY] = {\n  next (state, action) {\n    return concat(action.payload, state)\n  }\n}\n\n// rehydrate cache with previously stored data\nreducers[actionTypes.SET_CACHE] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\n// Call History default state is an empty array.\nconst reducer = handleActions(reducers, [])\nexport default reducer\n\n/*\n * A helper function to determine if 2 log entries are similar.\n * A log is considered similar under the following conditions:\n *   - the startTime is within 10 seconds\n *   - the duration is within 5 seconds\n *   - the direction is the same\n */\nconst isSimilar = function (serverLogEntry) {\n  const startTimePadding = 10000\n  const durationPadding = 5000\n\n  if (Math.abs(serverLogEntry.startTime - this.startTime) > startTimePadding) {\n    return false\n  }\n  if (Math.abs(serverLogEntry.duration - this.duration) > durationPadding) {\n    return false\n  }\n  if (serverLogEntry.direction !== this.direction) {\n    return false\n  }\n  return true\n}\n","/**\n * Call History saga index.\n * Defines which actions trigger which sagas.\n */\n\n// Call History plugin.\nimport { retrieveCallLogs, removeCallLogs } from './server'\nimport { storeCallLogs, oldStoreCallLogs } from './client'\nimport * as actionTypes from '../interface/actionTypes'\n\n// Other plugins.\nimport { CALL_STATE_CHANGE } from '../../call/interface/actionTypes'\nimport { END_CALL_FINISH, REJECT_CALL_FINISH } from '../../call/interfaceNew/actionTypes'\nimport { CALL_STATES_FCS } from '../../call/constants'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\n\n/**\n * Fetch server call history.\n * @method fetchLogs\n */\nexport function * fetchLogs () {\n  yield takeEvery(actionTypes.FETCH_CALL_HISTORY, retrieveCallLogs)\n}\n\n/**\n * Delete server call history.\n * @method removeLogs\n */\nexport function * removeLogs () {\n  yield takeEvery(actionTypes.DELETE_CALL_HISTORY, removeCallLogs)\n}\n\n/**\n * Create local call log after a call ends.\n * Handles actions from both the new and old call interfaces (new/old callstacks).\n * @method createLocalLog\n */\nexport function * createLocalLog () {\n  // Matches \"call ended\" actions from the old call interface (ie. old\n  //    callstack). The old \"call ended\" actions are \"state change\" actions\n  //    where the new state is \"ended\".\n  function oldCallEndedPattern (action) {\n    return action.type === CALL_STATE_CHANGE && action.payload.state === CALL_STATES_FCS.ENDED\n  }\n\n  // Matches \"call ended\" actions from the new call interface (ie. new\n  //    callstack). The \"call ended\" actions are straight-forward \"end call\"\n  //    actions, but since the old interface also uses these actions, we need\n  //    to make sure they're the new interface \"end call\" actions. This is done\n  //    by checking how the call ID is stored in the payload.\n  //    new = action.payload.id; old = action.payload.callId\n  function callEndedPattern (action) {\n    return (action.type === END_CALL_FINISH || action.type === REJECT_CALL_FINISH) && action.payload.id\n  }\n\n  // Forward \"call ended\" actions to the appropriate saga.\n  yield takeEvery(oldCallEndedPattern, oldStoreCallLogs)\n  yield takeEvery(callEndedPattern, storeCallLogs)\n}\n","/**\n * Sagas related to server call history.\n */\n\n// Call History plugin.\nimport * as actions from '../interface/actions'\n\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\n\n// Helpers.\nimport { logManager } from '../../logs'\nimport request from '../../request/effects'\nimport BasicError, { callHistoryCodes } from '../../errors'\n\n// Libraries.\nimport { isNumber } from 'lodash/fp'\nimport { put, select } from 'redux-saga/effects'\n\n// Constants\nimport { platforms } from '../../constants'\n\nconst log = logManager.getLogger('CALLHISTORY')\n\n/**\n * Saga for fetching call log records.\n * @method retrieveCallLogs\n * @param {Object} action Action of type `FETCH_CALL_HISTORY`.\n */\nexport function * retrieveCallLogs (action) {\n  log.info(\n    `Attempting to retrieve ${action.payload.amount} call history log(s), with an offset of ${action.payload.offset}.`\n  )\n\n  // Catch invalid input (which breaks SPiDR) before making the request.\n  if (!isNumber(action.payload.amount) || action.payload.amount < 0 || !isNumber(action.payload.offset)) {\n    log.info('Unable to retrieve log(s); invalid input.')\n    yield put(\n      actions.retrieveCallLogsFinish({\n        error: new BasicError({\n          code: callHistoryCodes.BAD_REQUEST,\n          message: 'Unable to retrieve log(s); invalid input.'\n        })\n      })\n    )\n    return\n  }\n\n  // TODO: Break the callHistory requests into its own file.\n  const requestInfo = yield select(getRequestInfo)\n  const platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : requestInfo.version\n  const url = `${requestInfo.baseURL}/rest/version/${version}/user/${requestInfo.username}/logHistory`\n\n  const queryParams = {\n    startIndex: action.payload.offset,\n    count: action.payload.amount\n  }\n\n  const response = yield request({\n    url,\n    queryParams,\n    method: 'GET'\n  })\n\n  if (response.error) {\n    let error\n    if (response.payload.body) {\n      if (response.payload.body.logHistory) {\n        // Handle errors from the server.\n        const { statusCode } = response.payload.body.logHistory\n        log.info(`Failed to retrieve call logs with status code ${statusCode}.`)\n\n        error = new BasicError({\n          code: statusCode === 37 ? callHistoryCodes.BAD_REQUEST : callHistoryCodes.UNKNOWN_ERROR,\n          message: `Failed to retrieve call logs. Status Code: ${statusCode}.`\n        })\n      } else {\n        log.info('Failed to retrieve call logs; user not authenticated.')\n        error = new BasicError({\n          code: callHistoryCodes.NOT_AUTHENTICATED,\n          message: 'Failed to retrieve call logs; user not authenticated.'\n        })\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { code, message } = response.payload.result\n      log.info('Failed to fetch call log(s)', message)\n\n      error = new BasicError({\n        code: code === 403 ? callHistoryCodes.FORBIDDEN : callHistoryCodes.UNKNOWN_ERROR,\n        message: `Call log fetch failed: ${message}.`\n      })\n    }\n\n    yield put(actions.retrieveCallLogsFinish({ error }))\n  } else {\n    // Massage the call logs into a more concise format.\n    let logs = response.payload.body.logHistory.logItems.map(function (log) {\n      if (log.type === 'CallLog') {\n        return log.params\n      }\n    })\n\n    log.info(`Successfully retrieved ${logs.length} call history log(s).`)\n\n    // Massage the call logs to include the remoteParticipant property.\n    logs = logs.map(function (log) {\n      /**\n       * There is a bug in SPiDR where it always uses the keys `callerName` and\n       * `callerDisplayNumber` for ALL logs, instead of only incoming logs.\n       * Because of this, callerDisplayNumber is always the remote participant,\n       * even when the local user is the caller.\n       * This if statement is a workaround for this problem.\n       * // TODO: Remove this if when the SPiDR issue is resolved.\n       */\n      if (log.direction === 'outgoing' && !log.calleeDisplayNumber && !log.calleeName) {\n        log.calleeDisplayNumber = log.callerDisplayNumber\n        log.calleeName = log.callerName\n        // Keep callerDisplayNumber and callerName properties unchanged for\n        //    backwards compatibility.\n      }\n\n      if (log.direction === 'outgoing') {\n        log.remoteParticipant = {\n          displayName: log.calleeName,\n          displayNumber: log.calleeDisplayNumber\n        }\n      } else {\n        log.remoteParticipant = {\n          displayName: log.callerName,\n          displayNumber: log.callerDisplayNumber\n        }\n      }\n      return log\n    })\n\n    yield put(actions.retrieveCallLogsFinish({ logs }))\n  }\n}\n\n/**\n * Saga for deleting call logs.\n * @method removeCallLogs\n * @param {Object} action Action of type `DELETE_CALL_HISTORY`.\n */\nexport function * removeCallLogs (action) {\n  log.info('Attempting to remove call log(s):', action.payload)\n\n  if (!action.payload) {\n    log.info('Could not remove call logs from history; invalid input.')\n    yield put(\n      actions.removeCallLogsFinish({\n        error: new BasicError({\n          code: callHistoryCodes.BAD_REQUEST,\n          message: 'Could not remove call logs; invalid input.'\n        })\n      })\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo)\n  const platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : requestInfo.version\n  let url = `${requestInfo.baseURL}/rest/version/${version}/user/${requestInfo.username}/`\n\n  if (action.payload === 'all') {\n    url += 'logHistory'\n  } else {\n    url += `logRecord/${action.payload}`\n  }\n\n  const response = yield request({\n    url,\n    method: 'DELETE',\n    responseType: 'none'\n  })\n\n  if (response.error) {\n    let error\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.logRecord\n      log.info(`Failed to remove log(s) from call history. Status Code ${statusCode}).`)\n\n      error = new BasicError({\n        code: statusCode === 42 ? callHistoryCodes.NOT_FOUND : callHistoryCodes.UNKNOWN_ERROR,\n        message: `Failed to remove call log. Status Code: ${statusCode}.`\n      })\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.info('Failed call log removal.', message)\n\n      error = new BasicError({\n        code: callHistoryCodes.UNKNOWN_ERROR,\n        message: `Call log removal failed: ${message}.`\n      })\n    }\n\n    yield put(actions.removeCallLogsFinish({ error }))\n  } else {\n    log.info('Successfully removed log(s) from call history.')\n    yield put(actions.removeCallLogsFinish({ recordId: action.payload }))\n  }\n}\n","/**\n * Sagas related to client generated call history.\n */\n\n// Call History plugin.\nimport { addCallLogEntry } from '../interface/actions'\n\n// Other plugins.\nimport { getUserInfo } from '../../auth/interface/selectors'\nimport { END_CALL_FINISH, REJECT_CALL_FINISH } from '../../call/interfaceNew/actionTypes'\nimport { CALL_STATES_FCS, CALL_STATES } from '../../call/constants'\nimport { getCallById as oldGetCallById } from '../../call/interface/selectors'\nimport { getCallById as newGetCallById } from '../../call/interfaceNew/selectors'\n\n// Helpers.\nimport { logManager } from '../../logs'\n\n// Libraries\nimport { put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALLHISTORY')\n\n/**\n * Constructs a local call log from a \"call ended\" action.\n * Old callstack specific.\n *\n * This saga defines how a \"local call log\" is created after a call has ended.\n *    The format of the log mimics the format of server-side call logs.\n * Assumptions:\n *    1. The provided action is a \"call ended\" action for the old callstack.\n * Responsibilities:\n *    1. Gather all information needed for a call log.\n *    2. Create / format the call log.\n *    3. Update redux state (via actions).\n * @method oldStoreCallLogs\n * @param {Object} action A `CALL_STATE_CHANGE` action representing a call end.\n */\nexport function * oldStoreCallLogs (action) {\n  // Make sure this is a call end state change.\n  if (action.payload.state !== CALL_STATES_FCS.ENDED) {\n    return\n  }\n\n  // Get call state needed for the log.\n  const call = yield select(oldGetCallById, action.payload.callId)\n\n  if (!call) {\n    log.debug(`Call info (${action.payload.callId}) not in state to create local log.`)\n    return\n  }\n\n  var logEntry = {\n    recordId: action.payload.callId,\n    startTime: '' + call.startTime,\n    duration: '' + (call.endTime - call.startTime),\n    callerDisplayNumber: call.from,\n    calleeDisplayNumber: call.to,\n    calleeName: call.calleeName,\n    remoteParticipant: call.remoteParticipant,\n    originalRemoteParticipant: call.originalRemoteParticipant,\n    resourceLocation: ''\n  }\n\n  if (call.direction === 'incoming') {\n    // If the previous state was ringing, and the change was not because the call was\n    //      answered by another device (ie. code 9904), then it is a missed call.\n    if (action.payload.transition.prevState === CALL_STATES_FCS.RINGING && action.payload.transition.code !== '9904') {\n      logEntry.direction = 'missed'\n    } else {\n      logEntry.direction = 'incoming'\n    }\n    logEntry.callerName = call.callerName\n  } else {\n    logEntry.direction = 'outgoing'\n    // Use the contact name provided to the call as the current user's name.\n    const contactName = (call.contact.firstName + ' ' + call.contact.lastName).trim()\n    logEntry.callerName = contactName || call.from.split('@')[0]\n  }\n\n  log.debug('Adding call event to the local call history:', logEntry)\n  yield put(addCallLogEntry(logEntry))\n}\n\n/**\n * Constructs a local call log from a \"call ended\" action.\n * New callstack specific.\n *\n * This saga defines how a \"local call log\" is created after a call has ended.\n *    The format of the log mimics the format of server-side call logs.\n * Assumptions:\n *    1. The provided action is a \"call ended\" action for the new callstack.\n * Responsibilities:\n *    1. Gather all information needed for a call log.\n *    2. Create / format the call log.\n *    3. Update redux state (via actions).\n * @method storeCallLogs\n * @param {Object} action An action representing a call ending.\n */\nexport function * storeCallLogs (action) {\n  if (![END_CALL_FINISH, REJECT_CALL_FINISH].includes(action.type)) {\n    return\n  }\n\n  // Get call state needed for the log.\n  const call = yield select(newGetCallById, action.payload.id)\n\n  if (!call) {\n    log.debug(`Call (${action.payload.id}) not in state to create local log.`)\n    return\n  }\n\n  // TODO: Call state doesn't have a property with the current user's name.\n  //    Get it from auth state for now.\n  const userInfo = yield select(getUserInfo)\n\n  var logEntry = {\n    recordId: action.payload.id,\n    startTime: '' + call.startTime,\n    duration: '' + (call.endTime - call.startTime),\n    callerDisplayNumber: call.isCaller ? userInfo.username : call.remoteParticipant.displayNumber,\n    calleeDisplayNumber: call.isCaller ? call.remoteParticipant.displayNumber : userInfo.username,\n    calleeName: call.isCaller\n      ? call.remoteParticipant.displayName || call.remoteParticipant.displayNumber\n      : userInfo.username,\n    callerName: call.isCaller\n      ? call.displayName\n        ? call.displayName\n        : userInfo.username\n      : call.remoteParticipant.displayName || call.remoteParticipant.displayNumber,\n    remoteParticipant: call.remoteParticipant,\n    originalRemoteParticipant: null,\n    resourceLocation: ''\n  }\n\n  if (call.direction === 'incoming') {\n    // If the previous state was ringing, and the change was not because the call was\n    //      answered by another device (ie. code 9904), then it is a missed call.\n    if (\n      action.payload.transition &&\n      action.payload.transition.prevState === CALL_STATES.RINGING &&\n      action.payload.transition.code !== '9904'\n    ) {\n      logEntry.direction = 'missed'\n    } else {\n      logEntry.direction = 'incoming'\n    }\n  } else {\n    logEntry.direction = 'outgoing'\n  }\n\n  log.debug(`Adding ${logEntry.direction} call to the local call history:`, logEntry)\n  yield put(addCallLogEntry(logEntry))\n}\n","/**\n * Retrieves media devices available on the system.\n * @method getDevices\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getDevices (state) {\n  return state.webrtc.devices\n}\n\n/**\n * Session selectors.\n */\nexport function getSessions (state) {\n  return state.webrtc.sessions\n}\n\nexport function getSessionById (state, sessionId) {\n  return getSessions(state).find(session => session.id === sessionId)\n}\n\n/**\n * Track selectors.\n */\nexport function getTracks (state) {\n  return state.webrtc.tracks\n}\n\nexport function getTrackById (state, trackId) {\n  return getTracks(state).find(track => track.trackId === trackId)\n}\n\n/**\n * Media selectors.\n * Handles retrieving data from the `state.webrtc.media` substate.\n */\n\n/**\n * Get the list of all media this session.\n * @method getMedia\n * @param  {Object} state Redux state.\n * @return {Array} A list of all media objects.\n */\nexport function getMedia (state) {\n  return state.webrtc.media\n}\n\n/**\n * Get a specific media object.\n * @method getMediaById\n * @param  {Object} state Redux state.\n * @param  {string} mediaId The media to retrieve.\n * @return {Object} A media object.\n */\nexport function getMediaById (state, mediaId) {\n  return getMedia(state).find(media => media.id === mediaId)\n}\n\n/**\n * Retrieves information about the browser.\n * @method getBrowserDetails\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getBrowserDetails (state) {\n  return state.webrtc.browser\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nfunction callHistoryEvent (action) {\n  if (!action.error) {\n    return [\n      {\n        type: eventTypes.CALL_HISTORY_CHANGE,\n        args: {}\n      },\n      {\n        type: eventTypes.CALL_HISTORY_CACHE_CHANGE,\n        args: {}\n      }\n    ]\n  } else {\n    return {\n      type: eventTypes.CALL_HISTORY_ERROR,\n      args: { error: action.payload }\n    }\n  }\n}\n\nvar events = {}\n\nevents[actionTypes.FETCH_CALL_HISTORY_FINISH] = callHistoryEvent\nevents[actionTypes.DELETE_CALL_HISTORY_FINISH] = callHistoryEvent\nevents[actionTypes.ADD_CALL_HISTORY_ENTRY] = callHistoryEvent\n\nexport default events\n","/**\n * Call history state has been updated. See {@link #callhistoryget CallHistory.get} to retrieve new state.\n * @public\n * @memberof callHistory\n * @event callHistory:change\n */\nexport const CALL_HISTORY_CHANGE = 'callHistory:change'\n\n/**\n * An error occurred while performing a call history operation.\n * @public\n * @memberof callHistory\n * @event callHistory:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const CALL_HISTORY_ERROR = 'callHistory:error'\n\n/**\n * Call history cached state has been updated\n * @public\n * @memberof callHistory\n * @event callHistoryCache:change\n */\nexport const CALL_HISTORY_CACHE_CHANGE = 'callHistoryCache:change'\n","/**\n * This file is a plugin for the \"clickToCall\" feature. It is meant to connect two specified devices\n * Reference info: https://confluence.genband.com/display/KSDK/Plugins\n */\nimport pluginInterface from './interface'\n\n// Sagas\nimport { clickToCallSaga } from './sagas'\n\n// Events\nimport events from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\n\n/**\n * clickToCall Plugin (that is implemented using a saga).\n *\n * @method clickToCallImplementation\n * @return {Object} An instance of the \"clickToCall\" plugin.\n */\nexport default function clickToCallImplementation () {\n  function * init () {\n    // Map events\n    yield put(mapEvents(events))\n  }\n\n  return {\n    // Interface Components:\n    name: pluginInterface.name,\n    capabilities: ['clickToCall'],\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    // Implementation Components\n    sagas: [clickToCallSaga],\n    init\n  }\n}\n","import api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a clickToCall plugin.\n * @type {string}\n */\nconst name = 'clickToCall'\n\nexport default {\n  reducer,\n  name,\n  api\n}\n","/**\n * The clickToCall namespace is used to bridge a call between two specified devices\n *\n * @public\n * @namespace clickToCall\n * @requires clickToCall\n */\nimport * as actions from './actions'\nimport { getAll } from './selectors'\n\nimport { v4 as uuidV4 } from 'uuid'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CLICKTOCALL')\n\nexport default function api (context) {\n  const clickToCallApi = {\n    /**\n     * Attempts to establish a call between two specified devices\n     *\n     * @public\n     * @memberof clickToCall\n     * @method make\n     * @param  {string} caller A string representing the person making the call\n     * @param  {string} callee A string representing the person receiving the call\n     * @returns {string} callId A unique id representing the call\n     */\n    make: function (caller, callee) {\n      log.debug(API_LOG_TAG + 'clickToCall.make: ', caller, callee)\n      const callId = uuidV4()\n      context.dispatch(actions.clickToCall(callId, caller, callee))\n      return callId\n    },\n    /**\n     * Gets all local clickToCall calls\n     *\n     * @public\n     * @memberof clickToCall\n     * @requires clickToCall\n     * @method get\n     * @returns {Array} A list of clickToCall records, ordered by earliest requestTime\n     */\n    get: function () {\n      log.debug(API_LOG_TAG + 'clickToCall.get')\n      return getAll(context.getState())\n    }\n  }\n\n  return {\n    clickToCall: clickToCallApi\n  }\n}\n","// Other Libraries\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves clickToCall calls stored in state\n *\n * @method getAll\n * @param  {Object} state Redux state.\n * @return {Array}\n */\nexport function getAll (state) {\n  return cloneDeep(state.clickToCall)\n}\n","/**\n * clicktoCall Plugin.\n *\n * Handles the clicktoCall plugin substate. Defines how to communicate back to\n * the Interface (ie. which actions to use).\n * @param  {Object} [state={}] Default state for the reducer is an empty object.\n * @param  {Action} action A dispatched action.\n * @return {Object} state The new example sub-state.\n */\n\nimport { handleActions } from 'redux-actions'\nimport * as actionTypes from './actionTypes'\n\nconst reducers = {}\n\nreducers[actionTypes.CLICK_TO_CALL_FINISH] = {\n  next (state, action) {\n    if (action.error) {\n      return state\n    } else {\n      return state.concat({\n        callId: action.payload.callId,\n        caller: action.payload.caller,\n        callee: action.payload.callee,\n        requestTime: action.payload.requestTime\n      })\n    }\n  }\n}\n\n// clickToCall default state is empty array\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// clickToCall plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { getConnectionInfo, getPlatform } from '../auth/interface/selectors'\n\n// Libraries.\nimport { put, take, select } from 'redux-saga/effects'\nimport { logManager } from '../logs'\n\n// Other plugins.\nimport request from '../request/effects'\n\n// Error handling\nimport BasicError, { clickToCallCodes } from '../errors'\nimport { platforms } from '../constants'\n\n// Get the logger\nconst log = logManager.getLogger('CLICKTOCALL')\n\nexport function * clickToCallSaga () {\n  while (true) {\n    // wait for CLICK_TO_CALL action dispatch.\n    const action = yield take(actionTypes.CLICK_TO_CALL)\n\n    // ensure both caller and callee are provided in payload.\n    if (!action.payload.caller || !action.payload.callee) {\n      log.info('Missing call participant information')\n      yield put(\n        actions.clickToCallFinish({\n          payload: {\n            error: new BasicError({\n              message: 'callee or caller were not provided in CLICK_TO_CALL action payload',\n              code: clickToCallCodes.MISSING_ARGS\n            }),\n            callId: action.payload.callId\n          }\n        })\n      )\n      continue\n    }\n\n    const conn = yield select(getConnectionInfo)\n    const platform = yield select(getPlatform)\n\n    const { server, username } = conn\n\n    const version = platform === platforms.UC ? 1 : server.version\n\n    const url = `${server.protocol}://${server.server}:${server.port}/rest/version/${version}/user/${username}/clicktocall`\n\n    const data = {\n      clickToCallRequest: {\n        callingParty: action.payload.caller,\n        calledParty: action.payload.callee\n      }\n    }\n\n    const options = {\n      url,\n      method: 'POST',\n      body: JSON.stringify(data)\n    }\n\n    const requestTime = new Date().getTime()\n    // wait until we get a response from /clicktocall service\n    const response = yield request(options)\n\n    // determine what type of response was received.\n    if (response.error) {\n      yield put(\n        actions.clickToCallFinish({\n          payload: {\n            error: new BasicError({\n              message: response.payload.result.message,\n              code: clickToCallCodes.RESPONSE_ERROR\n            }),\n            callId: action.payload.callId\n          }\n        })\n      )\n    } else {\n      yield put(\n        actions.clickToCallFinish({\n          callId: action.payload.callId,\n          caller: action.payload.caller,\n          callee: action.payload.callee,\n          requestTime\n        })\n      )\n    }\n  }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\n/**\n * Helper function for clickToCall error events.\n *\n * @method clickToCallEvent\n * @param  {Object} action\n * @return {Object}\n */\nfunction clickToCallEvent (action) {\n  if (!action.error) {\n    return {\n      type: eventTypes.CLICK_TO_CALL_STARTED,\n      args: {\n        callId: action.payload.callId\n      }\n    }\n  } else {\n    return {\n      type: eventTypes.CLICK_TO_CALL_ERROR,\n      args: {\n        callId: action.payload.callId,\n        error: action.payload\n      }\n    }\n  }\n}\n\nvar events = {}\n\nevents[actionTypes.CLICK_TO_CALL_FINISH] = clickToCallEvent\n\nexport default events\n","/**\n * ClickToCall has successfully started.\n *\n * @public\n * @memberof clickToCall\n * @requires clickToCall\n * @event clickToCall:start\n * @param {Object} params\n * @param {string} params.callId A unique id representing the call made\n */\nexport const CLICK_TO_CALL_STARTED = 'clickToCall:start'\n\n/**\n * ClickToCall had an error.\n *\n * @public\n * @memberof clickToCall\n * @requires clickToCall\n * @event clickToCall:error\n * @param {Object} params\n * @param {string} params.callId A unique id representing the call made\n * @param {api.BasicError} params.error The Basic error object.\n *\n */\nexport const CLICK_TO_CALL_ERROR = 'clickToCall:error'\n","import baseConnectivity from '../common/base'\nimport { connCheckMethods } from '../../constants'\nimport { defaults } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\nconst defaultValues = {\n  method: connCheckMethods.KEEP_ALIVE,\n  pingInterval: 30000,\n  reconnectLimit: 5,\n  reconnectDelay: 5000,\n  reconnectTimeMultiplier: 1,\n  reconnectTimeLimit: 640000,\n  autoReconnect: true,\n  maxMissedPings: 3,\n  checkConnectivity: true,\n  webSocketOAuthMode: 'query'\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  method: enums([connCheckMethods.KEEP_ALIVE]),\n  pingInterval: v8n.positive(),\n  reconnectLimit: v8n.positive(),\n  reconnectDelay: v8n.positive(),\n  reconnectTimeMultiplier: v8n.positive(),\n  reconnectTimeLimit: v8n.positive(),\n  autoReconnect: v8n.boolean(),\n  maxMissedPings: v8n.positive(),\n  checkConnectivity: v8n.boolean(),\n  webSocketOAuthMode: v8n.string()\n})\nconst parseOptions = parse('connectivity', v8nValidation)\n\n/**\n * Configuration options for the Connectivity feature.\n * The SDK can only use keepalive as the connectivity check.\n *\n * Keep Alive: The client sends \"keepalive\" messages (to the server) on the websocket at regular intervals. This lets the server know that the client is still connected, and that it should \"keep the connection alive\".\n *\n * For more information on keepalive see here: https://en.wikipedia.org/wiki/Keepalive\n * @public\n * @name config.connectivity\n * @memberof config\n * @instance\n * @param {Object} connectivity Connectivity configs.\n * @param {Number} [connectivity.pingInterval=30000] Time in between websocket ping attempts (milliseconds).\n * @param {Number} [connectivity.reconnectLimit=5] Number of failed reconnect attempts before reporting an error. Can be set to 0 to not limit reconnection attempts.\n * @param {Number} [connectivity.reconnectDelay=5000] Base time between websocket reconnect attempts (milliseconds).\n * @param {Number} [connectivity.reconnectTimeMultiplier=1] Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.\n * @param {Number} [connectivity.reconnectTimeLimit=640000] Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with the reconnect time multiplier to prevent overly long delays between reconnection attempts.\n * @param {Boolean} [connectivity.autoReconnect=true] Flag to determine whether the SDK will attempt to automatically reconnect after connectivity disruptions.\n * @param {Number} [connectivity.maxMissedPings=3] Maximum pings sent (without receiving a response) before reporting an error.\n * @param {Boolean} [connectivity.checkConnectivity=true] Flag to determine whether the SDK should check connectivity.\n * @param {string} [connectivity.webSocketOAuthMode=query] query will send the bearer access token to authenticate the websocket and none will not send it.\n */\nexport default function connectivity (options = {}) {\n  options = defaults(defaultValues, options)\n  parseOptions(options)\n  return baseConnectivity(options)\n}\n","// Connectivity plugin.\nimport pluginInterface from '../interface'\nimport eventsMap from '../interface/events'\nimport { wsConnectFlow } from './sagas'\n\n// Other plugins.\nimport { update as updateConfig } from '../../config/interface/actions'\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { connCheckResponsibility } from '../../constants'\n\n/**\n * Base Connectivity plugin factory.\n * Responsible for handling websockets.\n * @method baseConnectivity\n * @param  {Object} [options={}] Connectivity configs. See above.\n * @return {Object} Plugin - A connectivity plugin.\n */\nexport default function baseConnectivity (options) {\n  // For backwards compatibility, convert the old style to the new style.\n  if (typeof options.method === 'string') {\n    const method = options.method\n    options.method = {\n      type: method,\n      // In both old scenarios, the client is responsible.\n      responsibleParty: connCheckResponsibility.CLIENT\n    }\n  }\n\n  function * init () {\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  return {\n    sagas: [wsConnectFlow],\n    init,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    api: pluginInterface.api\n  }\n}\n","import name from './name'\nimport api from './api'\nimport reducer from './reducers'\n\nexport default { name, api, reducer }\n","// Constants\nimport { platforms } from '../../constants'\n\n/**\n * The 'connection' namespace is used to connect and maintain connections between\n * the SDK and one or more backend servers.\n *\n * @public\n * @namespace connection\n */\n\n/**\n * Information about a websocket connection.\n *\n * Can be retrieved using the {@link connection.getSocketState} API.\n *\n * @public\n * @static\n * @typedef {Object} WSConnectionObject\n * @memberof connection\n * @property {boolean} connected The state of the websocket connection.\n * @property {boolean} pinging True if the client has sent a ping to the server and is still waiting for a pong response.\n * @property {Object} method Information about how the websocket is being used.\n * @property {string} [method.type] How the websocket is staying connected.\n * @property {string} [method.responsibleParty] Who is responsible for keeping the connection alive.\n * @property {string} platform The SDK platform being used.\n * @property {number} pingInterval How often the client will ping the server to test for websocket connectivity.\n * @property {number} reconnectLimit How many times the SDK will try to reconnect a disconnected websocket.\n * @property {number} reconnectDelay How long the SDK will wait before retrying websocket reconnection.\n * @property {number} reconnectTimeMultiplier Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.\n * @property {number} reconnectTimeLimit Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with `reconnectTimeMultiplier` to prevent overly long delays between reconnection attempts.\n * @property {boolean} autoReconnect Indicates if the SDK should automatically try reconnecting a disconnected websocket.\n * @property {number} maxMissedPings How many missed pings before the SDK stops trying to reconnect a disconnected websocket.\n * @property {string} webSocketOAuthMode The mode used for authenticating with the server.\n * @property {Object} wsInfo Information required to connect a websocket to the server.\n * @property {string} [wsInfo.protocol] The protocol to use to connect a websocket.\n * @property {string} [wsInfo.server] The domain name or IP address of the server to connect to.\n * @property {number} [wsInfo.port] The port of the server to connect to.\n * @property {string} [wsInfo.url] The URL path to use to request a websocket connection.\n * @property {string} [wsInfo.params] Any additional params that might be required by the server to establish the websocket connection.\n * @property {number} lastContact The date and time that the last known contact with the server was.\n */\n\nimport { changeConnectivityChecking, lostConnection } from './actions'\n\n// Selectors\nimport { getConnectionState } from './selectors'\nimport { getPlatform } from '../../auth/interface/selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport default function api ({ dispatch, getState }) {\n  const connectivityApi = {\n    /**\n     * Get the state of the websocket.\n     * @public\n     * @static\n     * @memberof connection\n     * @method getSocketState\n     * @param {string} [platform='link'] Backend platform for which to request the websocket's state.\n     * @return {connection.WSConnectionObject} Details about the current websocket connection, including state and configuration.\n     */\n    getSocketState (platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'connection.getSocketState: ', platform)\n      return getConnectionState(getState(), platform)\n    },\n\n    /**\n     * Enables or disables connectivity checking.\n     * @public\n     * @memberof connection\n     * @method enableConnectivityChecking\n     * @param {boolean} enable Enable connectivity checking.\n     */\n    enableConnectivityChecking (enable) {\n      log.debug(API_LOG_TAG + 'connection.enableConnectivityChecking: ', enable)\n      dispatch(changeConnectivityChecking(enable))\n    },\n\n    /**\n     * Triggers a reset in the connection to the WebSocket being used for notifications.\n     * This can be used in scenarios where a network issue (undetectable by the SDK)\n     * is detected by an application.\n     *\n     * If there is no WebSocket currently connected, this function has no effect.\n     * Calling this function will trigger all the normal WebSocket and connectivity lifecycle\n     * events as well as trigger re-connection processing that follows the configuration of the SDK.\n     * Calling this function always has the potential of causing some events being lost by the\n     * SDK and preventing proper operation.\n     * @public\n     * @memberof connection\n     * @method resetConnection\n     */\n    resetConnection () {\n      const state = getState()\n      const platform = getPlatform(state)\n      log.debug(API_LOG_TAG + 'connection.resetConnection: ', platform)\n\n      const wsState = getConnectionState(state, platform)\n      if (!wsState.connected) {\n        log.debug(API_LOG_TAG + 'connection.resetConnection: No active websocket connection. Ignoring request.')\n        return\n      }\n      // Dispatching this action would close/cleanup existing ws connection\n      // However, we'll re-connect after that.\n      dispatch(lostConnection(undefined, platform))\n    }\n  }\n  return { connection: connectivityApi }\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { omit } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.WS_ATTEMPT_CONNECT] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_RECONNECT_FAILED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: true,\n        method: action.payload.kandy.method,\n        platform: action.meta.platform,\n        ...omit('checkConnectivity', action.payload.kandy)\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.LOST_CONNECTION] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_ERROR] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\n/*\n  Accepts a boolean payload for checkConnectivity\n */\nreducers[actionTypes.CHANGE_CONNECTIVITY_CHECKING] = {\n  next (state, action) {\n    return {\n      ...state,\n      checkConnectivity: action.payload\n    }\n  }\n}\n\n/*\n  Accepts a payload for pingInterval in MILLISECONDS\n */\nreducers[actionTypes.CHANGE_PING_INTERVAL] = {\n  next (state, action) {\n    return {\n      ...state,\n      pingInterval: action.payload\n    }\n  }\n}\n\n/**\n * Connectivity Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.WS_CONNECT_FINISHED] = function (action) {\n  if (action.error) {\n    // TODO: Handle the error case?\n  } else {\n    return {\n      type: eventTypes.WS_CHANGE,\n      args: { platform: action.meta.platform }\n    }\n  }\n}\n\nevents[actionTypes.LOST_CONNECTION] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n// TODO: Differentiate between types of disconnects?\nevents[actionTypes.WS_DISCONNECT_FINISHED] = events[actionTypes.LOST_CONNECTION]\n\n// TODO: Does an app care that we're trying to connect/reconnect?\nevents[actionTypes.WS_ATTEMPT_CONNECT] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n\nexport default events\n","/**\n * The websocket to the server has changed state.\n *\n * @public\n * @memberof connection\n * @event ws:change\n * @param {Object} params\n * @param {string} params.platform The platform\n */\nexport const WS_CHANGE = 'ws:change'\n","// Connectivity plugin.\nimport { openWebsocket, cleanupWebSocket, wsEmitter } from './websocket'\nimport { getConnectivityConfig, getPingInterval, getCheckConnectivity } from '../interface/selectors'\nimport * as actionTypes from '../interface/actionTypes'\nimport * as actions from '../interface/actions'\n\n// Other plugins.\nimport { getConnectionInfo } from '../../auth/interface/selectors'\nimport { getSubscriptionInfo } from '../../subscription/interface/selectors'\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { takeEvery, delay, call, put, fork, cancel, actionChannel, race, select, take } from 'redux-saga/effects'\n\n// Constants\nimport { platforms, connCheckMethods, connCheckResponsibility } from '../../constants'\n\n// Get the logger\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport function * wsConnectFlow () {\n  log.info('Creating channel for handling websocket actions ...')\n  const chan = yield actionChannel(actionTypes.WS_ATTEMPT_CONNECT)\n  log.info('Channel successfully created.')\n  yield takeEvery(chan, websocketLifecycle)\n}\n\n/**\n * Saga that handles a websocket over its lifecycle.\n * @method websocketLifecycle\n * @param  {Object} wsConnectAction\n */\nexport function * websocketLifecycle (wsConnectAction) {\n  const wsInfo = wsConnectAction.payload\n  const { platform, isReconnect } = wsConnectAction.meta\n\n  // Redux-saga take() pattern.\n  // Take disconnect websocket action for this platform.\n  function disconnectWebsocketPattern (action) {\n    return action.type === actionTypes.WS_DISCONNECT && action.meta.platform === platform\n  }\n\n  log.info(`Connecting to websocket on platform: ${platform} ...`)\n  // Try to open the websocket, but cancel if we get a disconnect action.\n  const { websocket, disconnect } = yield race({\n    websocket: call(connectWebsocket, wsInfo, platform),\n    disconnect: take(disconnectWebsocketPattern)\n  })\n\n  // If the websocket didn't open, stop here. Dispatch the error if there was one.\n  if (disconnect) {\n    log.info('Received disconnect during websocket connection; stopping.')\n    return\n  } else if (websocket.error) {\n    if (isReconnect) {\n      yield put(actions.wsReconnectFailed(undefined, platform))\n      return\n    } else {\n      yield put(actions.wsConnectFinished(new Error(websocket.message), platform))\n      return\n    }\n  }\n\n  // Append information to the websocket, so that its accessible elsewhere.\n  // TODO: Remove this and replace with proper redux state storage.\n  const connConfig = yield select(getConnectivityConfig)\n  websocket.kandy = connConfig\n\n  websocket.kandy.wsInfo = wsInfo\n  websocket.kandy.platform = platform\n\n  // set last contact in both cases to be now\n  websocket.kandy.lastContact = Date.now()\n\n  const emitTask = yield fork(wsEmitter, websocket, platform)\n\n  // determine which pingFlow is appropriate\n  let pingFlow\n  if (websocket.kandy.method.responsibleParty === connCheckResponsibility.SERVER) {\n    log.debug(`Starting a serverPing flow on ${platform} ...`)\n    pingFlow = yield fork(serverPingFlow, websocket, platform)\n  } else {\n    log.debug(`Starting a clientPing flow on ${platform} ...`)\n    pingFlow = yield fork(clientPingFlow, websocket, platform)\n  }\n\n  // Dispatch the finish action, to notify that the websocket is connected.\n  yield put(actions.wsConnectFinished(websocket, platform))\n\n  // Redux-saga take() pattern.\n  // Take end of lifecycle WS actions for this platform.\n  function closeWebsocketPattern (action) {\n    return (\n      (action.type === actionTypes.WS_DISCONNECT ||\n        action.type === actionTypes.LOST_CONNECTION ||\n        action.type === actionTypes.WS_CLOSED ||\n        action.type === actionTypes.WS_ERROR) &&\n      action.meta.platform === platform\n    )\n  }\n\n  // Wait for a disconnect or lost connection action.\n  const action = yield take(closeWebsocketPattern)\n  log.debug(`Cancelling outstanding tasks upon receiving action: ${action.type}`)\n\n  // Whether we're disconnecting or have lost connection,\n  //      we want to cancel these tasks either way.\n  yield cancel([emitTask, pingFlow])\n\n  log.debug('Cleaning up websocket connection ...')\n  yield call(cleanupWebSocket, websocket)\n\n  if (action.type === actionTypes.WS_DISCONNECT) {\n    // If we're disconnecting, close the websocket to end it's lifecycle.\n    yield put(actions.wsDisconnectFinished(undefined, platform))\n    log.info('Successfully disconnected websocket connection.')\n  } else if (action.type === actionTypes.WS_CLOSED && action.payload.code === 1000) {\n    // 1000 signifies a normal closure\n    // Normal websocket close, don't try to reconnect\n    log.debug('Websocket closed normally.')\n    yield put(actions.wsReconnectFailed(undefined, platform))\n  } else {\n    if (websocket.kandy.autoReconnect) {\n      // If this is a Link websocket, we need to ensure the URL is using the\n      //     \"latest\" access token from state.\n      if (wsConnectAction.meta.platform === platforms.UC) {\n        log.info('Updating access token ...')\n        const { notificationChannel } = yield select(getSubscriptionInfo)\n        const { accessToken, oauthToken } = yield select(getConnectionInfo)\n        wsInfo.url = notificationChannel\n        if (oauthToken && !accessToken) {\n          wsInfo.params = {\n            access_token: oauthToken\n          }\n        } else {\n          wsInfo.params = {\n            token: accessToken\n          }\n        }\n      } else if (wsConnectAction.meta.platform === platforms.LINK) {\n        const { bearerAccessToken } = yield select(getConnectionInfo)\n        // If using bearerAccessToken and WS query mode, set the token as part\n        //    of the WS reconnect query string.\n        if (bearerAccessToken && connConfig.webSocketOAuthMode === 'query') {\n          wsInfo.params = {\n            token: bearerAccessToken\n          }\n        }\n      }\n\n      // If we've lost connection, re-dispatch the initial action, so that we can\n      //      start the lifecycle over.\n      log.debug('Attempting to reconnect using a new websocket ...')\n      yield put(actions.wsAttemptConnect(wsInfo, wsConnectAction.meta.platform, true))\n    } else {\n      log.debug('Not attempting to reconnect to websocket autoReconnect is false.')\n      yield put(actions.wsReconnectFailed(undefined, platform))\n    }\n  }\n}\n\n/**\n * if we receive a server ping we want to respond with a pong,\n * if there is none we want to check to see if its been too long since the server last pinged us and if it has been then reconnect,\n * otherwise we just want to increment the time since the last ping\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * serverPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  let timeOfLastPing = Date.now()\n  const { pingInterval: configPingInterval } = yield select(getConnectivityConfig)\n  if (configPingInterval) {\n    log.warn(\n      '`connectivity.pingInterval` has been set, but `connectivity.method.responsibleParty` is set to `server`. ' +\n        `The configured value of ${configPingInterval}ms will be ignored.`\n    )\n  }\n\n  while (true) {\n    /**\n     * //TODO: Get rid of this use of getPingInterval\n     * The server doesn't even use this interval, it uses whatever the server is set to\n     * It gets an undefined value, sets it to 120 seconds, and when the server responds switched to that timeout.\n     * See KJS-58 for a discussion of the problem, and KAA-2215 for a long-term solution\n     */\n    let pingInterval = yield select(getPingInterval)\n    pingInterval = typeof pingInterval !== 'undefined' ? pingInterval : 120000\n    const maxIdleDuration = pingInterval * maxMissedPings\n    log.debug(`serverPing: Using ping interval: ${pingInterval} with maximum idle duration: ${maxIdleDuration}`)\n\n    // wait for incoming server pings or disconnect actions on an interval\n    const { serverPing, disconnect } = yield race({\n      expiry: delay(pingInterval),\n      serverPing: take(actionTypes.RECEIVE_SERVER_PING),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // is disconnect action received then exit\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from serverPing flow ...')\n      break\n    }\n\n    if (serverPing) {\n      // server sent us a ping so reset the timeSinceLastPing\n      timeOfLastPing = Date.now()\n\n      // pingInterval is stored in milliseconds but comes in as seconds so convert\n      const pingIntervalMillis = serverPing.payload.connCheck.interval * 1000\n      // Prevent firing actions if pingInterval hasn't changed\n      if (pingIntervalMillis !== pingInterval) {\n        yield put(actions.changePingInterval(pingIntervalMillis, platform))\n      }\n\n      const message = { connAck: {} }\n      log.debug(\n        `Received a server ping which uses interval: ${pingIntervalMillis} ms. ${platform} is replying with message: ${message}`\n      )\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n\n      // if the pong websocket message has an error then try to reconnect\n      if (error) {\n        log.error(`Got error when attempting to reply: ${error.message}`)\n        if (autoReconnect) {\n          log.info('Trying to auto reconnect ...')\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      }\n    } else {\n      if (Date.now() - timeOfLastPing >= maxIdleDuration) {\n        log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n        // try to reconnect or exit\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      } else {\n        log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n      }\n    }\n  }\n}\n\n/**\n * This flow is responsible for handling keepAlive and pingPong methods for client,\n * if keepAlive is used the client simply sends the keepAlive message to the websocket after waiting the pingInterval\n * if pingPong is used the client is responsible for pinging the server and listening for server \"pong\" responses via the websocket\n * the client will then determine if too much time has passed and attempt to reconnect if its not receiving server pongs or if an error occurs\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * clientPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  const { checkConnectivity, method } = yield select(getConnectivityConfig)\n\n  let timeOfLastPong = Date.now()\n  let message = ''\n  let shouldCheck\n\n  while (true) {\n    // If the flag was explicitly set in state, prefer that over the config.\n    shouldCheck = yield select(getCheckConnectivity)\n    shouldCheck = typeof shouldCheck !== 'undefined' ? shouldCheck : checkConnectivity\n\n    const { pingInterval } = yield select(getConnectivityConfig)\n    const maxIdleDuration = pingInterval * maxMissedPings\n    const intervalInSeconds = pingInterval / 1000\n\n    if (shouldCheck) {\n      if (method.type === connCheckMethods.PING_PONG) {\n        message = { connCheck: { interval: intervalInSeconds } }\n      } else if (method.type === connCheckMethods.KEEP_ALIVE) {\n        message = { message_type: 'ping' }\n      } else {\n        log.error(`Invalid connectivity method: ${method}`)\n        break\n      }\n\n      log.debug(`${platform} is sending a ${method.type} every ${intervalInSeconds} sec.`)\n\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n      if (error) {\n        log.error('Exception in clientPing flow: ' + error.message)\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      }\n    } else {\n      log.debug('Set to not check websocket connectivity. Waiting for connectivity status change ...')\n\n      // If we shouldn't ping, wait until we receive a trigger to (maybe) ping.\n      const shouldCheckConnectivity = yield take(\n        action => action.type === 'CHANGE_CONNECTIVITY_CHECKING' && action.payload\n      )\n      log.debug(`Connectivity check setting changed. Check connectivity?: ${shouldCheckConnectivity}`)\n      continue\n    }\n\n    const delayStartTime = Date.now()\n    // Wait for either the ping interval, a disconnect or a pong from the server\n    const { disconnect, serverPong } = yield race({\n      expiry: delay(pingInterval),\n      serverPong: take(actionTypes.RECEIVE_SERVER_PONG),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // If we receive a serverPong, we will not have waited the full pingInterval duration.\n    //    Determine how long we were waiting for, so that we know how long to wait (again)\n    //    to fulfill the full pingInterval duration (before restarting the ping loop).\n    const timeElapsed = Date.now() - delayStartTime\n\n    // If we received a disconnect action, stop the pings and exit.\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from clientPing flow ...')\n      break\n    }\n\n    if (method.type === connCheckMethods.PING_PONG) {\n      if (serverPong) {\n        // we received a pong, wait pingInterval to send another ping\n        timeOfLastPong = Date.now()\n\n        const timeUntilNextPing = pingInterval - timeElapsed\n        const { disconnect } = yield race({\n          expiry: delay(timeUntilNextPing),\n          disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n        })\n        // If we received a disconnect action, stop the pings and exit.\n        if (disconnect) {\n          log.debug('Got disconnect action. Exiting from clientPing flow ...')\n          break\n        }\n      } else {\n        if (Date.now() - timeOfLastPong >= maxIdleDuration) {\n          log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n          // its been too long since the last pong, attempt to reconnect or exit\n          yield put(actions.lostConnection(undefined, platform))\n\n          break\n        } else {\n          log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Generic Websocket message that takes a websocket and a message and sends it\n * @param  {Object} ws  websocket\n * @return {Object}     Error object\n */\nfunction _sendWSMessage (ws, message) {\n  try {\n    if (ws && ws.readyState === 1) {\n      log.debug('Sending message on websocket.', message)\n      ws.send(message)\n    } else {\n      throw new Error('websocket was not in readyState')\n    }\n  } catch (e) {\n    return e\n  }\n}\n\n/**\n * Helper function for connecting to a websocket.\n * Attempts to connect a specified number of times before returning an error.\n * Includes a delay in between attempts, determined by configs.\n * @method connectWebsocket\n * @param  {Object} wsInfo\n * @return {Websocket|Object}  Either a connected websocket or an error object.\n */\nexport function * connectWebsocket (wsInfo, platform) {\n  const configs = yield select(getConnectivityConfig)\n  let connectionAttempt = 0\n  // The delay between attempts should not be shorter than 2 seconds.\n  let delayTime = configs.reconnectDelay > 2000 ? configs.reconnectDelay : 2000\n  let websocket\n\n  // If no limit is set, we will continually attempt to reconnect.\n  if (!configs.reconnectLimit) {\n    log.debug('No connectivity reconnect limit set.')\n  }\n\n  function * safeOpenWs (wsInfo) {\n    let websocket\n    try {\n      websocket = yield call(openWebsocket, wsInfo)\n    } catch (err) {\n      websocket = err\n    }\n    return websocket\n  }\n  while (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n    const wsConnectStart = Date.now()\n    const { openWs, timeout } = yield race({\n      openWs: call(safeOpenWs, wsInfo),\n      timeout: delay(delayTime)\n    })\n    const attemptDuration = Date.now() - wsConnectStart\n\n    // Checking for both timeout and open websocket errors here since we need to calculate the next delay parameters in\n    //  both scenarios\n    if (timeout || (openWs && openWs.error)) {\n      connectionAttempt++\n      websocket = openWs\n      log.debug(\n        `Failed to connect to websocket on ${platform}. (Attempt #${connectionAttempt}). Message: ${\n          timeout ? 'Timed out' : websocket.message\n        }.`\n      )\n\n      // If we are still under the reconnect attempt limit, calculate the next delay time and delay before retrying.\n      if (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n        // Calculate the remaining delay time by checking how long the previous connection attempt was.\n        // Do this before potentially lengthening the `delayTime` value.\n        const remainingDelay = timeout ? 0 : delayTime - attemptDuration\n\n        // Increase the delay time for the next loop if we're not at the limit.\n        if (delayTime !== configs.reconnectTimeLimit) {\n          delayTime = configs.reconnectDelay * Math.pow(configs.reconnectTimeMultiplier, connectionAttempt)\n          delayTime = delayTime < configs.reconnectTimeLimit ? delayTime : configs.reconnectTimeLimit\n        }\n\n        log.debug(`Websocket will attempt to reconnect after ${remainingDelay} ms on ${platform}`)\n        if (remainingDelay > 0) {\n          yield delay(remainingDelay)\n        }\n      } else {\n        log.debug(`Stopping websocket connection attempts on ${platform}.`)\n        // We are at reconnect attempt limit; if it was due to a timeout we need to return an error. In case of\n        //  websocket error, that will be returned by the websocket.\n        if (timeout) {\n          return {\n            error: true,\n            message: 'Timed out.'\n          }\n        }\n        break\n      }\n    } else if (openWs) {\n      websocket = openWs\n      break\n    }\n  }\n\n  // Return either the websocket or the latest error.\n  return websocket\n}\n","import { wsClosed, wsError, receiveServerPing, receiveServerPong } from '../interface/actions'\nimport { eventChannel, END, buffers } from 'redux-saga'\nimport { take, put, call } from 'redux-saga/effects'\n\nimport { toQueryString } from '../../common/utils'\n\n// Other plugins.\nimport { websocketNotification } from '../../notifications/interface/actions'\nimport { logManager } from '../../logs'\n\nconst INITIAL_BUFFER_SIZE = 50\nconst log = logManager.getLogger('CONNECTIVITY')\n\n/**\n * Create a new websocket.\n * @method openWebsocket\n * @param  {Object} options Websocket configuration options.\n * @param {string} options.protocol Websocket protocol to use.\n * @param {string} options.server Websocket hostname.\n * @param {string} options.port Websocket port to use.\n * @param {string} options.url Websocket notification channel.\n * @param {Object} options.params A list of URL params to attach to the websocket.\n * @return {WebSocket} ws Newly connected websocket.\n */\nexport function openWebsocket (options) {\n  // Create the websocket.\n  const ws = new WebSocket(\n    `${options.protocol}://${options.server}:${options.port}${options.url}` + toQueryString(options.params)\n  )\n\n  // Use a promise to wait for the first message from the websocket.\n  // This indicates whether the WS opened successfully or not.\n  const validateWS = new Promise((resolve, reject) => {\n    const onOpen = function () {\n      ws.onopen = null\n      ws.onerror = null\n      resolve(ws)\n    }\n    const onError = function () {\n      ws.onopen = null\n      ws.onerror = null\n\n      // TODO: Fix this?\n      /* eslint-disable-next-line prefer-promise-reject-errors */\n      reject({\n        // Websocket doesn't return error codes for security reasons and as such all websocket\n        // errors have to be handled the same.\n        error: true,\n        message: 'Could not connect to websocket. Received error on open.'\n      })\n    }\n    ws.onopen = onOpen\n    ws.onerror = onError\n  })\n  return validateWS\n}\n\n/**\n * Clean-up a provided websocket.\n * @method cleanupWebSocket\n * @param  {Websocket} ws Websocket to be cleaned-up.\n * @return {Websocket} ws The websocket after being cleaned.\n */\nexport function cleanupWebSocket (ws) {\n  if (ws.close) {\n    ws.close()\n  }\n  ws.onclose = null\n  ws.onmessage = null\n  ws.onopen = null\n  ws.onerror = null\n}\n\n/**\n * Create an event channel for a given websocket\n * @param  {WebSocket} ws       The websocket to make an event channel for.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {EventChannel}              The event channel corresponding to the WebSocket\n */\nfunction createWsChannel (ws, platform) {\n  // this function handles server messages\n  return eventChannel(emit => {\n    // Define handlers\n    ws.onmessage = message => {\n      // Mark this websocket are being connected as of now.\n      ws.kandy.lastContact = Date.now()\n\n      var data = JSON.parse(message.data)\n      log.debug('Received message on websocket.', data)\n      if (data.connCheck) {\n        // Handle CPaaS server pings\n        emit(receiveServerPing(data, platform))\n      } else if (data.connAck) {\n        // Handle CPaaS server pongs\n        emit(receiveServerPong(data, platform))\n      } else {\n        emit(websocketNotification(data, platform))\n      }\n    }\n    ws.onclose = data => {\n      emit(wsClosed(data, platform))\n      emit(END)\n    }\n    ws.onerror = err => {\n      emit(wsError(new Error(err), platform))\n      emit(END)\n    }\n\n    return () => cleanupWebSocket(ws)\n  }, buffers.expanding(INITIAL_BUFFER_SIZE))\n}\n\n/**\n * Saga worker for creating a websocket and emitting its events\n * @param {Object} ws configuration options.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {Generator}\n */\nexport function * wsEmitter (ws, platform) {\n  var wsChannel = yield call(createWsChannel, ws, platform)\n  while (true) {\n    const action = yield take(wsChannel)\n    yield put(action)\n  }\n}\n","// Redux-Saga\nimport { put } from 'redux-saga/effects'\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\nimport { update as updateConfig } from '../../config/interface/actions'\nimport { logManager } from '../../logs'\n\nimport { defaults } from 'lodash/fp'\n\nimport { sendMessage, receiveMessage } from './sagas'\n\n// The interface to implement.\nimport pluginInterface from '../interface'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from '../../../src/common/validation'\n\n// Get the logger\nconst log = logManager.getLogger('MESSAGING')\n\nconst defaultOptions = {\n  features: ['base']\n}\n\nconst v8nValidation = v8n.schema({\n  features: v8n.array().every.string()\n})\nconst parseOptions = parse('messaging', v8nValidation)\n\n/**\n * Factory function for the Link messaging plugin.\n * @method linkMessaging\n * @param  {Object} [options={}]\n * @param  {Array}  [options.features=['base']] - A list of the supported features of messaging\n * @return {Object} A plugin object.\n */\nexport default function linkMessaging (options = {}) {\n  options = defaults(defaultOptions, options)\n  parseOptions(options)\n\n  if (options.features.length > 1 || options.features[0] !== defaultOptions.features[0]) {\n    log.warn('Link messaging is not compatible with add-on ' + 'features. Reverting to base messaging.')\n    options.features = defaultOptions.features\n  }\n  log.info('Messaging features in use: ' + options.features)\n\n  function * init () {\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = ['simpleMessagingOnly', 'onlyInternalMessaging']\n\n  return {\n    sagas: [sendMessage, receiveMessage],\n    capabilities,\n    init,\n    api: pluginInterface.api,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    mixins: pluginInterface.mixins\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\nimport { isEqual } from 'lodash/fp'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.CREATE_CONVERSATION] = function (action) {\n  return {\n    type: eventTypes.CONVERSATIONS_NEW\n  }\n}\n\neventsMap[actionTypes.SEND_MESSAGE_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.MESSAGES_CHANGE,\n      args: {\n        destination: action.payload.destination,\n        type: action.payload.type,\n        messageId: action.payload.messageId,\n        sender: action.payload.sender\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.MESSAGE_RECEIVED] = function (action) {\n  const { meta, payload } = action\n  if (meta.newConversation) {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: [\n        {\n          destination: payload.destination,\n          type: action.meta.type\n        }\n      ]\n    }\n  }\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: {\n      destination: payload.destination,\n      messageId: payload.message.messageId,\n      type: action.meta.type\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_CONVERSATIONS_FINISHED] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGING_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: action.payload.conversations.map(conversation => {\n        return {\n          destination: conversation.destination,\n          type: conversation.type\n        }\n      })\n    }\n  }\n}\n\neventsMap[actionTypes.DELETE_CONVERSATION_FINISH] = function (action, { state }) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: state.messaging.conversations.map(conversation => {\n        if (\n          !(isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type)\n        ) {\n          return {\n            destination: conversation.destination,\n            type: conversation.type\n          }\n        }\n      })\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_MESSAGES_FINISHED] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGING_ERROR,\n      args: action.payload\n    }\n  } else {\n    return {\n      type: eventTypes.MESSAGES_CHANGE,\n      args: {\n        destination: action.payload.destination,\n        type: action.payload.type\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.CLEAR_MESSAGES] = function (action) {\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: action.payload\n  }\n}\n\neventsMap[actionTypes.DELETE_MESSAGE_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: action.payload\n    }\n  } else {\n    return {\n      type: eventTypes.MESSAGES_CHANGE,\n      args: {\n        destination: action.payload.destination,\n        type: action.payload.type\n      }\n    }\n  }\n}\n\nexport default eventsMap\n","import { actionChannel, take, put, select } from 'redux-saga/effects'\n// Messaging\nimport * as actionTypes from '../interface/actionTypes'\nimport { messageActions } from '../interface/actions'\nimport { getConversations } from '../interface/selectors'\n// Auth\nimport { getConnectionInfo } from '../../auth/interface/selectors'\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\nimport * as P from '../../predicates'\n// Request\nimport request from '../../request/effects'\n// Error\nimport BasicError, { messagingCodes } from '../../errors'\n// Logs\nimport { logManager } from '../../logs'\n\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Link send message saga.\n * Performs the workflow of sending a message using SPiDR/Link.\n * @method sendMessage\n */\nexport function * sendMessage () {\n  const sendMessageChannel = yield actionChannel([actionTypes.SEND_MESSAGE])\n  while (true) {\n    const action = yield take(sendMessageChannel)\n    const destination = action.payload.destination[0]\n    const parts = action.payload.message.parts\n    const timestamp = action.payload.message.timestamp\n    const { server, username } = yield select(getConnectionInfo)\n\n    const response = yield request({\n      url: `${server.protocol}://${server.server}:${server.port}/rest/version/${server.version}/user/${username}/instantmessage`,\n      method: 'POST',\n      body: JSON.stringify({\n        imRequest: {\n          charset: 'UTF-8',\n          toUrl: destination,\n          message: parts[0].text,\n          type: 'A2'\n        }\n      })\n    })\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        const { statusCode } = response.payload.body.imResponse\n        log.debug(`Failed to send message with status code ${statusCode}.`)\n\n        error = new BasicError({\n          code: messagingCodes.SEND_MESSAGE_FAIL,\n          message: `Failed to send message. Code: ${statusCode}.`\n        })\n      } else {\n        // Handler errors from the request helper.\n        const { message } = response.payload.result\n        log.debug('Send message request failed', message)\n\n        error = new BasicError({\n          code: messagingCodes.SEND_MESSAGE_FAIL,\n          message: `Send message request failed: ${message}.`\n        })\n      }\n      yield put(\n        messageActions.sendMessageFinish({\n          sender: username,\n          destination: [destination],\n          type: 'im',\n          parts: parts,\n          timestamp: timestamp,\n          error\n        })\n      )\n    } else if (response.payload.body.imResponse && response.payload.body.imResponse.messageId) {\n      yield put(\n        messageActions.sendMessageFinish({\n          sender: username,\n          destination: [destination],\n          type: 'im',\n          parts: parts,\n          timestamp: timestamp,\n          messageId: response.payload.body.imResponse.messageId\n        })\n      )\n    } else {\n      // Unknown error scenario.\n    }\n  }\n}\n/**\n * Link receive message saga.\n * Performs the workflow of receiving messages over the SPiDR websocket.\n * @method receiveMessage\n */\nexport function * receiveMessage () {\n  // Redux-saga take() pattern.\n  // Using predicates directly doesn't work... so wrap it.\n  // TODO: Fix this properly.\n  function receiveMessagePattern (action) {\n    return P.and(P.type(NOTIFICATION_RECEIVED)(action) && P.link)(action)\n  }\n\n  while (true) {\n    const action = yield take(receiveMessagePattern)\n\n    if (action.payload.notificationMessage) {\n      if (action.payload.notificationMessage.eventType === 'IM') {\n        const message = action.payload.notificationMessage.imnotificationParams.msgText\n        const sender = action.payload.notificationMessage.imnotificationParams.primaryContact.split('sip:')[1]\n        const messageId = action.payload.notificationMessage.eventId\n        const conversations = yield select(getConversations)\n\n        // Search for an existing conversation that matches this message's sender.\n        const convo = conversations.find(conv => {\n          return conv.destination[0] === sender\n        })\n\n        if (convo) {\n          yield put(\n            messageActions.messageReceived(\n              [sender],\n              [{ mimeType: 'text/plain', type: 'text', text: message }],\n              messageId,\n              sender,\n              Date.now(),\n              {\n                newConversation: false,\n                type: 'im'\n              }\n            )\n          )\n        } else {\n          // Add the new message to the convo in the store\n          yield put(\n            messageActions.messageReceived(\n              [sender],\n              [{ mimeType: 'text/plain', type: 'text', text: message }],\n              messageId,\n              sender,\n              Date.now(),\n              {\n                newConversation: true,\n                type: 'im'\n              }\n            )\n          )\n        }\n      }\n    }\n  }\n}\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Action helper functions.\n */\n\nfunction sendMessageHelper (actionType, destination, parts, timestamp, type, id) {\n  return {\n    type: actionType,\n    payload: {\n      destination,\n      id: id,\n      message: {\n        timestamp,\n        isPending: true,\n        read: false,\n        parts,\n        type\n      }\n    }\n  }\n}\n\nfunction messageReadHelper (actionType, messageId, participant) {\n  return {\n    type: actionType,\n    payload: { messageId, participant }\n  }\n}\n\n/**\n * Message actions.\n * Actions about the CRUD of message objects.\n */\n\n/**\n * Creates a send message action. Triggered when the user initiates the send message process.\n *\n * @method sendMessage\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {Array} parts The message parts, as a formatted object.\n * @param {number} timestamp A timestamp for the sent message in seconds.\n * @param {number} id The ID of the conversation as it exists in the back end.\n * @param {string} type Type of message. 'im', 'group' or 'sms'.\n * @returns {Object} A flux standard action representing the send message action.\n */\nexport const sendMessage = (destination, parts, timestamp, type, id) =>\n  sendMessageHelper(actionTypes.SEND_MESSAGE, destination, parts, timestamp, type, id)\n\n/**\n * Creates a send message finished action. Trigged when a message send function has received a success response.\n *\n * @method sendMessageFinish\n * @param {Object} $0\n * @param {Array} $0.destination An array of destinations for messages created in this conversation.\n * @param {string} $0.sender The sender of the outgoing message.\n * @param {string} $0.type The type of conversation: can be one of 'im', 'sms' or 'group'\n * @param {Array} $0.parts The message parts.\n * @param {number} $0.timestamp A timestamp for the sent message in seconds.\n * @param {string} [$0.messageId] The returned messageId of the message if sent successfully.\n * @param {string} [$0.deliveryStatus] The status of sent message\n * @param {Object} [$0.error] A basic error object\n * @returns {Object} A flux standard action representing the send message finished action.\n */\nexport const sendMessageFinish = ({\n  destination,\n  sender,\n  type,\n  parts,\n  timestamp,\n  messageId,\n  deliveryStatus,\n  error\n}) => {\n  return {\n    type: actionTypes.SEND_MESSAGE_FINISH,\n    payload: { destination, sender, type, parts, timestamp, messageId, deliveryStatus, error },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates a message received action. Triggered when the websocket receives a chat message.\n *\n * @method messageReceived\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {Array} parts The message parts.\n * @param {string} messageId The messageId of the message that has been received.\n * @param {string} sender The user who sent the message. This is the user who the conversation is with.\n * @param {number} timestamp A timestamp for the sent message.\n * @param {Object} meta - A meta object.\n * @param {string} meta.type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {boolean} meta.newConversation - A boolean value indicating whether the message corresponds to a conversation not yet in the store.\n * @returns {Object} A flux standard action representing the message received action.\n */\nexport function messageReceived (\n  destination,\n  parts,\n  messageId,\n  sender,\n  timestamp,\n  meta = { type: 'im', newConversation: false }\n) {\n  return {\n    type: actionTypes.MESSAGE_RECEIVED,\n    meta: meta,\n    payload: {\n      destination: destination,\n      message: {\n        timestamp: timestamp,\n        isPending: false,\n        read: false,\n        parts: parts,\n        sender: sender,\n        messageId: messageId\n      }\n    }\n  }\n}\n\n/**\n * Creates an incoming message read action. This triggers when we receive a \"Message Read\" notification over the websocket.\n *\n * @method incomingMessageRead\n * @param {string} messageId The unique id of the message being marked as read.\n * @param {string} participant The other participant of the conversation.\n * @returns {Object} A flux standard action representing the incoming message read action.\n */\nexport const incomingMessageRead = (messageId, participant) =>\n  messageReadHelper(actionTypes.INCOMING_MESSAGE_READ, messageId, participant)\n\n/**\n * Creates a send message read action. This should send a \"mark message as read\" request to the server.\n *\n * @method sendMessageRead\n * @param {string} messageId The unique id of the message being marked as read.\n * @param {string} participant The other participant of the conversation.\n * @returns {Object} A flux standard action representing the send message read action.\n */\nexport const sendMessageRead = (messageId, participant) =>\n  messageReadHelper(actionTypes.SEND_MESSAGE_READ, messageId, participant)\n\n/**\n * Creates a send message read finish action. This triggers on server response when attempting to mark a message read.\n *\n * @method sendMessageReadFinish\n * @param {Object} $0\n * @param {string} $0.messageId The unique id of the message being marked as read.\n * @param {string} $0.participant The other participant of the conversation.\n * @param {Object} $0.error A Basic error object.\n * @returns {Object} A flux standard action representing the send message read finish action.\n */\nexport function sendMessageReadFinish ({ messageId, participant, error }) {\n  return {\n    type: actionTypes.SEND_MESSAGE_READ_FINISH,\n    payload: error || { messageId, participant },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates a fetch messages action. This is dispatched by the API directly.\n * @method fetchMessages\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {number} amount A number representing the amount of messages to fetch.\n * @returns {Object} A flux standard action representing the fetch messages action.\n */\nexport function fetchMessages (destination, amount, type) {\n  return {\n    type: actionTypes.FETCH_MESSAGES,\n    payload: { destination, amount, type }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method fetchMessagesFinished\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {Array} messages An array of formatted messages to put into the store.\n * @param {Object} [error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function fetchMessagesFinished (destination, type, messages, error) {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FINISHED,\n    payload: error || { destination, type, messages },\n    error: !!error\n  }\n}\n\n/**\n * Request to clear messages from a conversation's state.\n * @method clearMessages\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @returns {Object} A flux standard action.\n */\nexport function clearMessages (destination, type) {\n  return {\n    type: actionTypes.CLEAR_MESSAGES,\n    payload: {\n      destination: destination,\n      type: type\n    }\n  }\n}\n\n/**\n * Request to delete all the messages from a conversation.\n * @method deleteMessage\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {string} messageId The ID of the message targeted for deletion\n * @returns {Object} A flux standard action.\n */\nexport function deleteMessage (destination, type, messageId) {\n  return {\n    type: actionTypes.DELETE_MESSAGE,\n    payload: {\n      destination: destination,\n      type: type,\n      messageId: messageId\n    }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method deleteMessagesFinish\n * @param {Object} $0\n * @param {Array} $0.destination An array of destinations for messages created in this conversation.\n * @param {string} $0.type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {string} $0.messageId The ID of the message that was targeted for deletion\n * @param {Object} [$0.error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function deleteMessageFinish ({ destination, type, messageId, error }) {\n  return {\n    type: actionTypes.DELETE_MESSAGE_FINISH,\n    payload: error || { destination, type, messageId },\n    error: !!error\n  }\n}\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Conversation actions.\n * Actions relating to the creation/management of conversation objects.\n */\n\n/**\n * Creates a create conversation action. Triggered when the user creates a new conversation object.\n *\n * @method createConversation\n * @param {Array} destination An array of destinations for messages created in this conversation.\n * @param {Object} options The options object can contain any keys an app may want passed along into the conversation object in the store.\n * @returns {Object} A flux standard action representing the create conversation action.\n */\nexport function createConversation (destination, options) {\n  return {\n    type: actionTypes.CREATE_CONVERSATION,\n    payload: {\n      destination: destination,\n      messages: [],\n      isTypingList: [],\n      ...options\n    }\n  }\n}\n\n/**\n * Creates a fetch conversations action. This is dispatched by the API directly.\n * @param {Object} [options] An optional configuration object to query for more specific results. If no object is passed, all threads will be retrieved\n * @method fetchConversations\n * @returns {Object} A flux standard action representing the fetch conversations action.\n */\nexport function fetchConversations (options) {\n  return {\n    type: actionTypes.FETCH_CONVERSATIONS,\n    payload: {\n      ...options\n    }\n  }\n}\n\n/**\n * Creates a fetch conversations finished action.\n * @method fetchConversationsFinished\n * @param {Object} $0\n * @param {Array} [$0.conversations] An array of conversation objects, if fetch was successful\n * @param {Object} [$0.error] An error object, only included if fetchConversations implementation had an error.\n * @returns {Object} A flux standard action representing the fetch conversations finished action.\n */\nexport function fetchConversationsFinished ({ conversations, error }) {\n  return {\n    type: actionTypes.FETCH_CONVERSATIONS_FINISHED,\n    payload: error || { conversations },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates an update conversation action.\n *\n * @method updateConversation\n * @param {Object} conversation The conversation object\n * @param {Array} conversation.destination An array of strings representing the destinations for messages that are sent from this conversation object. This property is always required, as it is the primary property by which conversations are organized in messaging plugin\n * @param {number} [conversation.id] The conversation object's corresponding thread ID\n * @param {string} [conversation.type] The conversation type, which is expected to be one of: \"im\", \"sms\", \"group\".\n * @returns {Object} A flux standard action representing the create conversation action.\n */\nexport function updateConversation (conversation) {\n  return {\n    type: actionTypes.UPDATE_CONVERSATION,\n    payload: conversation\n  }\n}\n\n/**\n * Request to delete all the messages from a conversation.\n * @method deleteConversation\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @returns {Object} A flux standard action.\n */\nexport function deleteConversation (destination, type) {\n  return {\n    type: actionTypes.DELETE_CONVERSATION,\n    payload: {\n      destination: destination,\n      type: type\n    }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method deleteConversationFinish\n * @param {Object} $0\n * @param {Array} $0.destination An array of destinations for messages created in this conversation.\n * @param {string} $0.type The type of conversation: can be one of \"im\", \"sms\", \"group\" or \"other\"\n * @param {Object} [$0.error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function deleteConversationFinish ({ destination, type, error }) {\n  return {\n    type: actionTypes.DELETE_CONVERSATION_FINISH,\n    payload: error || { destination, type },\n    error: !!error\n  }\n}\n","import { overEvery, overSome, matches, map } from 'lodash/fp'\n// Constants\nimport { platforms } from './constants'\n\nexport { matches }\nexport const and = (...operands) => overEvery(operands)\nexport const or = (...operands) => overSome(operands)\nexport const type = type => matches({ type })\nexport const platform = platform => matches({ meta: { platform } })\nexport const types = (...types) => overSome(map(type, types))\n\nexport const link = platform(platforms.LINK)\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\nimport mixins from './mixins'\n\n/**\n * This interface is for a messaging plugin.\n * @type {string}\n */\nconst name = 'messaging'\n\nexport default {\n  name,\n  api,\n  reducer,\n  mixins\n}\n","/**\n * The messaging feature revolves around a 'conversation' namespace. It is responsible to store the conversations\n * and its messages, and return conversation objects when requested.\n *\n * See the \"Conversation\" and \"Message\" sections of the documentation for more details.\n *\n *\n * Messaging functions are all part of the 'conversation' namespace. Ex: client.conversation.get('id').\n *\n * @public\n * @namespace conversation\n */\n\nimport { convoActions } from './actions'\nimport { getConversations as selectConversations, findConversation } from './selectors'\nimport { logManager, API_LOG_TAG } from '../../logs'\n\n// Retrieve logger\nconst log = logManager.getLogger('MESSAGING')\n\nexport default function api (context) {\n  const messagingApi = {\n    // TODO: Revise this API's argument, since it is using names that are defined by CIM  they are not very descriptive.\n    /**\n     * Attempts to retrieve a list of conversations that the current user is a part of.\n     * These conversations can then be retrieved from the store using get().\n     *\n     * @public\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If no object is passed, all threads will be retrieved.\n     * @param {string} [options.touched] The unix timestamp in seconds representing the date from which\n     *  to return any threads that have changed. Can also pass the string literal \"lastcheck\", resulting in\n     *  the back-end making use of the most recent date value provided in a previous request\n     * @param {string} [options.type] Limit results to one of: \"internal\", \"sms\", \"group\" or \"unknown\".\n     * @param {string|number} [options.thread] Limit results to one thread specified by its thread handle.\n     * @memberof conversation\n     * @requires fetchConversations\n     * @method fetch\n     */\n    fetch: function (options = {}) {\n      log.debug(API_LOG_TAG + 'conversation.fetch: ', options)\n\n      context.dispatch(convoActions.fetchConversations(options))\n    },\n    /**\n     * Get a conversation object matching the user ID provided in the 'destination' parameter.\n     * If successful, the event 'conversations:change' will be emitted.\n     *\n     * This API will retrieve a conversation already existing in the store.\n     *\n     * @public\n     * @memberof conversation\n     * @requires onlyInternalMessaging\n     * @method get\n     * @param {string} destination The destination for messages created in this conversation. This will\n     * be a user's sip address.\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If this object is not passed, the function will query for \"im\" conversation with that recipient.\n     * @param {string} [options.type] The type of conversation to retrieve. Can be one of \"im\", \"sms\" or \"other\".\n     * @returns {conversation.Conversation} A Conversation object matching the passed destination, otherwise undefined is returned.\n     */\n    /**\n     * Get a conversation object matching the user IDs provided in the 'destination' parameter.\n     * If successful, the event 'conversations:change' will be emitted.\n     * Multi-user conversations have a destination comprised of multiple user IDs.\n     *\n     * @public\n     * @memberof conversation\n     * @requires multiUserConversation\n     * @method get\n     * @param {Array} destination An array of destinations for messages created in this conversation.\n     * These will be a user's sip address.\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If this object is not passed, the function will query for \"im\" conversations associated with those destinations.\n     * @param {string} [options.type] The type of conversation to retrieve. Can be one of \"im\", \"sms\" or \"other\".\n     * @returns {conversation.Conversation} A Conversation object matching the passed destination, otherwise undefined is returned.\n     */\n    /**\n     * Get a conversation object matching the user ID provided in the 'recipient' parameter.\n     *\n     * This API will retrieve a conversation already existing in the store.\n     *\n     * @public\n     * @memberof conversation\n     * @requires internalAndSmsMessaging\n     * @method get\n     * @param {string} recipient The destination for messages created in this conversation. This\n     * will be a user's sip address.\n     * @param {Object} [options] An optional configuration object to query for more specific results.\n     * If this object is not passed, the function will query for \"im\" conversation with that recipient.\n     * @param {string} [options.type] The type of conversation to retrieve. Can be one of \"im\", \"sms\" or \"other\".\n     * @returns {Object} A Conversation object matching the passed recipient, otherwise undefined is returned.\n     */\n    get: function (recipient, options = { type: 'im' }) {\n      log.debug(API_LOG_TAG + 'conversation.get: ', recipient, options)\n      const destination = Array.isArray(recipient) ? [...recipient] : [recipient]\n      let description = 'Conversation'\n      let messages\n      let id\n\n      const conversation = findConversation(context.getState(), destination, options.type)\n      if (conversation) {\n        if (options.type === conversation.type) {\n          description = conversation.description\n          messages = conversation.messages\n          id = conversation.id\n\n          return context.primitives.Conversation({\n            destination,\n            type: options.type,\n            id: id,\n            description,\n            messages: messages,\n            lastMessage: conversation.lastMessage,\n            isTypingList: conversation.isTypingList,\n            lastReceived: conversation ? conversation.lastReceived : undefined,\n            lastPull: conversation ? conversation.lastPull : undefined\n          })\n        } else {\n          log.info(\n            'Conversation found with matching destination, but conversation type does not match the type requested. Please specify the appropriate type, or call client.conversation.create() for a new type of conversation'\n          )\n        }\n      } else {\n        log.info(\n          'Requested conversation not in state. Please use the create function if you would like a new conversation object.'\n        )\n      }\n      return undefined\n    },\n    /**\n     * Create and return a new conversation object. Any messages being sent through this conversation\n     * object will be sent to the destination provided\n     *\n     * @public\n     * @memberof conversation\n     * @requires internalAndSmsMessaging\n     * @method create\n     * @param {string} recipient\n     * @param options\n     * @returns {Object} a Conversation object\n     */\n    /**\n     * Create and return a new conversation object. Any messages being sent through this conversation\n     * object will be sent to the destinations provided\n     *\n     * @public\n     * @memberof conversation\n     * @requires multiUserConversation\n     * @method create\n     * @param {Array} recipient An array of destinations for messages created in this conversation. These will be a user's sip address.\n     * @param {string} type The type of conversation to create. Can be one of \"im\", \"sms\", \"group\" or \"other\"\n     * @param options\n     * @returns {Object} a Conversation object\n     */\n    create: function (recipient, options = { type: 'im' }) {\n      log.debug(API_LOG_TAG + 'conversation.create: ', recipient, options)\n      const destination = Array.isArray(recipient) ? recipient : [recipient]\n      const prevConv = findConversation(context.getState(), destination, options.type)\n\n      if (!prevConv) {\n        context.dispatch(convoActions.createConversation(destination, options))\n      }\n\n      return context.primitives.Conversation({\n        destination,\n        type: options.type\n      })\n    },\n    /**\n     * Returns all conversations currently tracked by the SDK\n     *\n     * @public\n     * @memberof conversation\n     * @requires internalAndSmsMessaging\n     * @requires onlyInternalMessaging\n     * @method getAll\n     * @returns {Array<conversation.Conversation>} An array of conversation objects.\n     */\n    getAll: function () {\n      log.debug(API_LOG_TAG + 'conversation.getAll')\n      const conversations = selectConversations(context.getState())\n\n      // Map conversation Objects to Conversation-Mixin Objects\n      return conversations.map(conversation => context.primitives.Conversation(conversation))\n    }\n  }\n  return { conversation: messagingApi }\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { unionBy, unionWith, sortBy, isEqual } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CREATE_CONVERSATION] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: [...state.conversations, { ...action.payload }]\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_CONVERSATIONS_FINISHED] = {\n  next (state, action) {\n    // TODO: does not persist conversations unique to local state\n    return {\n      ...state,\n      conversations: unionWith(\n        (a, b) => isEqual(a.destination, b.destination) && a.type === b.type, // Comparator\n        action.payload.conversations,\n        state.conversations // Conversation arrays\n      )\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_CONVERSATION] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return { ...conversation, ...action.payload }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_MESSAGES] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            isPending: true\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_MESSAGES_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: sortBy('timestamp', unionBy('messageId', action.payload.messages, conversation.messages)),\n            isTypingList: [],\n            isPending: false\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.message.type\n        ) {\n          return {\n            ...conversation,\n            messages: [...conversation.messages, action.payload.message]\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.INCOMING_MESSAGE_READ] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              if (message.messageId === action.payload.messageId) {\n                return { ...message, read: true }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE_READ_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              if (message.messageId === action.payload.messageId) {\n                return { ...message, read: true }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.MESSAGE_RECEIVED] = {\n  next (state, action) {\n    if (action.meta.newConversation) {\n      return {\n        ...state,\n        conversations: [\n          ...state.conversations,\n          {\n            destination: action.payload.destination,\n            messages: [action.payload.message],\n            type: action.meta.type,\n            lastReceived: action.payload.message.timestamp\n          }\n        ]\n      }\n    } else {\n      return {\n        ...state,\n        conversations: state.conversations.map(conversation => {\n          if (isEqual(conversation.destination, action.payload.destination) && conversation.type === action.meta.type) {\n            return {\n              ...conversation,\n              messages: [...conversation.messages, action.payload.message],\n              lastReceived: action.payload.message.timestamp\n            }\n          }\n          return conversation\n        })\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => sendMessageFinishHelper(message, action))\n          }\n        }\n        return conversation\n      })\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.filter(\n              message => message.timestamp !== action.payload.timestamp && !message.isPending\n            )\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\n// Remove all messages from the specified conversation.\nreducers[actionTypes.CLEAR_MESSAGES] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: []\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.DELETE_MESSAGE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.filter(message => message.messageId !== action.payload.messageId)\n          }\n        }\n        return conversation\n      })\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.DELETE_CONVERSATION_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.filter(\n        conversation =>\n          !(isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type)\n      )\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\n/*\n * Combine all of reducers into a single reducer, with\n *      a default state of an empty array.\n */\nconst reducer = handleActions(reducers, { conversations: [], errors: [] })\nexport default reducer\n\n/**\n * sendMessageFinishHelper\n *\n * A helper function to make dealing with the messages array in SEND_MESSAGE_FINISH\n * a little bit easier.\n *\n * @param {Object} message\n * @param {Object} action\n */\nfunction sendMessageFinishHelper (message, action) {\n  if (message.timestamp === action.payload.timestamp) {\n    if (action.payload.error) {\n      message = {\n        ...message,\n        sender: action.payload.sender,\n        isPending: false,\n        messageId: null,\n        error: action.payload.error\n      }\n    } else {\n      message = {\n        ...message,\n        sender: action.payload.sender,\n        isPending: false,\n        messageId: action.payload.messageId,\n        parts: action.payload.parts\n      }\n    }\n    if (action.payload.deliveryStatus) {\n      message.deliveryStatus = action.payload.deliveryStatus\n    }\n  } else {\n    message = { ...message }\n  }\n  return message\n}\n","/**\n * A Conversation object represents a conversation between either two users, or a\n * user and a group. A Conversation can create messages via the conversation's\n * {@link conversation.Conversation.createMessage createMessage()} function.\n * @public\n * @static\n * @typedef {Object} Conversation\n * @memberof conversation\n * @requires richMessagingWithoutLocation\n * @property {string} destination The Id of the remote user with which the current user is having a conversation.\n * @property {number} lastReceived The timestamp (milliseconds since epoch) of when a message was last received in this conversation.\n */\n// `features` and `lastPull` are not documented because they're intended to be internal\n// `type` is not documented because as of now there are no types other than 'im'\n\n/**\n * A Conversation object represents a conversation between either two users, or a\n * user and a group. A Conversation can create messages via the conversation's\n * {@link conversation.Conversation.createMessage createMessage()} function.\n * @public\n * @static\n * @typedef {Object} Conversation\n * @memberof conversation\n * @requires simpleMessagingOnly\n * @property {string} destination The id of the remote user with which the current user is having a conversation.\n */\n\n/**\n * A Message object is a means by which a sender can deliver information to a recipient.\n *\n * Creating and sending a message:\n *\n * A message object can be obtained through the {@link conversation.Conversation.createMessage Conversation.createMessage} API on an existing conversation.\n *\n * Messages have Parts which represent pieces of a message, such as a text part, a json object part or a file part.\n * Once all the desired parts have been added to the message using the {@link conversation.Message.addPart Message.addPart} function,\n * the message can then be sent using the {@link conversation.Message.send Message.send} function.\n *\n * Once the sender sends a message, this message is saved in sender's state as an object.\n * Similarly, once the recipient gets a message, this message is saved in recipient's state.\n *\n * Retrieving a delivered message:\n *\n * Once a message is delivered successfully, it can be\n * obtained through the {@link conversation.Conversation.getMessages Conversation.getMessages} or {@link conversation.Conversation.getMessage Conversation.getMessage} API on an existing conversation.\n *\n * Below are the properties pertaining to the message object, returned by Conversation.getMessage(s) APIs, for either sender or recipient.\n *\n * @property {number} timestamp A Unix timestamp in seconds marking the time when the message was created by sender.\n * @property {Array<conversation.Part>} parts An array of Part Objects.\n * @property {string} sender The primary contact address of the sender.\n * @property {Array<string>} destination An array of primary contact addresses associated with various destinations to which the message is meant to be delivered.\n * @property {string} messageId The unique id of the message. The message object (stored in sender's state) has a different id\n * than the one associated with the message object stored in recipient's state.\n * @property {string} type The type of message that was sent. See {@link conversation.chatTypes} for valid types.\n * This property applies only to message objects stored in sender's state.\n *\n * @public\n * @static\n * @typedef {Object} Message\n * @memberof conversation\n */\n\nimport { find, includes, isEqual } from 'lodash/fp'\nimport { convoActions, messageActions } from './actions'\n\nimport { getMessagingConfig, findConversation } from './selectors'\nimport { getUserInfo } from '../../auth/interface/selectors'\nimport compose from '@stamp/compose'\n// Events\nimport { emitEvent } from '../../events/interface/actions'\nimport { MESSAGING_ERROR } from './eventTypes'\n\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Base conversation stamp\n *\n * @param {Array} destination The Destination for messages being sent through\n * this conversation in this instance of the SDK. This should be an Array with any number of user IDs\n * @param {string} type='im' The type of the message.\n * @param {string} id=undefined The unique identifier for base conversation.\n * @param {string} description='' The description associated with base conversation.\n * @param {Array} messages=[] An array containing the conversation's messages.\n * @param {number} lastReceived The timestamp associated with the last received message.\n * @param {string} lastMessage This is the last received message in a given conversation, as delivered by server.\n */\nconst conversationBase = {\n  initializers: [\n    function ({\n      destination,\n      type = 'im',\n      id = undefined,\n      description = '',\n      messages = [],\n      isTypingList = [],\n      lastReceived,\n      lastPull,\n      lastMessage = ''\n    }) {\n      this.destination = destination\n      this.type = type\n      this.description = description\n      this.messages = messages\n      this.lastMessage = lastMessage\n      this.isTypingList = isTypingList\n      this.id = id\n      const features = getMessagingConfig(this.context.getState()).features\n      if (this.destination.length === 1) {\n        const groupIndex = features.indexOf('group')\n        if (groupIndex > -1) {\n          features.splice(groupIndex, 1)\n        }\n      }\n      this.features = features\n      this.lastReceived = lastReceived\n      this.lastPull = lastPull\n      this.isPending = false\n    }\n  ],\n\n  methods: {\n    /**\n     * Create and return a message object. You must specify the part. If this is a simple text message, provide a `text` part as demonstrated in the example.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessaging\n     * @constructs Message\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\", or \"location\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     * @param {Object} [part.location] The location of the part. Must be a part of type \"location\".\n     * @param {number} [part.location.longitude] The longitude of the location.\n     * @param {number} [part.location.latitude] The latitude of the location.\n     * @returns {Object} The newly created Message object.\n     *\n     * @example\n     * conversation.createMessage({type: 'text', text: 'This is the message'});\n     */\n    /**\n     * Create and return a message object. You must specify the part. If this is a simple text message, provide a `text` part as demonstrated in the example.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessagingWithoutLocation\n     * @constructs Message\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     * @returns {conversation.Message} The newly created Message object.\n     *\n     * @example\n     * conversation.createMessage({type: 'text', text: 'This is the message'});\n     */\n    /**\n     * Create and return a message object. You must provide a `text` part as demonstrated in the example.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires simpleMessagingOnly\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Must be \"text\".\n     * @param {string} part.text The text of the part. Must be a part of type \"text\".\n     * @returns {conversation.Message} The newly created Message object.\n     *\n     * @example\n     * conversation.createMessage({type: 'text', text: 'This is the message'});\n     */\n    createMessage (part) {\n      const messageContext = {\n        features: this.features,\n        isGroup: this.destination.length > 1,\n        id: this.id,\n        type: this.type\n      }\n      return this.context.primitives.Message({\n        destination: this.destination,\n        part,\n        context: messageContext,\n        type: this.type\n      })\n    },\n\n    /**\n     * Clears all messages in this conversation from local state.\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method clearMessages\n     */\n    clearMessages () {\n      this.context.dispatch(messageActions.clearMessages(this.destination, this.type))\n    },\n\n    /**\n     * Get the messages associated with this conversation.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @returns {Object[]} messages An array containing the conversation's messages.\n     * @returns {Function} messages.markRead Marks the message as read.\n     * @returns {Function} messages.forward Forward the message to another user.\n     * @returns {string} messages.messageId The Id of the message.\n     * @returns {string} messages.sender The user Id of the user who sent the message.\n     * @returns {number} messages.timestamp The time at which the message was sent.\n     * @returns {boolean} messages.read Whether the message has been marked as read.\n     * @returns {boolean} messages.isPending Whether the message has finished being sent to the server.\n     * @returns {Array} messages.parts The parts of the message.\n     */\n    getMessages: function () {\n      const convo = findConversation(this.context.getState(), this.destination, this.type)\n\n      return convo.messages.map(message => {\n        message.forward = participant => {\n          this.context.dispatch(messageActions.sendMessage(participant, message.parts, Date.now(), this.type, this.id))\n        }\n\n        const userInfo = getUserInfo(this.context.getState())\n        // Only allow the end user to markRead on message that were incoming.\n        if (message.sender !== userInfo.username) {\n          message.markRead = () => {\n            this.context.dispatch(messageActions.sendMessageRead(message.messageId, this.destination))\n          }\n        }\n        return message\n      })\n    },\n\n    /**\n     * Get a specific message from this conversation.\n     * @public\n     * @static\n     * @method getMessage\n     * @memberof conversation.Conversation\n     * @param {string} messageId ID of the message to retrieve.\n     * @return {Object} A message object.\n     */\n    getMessage (messageId) {\n      const convo = findConversation(this.context.getState(), this.destination, this.type)\n      const message = find(message => message.messageId === messageId)(convo.messages)\n\n      if (!message) {\n        log.debug(`Message (${messageId}) not found in conversation (${this.destination}).`)\n        return\n      }\n\n      // TODO: Have a helper that \"augments\" messages.\n      // \"Augment\" the message like we do in `getMessages`.\n      message.forward = participant => {\n        this.context.dispatch(messageActions.sendMessage(participant, message.parts, Date.now(), this.type, this.id))\n      }\n      // Only allow the end user to markRead on message that were incoming.\n      const userInfo = getUserInfo(this.context.getState())\n      if (message.sender !== userInfo.username) {\n        message.markRead = () => {\n          this.context.dispatch(messageActions.sendMessageRead(message.messageId, this.destination))\n        }\n      }\n      return message\n    },\n\n    /**\n     * Delete messages from this conversation. Provide an array of message IDs representing the messages for which the DELETE_MESSAGE action will be dispatched. If no message IDs are provided, all of the messages will be deleted.\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessaging\n     * @method deleteMessages\n     * @param {Array} messageIds An array of message IDs\n     */\n    deleteMessages: function (messageIds = []) {\n      if (messageIds.length === 0) {\n        // If this method was called without providing any specific message IDs, we will assume that all messages should be deleted\n        this.messages.forEach(message => messageIds.push(message.messageId))\n      }\n      messageIds.forEach(messageId => {\n        this.context.dispatch(messageActions.deleteMessage(this.destination, this.type, messageId))\n      })\n    },\n\n    /**\n     * Delete this conversation on the server\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @requires richMessaging\n     * @method delete\n     */\n    delete: function () {\n      this.context.dispatch(convoActions.deleteConversation(this.destination, this.type))\n    },\n\n    /**\n     * Subscribe to this conversations messages array.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @param {Function} subscriber A subscriber function to be triggered when the messages array of this conversation is updated.\n     * @param {string} subscriber.destination The conversation participants.\n     * @param {string} subscriber.messageId The ID of the message that caused the event.\n     * @return {Function} The unsubscribe function.\n     */\n    subscribe: function (subscriber) {\n      if (subscriber) {\n        // Create a subscriber wrapper to properly determine if this messages:change event is relevant to this convo\n        // TODO: we might need to change the name of `conversationId` as it is used here. Conversations have actual IDs in the backend, which are an integer value rather than an array of strings, as is the case with destination. We track conversation IDs, as they exist in the back end, as we are required to identify the conversation by `id` when performing actions in the backend on a Group Conversation.\n        const subscriberWrapper = ({ destination, messageId }) => {\n          if (isEqual(destination, this.destination)) {\n            subscriber({ destination, messageId })\n          }\n        }\n        // Subscribe to the messages:change event with the wrapped subscriber\n        this.context.api.on('messages:change', subscriberWrapper)\n\n        // Return the unsubscribe function\n        return () => {\n          this.context.api.off('messages:change', subscriberWrapper)\n        }\n      }\n    }\n  }\n}\n\n/*\n * Conversation history stamp. Handles any functions that retrieve history from the server concerning conversations.\n */\nconst conversationHistory = {\n  initializers: [\n    function () {\n      const features = getMessagingConfig(this.context.getState()).features\n      if (!includes('history', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.fetchMessages\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Allows the user to fetch messages associated with a specific conversation from the server.\n     * When the operation is complete, a NEW_MESSAGE event will be emitted.\n     * Messages can then be retrieved using getMessages.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method fetchMessages\n     * @param {number} [amount=50] An amount of messages to fetch.\n     */\n    fetchMessages: function (amount = 50) {\n      this.context.dispatch(messageActions.fetchMessages(this.destination, amount, this.type))\n    }\n  }\n}\n\n/*\n * base Message stamp\n * @param {string} destination The Destination for messages being sent through\n * this conversation in this instance of the SDK. This can be one or many users,\n * separated by commas `,`\n * @param  {Object} part - Initial part to the message.\n * @param  {Object} context - Information and capabilities for how the message will act with regard to the conversation.\n * @param  {Array} context.features - List of features the conversation supports.\n * @param  {Function} context.send - Function for sending the message.\n * @param  {string} type=im - The type of the message\n */\nconst messageBase = {\n  initializers: [\n    function ({ destination, part, context, type = 'im' }) {\n      this.destination = Array.isArray(destination) ? destination : [destination]\n      this.convoContext = context\n      this.type = destination.length > 1 ? 'group' : type\n      if (typeof part === 'string') {\n        part = { type: 'text', text: part }\n      }\n      this.parts = [part]\n    }\n  ],\n  methods: {\n    /**\n     * Sends the message.\n     *\n     * @public\n     * @static\n     * @method send\n     * @memberof conversation.Message\n     */\n    send () {\n      log.debug('Send message', this)\n      this.context.dispatch(\n        messageActions.sendMessage(this.destination, this.parts, Date.now(), this.type, this.convoContext.id)\n      )\n    }\n  }\n}\n\n/**\n * stamp to add message parts capabilities to a Message primitive\n * @name withParts\n * @param  {Object} context - Information and capabilities for how the message will act with regard to the conversation.\n * @param  {Array} context.features - List of features the conversation supports.\n */\nconst withParts = {\n  initializers: [\n    function ({ context: { features = [] } }) {\n      if (!includes('parts', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.addPart\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Add an additional part to a message.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Message\n     * @requires richMessaging\n     * @memberof withParts\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\", or \"location\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     * @param {Object} [part.location] The location of the part. Must be a part of type \"location\".\n     * @param {number} [part.location.longitude] The longitude of the location.\n     * @param {number} [part.location.latitude] The latitude of the location.\n     */\n    /**\n     * Add an additional part to a message.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Message\n     * @requires richMessagingWithoutLocation\n     * @param {Object} part The part to add to the message.\n     * @param {string} part.type The type of part. Can be \"text\", \"json\", \"file\", or \"location\".\n     * @param {string} [part.text] The text of the part. Must be a part of type \"text\".\n     * @param {Object} [part.json] The json of the part. Must be a part of type \"json\".\n     * @param {File} [part.file] The file of the part. Must be a part of type \"file\".\n     */\n    addPart (part) {\n      // Validate the part. If not valid, returns an error.\n      const validationResponse = validatePart(part, this.convoContext.features)\n      if (validationResponse instanceof Error) {\n        this.context.dispatch(emitEvent(MESSAGING_ERROR, { error: validationResponse.message }))\n      }\n      this.parts.push(part)\n    }\n  }\n}\n\n/*\n * A helper function to validate inputs. Will be progressively updated as we\n * allow for more and more input types.\n */\nconst validatePart = function (part, features) {\n  if (part.hasOwnProperty('type')) {\n    if (part.hasOwnProperty(part.type)) {\n      let validTypeFlag = false\n      switch (part.type) {\n        case 'text':\n          validTypeFlag = true\n          break\n        case 'file':\n          validTypeFlag = features.indexOf('rich') !== -1\n          break\n        case 'location':\n          validTypeFlag = features.indexOf('rich') !== -1\n          break\n        case 'json':\n          validTypeFlag = features.indexOf('rich') !== -1\n      }\n      return validTypeFlag || new Error(`Part of type \"${part.type}\" is not supported`)\n    } else {\n      return new Error('A message part must have a payload corresponding with its declared type')\n    }\n  } else {\n    return new Error('A message part must have a type. Options are: [text, file, location, json]')\n  }\n}\n\nexport default {\n  Conversation: compose(conversationBase, conversationHistory),\n  Message: compose(messageBase, withParts)\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","import { put } from 'redux-saga/effects'\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\n// Import the interface to implement.\nimport pluginInterface from '../interface'\n\nimport { mwiReceived, fetchMwi } from './sagas'\n\n/**\n * Plugin for voicemail service.\n * Provides the SDK with the Voicemail feature.\n */\nexport default function mwiLink () {\n  function * init () {\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = ['voicemail']\n\n  return {\n    capabilities,\n    api: pluginInterface.api,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    init,\n    sagas: [mwiReceived, fetchMwi]\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.MWI_UPDATE] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MWI_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.MWI_CHANGE,\n      args: {\n        lastUpdated: action.payload.lastUpdated,\n        newMessagesWaiting: action.payload.newMessagesWaiting,\n        totalVoice: action.payload.totalVoice,\n        unheardVoice: action.payload.unheardVoice,\n        voice: action.payload.voice,\n        fax: action.payload.fax,\n        multimedia: action.payload.multimedia\n      }\n    }\n  }\n}\n\nexport default eventsMap\n","// TODO: Fix params in this file, move to voicemail over MWI on all public wording.\n/**\n * A voicemail event has been received.\n *\n * @requires voicemail\n * @public\n * @static\n * @memberof voicemail\n * @event voicemail:change\n * @param {Object} params An object containing voicemail info.\n * @param {number} params.lastUpdated Timestamp of the last time voicemail data was checked.\n * @param {boolean} params.newMessagesWaiting Whether there are new messages.\n * @param {number} params.totalVoice The total number of voicemail messages.\n * @param {number} params.unheardVoice Number of unheard voicemail messages.\n * @param {Object} params.voice Object containing individual counts of new, old, urgent voicemails.\n * @param {Object} params.fax Object containing individual counts of new, old, urgent faxes.\n * @param {Object} params.multimedia Object containing individual counts of new, old, urgent multimedia messages.\n */\nexport const MWI_CHANGE = 'voicemail:change'\n\n/**\n * An error has occurred while attempting to retrieve voicemail data.\n *\n * @requires voicemail\n * @public\n * @memberof voicemail\n * @event voicemail:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const MWI_ERROR = 'voicemail:error'\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a mwi plugin.\n * @type {string}\n */\nconst name = 'mwi'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","/**\n * The 'voicemail' namespace is used to retrieve and view\n * voicemail indicators.\n *\n * Voicemail functions are all part of this namespace.\n *\n * @public\n * @requires voicemail\n * @namespace voicemail\n */\n\nimport * as actions from './actions'\n\nimport { getMwi as selectMwi } from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('MWI')\n\nexport default function api ({ dispatch, getState }) {\n  const mwiApi = {\n    /**\n     * Attempts to retrieve voicemail information from the server.\n     *\n     * A {@link voicemail.event:voicemail:change voicemail:change} event is\n     *    emitted upon completion.\n     *\n     * @public\n     * @requires voicemail\n     * @memberof voicemail\n     * @method fetch\n     */\n    fetch () {\n      log.debug(API_LOG_TAG + 'voicemail.fetch')\n      dispatch(actions.fetchMwi())\n    },\n\n    /**\n     * Returns voicemail data from the store.\n     *\n     * @public\n     * @requires voicemail\n     * @memberof voicemail\n     * @method get\n     */\n    get () {\n      log.debug(API_LOG_TAG + 'voicemail.get')\n      return selectMwi(getState())\n    }\n  }\n\n  return { voicemail: mwiApi }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to retrieve\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the message waiting indicator data from the state.\n * @method getMwi\n * @return {Object}\n */\nexport function getMwi (state) {\n  return cloneDeep(state.mwi)\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\nreducers[actionTypes.MWI_UPDATE] = {\n  next (state, action) {\n    return {\n      ...action.payload\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import { actionChannel, put, take, select } from 'redux-saga/effects'\n// Auth\nimport { getConnectionInfo, getPlatform } from '../../auth/interface/selectors'\n// Notifications\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\n// MWI Actions\nimport * as actions from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\n// Request\nimport request from '../../request/effects'\n// Errors\nimport BasicError, { mwiCodes } from '../../errors'\n// Constants\nimport { platforms } from '../../constants'\n\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('MWI')\n\nexport function * mwiReceived () {\n  const mwiEventChannel = actionChannel(\n    action =>\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'mwi'\n  )\n  const mwiReceived = yield mwiEventChannel\n  while (true) {\n    const action = yield take(mwiReceived)\n\n    // Parse the mwi data\n    const mwiData = {\n      ...action.payload.notificationMessage.mwiNotificationParams\n    }\n    mwiData.newMessagesWaiting = mwiData.mwi === 'yes'\n    delete mwiData.mwi\n    log.info(`There are ${mwiData.newMessagesWaiting ? mwiData.newMessagesWaiting : 'no'} new messages waiting.`)\n    mwiData.lastUpdated = action.payload.notificationMessage.time\n    log.info(`There are ${mwiData.totalVoice} total voicemails. ${mwiData.unheardVoice} unheard.`)\n\n    yield put(actions.mwiUpdate({ mwiData }))\n  }\n}\n\nexport function * fetchMwi () {\n  while (true) {\n    const action = yield take(actionTypes.FETCH_MWI)\n    const connInfo = yield select(getConnectionInfo)\n    const options = {\n      ...action.payload,\n      ...connInfo\n    }\n\n    const platform = yield select(getPlatform)\n    const version = platform === platforms.UC ? 1 : options.server.version\n    const response = yield request({\n      url: `${options.server.protocol}://${options.server.server}:${options.server.port}/rest/version/${version}/user/${options.username}/voicemail`,\n      method: 'GET'\n    })\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        const { statusCode } = response.payload.body.mwiresponse\n        const errMsg = `Failed to fetch voicemail(s). Status Code: ${statusCode}`\n        log.info(errMsg)\n\n        error = new BasicError({\n          code: mwiCodes.FETCH_MWI_FAIL,\n          message: errMsg\n        })\n      } else {\n        // Handle errors from the request helper.\n        const { message } = response.payload.result\n        const errMsg = `Voicemail fetch request failed. ${message}`\n        log.info(errMsg)\n\n        error = new BasicError({\n          code: mwiCodes.FETCH_MWI_FAIL,\n          message: errMsg\n        })\n      }\n\n      yield put(actions.mwiUpdate({ error }))\n    } else {\n      let mwiData = {}\n      if (response.payload.body.mwiresponse.statusCode === 52) {\n        // This statusCode means this user has absolutely no messages, new or old.\n        // It is therefore accompanied with absolutely no data, so we make some for the store.\n        mwiData = {\n          lastUpdated: Date.now(),\n          newMessagesWaiting: false,\n          totalVoice: '0',\n          unheardVoice: '0'\n        }\n        log.info('There are no new or old voicemails.')\n      } else {\n        mwiData = { ...response.payload.body.mwiresponse }\n        delete mwiData.statusCode\n\n        // Parse the mwi data\n        mwiData.newMessagesWaiting = mwiData.mwi === 'yes'\n        delete mwiData.mwi\n        log.info(`There are ${mwiData.newMessagesWaiting ? mwiData.newMessagesWaiting : 'no'} new messages waiting.`)\n        mwiData.lastUpdated = Date.now()\n        log.info(`There are ${mwiData.totalVoice} total voicemails. ${mwiData.unheardVoice} unheard.`)\n      }\n      yield put(actions.mwiUpdate({ mwiData }))\n    }\n  }\n}\n","// Notification plugin.\nimport { api, reducer, name } from '../../notifications/interface'\nimport events from '../../notifications/interface/events'\nimport * as pushRegistrationSagas from './sagas/pushRegistration'\nimport { enableWebsocketChannelEntry, processNotification } from './sagas/notification'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { defaultsDeep, values } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../../../src/common/validation'\n\n/**\n * Configuration options for the notification feature.\n * @public\n * @name config.notifications\n * @memberof config\n * @instance\n * @param {Object} notifications - The notifications configuration object.\n * @param {number} [notifications.idCacheLength=100] - Default amount of event ids to remember for de-duplication purposes.\n * @param {string} [notifications.incomingCallNotificationMode='any-channel'] - Communication channel mode used for incoming call notifications. Supported values are 'any-channel' or 'push-channel-only'.\n * @param {Object} [notifications.pushRegistration] - Object describing the server to use for push services.\n * @param {string} [notifications.pushRegistration.server] - Hostname for the push registration server.\n * @param {string} [notifications.pushRegistration.port] - Port for the push registration server.\n * @param {string} [notifications.pushRegistration.protocol] - Protocol for the push registration server.\n * @param {string} [notifications.pushRegistration.version] - Version for the push registration server.\n */\n\nconst defaultOptions = {\n  idCacheLength: 100,\n  incomingCallNotificationMode: 'any-channel'\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  idCacheLength: v8n.positive(),\n  incomingCallNotificationMode: enums(['any-channel', 'push-channel-only']),\n  pushRegistration: v8n.optional(\n    v8n.schema({\n      server: v8n.string(),\n      port: v8n.string(),\n      protocol: v8n.string(),\n      version: v8n.string()\n    })\n  )\n})\nconst parseOptions = parse('notifications', v8nValidation)\n\n/**\n * Notifications plugin factory.\n * @method notifications\n * @param {configs.notifications} options - Configuration options for authentication.\n * @return {Object} plugin - A notifications plugin.\n */\nexport default function notifications (options = {}) {\n  const pluginOptions = defaultsDeep(defaultOptions, options)\n  parseOptions(pluginOptions)\n\n  function * init () {\n    yield put(updateConfig(pluginOptions, name))\n    yield put(mapEvents(events))\n  }\n\n  const capabilities = ['push', 'registerPushNotifications', 'externalNotifications']\n\n  return {\n    name,\n    capabilities,\n    init,\n    api,\n    reducer,\n    sagas: [enableWebsocketChannelEntry, processNotification, ...values(pushRegistrationSagas)]\n  }\n}\n","import reducer from './reducers'\nimport api from './api'\n\nconst name = 'notifications'\n\nexport { name, api, reducer }\n","import * as actionTypes from './actionTypes'\nimport { WS_CONNECT_FINISHED, WS_DISCONNECT_FINISHED } from '../../connectivity/interface/actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\nreducers[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = {\n  next (state, action) {\n    const channel = action.meta.channel\n    const enabled = action.payload.channelEnabled\n\n    let newChannelState\n    if (enabled) {\n      newChannelState = {\n        ...state[channel],\n        ...action.payload\n      }\n    } else {\n      // If the channel is being disabled, clear old state.\n      newChannelState = {\n        ...action.payload\n      }\n    }\n\n    return {\n      ...state,\n      [channel]: newChannelState\n    }\n  }\n}\n\n/*\n * The websocket channel is assumed to be enabled when the\n *      websocket is opened.\n */\nreducers[WS_CONNECT_FINISHED] = {\n  next (state) {\n    // TODO: Link WS only?\n    return {\n      ...state,\n      WEBSOCKET: {\n        ...state.WEBSOCKET,\n        channelEnabled: true\n      }\n    }\n  }\n}\n\n/*\n * The websocket channel is assumed to be disabled when the\n *      websocket is closed.\n */\nreducers[WS_DISCONNECT_FINISHED] = {\n  next (state) {\n    // TODO: Link WS only?\n    return {\n      ...state,\n      WEBSOCKET: {\n        ...state.WEBSOCKET,\n        channelEnabled: false\n      }\n    }\n  }\n}\n\n// Default notifications sub-state.\nconst defaultState = {\n  WEBSOCKET: {\n    channelEnabled: false\n  },\n  PUSH: {\n    channelEnabled: true\n  }\n}\n\n/**\n * Notifications reducer.\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","/**\n * The 'notification' namespace allows user to register/deregister for/from push notifications as well as\n * enabling/disabling the processing of websocket notifications.\n *\n * @public\n * @requires externalNotifications\n * @namespace notification\n */\n\nimport * as actions from './actions'\nimport { platforms } from '../../constants'\n\nimport { defer } from '../../common/utils'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Notifications API.\n * @method api\n * @param {Function} dispatch The redux store's dispatch function.\n * @return {Object} api  The notifications API object.\n */\nexport default function api ({ dispatch }) {\n  const notificationApi = {\n    /**\n     * Provides an external notification to the system for processing.\n     *\n     * @public\n     * @requires externalNotifications\n     * @memberof notification\n     * @method process\n     * @param {Object} notification\n     * @param {string} [channel] - The channel that the notification came from.\n     */\n    process (notification, channel, platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'notification.process: ', notification, channel, platform)\n      dispatch(actions.externalNotification(notification, channel, platform))\n    },\n\n    /**\n     * Registers with Apple push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerApplePush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services for which we wish to receive notifications.\n     * @param {string} params.voipDeviceToken - The voip device token used for voip push on iOS.\n     *                                          This token is required if registering for call service notifications on iOS.\n     * @param {string} params.standardDeviceToken - The standardDevice token used for standard push on iOS .\n     *                                              This token is required when registering for non-call service notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify and\n     *                                establish a connection with the service gateway.\n     * @param {boolean} params.isProduction - If true, push notification will be sent to production.\n     *                                        If false, push notification will be sent to sandbox.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerApplePush ({\n      services,\n      voipDeviceToken,\n      standardDeviceToken,\n      bundleId,\n      clientCorrelator,\n      realm,\n      isProduction\n    }) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.registerApplePush', arguments)\n\n      dispatch(\n        actions.registerApplePushNotification(\n          {\n            services,\n            voipDeviceToken,\n            standardDeviceToken,\n            bundleId,\n            clientCorrelator,\n            realm,\n            isProduction\n          },\n          deferredResult\n        )\n      )\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Registers with Google push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerAndroidPush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services to register for.\n     * @param {string} params.deviceToken - The device token used for standard push on Android. This token is required\n     *                                      when registering for all related services notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify\n     *                                and establish a connection with the service gateway.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerAndroidPush ({ services, deviceToken, bundleId, clientCorrelator, realm }) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.registerAndroidPush', arguments)\n\n      dispatch(\n        actions.registerAndroidPushNotification(\n          {\n            services,\n            deviceToken,\n            bundleId,\n            clientCorrelator,\n            realm\n          },\n          deferredResult\n        )\n      )\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Apple push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterApplePush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterApplePush (registrationInfo) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterApplePushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Android push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterAndroidPush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterAndroidPush (registrationInfo) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterAndroidPushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Enables, or disables, the processing of websocket notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method enableWebsocket\n     * @param {boolean} enable - Whether the websocket channel should be enabled.\n     */\n    enableWebsocket (enable) {\n      log.debug(API_LOG_TAG + 'notification.enableWebsocket: ', enable)\n      dispatch(\n        actions.enableNotificationChannel('WEBSOCKET', {\n          channelEnabled: enable\n        })\n      )\n    }\n  }\n\n  return { notification: notificationApi }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.NOTI_ERROR,\n      args: { channel: action.meta.channel, error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.NOTI_CHANGE,\n      args: { channel: action.meta.channel }\n    }\n  }\n}\n\nevents[actionTypes.NOTIFICATION_RECEIVED] = function (action) {\n  if (!action.error) {\n    return {\n      type: eventTypes.NOTI_RECEIVED,\n      args: { payload: action.payload }\n    }\n  }\n}\n\nexport default events\n","/**\n * Push notifications registration state has changed.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:change\n * @param {Object} params\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_CHANGE = 'notifications:change'\n\n/**\n * An error occurred with push notifications.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_ERROR = 'notifications:error'\n\n/**\n * A notification was received by the SDK.\n *\n * @private This is an undocumented feature.\n *\n * @event notification:received\n * @param {Object} params Object that has information about the notification.\n * @param {Object} params.payload The payload of the notification.\n */\nexport const NOTI_RECEIVED = 'notification:received'\n","// Libraries.\nimport { defaults } from 'lodash/fp'\nimport { call, select, takeEvery } from 'redux-saga/effects'\n// Other plugins.\nimport { getConnectionInfo } from '../../../auth/interface/selectors'\n// Logs\nimport { logManager } from '../../../logs'\nimport * as actionTypes from '../../interface/actionTypes'\nimport { getNotificationConfig } from '../../interface/selectors'\nimport * as requests from '../requests'\n\n// Get the logger\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Register for apple push notification\n * @method applePushRegistrationEntry\n */\nexport function * applePushRegistrationEntry () {\n  yield takeEvery(actionTypes.REGISTER_APPLE_PUSH_NOTIFICATION, registerPushDeviceToken)\n}\n\n/**\n * Register for android push notification\n * @method androidPushRegistrationEntry\n */\nexport function * androidPushRegistrationEntry () {\n  yield takeEvery(actionTypes.REGISTER_ANDROID_PUSH_NOTIFICATION, registerPushDeviceToken)\n}\n\n/**\n * Saga for registering a device token for push notifications.\n * @method registerPushDeviceToken\n */\nfunction * registerPushDeviceToken (action) {\n  // Wait for a registration action.\n  const connection = yield select(getConnectionInfo)\n  const { pushRegistration } = yield select(getNotificationConfig)\n\n  // If a push registration endpoint was configured, use that instead of default.\n  if (pushRegistration) {\n    connection.server = defaults(connection.server, pushRegistration)\n    connection.protocol = defaults(connection.protocol, pushRegistration)\n    connection.port = defaults(connection.port, pushRegistration)\n    connection.version = defaults(connection.version, pushRegistration)\n  }\n\n  log.info('Registering device token for PUSH notifications...')\n  const response = yield call(requests.pushNotificationsRegistration, connection, {\n    ...action.payload\n  })\n\n  if (response.error) {\n    // Failed to create registration, reject the deferred result.\n    yield call([action.meta.deferred, 'reject'], {\n      error: response.text\n    })\n  } else {\n    // Successfully created registration, resolve the deferred result and respond with the registration.\n    yield call([action.meta.deferred, 'resolve'], response.registration)\n  }\n}\n\n/**\n * Unregister for apple push notification\n * @method applePushUnregisterEntry\n */\nexport function * applePushUnregisterEntry () {\n  yield takeEvery(actionTypes.UNREGISTER_APPLE_PUSH_NOTIFICATION, unregisterPushDeviceToken)\n}\n\n/**\n * Unregister for android push notification.\n * @method androidPushUnregisterEntry\n */\nexport function * androidPushUnregisterEntry () {\n  yield takeEvery(actionTypes.UNREGISTER_ANDROID_PUSH_NOTIFICATION, unregisterPushDeviceToken)\n}\n\n/**\n * Saga for deregistering a device token for push notifications.\n * @method deregisterPushDeviceToken\n */\nfunction * unregisterPushDeviceToken (action) {\n  const connection = yield select(getConnectionInfo)\n  const { pushRegistration } = yield select(getNotificationConfig)\n\n  // If a push registration endpoint was configured, use that instead of default.\n  if (pushRegistration) {\n    connection.server = defaults(connection.server, pushRegistration)\n    connection.protocol = defaults(connection.protocol, pushRegistration)\n    connection.port = defaults(connection.port, pushRegistration)\n    connection.version = defaults(connection.version, pushRegistration)\n  }\n\n  log.info('Un-registering device token for PUSH notifications...')\n  const response = yield call(requests.pushNotificationsDeRegistration, connection, {\n    registration: action.payload.registration\n  })\n  if (response.error) {\n    yield call([action.meta.deferred, 'reject'], {\n      error: response.text\n    })\n  } else {\n    yield call([action.meta.deferred, 'resolve'], undefined)\n  }\n}\n","import { defaults, has } from 'lodash/fp'\nimport { buffers } from 'redux-saga'\nimport { inflate } from 'pako'\nimport { actionChannel, call, put, select, take, takeEvery } from 'redux-saga/effects'\nimport { getConnectionInfo } from '../../../auth/interface/selectors'\nimport { platforms } from '../../../constants'\nimport { logManager } from '../../../logs'\nimport * as actions from '../../interface/actions'\nimport * as actionTypes from '../../interface/actionTypes'\nimport { getNotificationConfig, getNotificationsInfo } from '../../interface/selectors'\nimport * as requests from '../requests'\n\n// Get the logger\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Unregister for android push notification.\n * @method enableWebsocketChannelEntry\n */\nexport function * enableWebsocketChannelEntry () {\n  yield takeEvery(actionTypes.ENABLE_NOTIFICATION_CHANNEL, enableWebsocketChannel)\n}\n\nfunction * enableWebsocketChannel (action) {\n  if (action.payload.enable) {\n    // TODO: If websockets are not connected, connect them here.\n  }\n\n  // TODO: Handle possible error case when connecting websockets.\n  //      Otherwise, plain dispatch to update state.\n  log.info('Enabling WEBSOCKET notification channel ...')\n  yield put(\n    actions.enableNotificationChannelFinish(action.meta.channel, {\n      params: action.payload\n    })\n  )\n}\n\nconst INITIAL_BUFFER_SIZE = 10\n\nexport function * processNotification () {\n  var queue = []\n\n  const externalNotifications = yield actionChannel(\n    actionTypes.PROCESS_NOTIFICATION,\n    buffers.expanding(INITIAL_BUFFER_SIZE)\n  )\n  while (true) {\n    const action = yield take(externalNotifications)\n    const config = yield select(getNotificationConfig)\n    log.info(\n      `Received notification on channel ${action.meta.channel} for platform: ${action.meta.platform}; Handling...`\n    )\n\n    // Only process notifications from enabled channels, ie. \"silence\" the channel.\n    const channel = yield select(getNotificationsInfo, action.meta.channel)\n    if (!channel.channelEnabled) {\n      log.debug(`Notification received on disabled channel: ${action.meta.channel}. Ignoring it ...`)\n      continue\n    }\n\n    const notification = action.payload\n    const notificationMessage = notification.notificationMessage\n    const notificationId = id(action.meta.platform)(notification)(notificationMessage)\n\n    let formattedPayload = action.payload\n    if (has('payload.notificationMessage.sessionParams.sdpFormat', action)) {\n      log.debug('Notification contains SDP. Normalizing.')\n      formattedPayload = yield call(normalizeSDP, action.payload)\n    }\n\n    // If we're in the PUSH-only notification mode and\n    // this incoming notification is coming through a channel other than PUSH channel (e.g. WEBSOCKET) and\n    // this notification is for an incoming call\n    if (\n      formattedPayload.notificationMessage.eventType === 'call' &&\n      config.incomingCallNotificationMode === 'push-channel-only' &&\n      action.meta.channel !== 'PUSH'\n    ) {\n      // Ignore this call-related notification, but at a minimum generate a log so that user is aware.\n      log.warn(\n        'Dropped incoming call notification with id: ' +\n          notificationId +\n          ' received through channel: ' +\n          action.meta.channel +\n          ' because current mode for handling notifications is set to: push-channel-only.'\n      )\n      continue\n    } else {\n      // Don't check for duplicate notifications if idCacheLength is set to 0\n      // Get the list of \"relevant\" IDs in the queue (\"relevant\" being the latest X elements).\n      // This covers edge-cases where the cache length config is changed (to a smaller number)\n      //    after the queue has begun to be populated.\n      const ids = config.idCacheLength === 0 ? [] : queue.slice(config.idCacheLength * -1)\n      // If the notification ID is part of the list, then it's a duplicate.\n      const duplicate = ids.includes(notificationId)\n      if (duplicate) {\n        log.info('Notification was a duplicate; ignoring.')\n        const error = new Error(`Notification id ${notificationId} is duplicate.`)\n        // TODO: Tech-debt; this action should be a notificationReceived error action.\n        //      But that requires all sagas listening for notifications to filter out\n        //      error actions ..which requires their take() patterns changed, which\n        //      is another tech-debt item.\n        yield put(actions.processNotificationFinish(error))\n      } else {\n        queue.push(notificationId)\n        // Because the client can update the value of idCacheLength at any time\n        // we have to adjust the size of our queue accordingly\n        while (queue.length > config.idCacheLength) {\n          queue.shift()\n        }\n\n        const { platform, channel } = action.meta\n        log.debug('Added notification ID to the ID cache. Informing listeners ...')\n        // Inform all other plugins by sending a NOTIFICATION_RECEIVED action\n        yield put(actions.notificationReceived(formattedPayload, platform, channel))\n      }\n    }\n  }\n}\n\nconst id = platform => notification => notificationMessage => {\n  switch (platform) {\n    case platforms.LINK:\n      log.debug(`The received notification is of type ${notificationMessage.eventType}.`)\n      return notificationMessage.eventId\n\n    case platforms.UC:\n      // A Link notification can be in either the Link format or the SPiDR format (for calls).\n      return notificationMessage.id || notificationMessage.eventId\n\n    case platforms.CPAAS:\n      // CPaaS notifications do not have a consistent path to their ID.\n      //    The ID is one level down in the object, but we need to dynamically\n      //    find the key that its in.\n      for (const key in notification) {\n        if (notification[key].id) {\n          return notification[key].id\n        }\n      }\n      log.error('Received notification without a findable ID: ', Object.keys(notification))\n      return null\n\n    default:\n      log.debug('Received notification from unknown platform.')\n      return null\n  }\n}\n\n/**\n * This function accepts a notification payload. If the payload is a spidr payload\n * and contains an sdpFormat that needs manipulating, it is done here.\n * @method normalizeSDP\n * @param payload A processNotification action payload\n * @returns payload A processNotification action payload\n */\nexport function * normalizeSDP (payload) {\n  // Copy the payload to not disturb the action.\n  payload = { ...payload }\n\n  if (payload.notificationMessage.sessionParams.sdpFormat === 'compressed') {\n    log.debug('Found SDP format: compressed. Deflating compressed SDP...')\n    // convert based64 encoded string into bytes\n    const sdpCompressedBytes = atob(payload.notificationMessage.sessionParams.sdp)\n\n    // First convert the ASCII string into an array of unsigned integers\n    // pako.inflate() requires an Uint8Array as parameter.\n    const buf = new ArrayBuffer(sdpCompressedBytes.length)\n    const bufView = new Uint8Array(buf) // allocate enough space ..\n    for (let i = 0, strLen = sdpCompressedBytes.length; i < strLen; i++) {\n      bufView[i] = sdpCompressedBytes.charCodeAt(i) // fill-in the array of uint(s)\n    }\n\n    // uncompressed the bytes\n    try {\n      const sdpUnCompressedBytes = inflate(bufView)\n      // convert uncompressed bytes back into string\n\n      const sdpString = String.fromCharCode.apply(null, sdpUnCompressedBytes)\n\n      payload.notificationMessage.sessionParams.sdp = sdpString\n      log.debug(`Returning uncompressed SDP as part of payload: ${sdpString}`)\n    } catch (err) {\n      log.debug(`Cannot inflate the compressed SDP: ${err}`)\n      // TODO: If there was an error, try to handle it here.\n    }\n    return payload\n  } else if (payload.notificationMessage.sessionParams.sdpFormat === 'url') {\n    const connection = yield select(getConnectionInfo)\n    const { pushRegistration } = yield select(getNotificationConfig)\n    log.debug(`Found SDP format: url. pushRegistration: ${pushRegistration}`)\n    // If a push registration endpoint was configured, use that instead of default.\n    if (pushRegistration) {\n      connection.server = defaults(connection.server, pushRegistration)\n      connection.protocol = defaults(connection.protocol, pushRegistration)\n      connection.port = defaults(connection.port, pushRegistration)\n      connection.version = defaults(connection.version, pushRegistration)\n    }\n    log.info('Fetching SDP...')\n    const response = yield call(requests.fetchSDP, connection, payload.notificationMessage.sessionParams.sdp)\n    if (response.error) {\n      // REST request failed.\n      // TODO: Handle the error here rather than throwing an error\n    } else {\n      payload.notificationMessage.sessionParams.sdp = response.eventDataResponse.sdp\n    }\n    return payload\n  } else {\n    log.debug(`Unknown sdpFormat received: ${payload.notificationMessage.sessionParams.sdpFormat}.`)\n    return payload\n  }\n}\n","\n/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH$2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\nconst deflate$2 = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","// Presence plugin.\nimport { api, reducer } from '../interface'\nimport * as sagas from './sagas'\nimport eventsMap from '../interface/events'\nimport { STATUS, ACTIVITY } from './constants'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries\nimport { put } from 'redux-saga/effects'\nimport { values } from 'lodash/fp'\n\nconst name = 'presence'\n\nconst capabilities = ['presence']\n\n/**\n * Link Presence plugin factory.\n * @method linkPresence\n * @return {Object} A plugin.\n */\nexport default function linkPresence () {\n  // Add plugin-specific things to the API.\n  function augmentedApi (context) {\n    const newApi = api(context)\n\n    /**\n     * Possible status values.\n     * @public\n     * @static\n     * @memberof presence\n     * @type {Object}\n     * @property {string} OPEN\n     * @property {string} CLOSED\n     * @example\n     * const { statuses, activities } = client.presence\n     * // Use the values when updating presence.\n     * client.presence.update(statuses.OPEN, activities.AVAILABLE)\n     */\n    newApi.presence.statuses = STATUS\n\n    /**\n     * Possible activity values.\n     * @public\n     * @static\n     * @memberof presence\n     * @type {Object}\n     * @property {string} AVAILABLE\n     * @property {string} IDLE\n     * @property {string} AWAY\n     * @property {string} LUNCH\n     * @property {string} BUSY\n     * @property {string} VACATION\n     * @property {string} ON_THE_PHONE\n     * @property {string} UNKNOWN\n     */\n    newApi.presence.activities = ACTIVITY\n    return newApi\n  }\n\n  return {\n    name,\n    capabilities,\n    api: augmentedApi,\n    reducer,\n    init: () => [put(mapEvents(eventsMap))],\n    sagas: values(sagas)\n  }\n}\n","export { default as api } from './api'\nexport { default as reducer } from './reducers'\n","/**\n * The 'presence' namespace provides an interface for an application to set the\n *    User's presence information and to track other Users' presence\n *    information.\n *\n * Presence information is persisted by the server. When the SDK is initialized,\n *    there will be no information available. Presence information will become\n *    available either by using {@link presence.fetch} or by subscribing for\n *    updates about other Users, using {@link presence.subscribe}.\n *\n * Available presence information can be retrieved using {@link presence.get} or\n *    {@link presence.getAll}.\n *\n * @public\n * @requires presence\n * @namespace presence\n */\n\n/**\n * The PresenceStatus type defines the user's current status in terms of the user's availability to\n * communicate/respond to other users in the network.\n * An instance of this type can be obtained by invoking the {@link presence.get} function.\n *\n * Reporting when a user is on the phone is enabled (by default), which means that presence update notifications\n * will be sent whenever a user is in a call, as well as when the call has ended.\n * This is a user preference enabled or disabled on server side, and it can only be changed on the server side.\n *\n * The status is set to {@link presence.statuses open} as soon as a user subscribes for the presence service.\n *\n * @public\n * @static\n * @typedef {Object} PresenceStatus\n * @memberof presence\n * @property {string} userId The unique identifier for the user associated with this presence status.\n * @property {string} status The current status the user has set for themselves. For supported values see {@link presence.statuses}.\n * @property {string} activity The current activity of the user.\n *      For supported values see {@link presence.activities}.\n * @property {string} note Additional message accompanying the status & activity.\n * @property {boolean} loading Whether the presence information has been loaded or is in the process of loading.\n */\n\nimport * as actions from './actions'\nimport * as selectors from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('PRESENCE')\n\nexport default function (context) {\n  const presenceApi = {\n    /**\n     * Updates the presence information for the current user.\n     *\n     * See {@link presence.statuses} and {@link presence.activities} for valid\n     *    values.\n     *\n     * The SDK will emit a\n     *    {@link presence.event:presence:selfChange presence:selfChange} event\n     *    when the operation completes. The updated presence information is\n     *    available and can be retrieved with {@link presence.getSelf}.\n     *\n     * Other users subscribed for this user's presence will receive a\n     *    {@link presence.event:presence:change presence:change} event.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method update\n     * @param  {string} status The status of the presence state.\n     * @param  {string} activity The activity to be shown as presence state\n     * @param  {string} [note] An additional note to be provided when the activity is `presence.activities.ACTIVITIES_OTHER`.\n     */\n    update (status, activity, note) {\n      log.debug(API_LOG_TAG + 'presence.update: ', status, activity, note)\n      context.dispatch(actions.updatePresence(status, activity, note))\n    },\n\n    /**\n     * Retrieves the presence information for specified users, if available.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method get\n     * @param  {Array<string>|string} user A User ID or an array of User IDs.\n     * @return {Array<Object>|Object} List of user presence information.\n     */\n    get (user) {\n      log.debug(API_LOG_TAG + 'presence.get: ', user)\n      const users = Array.isArray(user) ? user : [user]\n      const storedUsers = selectors.getPresence(context.getState(), users)\n      // return something sensible based on the input\n      if (!Array.isArray(users)) {\n        if (storedUsers.length) {\n          return storedUsers[0]\n        }\n        return undefined\n      }\n      return storedUsers\n    },\n\n    /**\n     * Retrieves the presence information for all available users.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method getAll\n     * @return {Array<Object>} List of user presence information.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'presence.getAll')\n      return selectors.getAllPresence(context.getState())\n    },\n\n    /**\n     * Retrieves the presence information for the current user.\n     *\n     * This information is set using the {@link presence.update} API.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method getSelf\n     * @return {Object} Presence information for the current user.\n     */\n    getSelf () {\n      log.debug(API_LOG_TAG + 'presence.getSelf')\n      return selectors.getSelfPresence(context.getState())\n    },\n\n    /**\n     * Fetches presence information for the given users. This will refresh the\n     *    available information with any new information from the server.\n     *\n     * Available presence information an be retrieved using the\n     *    {@link presence.get} or {@link presence.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method fetch\n     * @param {Array<string>|string} user A User ID or an array of User IDs.\n     */\n    fetch (user) {\n      log.debug(API_LOG_TAG + 'presence.fetch: ', user)\n      const users = Array.isArray(user) ? user : [user]\n      context.dispatch(actions.getPresence(users))\n    },\n\n    /**\n     * Subscribe to another User's presence updates.\n     *\n     * When the User updates their presence information, the SDK will emit a\n     *    {@link presence.event:presence:change presence:change} event.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method subscribe\n     * @param {Array<string>|string} users A User ID or an array of User IDs.\n     */\n    subscribe (users) {\n      log.debug(API_LOG_TAG + 'presence.subscribe: ', users)\n      context.dispatch(actions.subscribePresence(users))\n    },\n\n    /**\n     * Unsubscribe from another User's presence updates.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method unsubscribe\n     * @param {Array<string>|string} users A User ID or an array of User IDs.\n     */\n    unsubscribe (users) {\n      log.debug(API_LOG_TAG + 'presence.unsubscribe: ', users)\n      context.dispatch(actions.unsubscribePresence(users))\n    }\n  }\n  return { presence: presenceApi }\n}\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\nimport { omit } from 'lodash/fp'\n\n// Helpers\nimport { subscriptionCodes } from '../../errors'\n\nconst reducers = {}\n\nreducers[actionTypes.UPDATE] = {\n  next (state) {\n    return {\n      ...state,\n      self: {\n        ...state.self,\n        loading: true,\n        error: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_FINISH] = {\n  next (state, action) {\n    const result = {\n      ...state,\n      self: {\n        loading: false,\n        error: false,\n        status: action.payload.status,\n        activity: action.payload.activity\n      }\n    }\n    if (action.payload.note) {\n      result.self.note = action.payload.note\n    }\n    return result\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      self: {\n        ...state.self,\n        loading: false,\n        error: action.payload\n      }\n    }\n  }\n}\n\nreducers[actionTypes.GET] = {\n  next (state, { payload: userIds }) {\n    const users = { ...state.users }\n    for (const userId of userIds) {\n      users[userId] = {\n        userId,\n        loading: true\n      }\n    }\n    return { ...state, users }\n  }\n}\n\nreducers[actionTypes.GET_FINISH] = {\n  next (state, { payload }) {\n    if (!payload.presenceContact) {\n      return { ...state }\n    }\n\n    const users = {}\n    for (const contact of payload.presenceContact) {\n      const presenceObject = {}\n      presenceObject.userId = contact.presentityUserId\n      if (contact.presence && contact.presence.person) {\n        presenceObject.activity = contact.presence.person.activities.activityValue\n        presenceObject.status = contact.presence.person['overriding-willingness'].overridingWillingnessValue\n        presenceObject.note = contact.presence.person.activities.other\n      }\n      presenceObject.loading = false\n      users[contact.presentityUserId] = presenceObject\n    }\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        ...users\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state\n    }\n  }\n}\n\nreducers[actionTypes.RECEIVED] = {\n  next (state, { payload }) {\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [payload.userId]: {\n          userId: payload.userId, // optimize for filtering by userId\n          status: payload.status,\n          activity: payload.activity,\n          note: payload.note,\n          loading: false\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SUBSCRIBE] = {\n  next (state, { payload }) {\n    // Payload could be a string (single userId) or array (multiple userIds)\n    if (!Array.isArray(payload)) {\n      payload = [payload]\n    }\n    const updatedUsers = Object.assign({}, state.users)\n    payload.forEach(userId => {\n      updatedUsers[userId] = {\n        userId,\n        loading: false,\n        isPending: true\n      }\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nreducers[actionTypes.SUBSCRIBE_FINISH] = {\n  next (state, { payload }) {\n    const updatedUsers = Object.assign({}, state.users)\n    payload.presentityUserId.forEach(userId => {\n      updatedUsers[userId] = {\n        userId,\n        loading: false,\n        isPending: false\n      }\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  },\n  throw (state, { payload }) {\n    const updatedUsers = Object.assign({}, state.users)\n    payload.presentityUserId.forEach(userId => {\n      delete updatedUsers[userId]\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nreducers[actionTypes.UNSUBSCRIBE] = {\n  next (state, { payload }) {\n    // Payload could be a string (single userId) or array (multiple userIds)\n    if (!Array.isArray(payload)) {\n      payload = [payload]\n    }\n    const updatedUsers = Object.assign({}, state.users)\n    payload.forEach(userId => {\n      updatedUsers[userId] = {\n        userId,\n        loading: false,\n        isPending: true\n      }\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nreducers[actionTypes.UNSUBSCRIBE_FINISH] = {\n  next (state, { payload }) {\n    return {\n      ...state,\n      users: omit(payload.presentityUserId, state.users)\n    }\n  },\n  throw (state, { payload }) {\n    let updatedUsers = Object.assign({}, state.users)\n    if (payload.code === subscriptionCodes.CPAAS_SERVICE_UNSUB_FAIL) {\n      // Remove the userId from state\n      updatedUsers = omit(payload.presentityUserId, updatedUsers)\n    } else {\n      // Update the userId in state\n      if (payload.presentityUserId && payload.presentityUserId.length > 0) {\n        payload.presentityUserId.forEach(userId => {\n          updatedUsers[userId] = {\n            userId,\n            loading: false,\n            isPending: false\n          }\n        })\n      }\n    }\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, { self: {}, users: {} })\nexport default reducer\n","// Presence plugin.\nimport * as actionTypes from '../interface/actionTypes'\nimport * as actions from '../interface/actions'\nimport { updatePresenceRequest, watchPresenceRequest } from './requests'\nimport { getAllPresence } from '../interface/selectors'\n\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { NOTIFICATION_RECEIVED } from '../../notifications/interface/actionTypes'\n// Libraries.\nimport { put, call, select, takeEvery } from 'redux-saga/effects'\n// Helpers\nimport BasicError, { presenceCodes } from '../../errors'\n\n// Constants\nimport { ACTIVITY, STATUS } from './constants'\nimport { platforms } from '../../constants'\n\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('PRESENCE')\n\n/**\n * Entry to update user(s) presence.\n * @method presenceUpdateSaga\n */\nexport function * presenceUpdateSaga () {\n  yield takeEvery(actionTypes.UPDATE, updatePresence)\n}\n\n/**\n * Entry to get users(s) presence.\n * @method presenceGetSaga\n */\nexport function * presenceGetSaga () {\n  yield takeEvery(actionTypes.GET, getPresence)\n}\n\n/**\n * Entry to Subscribe for user(s) presence.\n * @method presenceSubscribeSaga\n */\nexport function * presenceSubscribeSaga () {\n  yield takeEvery(actionTypes.SUBSCRIBE, subscribePresence)\n}\n\n/**\n * Entry to Unsubscribe from the user(s) presence.\n * @method presenceUnsubscribeSaga\n */\nexport function * presenceUnsubscribeSaga () {\n  yield takeEvery(actionTypes.UNSUBSCRIBE, unsubscribePresence)\n}\n\n/**\n * Entry to presence notification message.\n * @method presenceReceivedSaga\n */\nexport function * presenceReceivedSaga () {\n  yield takeEvery(\n    action =>\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage &&\n      action.payload.notificationMessage.eventType === 'presenceWatcher',\n    receivePresence\n  )\n}\n\n/**\n * Link saga for updating user(s) Presence .\n * @method updatePresence\n * @param {Object} payload\n */\nfunction * updatePresence ({ payload }) {\n  // Verify that the status value is a valid\n  if (Object.values(STATUS).indexOf(payload.status) === -1) {\n    log.debug('Invalid presence status present.')\n    yield put(\n      actions.updatePresenceFinish({\n        error: new BasicError({\n          code: presenceCodes.INVALID_STATUS,\n          message: 'Invalid status in presence update request.'\n        })\n      })\n    )\n    return\n  }\n\n  // Verify that the activity value is a valid\n  if (Object.values(ACTIVITY).indexOf(payload.activity) === -1) {\n    log.debug('Invalid presence activity present.')\n    yield put(\n      actions.updatePresenceFinish({\n        error: new BasicError({\n          code: presenceCodes.INVALID_ACTIVITY,\n          message: 'Invalid activity in presence update request.'\n        })\n      })\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo)\n  const platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  const res = yield call(updatePresenceRequest, payload, requestInfo)\n  if (res instanceof Error) {\n    log.debug(`Failed to update presence. Error is: ${res}`)\n    yield put(actions.updatePresenceFinish(res))\n  } else {\n    log.debug('Successfully updated presence.')\n    yield put(actions.updatePresenceFinish(payload))\n  }\n}\n/**\n * Link saga for getting the presence updates one time only for the user(s).\n * @method getPresence\n */\nfunction * getPresence ({ payload }) {\n  const users = Array.isArray(payload) ? payload : [payload]\n  const requestInfo = yield select(getRequestInfo)\n  const platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  const res = yield call(watchPresenceRequest, users, 'get', requestInfo)\n  yield put(actions.getPresenceFinish(res))\n}\n\n/**\n * Link saga for Handling subscribing to another users(s) presence.\n * @method subscribePresence\n */\nfunction * subscribePresence ({ payload }) {\n  const users = Array.isArray(payload) ? payload : [payload]\n  log.info(`Subscribing to the user(s) ${users} presence.`)\n  const requestInfo = yield select(getRequestInfo)\n  const platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  // To start watching for presence updates for the subscribed user(s)\n  const res = yield call(watchPresenceRequest, users, 'watch', requestInfo)\n  if (!(res instanceof Error)) {\n    log.info(`Finished subscribing to user(s): ${users} with status code: ${res.presenceWatcherResponse.statusCode}`)\n  } else {\n    log.info(`Failed to subscribe to users(s): ${users}. ${res.message}`)\n  }\n  res.presentityUserId = users\n  yield put(actions.subscribePresenceFinish(res))\n}\n\n/**\n * Link saga for Handling unsubscribing the user(s) presence.\n * User will not be able to receive presence updates of the unsubscribed user.\n * @method unsubscribePresence\n */\nfunction * unsubscribePresence ({ payload }) {\n  const users = Array.isArray(payload) ? payload : [payload]\n  log.info(`UnSubscribing to the user(s) ${users} presence.`)\n  const requestInfo = yield select(getRequestInfo)\n  const platform = yield select(getPlatform)\n  requestInfo.version = platform === platforms.UC ? 1 : requestInfo.version\n  // To stop user from getting updates of the unsubscribe user(s) presence.\n  const res = yield call(watchPresenceRequest, users, 'stopwatch', requestInfo)\n  if (!(res instanceof Error)) {\n    log.info(`Finished unSubscribing to user(s): ${users} with status code: ${res.presenceWatcherResponse.statusCode}`)\n  } else {\n    log.info(`Failed to unsubscribe to users(s): ${users}. ${res.message}`)\n  }\n  yield put(actions.unsubscribePresenceFinish(res))\n}\n\n/**\n * Link receivePresence saga.\n * Handles the presence info received from the notification message.\n * @method receivePresence\n * @param {Object} wsAction\n */\nfunction * receivePresence (wsAction) {\n  const params = wsAction.payload.notificationMessage.presenceWatcherNotificationParams\n  log.info(`Received notification of the user(s): ${params.name} present presence.`)\n\n  const users = yield select(getAllPresence)\n\n  // Find the user in our list of users\n  // If found and not pending then notify the client\n  const user = users.find(item => item.userId === params.name)\n  if (user && !user.isPending) {\n    const presence = {\n      userId: params.name,\n      activity: params.activity,\n      status: params.status,\n      note: params.note\n    }\n    yield put(actions.presenceReceived(presence))\n  }\n}\n","// Request\nimport request from '../../request/effects'\n// Logs\nimport { logManager } from '../../logs'\nconst log = logManager.getLogger('PRESENCE')\n\nexport function * updatePresenceRequest ({ status, activity, note }, requestInfo) {\n  const url = `${requestInfo.baseURL}/rest/version/${requestInfo.version}/user/${requestInfo.username}/presence`\n\n  const data = { status, activity }\n  if (note) {\n    data.note = note\n  }\n  const body = JSON.stringify({ presenceRequest: data })\n\n  const method = 'POST'\n\n  const response = yield request({ url, body, method })\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.presenceResponse\n      log.debug(`Failed to update presence with status code ${statusCode}.`)\n\n      // TODO: Proper error.\n      return new Error(`Failed to update presence with status code ${statusCode}.`)\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Update presence request failed: ${message}.`)\n\n      // TODO: Proper error.\n      return new Error(`Update presence request failed: ${message}.`)\n    }\n  } else {\n    if (response.payload.body.presenceResponse.statusCode === 0) {\n      return true // success!\n    }\n    return new Error('Failed to update presence. Code: ' + response.payload.body.presenceResponse.statusCode + '.')\n  }\n}\n\n/**\n * Make a request to the presenceWatcher resource\n * @param  {array<User>}  users  a lits of users for the watch request\n * @param  {string}       action watch     Starts watching the presence updates\n *                                         for the users in the users array.\n *                               stopwatch Stops watching the presence updates\n *                                         for the users in the users array.\n *                               get       Gets the presence updates one time\n *                                         only for the users in the users array.\n */\nexport function * watchPresenceRequest (users, action, requestInfo) {\n  const url = `${requestInfo.baseURL}/rest/version/${requestInfo.version}/user/${requestInfo.username}/presenceWatcher`\n\n  const body = JSON.stringify({\n    presenceWatcherRequest: {\n      userList: users,\n      action\n    }\n  })\n\n  const method = 'POST'\n\n  const response = yield request({ url, method, body })\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.presenceWatcherResponse\n      log.debug(`Failed to watch presence with status code ${statusCode}.`)\n\n      // TODO: Proper error.\n      return new Error(`Failed to watch presence with status code ${statusCode}.`)\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Watch presence request failed: ${message}.`)\n\n      // TODO: Proper error.\n      return new Error(`Watch presence request failed: ${message}.`)\n    }\n  } else {\n    if (response.payload.body.presenceWatcherResponse.statusCode === 0) {\n      return response.payload.body // success!\n    }\n    return new Error(\n      'Failed to execute presence operation (' +\n        action +\n        '). Code: ' +\n        response.payload.body.presenceResponse.statusCode +\n        '.'\n    )\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\n\n// Helper function for error events.\nfunction presenceError (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.ERROR,\n      args: { error: action.payload }\n    }\n  }\n}\n\nconst eventsMap = {}\n\neventsMap[actionTypes.RECEIVED] = action => ({\n  type: eventTypes.RECEIVED,\n  args: {\n    userId: action.payload.userId,\n    status: action.payload.status,\n    activity: action.payload.activity,\n    note: action.payload.note\n  }\n})\n\neventsMap[actionTypes.UPDATE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.SELF_CHANGE\n    }\n  }\n}\n\neventsMap[actionTypes.GET_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.RECEIVED,\n      args: {\n        userId: action.payload.userId,\n        status: action.payload.status,\n        activity: action.payload.activity,\n        note: action.payload.note\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.SUBSCRIBE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.SUBSCRIBE,\n      args: {\n        userIds: action.payload.presentityUserId\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.UNSUBSCRIBE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.UNSUBSCRIBE,\n      args: {\n        userIds: action.payload.presentityUserId\n      }\n    }\n  }\n}\n\n// TODO: Should have events to notify of successful operations for these actions.\neventsMap[actionTypes.CREATE_PRESENCE_LIST_FINISH] = presenceError\n\nexport default eventsMap\n","/**\n * A presence update about a subscribed user has been received.\n *\n * This event is generated as a result of {@link presence.fetch} or {@link presence.update} operations.\n *\n * For the latter operation, the current user receives a presence update of another user that the current user is subscribed to.\n *\n * The changed information can be retrieved using the {@link presence.get}\n *    API.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:change\n * @param {Object} params A presence object containing data.\n * @param {string} params.userId The ID of the user.\n * @param {string} params.status The presence status of the user.\n * @param {string} params.activity The activity of the user.\n * @param {string} params.note A custom note provided by the user.\n */\nexport const RECEIVED = 'presence:change'\n\n/**\n * The current user's presence information has changed.\n *\n * The changed information can be retrieved using the {@link presence.getSelf}\n *    API.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:selfChange\n */\nexport const SELF_CHANGE = 'presence:selfChange'\n\n/**\n * An update (as a result of subscribing to a specific user's presence) has been received.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:subscribe\n * @param {Object} params A subscription object containing data.\n * @param {Array<string>} params.userIds The ID(s) of the user(s) whose presence needs to be watched.\n */\nexport const SUBSCRIBE = 'presence:subscribe'\n\n/**\n * An update (as a result of unsubscribing to a specific user's presence) has been received.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:unsubscribe\n * @param {Object} params A subscription object containing data.\n * @param {Array<string>} params.userIds The ID(s) of the user(s) whose presence no longer requires to be watched.\n */\nexport const UNSUBSCRIBE = 'presence:unsubscribe'\n\n/**\n * An error occurred with presence.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const ERROR = 'presence:error'\n","// Sip Events plugin.\nimport pluginInterface from './interface'\nimport * as sagas from './sagas'\nimport events from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { values } from 'lodash/fp'\n\n/**\n * Sip Events Plugin Factory.\n * @method sipEvents\n * @return {Object} Sip Events plugin.\n */\nexport default function sipEvents () {\n  const { name, api, reducer } = pluginInterface\n  const capabilities = ['sipEvents']\n\n  function * init () {\n    yield put(mapEvents(events))\n  }\n\n  return {\n    name,\n    init,\n    api,\n    reducer,\n    capabilities,\n    sagas: values(sagas)\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducer'\n\nconst name = 'sipEvents'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","/* eslint-disable no-warning-comments */\n/**\n *  The SIP Events feature allows an application to communicate with a SIP network integrated\n *      with their Kandy Link instance. The SIP network may generate custom events intended\n *      for an application, which can be handled with the SDK's `sip` namespace.\n *\n * Usage of SIP Events is dependent on your Kandy Link instance. The types of SIP Events can\n *    be different based on configurations and components, often being part of a custom\n *    solution. As such, the SIP Events feature is presented in a generic manner to be\n *    flexible for any possible events.\n *\n * An example of a common SIP event is \"SIP presence\". When a user is connected to a SIP phone,\n *    the network may generate \"phone presence\" events when the user starts and ends a call\n *    (eg. 'On Call', 'Available'). Applications can subscribe to receive these events for\n *    specific users.\n *\n * A SIP event may either be solicited or unsolicited. Solicited events, such as the \"presence\"\n *    example above, requires the application to subscribe for the event. See the\n *    {@link sip.subscribe sip.subscribe API} for more information about solicited events.\n *    Unsolicited events have no prerequisites for being received.\n *\n * @public\n * @requires sipEvents\n * @namespace sip\n */\n/* eslint-enable no-warning-comments */\n\nimport { getSipEventInfo } from './selectors'\nimport * as actions from './actions'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('SIPEVENTS')\n\n/**\n * Sip Events API.\n * @method api\n * @param  {Object} $0\n * @param  {Function} $0.dispatch Redux dispatch.\n * @param  {Function} $0.getState Redux getState.\n * @return {Object} Sip Events' plugin API.\n */\nexport default function api ({ dispatch, getState }) {\n  var api = {\n    /**\n     * Creates a subscription for a SIP event.\n     *\n     * A subscription is required to receive SIP notifications for solicited events. Before\n     *    creating a SIP subscription, the service for the event type must have been\n     *    provisioned as part of the user subscription using the {@link services.subscribe}\n     *    API.\n     *\n     * Only one SIP subscription per event type can exist at a time. A subscription can\n     *    watch for events from multiple users at once. Users can be added to or removed\n     *    from a subscription using the {@link sip.update sip.update} API at any time.\n     *\n     * The SDK will emit a {@link sip.event:sip:subscriptionChange sip:subscriptionChange}\n     *    event when the operations completes. The {@link sip.getDetails} API can be used\n     *    to retrieve the current information about a subscription.\n     *\n     * The SDK will emit a {@link sip.event:sip:eventsChange sip:eventsChange} event when\n     *    a SIP event is received.\n     * @public\n     * @static\n     * @method subscribe\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} eventType The name of the SIP event.\n     * @param  {Array<string>} subscribeUserList The list of users to receive events about.\n     * @param  {string} clientCorrelator Unique identifier for a client device.\n     * @param  {Array<call.CustomParameter>} [customParameters] Custom SIP header parameters for the SIP backend.\n     * @example\n     * // Provision the service for the specific SIP event during user subscription.\n     * //   This is required before a SIP subscription for the event can be created.\n     * const services = ['call', 'event:presence', ...]\n     * client.services.subscribe(services)\n     *\n     * // Subscribe to receive SIP presence events from two users.\n     * client.sip.subscribe('event:presence', ['userOne@example.com', 'userTwo@example.com'], 'clientId123')\n     *\n     * // Subscribe for SIP events with a custom parameter.\n     * const customParameters = [{\n     *    name: 'X-nt-GUID',\n     *    value: 'GUID123abc'\n     * }]\n     * client.sip.subscribe('event:presence', subscribeUserList, 'clientId123', customParameters)\n     */\n    subscribe (eventType, subscribeUserList, clientCorrelator, customParameters = []) {\n      log.debug(API_LOG_TAG + 'sip.subscribe: ', eventType, subscribeUserList, clientCorrelator, customParameters)\n      dispatch(actions.sipEventSubscribe(eventType, subscribeUserList, clientCorrelator, customParameters))\n    },\n\n    /**\n     * Updates an existing SIP event subscription.\n     *\n     * Allows for adding or removing users from the subscription, and for changing the\n     *    custom parameters of the subscription.\n     *\n     * The SDK will emit a {@link sip.event:sip:subscriptionChange sip:subscriptionChange}\n     *    event when the operations completes. The {@link sip.getDetails} API can be used\n     *    to retrieve the current information about a subscription.\n     * @public\n     * @static\n     * @method update\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} eventType The name of the SIP event.\n     * @param  {Object} userLists\n     * @param  {Array<string>}  userLists.subscribeUserList List of users to add to the subscription.\n     * @param  {Array<string>}  userLists.unsubscribeUserList List of users to remove from the subscription. If all users are removed, the event subscription will be deleted.\n     * @param  {Array<call.CustomParameter>} [customParameters] Custom SIP header parameters for the SIP backend.\n     * @example\n     * // Add a user to an existing subscription.\n     * const userLists = {\n     *    subscribedUserList: ['userThree@example.com']\n     * }\n     * client.sip.update('event:presence', userLists)\n     *\n     * // Simultaneously add and remove users from the subscription.\n     * const userLists = {\n     *    subscribedUserList: ['userThree@example.com'],\n     *    unsubscribeUserList: ['userOne@example.com']\n     * }\n     * client.sip.update('event:presence', userLists)\n     */\n    update (eventType, userLists, customParameters = []) {\n      log.debug(API_LOG_TAG + 'sip.update: ', eventType, userLists, customParameters)\n      dispatch(actions.sipEventUpdate(eventType, userLists, customParameters))\n    },\n\n    /**\n     * Deletes an existing SIP event subscription.\n     *\n     * The SDK will emit a {@link sip.event:sip:subscriptionChange sip:subscriptionChange}\n     *    event when the operations completes.\n     *\n     * Subscription details will no longer be available using the {@link sip.getDetails}\n     *    API after it has been unsubscribed from.\n     * @public\n     * @static\n     * @method unsubscribe\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} eventType The name of the SIP event.\n     * @example\n     * // Delete a SIP subscription.\n     * client.sip.unsubscribe('event:presence')\n     */\n    unsubscribe (eventType) {\n      log.debug(API_LOG_TAG + 'sip.unsubscribe: ', eventType)\n      dispatch(actions.sipEventUnsubscribe(eventType))\n    },\n\n    /**\n     * Retrieve information about a SIP event subscription.\n     *\n     * The SDK will track which users are included as part of the subscription and\n     *    previous notifications received. Each subscription will include a unique ID.\n     * @public\n     * @static\n     * @method getDetails\n     * @requires sipEvents\n     * @memberof sip\n     * @param  {string} [eventType] The name of a SIP event. If not provided, will retrieve\n     *    information for all SIP subscriptions.\n     * @return {Object} SIP subscription information. If `eventType` was not provided, will\n     *    return an object namespaced by event types.\n     * @example\n     * // Retrieve information about a single SIP subscription.\n     * const { subscribedUsers, notifications } = client.sip.getDetails('event:presence')\n     *\n     * // Retrieve information about all current SIP subscriptions.\n     * const subscriptions = client.sip.getDetails()\n     * const { subscribedUsers, notifications } = subscriptions['event:presence']\n     */\n    getDetails (eventType) {\n      log.debug(API_LOG_TAG + 'sip.getDetails: ', eventType)\n      return getSipEventInfo(getState(), eventType)\n    }\n  }\n\n  // Namespace the API.\n  return { sip: api }\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\n// Libraries.\nimport { concat, omit, union, without } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.SIP_EVENT_SUBSCRIBE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      // Add a new sip event section to state.\n      [action.payload.eventType]: {\n        sessionData: action.payload.sessionData,\n        subscribedUsers: action.payload.subscribedUsers\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SIP_EVENT_UPDATE_FINISH] = {\n  next (state, action) {\n    let subscribedUsers = state[action.payload.eventType].subscribedUsers\n    // Add the new subscribed users.\n    subscribedUsers = union(action.payload.subscribeUserList, subscribedUsers)\n    // Remove the unsubscribed users.\n    subscribedUsers = without(action.payload.unsubscribeUserList, subscribedUsers)\n\n    // Update the subscribed users for the sip event section.\n    if (subscribedUsers.length === 0) {\n      // If there are no subscribed users for this session, the session is deleted.\n      const newState = { ...state }\n      delete newState[action.payload.eventType]\n      return newState\n    } else {\n      return {\n        ...state,\n        [action.payload.eventType]: {\n          ...state[action.payload.eventType],\n          subscribedUsers\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH] = {\n  next (state, action) {\n    // Remove the specified sip event section.\n    return omit(action.payload.eventType, state)\n  }\n}\n\nreducers[actionTypes.SIP_EVENT_RECEIVED] = function (state, action) {\n  // Ensure everything is defined.\n  const eventInfo = state[action.payload.eventType] || {}\n  const notifications = eventInfo.notifications || []\n  // Concat the notification to the specified sip event section.\n  return {\n    ...state,\n    [action.payload.eventType]: {\n      ...state[action.payload.eventType],\n      notifications: concat(notifications, action.payload)\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Sip Events plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { getSipEventInfo } from './interface/selectors'\n\n// Other plugins.\nimport { getConnectionInfo, getPlatform } from '../auth/interface/selectors'\nimport { getCallByWrtcsSessionId } from '../call/interfaceNew/selectors'\nimport { getSubscriptionInfo, getSubscribedServices } from '../subscription/interface/selectors'\nimport { NOTIFICATION_RECEIVED } from '../notifications/interface/actionTypes'\nimport request from '../request/effects'\nimport BasicError, { sipEventCodes } from '../errors'\n\n// Libraries.\nimport { put, race, select, spawn, take, delay } from 'redux-saga/effects'\n\n// Logs\nimport { logManager } from '../logs'\nimport { includes } from 'lodash/fp'\n\n// Constants\nimport { platforms } from '../constants'\n\n// Get the logger\nconst log = logManager.getLogger('SIPEVENTS')\n\n/**\n * Saga for subscribing to specified Sip Events.\n * @method sipEventSubscribe\n */\nexport function * sipEventSubscribe () {\n  while (true) {\n    const action = yield take(actionTypes.SIP_EVENT_SUBSCRIBE)\n    // TODO: Have the client correlator be provided as a config, not through the API.\n    log.debug(`Subscribing for sip ${action.payload.eventType}.`, action.payload.clientCorrelator)\n\n    // Determine if the user is subscribed to the specified sip event.\n    const subscribedServices = yield select(getSubscribedServices)\n\n    const sipEvents = subscribedServices.filter(service => service.startsWith('event:'))\n\n    if (!includes(action.payload.eventType, sipEvents)) {\n      log.info(`Cannot subscribe to sip ${action.payload.eventType}; service not provisioned during user subscription.`)\n      yield put(\n        actions.sipEventSubscribeFinish({\n          error: new BasicError({\n            code: sipEventCodes.NOT_PROVISIONED,\n            message: 'Cannot subscribe to sip event; service was not provisioned during user subscription.'\n          })\n        })\n      )\n      continue\n    }\n\n    // Use the same subscription duration as the user subscription.\n    const { expires } = yield select(getSubscriptionInfo)\n\n    const platform = yield select(getPlatform)\n    let { server, username, token, accessToken } = yield select(getConnectionInfo)\n\n    // TODO: UC should store it's token the same way as Link.\n    if (platform === platforms.UC && !token) {\n      token = accessToken\n    }\n\n    const requestOptions = {}\n    requestOptions.method = 'POST'\n\n    requestOptions.url =\n      `${server.protocol}://${server.server}:${server.port}/` +\n      `rest/version/${server.version}/` +\n      `user/${username}/` +\n      'eventSubscription'\n\n    requestOptions.body = {\n      eventSubscriptionRequest: {\n        subscribeUserList: action.payload.subscribeUserList,\n        clientCorrelator: action.payload.clientCorrelator,\n        eventType: action.payload.eventType,\n        expires\n      }\n    }\n    if (action.payload.customParameters.length) {\n      requestOptions.body.eventSubscriptionRequest.customParameters = action.payload.customParameters\n    }\n    requestOptions.body = JSON.stringify(requestOptions.body)\n\n    const response = yield request(requestOptions)\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        const { statusCode } = response.payload.body.eventSubscriptionResponse\n        log.info(`Failed to subscribe to sip event ${action.payload.eventType}, ` + `status code ${statusCode}`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `Failed to subscribe to sip event ${action.payload.eventType}, ` + `status code ${statusCode}`\n        })\n      } else {\n        // Handler errors from the request helper.\n        const { message } = response.payload.result\n        log.info(`SIP event subscription request failed: ${message}.`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `SIP event subscription request failed: ${message}.`\n        })\n      }\n\n      yield put(actions.sipEventSubscribeFinish({ error }))\n    } else {\n      log.info(`Successfully subscribed to sip event ${action.payload.eventType}.`)\n      const finishAction = actions.sipEventSubscribeFinish({\n        response: {\n          // Response payload includes: statusCode, expires, sessionData.\n          ...response.payload.body.eventSubscriptionResponse,\n          eventType: action.payload.eventType,\n          subscribedUsers: action.payload.subscribeUserList\n        }\n      })\n      // Spawn a non-blocking saga to handle resubscriptions.\n      yield spawn(sipEventResub, finishAction)\n      yield put(finishAction)\n    }\n  }\n}\n\n/**\n * Saga to handle automatic resubscription to subscribed sip event.\n * @method sipEventResub\n * @param  {Object} action A SIP_EVENT_SUBSCRIBE_FINISH action.\n */\nfunction * sipEventResub (action) {\n  let shouldResub = true\n  while (shouldResub) {\n    const resubDelay = (action.payload.expires * 1000) / 2\n    // Wait for either the resub delay or an unsubscribe action.\n    const { expiry } = yield race({\n      expiry: delay(resubDelay),\n      unsubscribe: take(unsubAction => {\n        return (\n          unsubAction.type === actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH &&\n          unsubAction.payload.eventType === action.payload.eventType\n        )\n      })\n    })\n\n    // If the resubDelay has elapsed, attempt resubscribe.\n    if (expiry) {\n      const eventInfo = yield select(getSipEventInfo, action.payload.eventType)\n\n      if (eventInfo) {\n        log.info(`Re-subscribing for sip ${action.payload.eventType}.`)\n        yield put(actions.sipEventUpdate(action.payload.eventType, {}))\n      } else {\n        shouldResub = false\n      }\n    } else {\n      shouldResub = false\n    }\n  }\n}\n\n/**\n * Saga to update/resubscribe to a subscribed sip event.\n * @method sipEventUpdate\n */\nexport function * sipEventUpdate () {\n  while (true) {\n    const action = yield take(actionTypes.SIP_EVENT_UPDATE)\n    log.debug(`Updating sip event subscription: ${action.payload.eventType}.`)\n    const eventInfo = yield select(getSipEventInfo, action.payload.eventType)\n\n    if (!eventInfo) {\n      if (action.meta.isResub) {\n        // Don't need to resub, since we're not subscribed anymore.\n        // TODO: Tech-Debt: BasicError isn't very useful for these scenarios. The emitted event provides\n        //      the BasicError, except there's no (easy to use) info indicating _which_ event was being\n        //      acted on. BasicError needs the ability to provide extra information.\n        const error = new BasicError({\n          code: sipEventCodes.NOT_SUBSCRIBED,\n          message: `Cannot resubscribe for ${action.payload.eventType} subscription; user not subscribed.`\n        })\n        yield put(actions.sipEventUpdateFinish({ error }))\n      } else {\n        // Error: Not subscribed to this sip event. Cannot update.\n        const error = new BasicError({\n          code: sipEventCodes.NOT_SUBSCRIBED,\n          message: `Cannot update subscription for ${action.payload.eventType}; user not subscribed.`\n        })\n        yield put(actions.sipEventUpdateFinish({ error }))\n      }\n      continue\n    }\n\n    const platform = yield select(getPlatform)\n    let { server, username, token, accessToken } = yield select(getConnectionInfo)\n\n    // TODO: UC should store it's token the same way as Link.\n    if (platform === platforms.UC && !token) {\n      token = accessToken\n    }\n\n    const requestOptions = {}\n    requestOptions.method = 'PUT'\n\n    requestOptions.url =\n      `${server.protocol}://${server.server}:${server.port}/` +\n      `rest/version/${server.version}/` +\n      `user/${username}/` +\n      `eventSubscription/${eventInfo.sessionData}`\n\n    // Only include user lists in the request body if there are entries.\n    const userLists = {}\n    if (action.payload.subscribeUserList.length > 0) {\n      userLists.subscribeUserList = action.payload.subscribeUserList\n    }\n    if (action.payload.unsubscribeUserList.length > 0) {\n      userLists.unsubscribeUserList = action.payload.unsubscribeUserList\n    }\n\n    requestOptions.body = JSON.stringify({\n      eventSubscriptionRequest: {\n        ...userLists,\n        eventType: action.payload.eventType,\n        customParameters: action.payload.customParameters,\n        expires: eventInfo.expires\n      }\n    })\n\n    const response = yield request(requestOptions)\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        const { statusCode } = response.payload.body.eventSubscriptionResponse\n        log.info(`Failed to update sip event subscription; ${action.payload.eventType}, ` + `status code ${statusCode}`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message:\n            `Failed to update to sip event subscription; ${action.payload.eventType}, ` + `status code ${statusCode}`\n        })\n      } else {\n        // Handler errors from the request helper.\n        const { message } = response.payload.result\n        log.info(`SIP event update subscription request failed: ${message}.`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `SIP event update subscription request failed: ${message}.`\n        })\n      }\n\n      yield put(actions.sipEventUpdateFinish({ error }))\n    } else {\n      log.info(`Updated sip event subscription: ${action.payload.eventType}.`)\n      yield put(\n        actions.sipEventUpdateFinish({\n          response: {\n            // Response payload includes statusCode, expires, sessionData.\n            ...response.payload.body.eventSubscriptionResponse,\n            eventType: action.payload.eventType,\n            subscribeUserList: action.payload.subscribeUserList || [],\n            unsubscribeUserList: action.payload.unsubscribeUserList || []\n          }\n        })\n      )\n    }\n  }\n}\n\n/**\n * Saga to unsubscribe from [all currently subscribed] sip events.\n * @method sipEventUnsubscribe\n */\nexport function * sipEventUnsubscribe () {\n  while (true) {\n    const action = yield take(actionTypes.SIP_EVENT_UNSUBSCRIBE)\n    log.debug(`Unsubscribing from sip event subscriptions: ${action.payload}.`)\n    const eventInfo = yield select(getSipEventInfo, action.payload)\n\n    if (!eventInfo) {\n      log.info(`Cannot unsubscribe from sip event ${action.payload}; no subscription exists.`)\n      const error = new BasicError({\n        code: sipEventCodes.NOT_SUBSCRIBED,\n        message: `Cannot unsubscribe from ${action.payload}; no subscription found.`\n      })\n      yield put(actions.sipEventUnsubscribeFinish({ error }))\n      continue\n    }\n\n    const platform = yield select(getPlatform)\n    let { server, username, token, accessToken } = yield select(getConnectionInfo)\n\n    // TODO: UC should store it's token the same way as Link.\n    if (platform === platforms.UC && !token) {\n      token = accessToken\n    }\n\n    const requestOptions = {}\n    requestOptions.method = 'DELETE'\n    requestOptions.responseType = 'none'\n\n    requestOptions.url =\n      `${server.protocol}://${server.server}:${server.port}/` +\n      `rest/version/${server.version}/` +\n      `user/${username}/` +\n      `eventSubscription/${eventInfo.sessionData}`\n\n    const response = yield request(requestOptions)\n\n    if (response.error) {\n      let error\n      if (response.payload.body) {\n        // Handle errors from the server.\n        const { statusCode } = response.payload.body.eventSubscriptionResponse\n        log.info(`Failed to unsubscribe from sip event ${action.payload.eventType}, ` + `status code ${statusCode}`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `Failed to unsubscribe from sip event ${action.payload.eventType}, ` + `status code ${statusCode}`\n        })\n      } else {\n        // Handler errors from the request helper.\n        const { message } = response.payload.result\n        log.info(`SIP event unsubscription request failed: ${message}.`)\n\n        error = new BasicError({\n          code: sipEventCodes.UNKNOWN_ERROR,\n          message: `SIP event unsubscription request failed: ${message}.`\n        })\n      }\n\n      yield put(actions.sipEventUnsubscribeFinish({ error }))\n    } else {\n      log.info(`Successfully unsubscribed from sip ${action.payload}.`)\n      yield put(\n        actions.sipEventUnsubscribeFinish({\n          response: {\n            eventType: action.payload\n          }\n        })\n      )\n    }\n  }\n}\n\n/**\n * Saga to handle received sip event notifications.\n * @method receiveEventNotify\n */\nexport function * receiveEventNotify () {\n  // Redux-saga take() pattern.\n  // Take notification actions that MAY be for sip events.\n  function receiveEventNotifyPattern (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.notificationMessage.hasOwnProperty('genericNotificationParams')\n    )\n  }\n\n  while (true) {\n    const action = yield take(receiveEventNotifyPattern)\n\n    // Determine which sip events the user is subscribed/connected for.\n    const subscribedServices = yield select(getSubscribedServices)\n\n    const sipEvents = subscribedServices.filter(service => service.startsWith('event:'))\n\n    const notification = action.payload.notificationMessage\n    const genericNotification = notification.genericNotificationParams\n    let callId = ''\n    /*\n     * Check if the notification's sessiondataType (if it exists) is of type call.\n     * If it is, then the sessionData field of the notification is a KandyLink Call ID.\n     * We can then map that KL Call ID to an SDK Call ID (if it exists) and attach that to the\n     * sip event we emit to the application.\n     */\n    if (genericNotification.sessiondataType && genericNotification.sessiondataType === 'call') {\n      // Look at our existing calls to find the SDK Call ID (if any) that corresponds to the sessiondata\n      const targetcall = yield select(getCallByWrtcsSessionId, genericNotification.sessionData)\n      if (!targetcall) {\n        log.warn('Call associated with received SIP notification cannot be found.')\n      } else {\n        callId = targetcall.id\n      }\n    }\n\n    /*\n     * Determine which scenario we received this notification in:\n     *  - Provisioned and subscribed: Application subscribed for the event during user subscription,\n     *      and created a SIP subscription for it.\n     *  - Provisioned, not subscribed: Application subscribed for the event during user subscription,\n     *      but the SDK does not have a SIP subscription for it.\n     *  - Unsolicited: Application has no user or SIP subscription for the event.\n     *\n     * We want to emit the notification in all scenarios, so this check is mainly for logging purposes.\n     */\n    if (includes(notification.eventType, sipEvents)) {\n      const eventInfo = yield select(getSipEventInfo, notification.eventType)\n\n      // Determine if there is a SIP subscription for this sip event in state.\n      if (eventInfo) {\n        // User subscribed to sip event, with a SIP subscription found in state.\n        log.info(`Received solicited SIP event notification of type ${notification.eventType}.`, notification)\n      } else {\n        // User subscribed to sip event, but no SIP subscription found.\n        //    This is assumed to be an edge-case where the SDK lost the SIP subscription info.\n        log.info(\n          `Received solicited SIP event notification for untracked event of type ${notification.eventType}.`,\n          notification\n        )\n      }\n    } else {\n      // User not subscribed to sip event.\n      log.info(`Received unsolicited SIP event notification of type ${notification.eventType}.`, notification)\n    }\n\n    // Always emit the notification to the application.\n    yield put(actions.sipEventReceived(notification, callId))\n  }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\n// Helper function for formatting \"changed\" events.\nfunction subscriptionChange ({ change, action }) {\n  if (action.error) {\n    return {\n      type: eventTypes.EVENT_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.EVENT_SUBSCRIPTION_CHANGED,\n      args: {\n        eventType: action.payload.eventType,\n        change,\n        subscribedUsers: action.payload.subscribedUsers,\n        unsubscribedUsers: action.payload.unsubscribedUsers\n      }\n    }\n  }\n}\n\nvar events = {}\n\nevents[actionTypes.SIP_EVENT_SUBSCRIBE_FINISH] = function (action) {\n  return subscriptionChange({\n    change: 'newSubscription',\n    action\n  })\n}\n\nevents[actionTypes.SIP_EVENT_UPDATE_FINISH] = function (action) {\n  return subscriptionChange({\n    change: 'updateSubscription',\n    action\n  })\n}\n\nevents[actionTypes.SIP_EVENT_UNSUBSCRIBE_FINISH] = function (action) {\n  return subscriptionChange({\n    change: 'unsubscribe',\n    action\n  })\n}\n\nevents[actionTypes.SIP_EVENT_RECEIVED] = function (action) {\n  // Pass the notification straight through.\n  return {\n    type: eventTypes.EVENT_RECEIVED,\n    args: {\n      eventType: action.payload.event.eventType,\n      eventId: action.payload.event.eventId,\n      links: {\n        callId: action.payload.callId\n      },\n      event: action.payload.event\n    }\n  }\n}\n\nexport default events\n","/**\n * A change has occurred to a SIP subscription.\n *\n * This event can be emitted when a new SIP subscription is created ({@link sip.subscribe}\n *    API), an existing subscription is updated ({@link sip.update} API), or has been\n *    deleted ({@link sip.unsubscribe} API). The `change` parameter on the event indicates\n *    which scenario caused the event.\n *\n * When users are added or removed from a subscription through a new subscription or an update,\n *    the `subscribedUsers` and `unsubscribedUsers` parameters will indicate the users added\n *    and removed, respectively.\n *\n * The {@link sip.getDetails} API can be used to retrieve the current information about\n *    a subscription.\n *\n * @public\n * @requires sipEvents\n * @memberof sip\n * @event sip:subscriptionChange\n * @param {Object} params\n * @param {string} params.eventType The name of the SIP event.\n * @param {string} params.change The change operation that triggered the event.\n * @param {Array<string>} [params.subscribedUsers] List of users added to the subscription\n *    as part of the change.\n * @param {Array<string>} [params.unsubscribedUsers] List of users removed from the\n *    subscription as part of the change.\n */\nexport const EVENT_SUBSCRIPTION_CHANGED = 'sip:subscriptionChange'\n\n/**\n * An error has occurred during a SIP event operation.\n *\n * @public\n * @requires sipEvents\n * @memberof sip\n * @event sip:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n * @example\n * // Listen for the event being emitted.\n * client.on('sip:error', (params) => {\n *    // Handle the error based on the information.\n *    const { code, message } = params.error\n *    ...\n * })\n */\nexport const EVENT_ERROR = 'sip:error'\n\n/**\n * A SIP event notification has been received.\n *\n * The `event` parameter is the full notification received from the network. The format\n *    of the notification is dependant on its event type. The SDK does not do any\n *    pre-processing of this data.\n * @public\n * @requires sipEvents\n * @memberof sip\n * @event sip:eventsChange\n * @param {Object} params Information about the notification.\n * @param {string} params.eventType The name of the SIP event.\n * @param {string} params.eventId A unique ID for the event notification.\n * @param {Object} params.event The full event object.\n * @param {Object} params.links\n * @param {string} [params.links.callId] The ID of the call this SIP event links to.\n * @example\n * // Listen for the event being emitted.\n * client.on('sip:eventsChange', (params) => {\n *    // Gather the SIP info specific to the event.\n *    const sipInfo = params.event.genericNotificationParams\n *\n *    // Handle the data based on the event type.\n *    if (params.eventType === 'event:presence') {\n *        const { data, from } = sipInfo\n *        ...\n *    }\n * })\n */\nexport const EVENT_RECEIVED = 'sip:eventsChange'\n","import * as actionTypes from './interface/actions/actionTypes'\nimport * as userActions from './interface/actions/users'\nimport * as contactActions from './interface/actions/contacts'\nimport { getConnectionInfo, getPlatform } from '../auth/interface/selectors'\nimport pluginInterface from './interface'\nimport contactsEvents from './interface/events/contacts'\nimport usersEvents from './interface/events/users'\nimport { mapEvents } from '../events/interface/actions'\n// Request\nimport request from '../request/effects'\n\n// Logs\nimport { logManager } from '../logs'\nimport { all, call, take, put, select } from 'redux-saga/effects'\n\n// Constants\nimport { platforms } from '../constants'\n\n// Get the logger\nconst log = logManager.getLogger('USERS')\n\nconst { api, name, reducer } = pluginInterface\n\nconst capabilities = ['addContactAsFriend', 'selfInfoAsUserProfile', 'limitedSearch']\n\nexport default function usersLink () {\n  function * init () {\n    yield put(mapEvents({ ...contactsEvents, ...usersEvents }))\n  }\n\n  function * refreshContacts () {\n    while (true) {\n      const action = yield take([actionTypes.REFRESH_CONTACTS])\n      if (action.error) {\n        continue\n      }\n\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(contactRequest, 'GET', connection)\n      if (res.error) {\n        yield put(contactActions.refreshContactsFinish({ error: res.error }))\n      } else {\n        var contacts = res.result.addressBookEntries ? res.result.addressBookEntries.map(localContactFromRemote) : []\n        yield put(\n          contactActions.refreshContactsFinish({\n            contacts: contacts\n          })\n        )\n      }\n    }\n  }\n\n  /**\n   * fetch a contact from the user's Personal Address Book.\n   *\n   * @return {Generator} [description]\n   */\n  function * fetchContact () {\n    while (true) {\n      const action = yield take([actionTypes.FETCH_CONTACT])\n\n      if (action.error) {\n        log.debug(action.error)\n      }\n\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(contactRequest, 'GET', connection, `contacts/${action.payload}`)\n\n      if (res.error) {\n        const error = new Error(res.error)\n        yield put(contactActions.fetchContactFinish({ error }))\n      } else {\n        const contact = localContactFromRemote(res.result.addressBookEntries[0])\n        yield put(contactActions.fetchContactFinish({ contact }))\n      }\n    }\n  }\n\n  function * addContact () {\n    while (true) {\n      try {\n        // Wait for ADD_CONTACT action.\n        const action = yield take(actionTypes.ADD_CONTACT)\n\n        var contactData = {\n          addressBookRequest: {\n            addressBookEntries: [remoteContactFromLocal({ ...action.payload })]\n          }\n        }\n        const connection = yield select(getConnectionInfo)\n        const res = yield call(contactRequest, 'POST', connection, 'contacts/', JSON.stringify(contactData))\n        if (res.error) {\n          throw new Error(res.error)\n        } else {\n          const contact = localContactFromRemote(action.payload)\n          yield put(contactActions.addContactFinish({ contact }))\n        }\n      } catch (error) {\n        yield put(contactActions.addContactFinish({ error }))\n      }\n    }\n  }\n\n  function * removeContact () {\n    while (true) {\n      try {\n        // Wait for REMOVE_CONTACT action.\n        const action = yield take(actionTypes.REMOVE_CONTACT)\n        const connection = yield select(getConnectionInfo)\n        const res = yield call(contactRequest, 'DELETE', connection, 'contacts/' + encodeURIComponent(action.payload))\n\n        if (res.error) {\n          throw new Error(res.error)\n        }\n        yield put(contactActions.removeContactFinish({ contactId: action.payload }))\n      } catch (err) {\n        yield put(contactActions.removeContactFinish({ error: err }))\n      }\n    }\n  }\n\n  function * updateContact () {\n    while (true) {\n      try {\n        const action = yield take(actionTypes.UPDATE_CONTACT)\n        const { contact } = action.payload\n        const contactRestObject = remoteContactFromLocal({ ...contact })\n        var contactData = {\n          addressBookRequest: {\n            addressBookEntries: [contactRestObject]\n          }\n        }\n        const connection = yield select(getConnectionInfo)\n        const res = yield call(\n          contactRequest,\n          'PUT',\n          connection,\n          'contacts/' + contact.contactId,\n          JSON.stringify(contactData)\n        )\n        if (res.error) {\n          throw new Error(res.error)\n        }\n        yield put(contactActions.updateContactFinish({ contact }))\n      } catch (error) {\n        yield put(contactActions.updateContactFinish({ error }))\n      }\n    }\n  }\n\n  function * searchDirectory () {\n    while (true) {\n      // Wait for SEARCH_DIRECTORY action.\n      const action = yield take(actionTypes.SEARCH_DIRECTORY)\n\n      let type\n      const filters = action.payload.filters\n      // Look for first defined filter provided\n      for (const filter in filters) {\n        if (filters.hasOwnProperty(filter) && filters[filter]) {\n          type = filter\n          break\n        }\n      }\n      log.info(`Using criteria '${type}' with value '${filters[type]}' to search directory.`)\n\n      var body = {\n        searchCriteria: filters[type],\n        searchType: searchTypeInteger(type)\n      }\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(getDirectory, connection, body)\n      if (res.error) {\n        const error = new Error(res.error)\n        yield put(userActions.searchDirectoryFinish({ error }))\n      } else {\n        var users = res.result.directoryItems || []\n        yield put(userActions.searchDirectoryFinish({ users: users.map(localUserFromRemote) }))\n      }\n    }\n  }\n\n  /**\n   * On-Premises fetchUser saga\n   * Performs the workflow of caching a user.\n   * @return {Generator} [description]\n   */\n  function * fetchUser () {\n    while (true) {\n      // Wait for FETCH_USER action.\n      const { payload: userId } = yield take(actionTypes.FETCH_USER)\n      var body = {\n        searchCriteria: userId,\n        searchType: searchTypeInteger('user_id')\n      }\n      const connection = yield select(getConnectionInfo)\n      const res = yield call(getDirectory, connection, body)\n      if (res.error) {\n        yield put(userActions.fetchUserFinish(new Error(res.error)))\n      } else {\n        if (res.result.directoryItems) {\n          yield put(userActions.fetchUserFinish(res.result.directoryItems[0]))\n        } else {\n          log.debug('Fetch user request was successful, but result was empty')\n        }\n      }\n    }\n  }\n\n  /**\n   * On-Premises getUserDetails saga.\n   * Performs the workflow of fetching user profile data for the currently logged in user.\n   * @method getUserDetails\n   */\n  function * fetchSelf () {\n    while (true) {\n      // Wait for a GET_USER_DETAILS action.\n      const action = yield take(actionTypes.FETCH_SELF_INFO)\n      const userData = {}\n\n      if (action.error) {\n        continue\n      }\n\n      const connection = yield select(getConnectionInfo)\n      // Fetch the user details\n      const { userProfile, currentLocale } = yield all({\n        userProfile: call(fetchSelfInfo, connection),\n        currentLocale: call(fetchUserLocale, connection)\n      })\n\n      // Set as much user data as possible, but log an error if any of our calls failed\n      if (!userProfile.error) {\n        userData.data = userProfile\n      } else {\n        log.debug('Error retrieving user profile information', userProfile.text)\n      }\n\n      if (!currentLocale.error) {\n        userData.currentLocale = currentLocale\n      } else {\n        log.debug('Error retrieving user locale', currentLocale.text)\n      }\n      userData.primaryContact = connection.username\n\n      yield put(userActions.fetchUserFinish(userData))\n    }\n  }\n\n  return {\n    sagas: [\n      refreshContacts,\n      addContact,\n      removeContact,\n      updateContact,\n      fetchContact,\n      searchDirectory,\n      fetchUser,\n      fetchSelf\n    ],\n    api,\n    name,\n    init,\n    reducer,\n    capabilities\n  }\n}\n\nexport function * contactRequest (method, conn, extraURL, body) {\n  const platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : conn.server.version\n  var url\n  if (extraURL) {\n    url = `${conn.server.protocol}://${conn.server.server}:${conn.server.port}/rest/version/${version}/user/${conn.username}/addressbook/${extraURL}`\n  } else {\n    url = `${conn.server.protocol}://${conn.server.server}:${conn.server.port}/rest/version/${version}/user/${conn.username}/addressbook`\n  }\n  const options = {\n    method: method\n  }\n  if (body) {\n    options.body = body\n  }\n\n  const response = yield request({ url, ...options })\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      let statusCode, errorMessage\n      if (response.payload.body.addressBookResponse) {\n        statusCode = response.payload.body.addressBookResponse.statusCode\n      } else if (response.payload.body.message && response.payload.result.code) {\n        statusCode = response.payload.result.code\n        errorMessage = response.payload.body.message\n      }\n      log.debug(`Failed to search addressbook with status code ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: new Error(`Failed to search addressbook; status ${statusCode}.\\n message ${errorMessage}`)\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Addressbook search request failed: ${message}`)\n      // TODO: Proper errors.\n      return {\n        error: new Error(`Addressbook search request failed: ${message}`)\n      }\n    }\n  } else if (response.payload.body && response.payload.body.addressBookResponse.statusCode === 0) {\n    return { result: response.payload.body.addressBookResponse || {} }\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for addressbook search.')\n    const err = new Error('Unknown error.')\n    return { error: err }\n  }\n}\n\n// see SPiDR 4.3 REST API Documentation - 12.11.3\nfunction searchTypeInteger (searchType) {\n  switch (searchType) {\n    case 'first_name':\n    case 'firstName':\n    case 'FIRSTNAME':\n      return 1\n    case 'last_name':\n    case 'lastName':\n    case 'LASTNAME':\n      return 2\n    case 'name':\n    case 'NAME':\n      return 3\n    case 'phone_number':\n    case 'phoneNumber':\n    case 'PHONENUMBER':\n      return 4\n    case 'user_id':\n    case 'userId':\n    case 'USERID':\n    case 'user_name':\n    case 'userName':\n    case 'USERNAME':\n      return 5\n  }\n}\n\nexport function * getDirectory (conn, params = {}) {\n  const platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : conn.server.version\n  var url = `${conn.server.protocol}://${conn.server.server}:${conn.server.port}/rest/version/${version}/user/${conn.username}/directory`\n\n  const queryParams = {}\n  if (params.searchType) {\n    queryParams.criteria = params.searchCriteria\n    queryParams.criteriaType = params.searchType\n  } else if (params.searchCriteria) {\n    queryParams.criteria = params.searchCriteria\n  }\n  const method = 'GET'\n\n  const response = yield request({ url, queryParams, method })\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.directory\n      log.debug(`Failed to search directory with status code ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: new Error(`Failed to search directory; status ${statusCode}.`)\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`Directory search request failed: ${message}`)\n      // TODO: Proper errors.\n      return { error: new Error(`Directory search request failed: ${message}`) }\n    }\n  } else if (response.payload.body && response.payload.body.directory.statusCode === 0) {\n    // Request was successful.\n    return { result: response.payload.body.directory || {} }\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for directory search.')\n    const err = new Error('Unknown error.')\n    return { error: err }\n  }\n}\n\n/**\n * Fetch userProfileData from SPiDR with the provided connection info.\n * Compared to {@link user.fetch} API, this API retrieves additional user related information.\n *\n * @param  {Object}     connection Connection information for the platform in use.\n * @return {Object}            Fetch request's response, parsed.\n */\nexport function * fetchSelfInfo (connection) {\n  const platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : connection.server.version\n  var url = `${connection.server.protocol}://${connection.server.server}:${connection.server.port}/rest/version/${version}/user/${connection.username}/userProfileData`\n\n  var params = {\n    method: 'GET'\n  }\n\n  const response = yield request({ url, ...params })\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      const { statusCode } = response.payload.body.userProfileData\n      log.debug(`Failed to fetch user details with status code ${statusCode}.`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        status: statusCode,\n        text: `Failed to fetch user details with status code ${statusCode}.`\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`User details fetch request failed: ${message}`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        text: `User details fetch request failed: ${message}`\n      }\n    }\n  } else if (\n    response.payload.body &&\n    response.payload.body.userProfileData &&\n    response.payload.body.userProfileData.statusCode === 0\n  ) {\n    // Request was successful.\n    return response.payload.body.userProfileData\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for user details fetch.')\n    return {\n      error: true,\n      text: 'Unknown error case fetching user details.'\n    }\n  }\n}\n\n/**\n * Fetch user locale information from SPiDR with the provided connection info.\n * @param  {Object}     connection Connection information for the platform in use.\n * @return {Object}            Fetch request's response.\n */\nexport function * fetchUserLocale (connection) {\n  const platform = yield select(getPlatform)\n  const version = platform === platforms.UC ? 1 : connection.server.version\n  const url = `${connection.server.protocol}://${connection.server.server}:${connection.server.port}/rest/version/${version}/localization`\n\n  var params = {\n    method: 'GET'\n  }\n\n  const response = yield request({ url, ...params })\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      log.debug('Failed to fetch user locale.')\n      // TODO: Proper errors.\n      return {\n        error: true,\n        text: 'Failed to fetch user locale .'\n      }\n    } else {\n      // Handle errors from the request helper.\n      const { message } = response.payload.result\n      log.debug(`User locale fetch request failed: ${message}`)\n      // TODO: Proper errors.\n      return {\n        error: true,\n        text: `User locale fetch request failed: ${message}`\n      }\n    }\n  } else if (response.payload.body && response.payload.body.acceptLanguage) {\n    // Locale request was successful.\n    return response.payload.body.acceptLanguage\n  } else {\n    // Unknown case.\n    log.debug('Unknown error case for user locale fetch.')\n    return {\n      error: true,\n      text: 'Unknown error case fetching user locale.'\n    }\n  }\n}\n\n/**\n * remoteContactFromLocal\n *\n * At the time of development, `nickName` is the property by which contact resources are keyed in the back end. Since the manner in which a `nickName` is used and regarded in common practice suggests that it can be changed, we are exposing it as a property named `contactId` and informing developers that this is a unique property. This function is used to normalize the naming convention when preparing contact data to be sent for a REST request\n *\n * @param {Object} contact A contact object\n */\nfunction remoteContactFromLocal (contact) {\n  if ('contactId' in contact) {\n    contact.nickname = contact.contactId\n    delete contact.contactId\n  }\n  // We must remove all empty values, as the back end servicing Link does not permit them\n  for (const prop in contact) {\n    if (!contact[prop] || contact[prop].length === 0) {\n      delete contact[prop]\n    }\n  }\n  return contact\n}\n\n/**\n * localContactFromRemote\n *\n * Convert a contact object from the back end format used in REST calls, to the format maintained in the state\n *\n * @param {Object} contact A contact object\n */\nfunction localContactFromRemote (contact) {\n  if ('nickname' in contact) {\n    contact.contactId = contact.nickname\n    delete contact.nickname\n  }\n  return contact\n}\n\n/**\n * localUserFromRemote\n *\n * Converts a user object from the back end format used in REST calls, to the format maintained in the state. In particular, it ensures that the user object has a `userId` property, as this is the property by which users are keyed in our state.\n *\n * @param {Object} user A user object\n * @returns {Object} The user object\n */\nfunction localUserFromRemote (user) {\n  return {\n    ...user,\n    userId: user.primaryContact || user.userId\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a users plugin.\n * @type {string}\n */\nconst name = 'users'\n\n// Export the interface as a single object.\nexport default { name, api, reducer }\n","import usersAPI from './users'\nimport contactsAPI from './contacts'\n\n/**\n * Users API index.\n * APIs are organized by their namespacing.\n * @method api\n * @param {Object} context\n * @param {Function} context.dispatch The redux store's dispatch function.\n * @param {Function} context.getState The redux store's getState function.\n * @param {Object} context.primitives Primitive types designed for use in the SDK\n * @return {Object} The plugin's API object.\n */\nexport default function api (context) {\n  return {\n    contacts: contactsAPI(context),\n    user: usersAPI(context)\n  }\n}\n","// Users plugin.\nimport * as actions from '../actions/users'\nimport { getUser, getUsers } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\nconst log = logManager.getLogger('USERS')\n\nexport default function usersAPI ({ dispatch, getState, primitives }) {\n  /**\n   * The 'user' namespace allows access to user information for users within the same domain.\n   *\n   * @public\n   * @namespace user\n   */\n\n  /**\n   * The User data object.\n   *\n   * @public\n   * @static\n   * @typedef {Object} User\n   * @memberof user\n   * @property {user.UserID} userId The User ID of the user.\n   * @property {string} emailAddress The email address of the user.\n   * @property {string} firstName The first name of the user.\n   * @property {string} lastName The last name of the user.\n   * @property {string} photoURL The URL to get the photo of the user.\n   * @property {string} buddy Whether the user is a \"buddy\". Values can be \"true\" or \"false\".\n   */\n\n  return {\n    /**\n     * Fetches information about a User.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetch\n     * @param {string} userId The User ID of the user.\n     */\n    fetch (userId) {\n      log.debug(API_LOG_TAG + 'user.fetch: ', userId)\n      dispatch(actions.fetchUser(userId))\n    },\n\n    /**\n     * Fetches information about the current User from directory.\n     * Compared to {@link user.fetch} API, this API retrieves additional user related information.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetchSelfInfo\n     * @requires selfInfoAsUserProfile\n     */\n    /**\n     * Fetches information about the current User from directory.\n     * This API is simply a shortcut for the {@link user.fetch user.fetch(getUserInfo().identity)} API.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetchSelfInfo\n     * @requires selfInfoAsUserSearch\n     */\n    fetchSelfInfo () {\n      log.debug(API_LOG_TAG + 'user.fetchSelfInfo')\n      dispatch(actions.fetchSelfInfo())\n    },\n\n    /**\n     * Retrieves information about a User, if available.\n     *\n     * See the {@link user.fetch} and {@link user.search} APIs for details about\n     *    making Users' information available.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method get\n     * @param {user.UserID} userId The User ID of the user.\n     * @returns {user.User} The User object for the specified user.\n     */\n    get (userId) {\n      log.debug(API_LOG_TAG + 'user.get: ', userId)\n      return getUser(getState(), userId)\n    },\n\n    /**\n     * Retrieves information about all available Users.\n     *\n     * See the {@link user.fetch} and {@link user.search} APIs for details about\n     *    making Users' information available.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method getAll\n     * @returns {Array<user.User>} An array of all the User objects.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'user.getAll')\n      return getUsers(getState())\n    },\n\n    /**\n     * Searches the domain's directory for Users.\n     *\n     * Directory searching only supports one filter. If multiple filters are provided, only one of the filters will be used for the search.\n     * A search with no filters provided will return all users.\n     *\n     * The SDK will emit a {@link user.event:directory:change directory:change}\n     *    event after the operation completes. The search results will be\n     *    provided as part of the event, and will also be available using the\n     *    {@link user.get} and {@link user.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method search\n     * @requires limitedSearch\n     * @param {Object} filters The filter options for the search.\n     * @param {user.UserID} [filters.userId] Matches the User ID of the user.\n     * @param {string} [filters.name] Matches the firstName or lastName.\n     * @param {string} [filters.firstName] Matches the firstName.\n     * @param {string} [filters.lastName] Matches the lastName.\n     * @param {string} [filters.userName] Matches the userName.\n     * @param {string} [filters.phoneNumber] Matches the phoneNumber.\n     */\n\n    /**\n     * Searches the domain's directory for Users.\n     *\n     * The SDK will emit a {@link user.event:directory:change directory:change}\n     *    event after the operation completes. The search results will be\n     *    provided as part of the event, and will also be available using the\n     *    {@link user.get} and {@link user.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method search\n     * @requires advancedSearch\n     * @param {Object} filters The filter options for the search.\n     * @param {user.UserID} [filters.userId] Matches the User ID of the user.\n     * @param {string} [filters.name] Matches the firstName or lastName.\n     * @param {string} [filters.firstName] Matches the firstName.\n     * @param {string} [filters.lastName] Matches the lastName.\n     * @param {string} [filters.userName] Matches the userName.\n     * @param {string} [filters.phoneNumber] Matches the phoneNumber.\n     * @param {Object} [options] Sorting options.\n     * @param {string} [options.sortBy] The User property to sort the results by. This can be any of the above listed filters.\n     * @param {string} [options.order] Order in which results are returned. Can be either \"asc\" or \"desc\".\n     * @param {number} [options.max] The maximum number of results to return.\n     * @param {string} [options.next] The pointer for a chunk of results, which may be returned from a previous query.\n     */\n    search (filters = {}, options = {}) {\n      log.debug(API_LOG_TAG + 'user.search: ', filters, options)\n      dispatch(actions.searchDirectory(filters, options))\n    }\n  }\n}\n","// Users plugin.\nimport * as actions from '../actions/contacts'\nimport { getContact, getContacts } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('USERS')\n\nexport default function contactsAPI ({ dispatch, getState, primitives }) {\n  /**\n   * The 'contacts' namespace allows users to store personal contacts to their account.\n   *\n   * @public\n   * @namespace contacts\n   */\n\n  return {\n    /**\n     * Add a contact to a user's personal address book.\n     * Will trigger the `contacts:new` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method add\n     * @requires addContactAsFriend\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.photoUrl] The URL address identifying location of user's picture\n     * @param {string} [contact.emailAddress] The contact's email address\n     * @param {string} [contact.homePhone] The contact's home phone number\n     * @param {string} [contact.workPhone] The contact's business phone number\n     * @param {string} [contact.mobilePhone] The contact's mobile phone number\n     * @param {string} [contact.conferenceURL] Conference URL and access code for this user's address book entry\n     * @param {string} [contact.fax] The user's fax number\n     * @param {string} [contact.pager] The user's pager number\n     * @param {string} [contact.groupList] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.friendStatus] Indicates whether or not the contact is a friend of the user\n     */\n    /**\n     * Add a contact to a user's personal address book.\n     * Will trigger the `contacts:new` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method add\n     * @requires addContactAsBuddy\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.email] The contact's email address\n     * @param {string} [contact.homePhoneNumber] The contact's home phone number\n     * @param {string} [contact.businessPhoneNumber] The contact's business phone number\n     * @param {string} [contact.mobilePhoneNumber] The contact's mobile phone number\n     * @param {string} [contact.list] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.buddy] Indicates whether or not the contact is a friend of the user\n     */\n    add (contact) {\n      log.debug(API_LOG_TAG + 'contacts.add: ', contact)\n      dispatch(actions.addContact(contact))\n    },\n\n    /**\n     * Retrieves local information about a contact.\n     *\n     * @public\n     * @memberof contacts\n     * @method get\n     * @param {string} contactId The unique contact ID of the contact.\n     * @return {Object} Contact information.\n     */\n    get (contactId) {\n      log.debug(API_LOG_TAG + 'contacts.get: ', contactId)\n      return getContact(getState(), contactId)\n    },\n\n    /**\n     * Retrieves local information about all contacts.\n     *\n     * @public\n     * @memberof contacts\n     * @method getAll\n     * @return {Array} List of contact information.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'contacts.getAll')\n      return getContacts(getState())\n    },\n\n    /**\n     * Refreshes the local information about contacts. This will get new contacts from the platform.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method refresh\n     */\n    refresh () {\n      log.debug(API_LOG_TAG + 'contacts.refresh')\n      dispatch(actions.refreshContacts())\n    },\n\n    /**\n     * Remove a contact from a personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method remove\n     * @param  {string} id The Id of the contact that will be removed.\n     */\n    remove (id) {\n      log.debug(API_LOG_TAG + 'contacts.remove: ', id)\n      dispatch(actions.removeContact(id))\n    },\n\n    /**\n     * Update a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method update\n     * @requires addContactAsFriend\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.photoUrl] The URL address identifying location of user's picture\n     * @param {string} [contact.emailAddress] The contact's email address\n     * @param {string} [contact.homePhone] The contact's home phone number\n     * @param {string} [contact.workPhone] The contact's business phone number\n     * @param {string} [contact.mobilePhone] The contact's mobile phone number\n     * @param {string} [contact.conferenceURL] Conference URL and access code for this user's address book entry\n     * @param {string} [contact.fax] The user's fax number\n     * @param {string} [contact.pager] The user's pager number\n     * @param {string} [contact.groupList] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.friendStatus] Indicates whether or not the contact is a friend of the user\n     */\n    /**\n     * Update a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method update\n     * @requires addContactAsBuddy\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.email] The contact's email address\n     * @param {string} [contact.homePhoneNumber] The contact's home phone number\n     * @param {string} [contact.businessPhoneNumber] The contact's business phone number\n     * @param {string} [contact.mobilePhoneNumber] The contact's mobile phone number\n     * @param {string} [contact.list] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.buddy] Indicates whether or not the contact is a friend of the user\n     */\n    update (contact) {\n      let objectToUse\n      if (typeof contact === 'string' || contact instanceof String) {\n        log.warn(\n          API_LOG_TAG +\n            'contacts.update: Call to update(contactId, contact) has been deprecated and so it will be removed. Consider using: update(contact), instead.'\n        )\n        // second argument is supposed to be actual contact obj\n        objectToUse = arguments[1]\n      } else {\n        // Assume first param is the actual contact obj\n        objectToUse = contact\n      }\n      log.debug(API_LOG_TAG + 'contacts.update: ', objectToUse)\n      dispatch(actions.updateContact(objectToUse))\n    },\n\n    /**\n     * Fetch a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method fetch\n     * @param  {string} contactId The unique contact ID of the contact.\n     */\n    fetch (contactId) {\n      log.debug(API_LOG_TAG + 'contacts.fetch: ', contactId)\n      dispatch(actions.fetchContact(contactId))\n    }\n  }\n}\n","import contactsReducers from './contacts'\nimport usersReducers from './users'\nimport { handleActions } from 'redux-actions'\n\n/*\n * Combine all of reducers into a single reducer, defaulting to an empty Object for each\n * substate of contacts and users\n */\nconst reducer = handleActions(\n  { ...contactsReducers, ...usersReducers },\n  {\n    errors: [],\n    contacts: {},\n    users: {},\n    isPending: true\n  }\n)\nexport default reducer\n","import * as actionTypes from '../actions/actionTypes'\nimport { unset } from 'lodash/fp'\n\nconst reducers = {}\n\nconst contactsPendingReducer = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true\n    }\n  }\n}\n\nreducers[actionTypes.ADD_CONTACT] = contactsPendingReducer\nreducers[actionTypes.REFRESH_CONTACTS] = contactsPendingReducer\nreducers[actionTypes.FETCH_CONTACT] = contactsPendingReducer\nreducers[actionTypes.UPDATE_CONTACT] = contactsPendingReducer\n\nreducers[actionTypes.ADD_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.REFRESH_CONTACTS_FINISH] = {\n  next (state, action) {\n    const contacts = {}\n    for (const contact of action.payload) {\n      contacts[contact.contactId] = contact\n    }\n    return {\n      ...state,\n      contacts: contacts,\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.REMOVE_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: unset(action.payload, state.contacts), // Remove the property from state.contacts whose key is equal to action.payload\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nexport default reducers\n","import * as actionTypes from '../actions/actionTypes'\n\nconst reducers = {}\n\nreducers[actionTypes.FETCH_USER_FINISH] = {\n  next (state, action) {\n    const user = action.payload\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [user.userId]: user\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_SELF_INFO_FINISH] = {\n  next (state, action) {\n    const self = action.payload\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [self.userId]: self\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.SEARCH_DIRECTORY_FINISH] = {\n  next (state, action) {\n    const users = {}\n    for (const user of action.payload) {\n      users[user.userId] = user\n    }\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        ...users\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nexport default reducers\n","import * as actionTypes from '../actions/actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\nconst contactNewEvent = action => {\n  return {\n    type: eventTypes.CONTACTS_CHANGE,\n    args: action.payload\n  }\n}\n\nconst contactsChangeEvent = action => {\n  if (action.error) {\n    return {\n      type: eventTypes.CONTACTS_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONTACTS_CHANGE\n    }\n  }\n}\n\nconst addContactFinishActions = action => {\n  if (action.error) {\n    return contactsChangeEvent(action)\n  }\n  return [contactNewEvent(action), contactsChangeEvent(action)]\n}\n\neventsMap[actionTypes.ADD_CONTACT_FINISH] = addContactFinishActions\neventsMap[actionTypes.REFRESH_CONTACTS_FINISH] = contactsChangeEvent\neventsMap[actionTypes.REMOVE_CONTACT_FINISH] = contactsChangeEvent\neventsMap[actionTypes.UPDATE_CONTACT_FINISH] = contactsChangeEvent\neventsMap[actionTypes.FETCH_CONTACT_FINISH] = contactsChangeEvent\n\nexport default eventsMap\n","import * as actionTypes from '../actions/actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.SEARCH_DIRECTORY_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.DIRECTORY_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.DIRECTORY_CHANGE,\n      args: { results: action.payload }\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_USER_FINISH] = eventsMap[actionTypes.FETCH_SELF_INFO_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.USERS_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.USERS_CHANGE,\n      args: { results: [action.payload] }\n    }\n  }\n}\nexport default eventsMap\n","// Request plugin.\nimport { defaultOptions, parseOptions } from './configs'\nimport watchRequests from './sagas'\nimport eventsMap from './interface/events'\nimport { api, name } from './interface'\n\n// Other plugins.\nimport { update as updateConfig } from '../config/interface/actions'\nimport { mapEvents } from '../events/interface/actions'\n\n// Utils.\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\n\n/*\n * HTTP request plugin.\n */\nexport default pluginFactory()\n\n/*\n * Platform-specific request plugins.\n *    Same base REST behaviour as the generic request plugin, with some extra\n *    handling of a response.\n */\nexport const linkRequest = pluginFactory('link')\nexport const ucRequest = pluginFactory('uc')\nexport const cpaasRequest = pluginFactory('cpaas')\n\n/**\n * Factory function for creating a Request Plugin.\n *    Allows for specifying which platform the requests will be made to. This\n *    adds special handling of responses to check for special-case issues.\n * @param  {string} [platform] The platform this plugin is for.\n * @return {Function} The actual Plugin creator function.\n */\nfunction pluginFactory (platform) {\n  // Generate the saga for this platform, or a generic saga if platform is undefined.\n  const saga = watchRequests(platform)\n\n  return function request (options = {}) {\n    options = mergeValues(defaultOptions, options)\n    parseOptions(options)\n\n    function * init () {\n      yield put(updateConfig(options, name))\n      yield put(mapEvents(eventsMap))\n    }\n\n    return {\n      sagas: [saga],\n      init,\n      capabilities: platform ? ['restAuthorization'] : [],\n      api,\n      name\n    }\n  }\n}\n","// Parse and/or Validate\nimport { validation as v8n, parse } from '../../src/common/validation'\n\n/**\n * Configurable properties 'published' by this \"Request\" plugin.\n * NOTE: Do NOT expose the config properties (related to this plugin) to the public API documentation.\n *\n * @property {boolean} [injectAgentVersionHeader=true] Option to automatically inject an agent version header to every REST request.\n *            This header is used to help with diagnostics and analytics in a completely anonymous fashion.\n *\n * @property {string} [customAgentVersionHeaderSuffix=''] Additional custom information that can be appended to the agent version header's value.\n *           This additional suffix value is only used when injectAgentVersionHeader property is enabled.\n */\nexport const defaultOptions = {\n  injectAgentVersionHeader: true,\n  customAgentVersionHeaderSuffix: ''\n}\n\nconst v8nValidation = v8n.schema({\n  injectAgentVersionHeader: v8n.boolean()\n})\nexport const parseOptions = parse('request', v8nValidation)\n","// Request plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport makeRequest from './makeRequest'\nimport * as authorizations from './authorization'\nimport { sanitizeRequest } from './utils'\n\n// Other plugins.\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { getVersion } from '../common/version'\n\n// Libraries.\nimport { call, put, takeEvery } from 'redux-saga/effects'\n\n/*\n * Saga-factory for creating the `watchRequests` saga.\n *    If `platform` is undefined, then no extra, platform-specific handling is done.\n */\nexport default function watchRequests (platform) {\n  // Only allow our known platforms or undefined (for base).\n  if (!['link', 'uc', 'cpaas', undefined].includes(platform)) {\n    throw Error('Invalid platform specific for requests.')\n  }\n  return function * watchRequests () {\n    yield takeEvery(actionTypes.REQUEST, handleRequest, platform)\n  }\n}\n\n/*\n * Generator that handles a request action with standard HTTP handling features and reports\n * a requestFinished action when the request is done.\n *\n * @param {string} [platform] The platform being used.\n * @param {FluxStandardAction} action The action to handle.\n */\nfunction * handleRequest (platform, action) {\n  const log = logManager.getLogger('REQUEST', action.meta.requestId)\n\n  const logOptions = sanitizeRequest(action.payload)\n  log.debug(`Making REST request ${action.meta.requestId}.`, logOptions)\n\n  // Make the request based on the action\n  var result = yield call(makeRequest, action.payload, action.meta.requestId)\n\n  log.debug(`Received REST response ${action.meta.requestId}.`, result)\n\n  // If the platform was specified and this is not a 3.X build, perform the\n  //    authorization check side-effect.\n  if (platform && !getVersion().startsWith('3')) {\n    // Call the 'authorization' function specific for this platform.\n    //    They're all named ${platform}Authorization so it's easier to call them.\n    const error = authorizations[`${platform}Authorization`](result)\n\n    if (error) {\n      yield put(actions.authorizationError(error))\n    }\n  }\n\n  yield put(actions.response(action.meta.requestId, result, !!result.error))\n}\n\n// begin-test-code\nexport const __testonly__ = { watchRequests, handleRequest }\n// end-test-code\n","// Other plugins.\nimport { logManager } from '../logs'\n\n// Utils.\nimport { toQueryString } from '../common/utils'\n\n/**\n * The possible response data types that can be handled.\n */\nconst responseTypes = Object.freeze({\n  json: 'json',\n  blob: 'blob',\n  text: 'text',\n  none: 'none'\n})\n\n/**\n * Make a request with the specified options. The options is very similar to the options passed to the GlobalFetch\n * method except that is also accepts the url as part of the options.\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Request\n *\n * Currently this processes the request and assumes nothing about the response.\n * - If the response has a body, it will always be parsed and forwarded on.\n *      - If no body, then use an empty object in its place.\n * - If the fetch succeeded, the response \"results\" will always be forwarded on,\n *      even if the response is outside of the 200-299 range.\n *      - Because some backends provide more detailed error info (that a saga\n *        may need) as part of the body, rather than just the response status.\n * - If the fetch fails, return with the fetch failure information.\n *\n * @param {Object} options Options to make the request with.\n * @param {string} options.url The URL to make the request to.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType='json] The expected data type of the response body.\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n * @return {Promise} A promise that resolves with a custom response object.\n */\nexport default async function makeRequest (options, requestId) {\n  const log = logManager.getLogger('REQUEST', requestId)\n\n  /*\n   * Check the provided options to ensure they are valid before making the request.\n   */\n  const error = validateOptions(options)\n  if (error) {\n    log.info(error.result.message)\n    return error\n  }\n\n  // Extract and remove the non-fetch API properties.\n  const { url, queryParams, responseType = 'json', ...fetchOptions } = options\n\n  // Grab that last part of the URL (after the last /) to be logged.\n  let endUrl = url.match(/([^/]*)$/)[0]\n  // Cut it short if it's too long, since this should be human-readable.\n  endUrl = endUrl.length > 15 ? endUrl.substring(0, 15) + '...' : endUrl\n  log.info(`Making ${fetchOptions.method} ${endUrl} request.`)\n\n  let response\n  /*\n   * Make the request. Scenarios to check for:\n   *  1. Fetch failed.\n   *  2. Fetch succeeded and is ok, with no response body.\n   *  3. Fetch succeeded and is ok, with expected response type.\n   *  4. Fetch succeeded and is ok, with unexpected response type.\n   *  5. Fetch succeeded but is not ok.\n   */\n  try {\n    response = await fetch(url + toQueryString(queryParams), fetchOptions)\n  } catch (err) {\n    // Scenario 1: Fetch failed.\n    log.info(`Failed to make request, caused by ${err.message}`)\n    return makeResponse({ error: 'FETCH' }, { code: err.name, message: err.message })\n  }\n\n  // Basic information for the request result.\n  const result = {\n    ok: response.ok,\n    code: response.status,\n    message: response.statusText\n  }\n\n  if (response.ok) {\n    if (response.status === 204) {\n      /*\n       * A `204 (No Content)` response indicates a success, but with no content to return.\n       * Avoid parsing the response because there isn't one.\n       */\n      // Scenario 2: Response is ok, with no response body.\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: {}, ...result })\n    }\n\n    const data = await parseBody(response, responseType)\n    if (data instanceof Error) {\n      // Scenario 4: Response is ok, with an unexpected type.\n      log.error(`Failed to parse with response type: ${responseType}. Error: ${data}`)\n      return makeResponse({ error: 'REQUEST' }, { code: data.name, message: data.message })\n    } else {\n      // Scenario 3: Response is ok, with an expected type.\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: data, ...result })\n    }\n  } else {\n    // Scenario 5: Response is not ok.\n    let contentType\n    // Check the Content-Type of the response.\n    try {\n      contentType = await response.headers.get('content-type')\n    } catch (err) {\n      log.debug(`Failed to get content-type:${err.message}.`)\n    }\n    /*\n     * Handle a SPiDR special-case error where the response body is a HTML page...\n     * Throw away the body and simply report it as 'Forbidden'.\n     */\n    if (response.status === 403 && contentType.includes('html')) {\n      return makeResponse({ error: 'REQUEST' }, result)\n    }\n\n    /*\n     * Try to parse the response as JSON, and if successful, include\n     * it in the returned error. otherwise, provide an empty object instead.\n     */\n    let responseBody\n    try {\n      responseBody = await response.json()\n    } catch (err) {\n      responseBody = {}\n      log.debug('Failed to parse response:', err.message)\n    }\n    return makeResponse({ error: 'REQUEST' }, { body: responseBody, ...result })\n  }\n}\n\n/**\n * Checks for the provided options to be considered valid before making the\n *    request. If an option is invalid, an error response will be returned.\n * @param  {Object} options\n * @return {Response|undefined}\n */\nfunction validateOptions (options) {\n  const { url, responseType } = options\n\n  if (!url || typeof url !== 'string') {\n    const invalidUrlMessage = `Invalid request url; expected url of type string but received ${url} instead`\n    return makeResponse({ error: 'REQUEST_URL', message: invalidUrlMessage })\n  }\n\n  /*\n   * If an expected responseType was provided, it should be one of the types\n   *    that we know how to handle.\n   */\n  if (responseType && !responseTypes.hasOwnProperty(responseType)) {\n    const invalidResponseType = 'Cannot make request; responseType value was invalid.'\n    return makeResponse({ error: 'RESPONSE_TYPE', message: invalidResponseType })\n  }\n}\n\n/**\n * Get the body from the response depending on our expected content-type.\n * @return {Body|Error}\n */\nasync function parseBody (response, expectedType) {\n  /**\n   * The SDK should only be parsing the responses as is expected without checking the content type of the response.\n   * This is deterministic depending on the `responseType` passed in to the request through the request options.\n   */\n  let responseBody = {}\n  try {\n    switch (expectedType) {\n      case responseTypes.json:\n        responseBody = await response.json()\n        break\n      case responseTypes.blob:\n        responseBody = await response.blob()\n        break\n      case responseTypes.text:\n        responseBody = await response.text()\n        break\n      case responseTypes.none:\n        // Do not parse the response\n        break\n      default:\n        // This should be unreachable code.\n        throw Error('Assertion failed')\n    }\n  } catch (e) {\n    // Note: We get here if we have a successful request but the server sent us unexpected data.\n    // We need to treat this as an error case because we can no longer enforce a contract with the\n    // code making the request.\n    //\n    // If the code gets here the issue is either with the server not sending us expected data, or with\n    // the calling code that told us to expect the wrong data.\n\n    return e\n  }\n\n  return responseBody\n}\n\n/**\n * Make a response object that will  have the same structure every time\n * regardless of the server response.\n *\n * @param {Object} apiResponse API related response data\n * @param {string} apiResponse.error This should be a string indicating an error if the request fails due to an invalid request.\n * @param {string} apiResponse.message This should be a string with more details about the api error.\n * @param {Object} httpResponse This will contain the response data from the server.\n * @param {Object} httpResponse.body The response body data from the server.\n * @param {boolean} httpResponse.ok Indicates if the request was considered a success by the server.\n * @param {Object} httpResponse.code The HTTP status code for the request.\n * @param {Object} httpResponse.message A message describing the server response.\n * @return {Object} An object containing API and/or server response details.\n */\nfunction makeResponse (apiResponse = {}, httpResponse = {}) {\n  return {\n    body: httpResponse.body,\n    error: apiResponse.error,\n    result: {\n      ok: Boolean(httpResponse.ok),\n      code: httpResponse.code,\n      message: apiResponse.message || httpResponse.message\n    }\n  }\n}\n","/**\n * \"Authorization\" issues are REST errors caused by invalid user credentials.\n *    These are issues that should be solvable by an end-user updating/fixing\n *    the credentials that they have provided.\n */\nimport BasicError, { authCodes } from '../errors'\n\n/**\n * Function that checks a REST response action for Link authorization issues.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function linkAuthorization (response) {\n  if (!response.error) {\n    return\n  }\n\n  /*\n   * A SPiDR REST request will return\n   *  - '403 Forbidden', with body 'statusCode: 4' for bad password,\n   *  - '403 Forbidden', with html body (which is thrown away) for bad username.\n   *\n   * The SPiDR REST API document (v4.7, May 2019) says it will return '403 Forbidden'\n   *    with other statusCodes for numerous untestable scenarios. Some of these are\n   *    for credential/auth issues, others are for unrelated issues.\n   * Authorization related:\n   *    - 27 (generic auth failure), 61 (credentials issue), 65 (token expired)\n   * Unrelated:\n   *    - 29 (device not authorized), 35 (service not enabled), 37 (invalid value),\n   *      45 (invalid app_name), 46 (invalid CallMe token), 62 (account is disabled),\n   *      63 (account is locked), 64 (invalid CallMe realm)\n   */\n  // Status codes considered to be \"auth issues\".\n  const authIssues = [4, 27, 61, 65]\n\n  const statusCode = getStatusCode(response)\n\n  /*\n   * A case where Link REST request will return '401 Unauthorized'\n   */\n  if (response.result.code === 401) {\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: 'Authorization failed with server. Please check credentials.'\n    })\n  }\n\n  /*\n   * Define a Link authorization issue to be:\n   *  - a '403 Forbidden', with no body or with a specific statusCode.\n   */\n  if (response.result.code === 403 && (response.body === undefined || authIssues.includes(statusCode))) {\n    let message = 'Authorization failed with server. Please check credentials.'\n    if (statusCode) {\n      message += ` Status code: ${statusCode}`\n    }\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: message\n    })\n  }\n}\n\n/**\n * Function that checks a REST response action for UC authorization issues.\n *    UC includes both SPiDR and CIM REST requests.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function ucAuthorization (response) {\n  /*\n   * A CIM REST request will return\n   *    - '401 Login Please' (not 401 Unauthorized) with no body for credential issues.\n   *    - '401 Login Please', with body message \"expired token\" for token issues.\n   *\n   * SPiDR will return '401 Unauthorized' for non-auth issues though,\n   *    (statusCode 35 for \"service not enabled\").\n   */\n\n  /*\n   * Define a UC authorization issue to be:\n   *  - a '401 Login Please'.\n   */\n  const result = response.result\n  if (result.code === 401 && result.message === 'Login Please') {\n    let message = 'Authorization failed with server. Please check credentials.'\n\n    const statusCode = getStatusCode(response)\n\n    if (statusCode) {\n      message += ` Status code: ${statusCode}`\n    }\n\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message\n    })\n  }\n}\n\n/**\n * Function that checks a REST response action for CPaaS authorization issues.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function cpaasAuthorization (response) {\n  /*\n   * A CPaaS REST request will return '401 Unauthorized' for authorization issues.\n   */\n  if (response.result.code === 401) {\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: 'Authorization failed with server. Please check credentials.'\n    })\n  }\n}\n\n/**\n * Helper function for parsing a statusCode from a SPiDR REST response body.\n * @param  {Object} response\n * @return {number|undefined}\n */\nfunction getStatusCode (response) {\n  let statusCode\n  /*\n   * Parse the statusCode out from the body.\n   */\n  if (response.body) {\n    if (response.body.statusCode) {\n      // In some cases (eg. KAA-1937), the statusCode is at the top-level of the body.\n      statusCode = response.body.statusCode\n    } else {\n      // In most cases, the statusCode is inside another object. The name of this\n      //    parameter is different depending which service the request was for,\n      //    so search for it.\n      Object.values(response.body).forEach(value => {\n        if (value.statusCode) {\n          statusCode = value.statusCode\n        }\n      })\n    }\n  }\n  return statusCode\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.AUTHORIZATION_ERROR] = function (action) {\n  return {\n    type: eventTypes.REQUEST_ERROR,\n    args: {\n      error: action.payload\n    }\n  }\n}\n\nexport default eventsMap\n","/**\n * An error occurred with server authorization.\n *\n * This event will be emitted anytime a REST request to the server is rejected\n *    due to an authorization issue. This may occur for invalid credentials or\n *    expired tokens, depending on which form of authentication the application\n *    has chosen to use.\n * @public\n * @memberof api\n * @requires restAuthorization\n * @event request:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const REQUEST_ERROR = 'request:error'\n","import name from './name'\nimport api from './api'\n\nexport { name, api }\n","/**\n * This interface is for an request plugin.\n * @type {string}\n */\nconst name = 'requests'\nexport default name\n","import { fetchResource } from '../utils'\nimport { logManager, API_LOG_TAG } from '../../logs'\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { merge } from 'lodash/fp'\n\nconst log = logManager.getLogger('REQUEST')\n\n/**\n * Request API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param  {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The request API object.\n */\nexport default function api ({ dispatch, getState }) {\n  return {\n    request: {\n      /**\n       * The 'request' namespace (within the 'api' type) is used to make network requests to the server.\n       *\n       * @public\n       * @namespace request\n       */\n\n      /**\n       * Send a request to the underlying REST service with the appropriate configuration and authentication.\n       * This is a wrapper on top of the browser's [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       * and behaves very similarly but using SDK configuration for the base URL and authentication as well\n       * as SDK logging.\n       *\n       * @public\n       * @memberof request\n       * @method fetch\n       * @param {string} resource The full path of the resource to fetch from the underlying service. This should include any REST version\n       *                          or user information. This path will be appended to the base URL according to SDK configuration.\n       * @param {RequestInit} init An object containing any custom settings that you want to apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       *                           for a full description and defaults.\n       * @return {Promise<Response>} A promise for a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object.\n       * @example\n       * // Send a REST request to the server\n       * // Create a request options object following [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       * const requestOptions = {\n       *   method: 'POST',\n       *   body: JSON.stringify({\n       *     test: 123\n       *   })\n       * }\n       *\n       * // Note that you will need to subscribe for the `custom` service in order to\n       * // receive notifications from the `externalnotification` service.\n       * const response = await client.request.fetch('/rest/version/1/user/xyz@test.com/externalnotification', requestOptions)\n       */\n      async fetch (resource, init = {}) {\n        log.debug(API_LOG_TAG + 'fetch: ', resource)\n        const state = getState()\n        const platform = getPlatform(state)\n        const requestInfo = getRequestInfo(state, platform)\n        const options = platform === 'cpaas' ? requestInfo.options : requestInfo.requestOptions\n        requestInfo.requestOptions = merge(init, options)\n        requestInfo.platform = platform\n        // Do request\n        return await fetchResource(resource, requestInfo)\n      }\n    }\n  }\n}\n","/**\n * The ID of a User (e.g. joe@test.3s5j.att.com)\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof user\n * @requires cpaas_user_id\n */\n\n/**\n * The User ID ie: joe@test.3s5j.att.com\n *\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof call\n * @requires cpaas_user_id\n */\n\n/**\n * The ID of a User (e.g. joe@domain.com)\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof user\n * @requires link_user_id\n */\n\n/**\n * The SIP URI ie: sip:joe@domain.com\n *\n * @public\n * @static\n * @typedef {string} SIP_URI\n * @memberof call\n * @requires link_user_id\n */\n\n/**\n * The Phone Number ie: +18885559876\n *\n * @public\n * @static\n * @typedef {string} PhoneNumber\n * @memberof call\n * @requires cpaas_pstn\n */\n\n/**\n * The TEL URI ie: tel:+18885559876\n *\n * @public\n * @static\n * @typedef {string} TEL_URI\n * @memberof call\n * @requires link_pstn\n */\n","import { cloneDeep } from 'lodash/fp';\n\n/**\n * returns a function with params object\n * @param  {Array} An array of strings or objects representing the desired codecs to be removed,\n * can be passed in as a string or as objects with the following signature:\n *  [{\n *      name: 'codecname',\n *      fmtpParams: 'specific ftmp parameter target'\n *  }]\n * @return {Function}        [description]\n *\n * INSTRUCTIONS FOR EXPOSING FUNCTION TO UC VERSION OF THE SDK:\n * the following code will need to be added to the appropriate index files (ie: kandy.uc.js)\n * this will expose the createCodecRemover function in the browser\n    import createCodecRemover from '../../fcs/src/js/sdp/codecRemover';\n    kandy.sdpHandlers = {\n        createCodecRemover\n    };\n    module.exports = kandy;\n\n * INSTRUCTIONS USING RUNNING FUNCTION ONCE EXPOSED\n * From the browser Devtools run the following:\n * const codecRemover = createKandy.sdpHandlers.createCodecRemover(['VP8', 'VP9'])\n * const newSdp = codecRemover(<SDP Object>); // the incoming SDP object\n * console.log(newSdp)\n */\nexport default function createCodecRemover(codecs) {\n    if(!codecs){\n        codecs = [];\n    }\n    // We allow the user to pass in a codecs of objects or strings, so here we format the strings into objects for uniformity.\n    codecs = codecs.map(item => (typeof item === 'string' ? { name: item } : item));\n\n    return function(...params) {\n        // Adding support for new callstack sdp handlers\n        // Old callstack sdp pipeline passes an object to each sdp\n        // handler that contains the currentSdp\n        // New callstack passes 3 arguments to each sdp handler\n        // newSdp, info, originalSdp\n        let oldCallstack = true;\n        let currentSdp;\n        if (params[0].currentSdp) {\n            currentSdp = params[0].currentSdp;\n        } else if (params.length === 3) {\n            oldCallstack = false;\n            currentSdp = params[0];\n        }\n\n        let newSdp = cloneDeep(currentSdp);\n\n        // This is an array of strings representing codec names we want to remove.\n        let codecStringsToRemove = codecs.map(codec => codec.name);\n\n        newSdp.media.forEach(media => {\n            // This is an array of just the codes (codec payloads) that we FOR SURE want to remove.\n            let finalRemoveList = [];\n            // This is an array of RTP objects who have codecs that are the same as strings passed in via codecs.\n            let filteredRtp = [];\n\n            // If the current rtp.codec is in the codecStringsToRemove list, add the rtp to filteredRtp\n            filteredRtp = media.rtp.filter(rtp => codecStringsToRemove.includes(rtp.codec));\n\n            filteredRtp.forEach(rtp => {\n                // We grab the relevantCodec codecs object from the passed in codecs, based on the name string.\n                const relevantCodecs = codecs.filter(codec => codec.name === rtp.codec);\n\n                // We check the relevantCodec. If it is not present, then we have no codecs info for this specific rtp.\n                relevantCodecs.forEach(relevantCodec => {\n                    // If fmtpParams doesnt exist or is of length 0 then we assume we can remove all instances of this codec\n                    if (\n                        !relevantCodec.fmtpParams ||\n                        (relevantCodec.fmtpParams && relevantCodec.fmtpParams.length === 0)\n                    ) {\n                        // We want to delete this codec no matter what, since no fmtp params were included.\n                        finalRemoveList.push(rtp.payload);\n                    } else {\n                        // There are fmtp values for this codec. Therefore we have to check each media.fmtp object to see if it is the right one.\n                        // Then when we find the right fmtp object, we check its config to see if it has the parameters specified in the input.\n                        media.fmtp.forEach(fmtp => {\n                            // We check each iteration to see if we found the right fmtp object.\n                            if (fmtp.payload === rtp.payload) {\n                                // If we found the right fmtp object, we have to make sure each config param is in the fmtp.config.\n                                if (relevantCodec.fmtpParams.every(c => fmtp.config.includes(c))) {\n                                    finalRemoveList.push(rtp.payload);\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n\n            // At this point we should have an array (finalRemoveList) that contains all ORIGINAL codec payloads that we need to remove.\n            // We now need to check fmtp for all rtx payloads ASSOCIATED with the original codec payload.\n            media.fmtp.forEach(fmtp => {\n                // Check if the config contains apt=, which indicates this fmtp is associated with another.\n                if (fmtp.config.includes('apt=')) {\n                    // If so, lets grab the whole string WITHOUT the apt= part, and convet it into an integer. This should be a payload number.\n                    var payload = parseInt(fmtp.config.replace('apt=', ''));\n\n                    // Check if the finalRemoveList contains the payload that this fmtp is associated with.\n                    if (finalRemoveList.includes(payload)) {\n                        // If so, then we need to add this fmtp.payload to the finalRemoveList\n                        finalRemoveList.push(fmtp.payload);\n                    }\n                }\n            });\n\n            // We assume past this point that the finalRemoveList is all powerful.\n            // For each codec in the media.payloads string, if it is in our finalRemoveList list, we remove it.\n            let isNumber = false;\n            if (typeof media.payloads === 'number') {\n                media.payloads = media.payloads.toString();\n                isNumber = true;\n            }\n            if (media.payloads) {\n                media.payloads = media.payloads\n                    .split(' ')\n                    .filter(payload => !finalRemoveList.includes(parseInt(payload)))\n                    .join(' ');\n            }\n            if (media.payloads && isNumber) {\n                media.payloads = parseInt(media.payloads);\n            }\n\n            // For each codec object, if the payload is in our filteredCodes list, we remove the object.\n            if (media.rtp) {\n                media.rtp = media.rtp.filter(rtp => !finalRemoveList.includes(rtp.payload));\n            }\n\n            if (media.fmtp) {\n                media.fmtp = media.fmtp.filter(fmtp => !finalRemoveList.includes(fmtp.payload));\n            }\n            if (media.rtcpFb) {\n                media.rtcpFb = media.rtcpFb.filter(\n                    rtcpFb => !finalRemoveList.includes(rtcpFb.payload)\n                );\n            }\n        });\n\n        // If old callstack, then return the results of the next sdp handler\n        // If new callstack, then just return the modified sdp\n        return oldCallstack ? params[0].next(newSdp) : newSdp;\n    };\n}\n","/**\n * Creates and returns an SDP Handler function that will remove the desired codecs\n *  from the SDP when passed to the pipeline.\n *\n * @method createCodecRemover\n * @param  {Array<string|Object} codecs An array of strings or objects representing the desired codecs to be removed.\n * @example\n * // `codecs` paramters can be an array of strings (i.e., ['VP8', 'VP9']) or as objects with the following signature:\n * const codecsToBeRemoved = [{\n *   name: 'codecname',\n *   fmtpParams: 'specific ftmp parameter target'\n * }]\n * const codecRemover = createCodecRemover(codecsToBeRemoved)\n * @return {Function} returns an SDP handler function\n */\nexport function createCodecRemover (codecs = []) {\n  // We allow the user to pass in a codecs of objects or strings, so here we format the strings into objects for uniformity.\n  codecs = codecs.map(item => (typeof item === 'string' ? { name: item } : item))\n\n  return function (newSdp, info, originalSdp) {\n    // This is an array of strings representing codec names we want to remove.\n    const codecStringsToRemove = codecs.map(codec => codec.name)\n\n    newSdp.media.forEach(media => {\n      // This is an array of just the codes (codec payloads) that we FOR SURE want to remove.\n      const finalRemoveList = []\n      // This is an array of RTP objects who have codecs that are the same as strings passed in via codecs.\n      let filteredRtp = []\n\n      // If the current rtp.codec is in the codecStringsToRemove list, add the rtp to filteredRtp\n      filteredRtp = media.rtp.filter(rtp => codecStringsToRemove.includes(rtp.codec))\n\n      filteredRtp.forEach(rtp => {\n        // We grab the relevantCodec codecs object from the passed in codecs, based on the name string.\n        const relevantCodecs = codecs.filter(codec => codec.name === rtp.codec)\n\n        // We check the relevantCodec. If it is not present, then we have no codecs info for this specific rtp.\n        relevantCodecs.forEach(relevantCodec => {\n          // If fmtpParams doesnt exist or is of length 0 then we assume we can remove all instances of this codec\n          if (!relevantCodec.fmtpParams || (relevantCodec.fmtpParams && relevantCodec.fmtpParams.length === 0)) {\n            // We want to delete this codec no matter what, since no fmtp params were included.\n            finalRemoveList.push(rtp.payload)\n          } else {\n            // There are fmtp values for this codec. Therefore we have to check each media.fmtp object to see if it is the right one.\n            // Then when we find the right fmtp object, we check its config to see if it has the parameters specified in the input.\n            media.fmtp.forEach(fmtp => {\n              // We check each iteration to see if we found the right fmtp object.\n              if (fmtp.payload === rtp.payload) {\n                // If we found the right fmtp object, we have to make sure each config param is in the fmtp.config.\n                if (relevantCodec.fmtpParams.every(c => fmtp.config.includes(c))) {\n                  finalRemoveList.push(rtp.payload)\n                }\n              }\n            })\n          }\n        })\n      })\n\n      // At this point we should have an array (finalRemoveList) that contains all ORIGINAL codec payloads that we need to remove.\n      // We now need to check fmtp for all rtx payloads ASSOCIATED with the original codec payload.\n      media.fmtp.forEach(fmtp => {\n        // Check if the config contains apt=, which indicates this fmtp is associated with another.\n        if (fmtp.config.includes('apt=')) {\n          // If so, lets grab the whole string WITHOUT the apt= part, and convet it into an integer. This should be a payload number.\n          var payload = parseInt(fmtp.config.replace('apt=', ''))\n\n          // Check if the finalRemoveList contains the payload that this fmtp is associated with.\n          if (finalRemoveList.includes(payload)) {\n            // If so, then we need to add this fmtp.payload to the finalRemoveList\n            finalRemoveList.push(fmtp.payload)\n          }\n        }\n      })\n\n      // We assume past this point that the finalRemoveList is all powerful.\n      // For each codec in the media.payloads string, if it is in our finalRemoveList list, we remove it.\n      let isNumber = false\n      if (typeof media.payloads === 'number') {\n        media.payloads = media.payloads.toString()\n        isNumber = true\n      }\n      if (media.payloads) {\n        media.payloads = media.payloads\n          .split(' ')\n          .filter(payload => !finalRemoveList.includes(parseInt(payload)))\n          .join(' ')\n      }\n      if (media.payloads && isNumber) {\n        media.payloads = parseInt(media.payloads)\n      }\n\n      // For each codec object, if the payload is in our filteredCodes list, we remove the object.\n      media.rtp = media.rtp.filter(rtp => !finalRemoveList.includes(rtp.payload))\n      media.fmtp = media.fmtp.filter(fmtp => !finalRemoveList.includes(fmtp.payload))\n\n      if (media.rtcpFb) {\n        media.rtcpFb = media.rtcpFb.filter(rtcpFb => !finalRemoveList.includes(rtcpFb.payload))\n      }\n    })\n\n    return newSdp\n  }\n}\n","// SDP Handlers\nexport * from './codecRemover.js'\n"],"sourceRoot":""}